// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/wey.proto

#ifndef PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fwey_2eproto
#define PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fwey_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fwey_2eproto 

namespace protobuf_modules_2fcanbus_2fproto_2fwey_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[15];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fcanbus_2fproto_2fwey_2eproto
namespace apollo {
namespace canbus {
class Ads1_111;
class Ads1_111DefaultTypeInternal;
extern Ads1_111DefaultTypeInternal _Ads1_111_default_instance_;
class Ads3_38e;
class Ads3_38eDefaultTypeInternal;
extern Ads3_38eDefaultTypeInternal _Ads3_38e_default_instance_;
class Ads_eps_113;
class Ads_eps_113DefaultTypeInternal;
extern Ads_eps_113DefaultTypeInternal _Ads_eps_113_default_instance_;
class Ads_req_vin_390;
class Ads_req_vin_390DefaultTypeInternal;
extern Ads_req_vin_390DefaultTypeInternal _Ads_req_vin_390_default_instance_;
class Ads_shifter_115;
class Ads_shifter_115DefaultTypeInternal;
extern Ads_shifter_115DefaultTypeInternal _Ads_shifter_115_default_instance_;
class Fail_241;
class Fail_241DefaultTypeInternal;
extern Fail_241DefaultTypeInternal _Fail_241_default_instance_;
class Fbs1_243;
class Fbs1_243DefaultTypeInternal;
extern Fbs1_243DefaultTypeInternal _Fbs1_243_default_instance_;
class Fbs2_240;
class Fbs2_240DefaultTypeInternal;
extern Fbs2_240DefaultTypeInternal _Fbs2_240_default_instance_;
class Fbs3_237;
class Fbs3_237DefaultTypeInternal;
extern Fbs3_237DefaultTypeInternal _Fbs3_237_default_instance_;
class Fbs4_235;
class Fbs4_235DefaultTypeInternal;
extern Fbs4_235DefaultTypeInternal _Fbs4_235_default_instance_;
class Status_310;
class Status_310DefaultTypeInternal;
extern Status_310DefaultTypeInternal _Status_310_default_instance_;
class Vin_resp1_391;
class Vin_resp1_391DefaultTypeInternal;
extern Vin_resp1_391DefaultTypeInternal _Vin_resp1_391_default_instance_;
class Vin_resp2_392;
class Vin_resp2_392DefaultTypeInternal;
extern Vin_resp2_392DefaultTypeInternal _Vin_resp2_392_default_instance_;
class Vin_resp3_393;
class Vin_resp3_393DefaultTypeInternal;
extern Vin_resp3_393DefaultTypeInternal _Vin_resp3_393_default_instance_;
class Wey;
class WeyDefaultTypeInternal;
extern WeyDefaultTypeInternal _Wey_default_instance_;
}  // namespace canbus
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::canbus::Ads1_111* Arena::CreateMaybeMessage<::apollo::canbus::Ads1_111>(Arena*);
template<> ::apollo::canbus::Ads3_38e* Arena::CreateMaybeMessage<::apollo::canbus::Ads3_38e>(Arena*);
template<> ::apollo::canbus::Ads_eps_113* Arena::CreateMaybeMessage<::apollo::canbus::Ads_eps_113>(Arena*);
template<> ::apollo::canbus::Ads_req_vin_390* Arena::CreateMaybeMessage<::apollo::canbus::Ads_req_vin_390>(Arena*);
template<> ::apollo::canbus::Ads_shifter_115* Arena::CreateMaybeMessage<::apollo::canbus::Ads_shifter_115>(Arena*);
template<> ::apollo::canbus::Fail_241* Arena::CreateMaybeMessage<::apollo::canbus::Fail_241>(Arena*);
template<> ::apollo::canbus::Fbs1_243* Arena::CreateMaybeMessage<::apollo::canbus::Fbs1_243>(Arena*);
template<> ::apollo::canbus::Fbs2_240* Arena::CreateMaybeMessage<::apollo::canbus::Fbs2_240>(Arena*);
template<> ::apollo::canbus::Fbs3_237* Arena::CreateMaybeMessage<::apollo::canbus::Fbs3_237>(Arena*);
template<> ::apollo::canbus::Fbs4_235* Arena::CreateMaybeMessage<::apollo::canbus::Fbs4_235>(Arena*);
template<> ::apollo::canbus::Status_310* Arena::CreateMaybeMessage<::apollo::canbus::Status_310>(Arena*);
template<> ::apollo::canbus::Vin_resp1_391* Arena::CreateMaybeMessage<::apollo::canbus::Vin_resp1_391>(Arena*);
template<> ::apollo::canbus::Vin_resp2_392* Arena::CreateMaybeMessage<::apollo::canbus::Vin_resp2_392>(Arena*);
template<> ::apollo::canbus::Vin_resp3_393* Arena::CreateMaybeMessage<::apollo::canbus::Vin_resp3_393>(Arena*);
template<> ::apollo::canbus::Wey* Arena::CreateMaybeMessage<::apollo::canbus::Wey>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace canbus {

enum Ads_shifter_115_Ads_shiftmodeType {
  Ads_shifter_115_Ads_shiftmodeType_ADS_SHIFTMODE_INVALID = 0,
  Ads_shifter_115_Ads_shiftmodeType_ADS_SHIFTMODE_VALID = 1
};
bool Ads_shifter_115_Ads_shiftmodeType_IsValid(int value);
const Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_MIN = Ads_shifter_115_Ads_shiftmodeType_ADS_SHIFTMODE_INVALID;
const Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_MAX = Ads_shifter_115_Ads_shiftmodeType_ADS_SHIFTMODE_VALID;
const int Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_ARRAYSIZE = Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads_shifter_115_Ads_shiftmodeType_descriptor();
inline const ::std::string& Ads_shifter_115_Ads_shiftmodeType_Name(Ads_shifter_115_Ads_shiftmodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads_shifter_115_Ads_shiftmodeType_descriptor(), value);
}
inline bool Ads_shifter_115_Ads_shiftmodeType_Parse(
    const ::std::string& name, Ads_shifter_115_Ads_shiftmodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads_shifter_115_Ads_shiftmodeType>(
    Ads_shifter_115_Ads_shiftmodeType_descriptor(), name, value);
}
enum Ads_shifter_115_Ads_targetgearType {
  Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_N = 0,
  Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_R = 1,
  Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_P = 2,
  Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_D = 3
};
bool Ads_shifter_115_Ads_targetgearType_IsValid(int value);
const Ads_shifter_115_Ads_targetgearType Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_MIN = Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_N;
const Ads_shifter_115_Ads_targetgearType Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_MAX = Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_D;
const int Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_ARRAYSIZE = Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads_shifter_115_Ads_targetgearType_descriptor();
inline const ::std::string& Ads_shifter_115_Ads_targetgearType_Name(Ads_shifter_115_Ads_targetgearType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads_shifter_115_Ads_targetgearType_descriptor(), value);
}
inline bool Ads_shifter_115_Ads_targetgearType_Parse(
    const ::std::string& name, Ads_shifter_115_Ads_targetgearType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads_shifter_115_Ads_targetgearType>(
    Ads_shifter_115_Ads_targetgearType_descriptor(), name, value);
}
enum Ads_eps_113_Ads_epsmodeType {
  Ads_eps_113_Ads_epsmodeType_ADS_EPSMODE_DISABLE = 0,
  Ads_eps_113_Ads_epsmodeType_ADS_EPSMODE_ACTIVE = 2
};
bool Ads_eps_113_Ads_epsmodeType_IsValid(int value);
const Ads_eps_113_Ads_epsmodeType Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_MIN = Ads_eps_113_Ads_epsmodeType_ADS_EPSMODE_DISABLE;
const Ads_eps_113_Ads_epsmodeType Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_MAX = Ads_eps_113_Ads_epsmodeType_ADS_EPSMODE_ACTIVE;
const int Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_ARRAYSIZE = Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads_eps_113_Ads_epsmodeType_descriptor();
inline const ::std::string& Ads_eps_113_Ads_epsmodeType_Name(Ads_eps_113_Ads_epsmodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads_eps_113_Ads_epsmodeType_descriptor(), value);
}
inline bool Ads_eps_113_Ads_epsmodeType_Parse(
    const ::std::string& name, Ads_eps_113_Ads_epsmodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads_eps_113_Ads_epsmodeType>(
    Ads_eps_113_Ads_epsmodeType_descriptor(), name, value);
}
enum Status_310_LongitudeaccvalidType {
  Status_310_LongitudeaccvalidType_LONGITUDEACCVALID_INVALID = 0,
  Status_310_LongitudeaccvalidType_LONGITUDEACCVALID_VALID = 1
};
bool Status_310_LongitudeaccvalidType_IsValid(int value);
const Status_310_LongitudeaccvalidType Status_310_LongitudeaccvalidType_LongitudeaccvalidType_MIN = Status_310_LongitudeaccvalidType_LONGITUDEACCVALID_INVALID;
const Status_310_LongitudeaccvalidType Status_310_LongitudeaccvalidType_LongitudeaccvalidType_MAX = Status_310_LongitudeaccvalidType_LONGITUDEACCVALID_VALID;
const int Status_310_LongitudeaccvalidType_LongitudeaccvalidType_ARRAYSIZE = Status_310_LongitudeaccvalidType_LongitudeaccvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_LongitudeaccvalidType_descriptor();
inline const ::std::string& Status_310_LongitudeaccvalidType_Name(Status_310_LongitudeaccvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_LongitudeaccvalidType_descriptor(), value);
}
inline bool Status_310_LongitudeaccvalidType_Parse(
    const ::std::string& name, Status_310_LongitudeaccvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_LongitudeaccvalidType>(
    Status_310_LongitudeaccvalidType_descriptor(), name, value);
}
enum Status_310_LateralaccevalidType {
  Status_310_LateralaccevalidType_LATERALACCEVALID_INVALID = 0,
  Status_310_LateralaccevalidType_LATERALACCEVALID_VALID = 1
};
bool Status_310_LateralaccevalidType_IsValid(int value);
const Status_310_LateralaccevalidType Status_310_LateralaccevalidType_LateralaccevalidType_MIN = Status_310_LateralaccevalidType_LATERALACCEVALID_INVALID;
const Status_310_LateralaccevalidType Status_310_LateralaccevalidType_LateralaccevalidType_MAX = Status_310_LateralaccevalidType_LATERALACCEVALID_VALID;
const int Status_310_LateralaccevalidType_LateralaccevalidType_ARRAYSIZE = Status_310_LateralaccevalidType_LateralaccevalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_LateralaccevalidType_descriptor();
inline const ::std::string& Status_310_LateralaccevalidType_Name(Status_310_LateralaccevalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_LateralaccevalidType_descriptor(), value);
}
inline bool Status_310_LateralaccevalidType_Parse(
    const ::std::string& name, Status_310_LateralaccevalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_LateralaccevalidType>(
    Status_310_LateralaccevalidType_descriptor(), name, value);
}
enum Status_310_VehdynyawratevalidType {
  Status_310_VehdynyawratevalidType_VEHDYNYAWRATEVALID_INVALID = 0,
  Status_310_VehdynyawratevalidType_VEHDYNYAWRATEVALID_VALID = 1
};
bool Status_310_VehdynyawratevalidType_IsValid(int value);
const Status_310_VehdynyawratevalidType Status_310_VehdynyawratevalidType_VehdynyawratevalidType_MIN = Status_310_VehdynyawratevalidType_VEHDYNYAWRATEVALID_INVALID;
const Status_310_VehdynyawratevalidType Status_310_VehdynyawratevalidType_VehdynyawratevalidType_MAX = Status_310_VehdynyawratevalidType_VEHDYNYAWRATEVALID_VALID;
const int Status_310_VehdynyawratevalidType_VehdynyawratevalidType_ARRAYSIZE = Status_310_VehdynyawratevalidType_VehdynyawratevalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_VehdynyawratevalidType_descriptor();
inline const ::std::string& Status_310_VehdynyawratevalidType_Name(Status_310_VehdynyawratevalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_VehdynyawratevalidType_descriptor(), value);
}
inline bool Status_310_VehdynyawratevalidType_Parse(
    const ::std::string& name, Status_310_VehdynyawratevalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_VehdynyawratevalidType>(
    Status_310_VehdynyawratevalidType_descriptor(), name, value);
}
enum Status_310_FlwheelspdvalidType {
  Status_310_FlwheelspdvalidType_FLWHEELSPDVALID_INVALID = 0,
  Status_310_FlwheelspdvalidType_FLWHEELSPDVALID_VALID = 1
};
bool Status_310_FlwheelspdvalidType_IsValid(int value);
const Status_310_FlwheelspdvalidType Status_310_FlwheelspdvalidType_FlwheelspdvalidType_MIN = Status_310_FlwheelspdvalidType_FLWHEELSPDVALID_INVALID;
const Status_310_FlwheelspdvalidType Status_310_FlwheelspdvalidType_FlwheelspdvalidType_MAX = Status_310_FlwheelspdvalidType_FLWHEELSPDVALID_VALID;
const int Status_310_FlwheelspdvalidType_FlwheelspdvalidType_ARRAYSIZE = Status_310_FlwheelspdvalidType_FlwheelspdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_FlwheelspdvalidType_descriptor();
inline const ::std::string& Status_310_FlwheelspdvalidType_Name(Status_310_FlwheelspdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_FlwheelspdvalidType_descriptor(), value);
}
inline bool Status_310_FlwheelspdvalidType_Parse(
    const ::std::string& name, Status_310_FlwheelspdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_FlwheelspdvalidType>(
    Status_310_FlwheelspdvalidType_descriptor(), name, value);
}
enum Status_310_FrwheelspdvalidType {
  Status_310_FrwheelspdvalidType_FRWHEELSPDVALID_INVALID = 0,
  Status_310_FrwheelspdvalidType_FRWHEELSPDVALID_VALID = 1
};
bool Status_310_FrwheelspdvalidType_IsValid(int value);
const Status_310_FrwheelspdvalidType Status_310_FrwheelspdvalidType_FrwheelspdvalidType_MIN = Status_310_FrwheelspdvalidType_FRWHEELSPDVALID_INVALID;
const Status_310_FrwheelspdvalidType Status_310_FrwheelspdvalidType_FrwheelspdvalidType_MAX = Status_310_FrwheelspdvalidType_FRWHEELSPDVALID_VALID;
const int Status_310_FrwheelspdvalidType_FrwheelspdvalidType_ARRAYSIZE = Status_310_FrwheelspdvalidType_FrwheelspdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_FrwheelspdvalidType_descriptor();
inline const ::std::string& Status_310_FrwheelspdvalidType_Name(Status_310_FrwheelspdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_FrwheelspdvalidType_descriptor(), value);
}
inline bool Status_310_FrwheelspdvalidType_Parse(
    const ::std::string& name, Status_310_FrwheelspdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_FrwheelspdvalidType>(
    Status_310_FrwheelspdvalidType_descriptor(), name, value);
}
enum Status_310_RlwheelspdvalidType {
  Status_310_RlwheelspdvalidType_RLWHEELSPDVALID_INVALID = 0,
  Status_310_RlwheelspdvalidType_RLWHEELSPDVALID_VALID = 1
};
bool Status_310_RlwheelspdvalidType_IsValid(int value);
const Status_310_RlwheelspdvalidType Status_310_RlwheelspdvalidType_RlwheelspdvalidType_MIN = Status_310_RlwheelspdvalidType_RLWHEELSPDVALID_INVALID;
const Status_310_RlwheelspdvalidType Status_310_RlwheelspdvalidType_RlwheelspdvalidType_MAX = Status_310_RlwheelspdvalidType_RLWHEELSPDVALID_VALID;
const int Status_310_RlwheelspdvalidType_RlwheelspdvalidType_ARRAYSIZE = Status_310_RlwheelspdvalidType_RlwheelspdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_RlwheelspdvalidType_descriptor();
inline const ::std::string& Status_310_RlwheelspdvalidType_Name(Status_310_RlwheelspdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_RlwheelspdvalidType_descriptor(), value);
}
inline bool Status_310_RlwheelspdvalidType_Parse(
    const ::std::string& name, Status_310_RlwheelspdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_RlwheelspdvalidType>(
    Status_310_RlwheelspdvalidType_descriptor(), name, value);
}
enum Status_310_RrwheelspdvalidType {
  Status_310_RrwheelspdvalidType_RRWHEELSPDVALID_INVALID = 0,
  Status_310_RrwheelspdvalidType_RRWHEELSPDVALID_VALID = 1
};
bool Status_310_RrwheelspdvalidType_IsValid(int value);
const Status_310_RrwheelspdvalidType Status_310_RrwheelspdvalidType_RrwheelspdvalidType_MIN = Status_310_RrwheelspdvalidType_RRWHEELSPDVALID_INVALID;
const Status_310_RrwheelspdvalidType Status_310_RrwheelspdvalidType_RrwheelspdvalidType_MAX = Status_310_RrwheelspdvalidType_RRWHEELSPDVALID_VALID;
const int Status_310_RrwheelspdvalidType_RrwheelspdvalidType_ARRAYSIZE = Status_310_RrwheelspdvalidType_RrwheelspdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_RrwheelspdvalidType_descriptor();
inline const ::std::string& Status_310_RrwheelspdvalidType_Name(Status_310_RrwheelspdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_RrwheelspdvalidType_descriptor(), value);
}
inline bool Status_310_RrwheelspdvalidType_Parse(
    const ::std::string& name, Status_310_RrwheelspdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_RrwheelspdvalidType>(
    Status_310_RrwheelspdvalidType_descriptor(), name, value);
}
enum Status_310_VehiclespdvalidType {
  Status_310_VehiclespdvalidType_VEHICLESPDVALID_INVALID = 0,
  Status_310_VehiclespdvalidType_VEHICLESPDVALID_VALID = 1
};
bool Status_310_VehiclespdvalidType_IsValid(int value);
const Status_310_VehiclespdvalidType Status_310_VehiclespdvalidType_VehiclespdvalidType_MIN = Status_310_VehiclespdvalidType_VEHICLESPDVALID_INVALID;
const Status_310_VehiclespdvalidType Status_310_VehiclespdvalidType_VehiclespdvalidType_MAX = Status_310_VehiclespdvalidType_VEHICLESPDVALID_VALID;
const int Status_310_VehiclespdvalidType_VehiclespdvalidType_ARRAYSIZE = Status_310_VehiclespdvalidType_VehiclespdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_VehiclespdvalidType_descriptor();
inline const ::std::string& Status_310_VehiclespdvalidType_Name(Status_310_VehiclespdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_VehiclespdvalidType_descriptor(), value);
}
inline bool Status_310_VehiclespdvalidType_Parse(
    const ::std::string& name, Status_310_VehiclespdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_VehiclespdvalidType>(
    Status_310_VehiclespdvalidType_descriptor(), name, value);
}
enum Status_310_LongitudedrivingmodeType {
  Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_MANUALMODE = 0,
  Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICSTANDBY = 1,
  Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICACCELERATION = 2,
  Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICDECELERATION = 3
};
bool Status_310_LongitudedrivingmodeType_IsValid(int value);
const Status_310_LongitudedrivingmodeType Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_MIN = Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_MANUALMODE;
const Status_310_LongitudedrivingmodeType Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_MAX = Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICDECELERATION;
const int Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_ARRAYSIZE = Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_LongitudedrivingmodeType_descriptor();
inline const ::std::string& Status_310_LongitudedrivingmodeType_Name(Status_310_LongitudedrivingmodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_LongitudedrivingmodeType_descriptor(), value);
}
inline bool Status_310_LongitudedrivingmodeType_Parse(
    const ::std::string& name, Status_310_LongitudedrivingmodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_LongitudedrivingmodeType>(
    Status_310_LongitudedrivingmodeType_descriptor(), name, value);
}
enum Status_310_EngspdvalidType {
  Status_310_EngspdvalidType_ENGSPDVALID_INVALID = 0,
  Status_310_EngspdvalidType_ENGSPDVALID_VALID = 1,
  Status_310_EngspdvalidType_ENGSPDVALID_INIT_VALUE = 2,
  Status_310_EngspdvalidType_ENGSPDVALID_RESERVED = 3
};
bool Status_310_EngspdvalidType_IsValid(int value);
const Status_310_EngspdvalidType Status_310_EngspdvalidType_EngspdvalidType_MIN = Status_310_EngspdvalidType_ENGSPDVALID_INVALID;
const Status_310_EngspdvalidType Status_310_EngspdvalidType_EngspdvalidType_MAX = Status_310_EngspdvalidType_ENGSPDVALID_RESERVED;
const int Status_310_EngspdvalidType_EngspdvalidType_ARRAYSIZE = Status_310_EngspdvalidType_EngspdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_EngspdvalidType_descriptor();
inline const ::std::string& Status_310_EngspdvalidType_Name(Status_310_EngspdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_EngspdvalidType_descriptor(), value);
}
inline bool Status_310_EngspdvalidType_Parse(
    const ::std::string& name, Status_310_EngspdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_EngspdvalidType>(
    Status_310_EngspdvalidType_descriptor(), name, value);
}
enum Status_310_AccepedaloverrideType {
  Status_310_AccepedaloverrideType_ACCEPEDALOVERRIDE_NOT_OVERRIDE = 0,
  Status_310_AccepedaloverrideType_ACCEPEDALOVERRIDE_OVERRIDE = 1
};
bool Status_310_AccepedaloverrideType_IsValid(int value);
const Status_310_AccepedaloverrideType Status_310_AccepedaloverrideType_AccepedaloverrideType_MIN = Status_310_AccepedaloverrideType_ACCEPEDALOVERRIDE_NOT_OVERRIDE;
const Status_310_AccepedaloverrideType Status_310_AccepedaloverrideType_AccepedaloverrideType_MAX = Status_310_AccepedaloverrideType_ACCEPEDALOVERRIDE_OVERRIDE;
const int Status_310_AccepedaloverrideType_AccepedaloverrideType_ARRAYSIZE = Status_310_AccepedaloverrideType_AccepedaloverrideType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_AccepedaloverrideType_descriptor();
inline const ::std::string& Status_310_AccepedaloverrideType_Name(Status_310_AccepedaloverrideType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_AccepedaloverrideType_descriptor(), value);
}
inline bool Status_310_AccepedaloverrideType_Parse(
    const ::std::string& name, Status_310_AccepedaloverrideType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_AccepedaloverrideType>(
    Status_310_AccepedaloverrideType_descriptor(), name, value);
}
enum Status_310_BrakepedalstatusType {
  Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_NOT_PRESSED = 0,
  Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_PRESSED = 1,
  Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_RESERVED1 = 2,
  Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_ERROR = 3
};
bool Status_310_BrakepedalstatusType_IsValid(int value);
const Status_310_BrakepedalstatusType Status_310_BrakepedalstatusType_BrakepedalstatusType_MIN = Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_NOT_PRESSED;
const Status_310_BrakepedalstatusType Status_310_BrakepedalstatusType_BrakepedalstatusType_MAX = Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_ERROR;
const int Status_310_BrakepedalstatusType_BrakepedalstatusType_ARRAYSIZE = Status_310_BrakepedalstatusType_BrakepedalstatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_BrakepedalstatusType_descriptor();
inline const ::std::string& Status_310_BrakepedalstatusType_Name(Status_310_BrakepedalstatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_BrakepedalstatusType_descriptor(), value);
}
inline bool Status_310_BrakepedalstatusType_Parse(
    const ::std::string& name, Status_310_BrakepedalstatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_BrakepedalstatusType>(
    Status_310_BrakepedalstatusType_descriptor(), name, value);
}
enum Status_310_EspbrakelightstsType {
  Status_310_EspbrakelightstsType_ESPBRAKELIGHTSTS_OFF = 0,
  Status_310_EspbrakelightstsType_ESPBRAKELIGHTSTS_ON = 1
};
bool Status_310_EspbrakelightstsType_IsValid(int value);
const Status_310_EspbrakelightstsType Status_310_EspbrakelightstsType_EspbrakelightstsType_MIN = Status_310_EspbrakelightstsType_ESPBRAKELIGHTSTS_OFF;
const Status_310_EspbrakelightstsType Status_310_EspbrakelightstsType_EspbrakelightstsType_MAX = Status_310_EspbrakelightstsType_ESPBRAKELIGHTSTS_ON;
const int Status_310_EspbrakelightstsType_EspbrakelightstsType_ARRAYSIZE = Status_310_EspbrakelightstsType_EspbrakelightstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_EspbrakelightstsType_descriptor();
inline const ::std::string& Status_310_EspbrakelightstsType_Name(Status_310_EspbrakelightstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_EspbrakelightstsType_descriptor(), value);
}
inline bool Status_310_EspbrakelightstsType_Parse(
    const ::std::string& name, Status_310_EspbrakelightstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_EspbrakelightstsType>(
    Status_310_EspbrakelightstsType_descriptor(), name, value);
}
enum Status_310_EpbswtpositionvalidType {
  Status_310_EpbswtpositionvalidType_EPBSWTPOSITIONVALID_VALID = 0,
  Status_310_EpbswtpositionvalidType_EPBSWTPOSITIONVALID_NOT_VALID = 1
};
bool Status_310_EpbswtpositionvalidType_IsValid(int value);
const Status_310_EpbswtpositionvalidType Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_MIN = Status_310_EpbswtpositionvalidType_EPBSWTPOSITIONVALID_VALID;
const Status_310_EpbswtpositionvalidType Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_MAX = Status_310_EpbswtpositionvalidType_EPBSWTPOSITIONVALID_NOT_VALID;
const int Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_ARRAYSIZE = Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_EpbswtpositionvalidType_descriptor();
inline const ::std::string& Status_310_EpbswtpositionvalidType_Name(Status_310_EpbswtpositionvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_EpbswtpositionvalidType_descriptor(), value);
}
inline bool Status_310_EpbswtpositionvalidType_Parse(
    const ::std::string& name, Status_310_EpbswtpositionvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_EpbswtpositionvalidType>(
    Status_310_EpbswtpositionvalidType_descriptor(), name, value);
}
enum Status_310_EpbstsType {
  Status_310_EpbstsType_EPBSTS_RELEASED = 0,
  Status_310_EpbstsType_EPBSTS_CLOSED = 1,
  Status_310_EpbstsType_EPBSTS_IN_PROGRESS = 2,
  Status_310_EpbstsType_EPBSTS_UNKNOWN = 3
};
bool Status_310_EpbstsType_IsValid(int value);
const Status_310_EpbstsType Status_310_EpbstsType_EpbstsType_MIN = Status_310_EpbstsType_EPBSTS_RELEASED;
const Status_310_EpbstsType Status_310_EpbstsType_EpbstsType_MAX = Status_310_EpbstsType_EPBSTS_UNKNOWN;
const int Status_310_EpbstsType_EpbstsType_ARRAYSIZE = Status_310_EpbstsType_EpbstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_EpbstsType_descriptor();
inline const ::std::string& Status_310_EpbstsType_Name(Status_310_EpbstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_EpbstsType_descriptor(), value);
}
inline bool Status_310_EpbstsType_Parse(
    const ::std::string& name, Status_310_EpbstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_EpbstsType>(
    Status_310_EpbstsType_descriptor(), name, value);
}
enum Status_310_CurrentgearvalidType {
  Status_310_CurrentgearvalidType_CURRENTGEARVALID_INVALID = 0,
  Status_310_CurrentgearvalidType_CURRENTGEARVALID_VALID = 1
};
bool Status_310_CurrentgearvalidType_IsValid(int value);
const Status_310_CurrentgearvalidType Status_310_CurrentgearvalidType_CurrentgearvalidType_MIN = Status_310_CurrentgearvalidType_CURRENTGEARVALID_INVALID;
const Status_310_CurrentgearvalidType Status_310_CurrentgearvalidType_CurrentgearvalidType_MAX = Status_310_CurrentgearvalidType_CURRENTGEARVALID_VALID;
const int Status_310_CurrentgearvalidType_CurrentgearvalidType_ARRAYSIZE = Status_310_CurrentgearvalidType_CurrentgearvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_CurrentgearvalidType_descriptor();
inline const ::std::string& Status_310_CurrentgearvalidType_Name(Status_310_CurrentgearvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_CurrentgearvalidType_descriptor(), value);
}
inline bool Status_310_CurrentgearvalidType_Parse(
    const ::std::string& name, Status_310_CurrentgearvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_CurrentgearvalidType>(
    Status_310_CurrentgearvalidType_descriptor(), name, value);
}
enum Status_310_EpstrqsnsrstsType {
  Status_310_EpstrqsnsrstsType_EPSTRQSNSRSTS_NORMAL = 0,
  Status_310_EpstrqsnsrstsType_EPSTRQSNSRSTS_ABNORMAL = 1
};
bool Status_310_EpstrqsnsrstsType_IsValid(int value);
const Status_310_EpstrqsnsrstsType Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_MIN = Status_310_EpstrqsnsrstsType_EPSTRQSNSRSTS_NORMAL;
const Status_310_EpstrqsnsrstsType Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_MAX = Status_310_EpstrqsnsrstsType_EPSTRQSNSRSTS_ABNORMAL;
const int Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_ARRAYSIZE = Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_EpstrqsnsrstsType_descriptor();
inline const ::std::string& Status_310_EpstrqsnsrstsType_Name(Status_310_EpstrqsnsrstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_EpstrqsnsrstsType_descriptor(), value);
}
inline bool Status_310_EpstrqsnsrstsType_Parse(
    const ::std::string& name, Status_310_EpstrqsnsrstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_EpstrqsnsrstsType>(
    Status_310_EpstrqsnsrstsType_descriptor(), name, value);
}
enum Status_310_Eps_interferdetdvalidType {
  Status_310_Eps_interferdetdvalidType_EPS_INTERFERDETDVALID_INVALID = 0,
  Status_310_Eps_interferdetdvalidType_EPS_INTERFERDETDVALID_VALID = 1
};
bool Status_310_Eps_interferdetdvalidType_IsValid(int value);
const Status_310_Eps_interferdetdvalidType Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_MIN = Status_310_Eps_interferdetdvalidType_EPS_INTERFERDETDVALID_INVALID;
const Status_310_Eps_interferdetdvalidType Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_MAX = Status_310_Eps_interferdetdvalidType_EPS_INTERFERDETDVALID_VALID;
const int Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_ARRAYSIZE = Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_Eps_interferdetdvalidType_descriptor();
inline const ::std::string& Status_310_Eps_interferdetdvalidType_Name(Status_310_Eps_interferdetdvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_Eps_interferdetdvalidType_descriptor(), value);
}
inline bool Status_310_Eps_interferdetdvalidType_Parse(
    const ::std::string& name, Status_310_Eps_interferdetdvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_Eps_interferdetdvalidType>(
    Status_310_Eps_interferdetdvalidType_descriptor(), name, value);
}
enum Status_310_EpshandsdetnstsType {
  Status_310_EpshandsdetnstsType_EPSHANDSDETNSTS_HANDSOFF_NOT_DETECTED = 0,
  Status_310_EpshandsdetnstsType_EPSHANDSDETNSTS_HANDOFFF_DETECTED = 1
};
bool Status_310_EpshandsdetnstsType_IsValid(int value);
const Status_310_EpshandsdetnstsType Status_310_EpshandsdetnstsType_EpshandsdetnstsType_MIN = Status_310_EpshandsdetnstsType_EPSHANDSDETNSTS_HANDSOFF_NOT_DETECTED;
const Status_310_EpshandsdetnstsType Status_310_EpshandsdetnstsType_EpshandsdetnstsType_MAX = Status_310_EpshandsdetnstsType_EPSHANDSDETNSTS_HANDOFFF_DETECTED;
const int Status_310_EpshandsdetnstsType_EpshandsdetnstsType_ARRAYSIZE = Status_310_EpshandsdetnstsType_EpshandsdetnstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_EpshandsdetnstsType_descriptor();
inline const ::std::string& Status_310_EpshandsdetnstsType_Name(Status_310_EpshandsdetnstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_EpshandsdetnstsType_descriptor(), value);
}
inline bool Status_310_EpshandsdetnstsType_Parse(
    const ::std::string& name, Status_310_EpshandsdetnstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_EpshandsdetnstsType>(
    Status_310_EpshandsdetnstsType_descriptor(), name, value);
}
enum Status_310_Eps_handsdetnstsvalidType {
  Status_310_Eps_handsdetnstsvalidType_EPS_HANDSDETNSTSVALID_INVALID = 0,
  Status_310_Eps_handsdetnstsvalidType_EPS_HANDSDETNSTSVALID_VALID = 1
};
bool Status_310_Eps_handsdetnstsvalidType_IsValid(int value);
const Status_310_Eps_handsdetnstsvalidType Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_MIN = Status_310_Eps_handsdetnstsvalidType_EPS_HANDSDETNSTSVALID_INVALID;
const Status_310_Eps_handsdetnstsvalidType Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_MAX = Status_310_Eps_handsdetnstsvalidType_EPS_HANDSDETNSTSVALID_VALID;
const int Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_ARRAYSIZE = Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_Eps_handsdetnstsvalidType_descriptor();
inline const ::std::string& Status_310_Eps_handsdetnstsvalidType_Name(Status_310_Eps_handsdetnstsvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_Eps_handsdetnstsvalidType_descriptor(), value);
}
inline bool Status_310_Eps_handsdetnstsvalidType_Parse(
    const ::std::string& name, Status_310_Eps_handsdetnstsvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_Eps_handsdetnstsvalidType>(
    Status_310_Eps_handsdetnstsvalidType_descriptor(), name, value);
}
enum Status_310_SteerwheelanglesignType {
  Status_310_SteerwheelanglesignType_STEERWHEELANGLESIGN_LEFT_POSITIVE = 0,
  Status_310_SteerwheelanglesignType_STEERWHEELANGLESIGN_RIGHT_NEGATIVE = 1
};
bool Status_310_SteerwheelanglesignType_IsValid(int value);
const Status_310_SteerwheelanglesignType Status_310_SteerwheelanglesignType_SteerwheelanglesignType_MIN = Status_310_SteerwheelanglesignType_STEERWHEELANGLESIGN_LEFT_POSITIVE;
const Status_310_SteerwheelanglesignType Status_310_SteerwheelanglesignType_SteerwheelanglesignType_MAX = Status_310_SteerwheelanglesignType_STEERWHEELANGLESIGN_RIGHT_NEGATIVE;
const int Status_310_SteerwheelanglesignType_SteerwheelanglesignType_ARRAYSIZE = Status_310_SteerwheelanglesignType_SteerwheelanglesignType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_SteerwheelanglesignType_descriptor();
inline const ::std::string& Status_310_SteerwheelanglesignType_Name(Status_310_SteerwheelanglesignType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_SteerwheelanglesignType_descriptor(), value);
}
inline bool Status_310_SteerwheelanglesignType_Parse(
    const ::std::string& name, Status_310_SteerwheelanglesignType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_SteerwheelanglesignType>(
    Status_310_SteerwheelanglesignType_descriptor(), name, value);
}
enum Status_310_SteerwheelspdsignType {
  Status_310_SteerwheelspdsignType_STEERWHEELSPDSIGN_LEFT_POSITIVE = 0,
  Status_310_SteerwheelspdsignType_STEERWHEELSPDSIGN_RIGHT_NEGATIVE = 1
};
bool Status_310_SteerwheelspdsignType_IsValid(int value);
const Status_310_SteerwheelspdsignType Status_310_SteerwheelspdsignType_SteerwheelspdsignType_MIN = Status_310_SteerwheelspdsignType_STEERWHEELSPDSIGN_LEFT_POSITIVE;
const Status_310_SteerwheelspdsignType Status_310_SteerwheelspdsignType_SteerwheelspdsignType_MAX = Status_310_SteerwheelspdsignType_STEERWHEELSPDSIGN_RIGHT_NEGATIVE;
const int Status_310_SteerwheelspdsignType_SteerwheelspdsignType_ARRAYSIZE = Status_310_SteerwheelspdsignType_SteerwheelspdsignType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_SteerwheelspdsignType_descriptor();
inline const ::std::string& Status_310_SteerwheelspdsignType_Name(Status_310_SteerwheelspdsignType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_SteerwheelspdsignType_descriptor(), value);
}
inline bool Status_310_SteerwheelspdsignType_Parse(
    const ::std::string& name, Status_310_SteerwheelspdsignType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_SteerwheelspdsignType>(
    Status_310_SteerwheelspdsignType_descriptor(), name, value);
}
enum Status_310_DriverdoorstsType {
  Status_310_DriverdoorstsType_DRIVERDOORSTS_CLOSED = 0,
  Status_310_DriverdoorstsType_DRIVERDOORSTS_OPEN = 1
};
bool Status_310_DriverdoorstsType_IsValid(int value);
const Status_310_DriverdoorstsType Status_310_DriverdoorstsType_DriverdoorstsType_MIN = Status_310_DriverdoorstsType_DRIVERDOORSTS_CLOSED;
const Status_310_DriverdoorstsType Status_310_DriverdoorstsType_DriverdoorstsType_MAX = Status_310_DriverdoorstsType_DRIVERDOORSTS_OPEN;
const int Status_310_DriverdoorstsType_DriverdoorstsType_ARRAYSIZE = Status_310_DriverdoorstsType_DriverdoorstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_DriverdoorstsType_descriptor();
inline const ::std::string& Status_310_DriverdoorstsType_Name(Status_310_DriverdoorstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_DriverdoorstsType_descriptor(), value);
}
inline bool Status_310_DriverdoorstsType_Parse(
    const ::std::string& name, Status_310_DriverdoorstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_DriverdoorstsType>(
    Status_310_DriverdoorstsType_descriptor(), name, value);
}
enum Status_310_RldoorstsType {
  Status_310_RldoorstsType_RLDOORSTS_CLOSED = 0,
  Status_310_RldoorstsType_RLDOORSTS_OPEN = 1
};
bool Status_310_RldoorstsType_IsValid(int value);
const Status_310_RldoorstsType Status_310_RldoorstsType_RldoorstsType_MIN = Status_310_RldoorstsType_RLDOORSTS_CLOSED;
const Status_310_RldoorstsType Status_310_RldoorstsType_RldoorstsType_MAX = Status_310_RldoorstsType_RLDOORSTS_OPEN;
const int Status_310_RldoorstsType_RldoorstsType_ARRAYSIZE = Status_310_RldoorstsType_RldoorstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_RldoorstsType_descriptor();
inline const ::std::string& Status_310_RldoorstsType_Name(Status_310_RldoorstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_RldoorstsType_descriptor(), value);
}
inline bool Status_310_RldoorstsType_Parse(
    const ::std::string& name, Status_310_RldoorstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_RldoorstsType>(
    Status_310_RldoorstsType_descriptor(), name, value);
}
enum Status_310_PassengerdoorstsType {
  Status_310_PassengerdoorstsType_PASSENGERDOORSTS_CLOSED = 0,
  Status_310_PassengerdoorstsType_PASSENGERDOORSTS_OPEN = 1
};
bool Status_310_PassengerdoorstsType_IsValid(int value);
const Status_310_PassengerdoorstsType Status_310_PassengerdoorstsType_PassengerdoorstsType_MIN = Status_310_PassengerdoorstsType_PASSENGERDOORSTS_CLOSED;
const Status_310_PassengerdoorstsType Status_310_PassengerdoorstsType_PassengerdoorstsType_MAX = Status_310_PassengerdoorstsType_PASSENGERDOORSTS_OPEN;
const int Status_310_PassengerdoorstsType_PassengerdoorstsType_ARRAYSIZE = Status_310_PassengerdoorstsType_PassengerdoorstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_PassengerdoorstsType_descriptor();
inline const ::std::string& Status_310_PassengerdoorstsType_Name(Status_310_PassengerdoorstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_PassengerdoorstsType_descriptor(), value);
}
inline bool Status_310_PassengerdoorstsType_Parse(
    const ::std::string& name, Status_310_PassengerdoorstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_PassengerdoorstsType>(
    Status_310_PassengerdoorstsType_descriptor(), name, value);
}
enum Status_310_RrdoorstsType {
  Status_310_RrdoorstsType_RRDOORSTS_CLOSED = 0,
  Status_310_RrdoorstsType_RRDOORSTS_OPEN = 1
};
bool Status_310_RrdoorstsType_IsValid(int value);
const Status_310_RrdoorstsType Status_310_RrdoorstsType_RrdoorstsType_MIN = Status_310_RrdoorstsType_RRDOORSTS_CLOSED;
const Status_310_RrdoorstsType Status_310_RrdoorstsType_RrdoorstsType_MAX = Status_310_RrdoorstsType_RRDOORSTS_OPEN;
const int Status_310_RrdoorstsType_RrdoorstsType_ARRAYSIZE = Status_310_RrdoorstsType_RrdoorstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_RrdoorstsType_descriptor();
inline const ::std::string& Status_310_RrdoorstsType_Name(Status_310_RrdoorstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_RrdoorstsType_descriptor(), value);
}
inline bool Status_310_RrdoorstsType_Parse(
    const ::std::string& name, Status_310_RrdoorstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_RrdoorstsType>(
    Status_310_RrdoorstsType_descriptor(), name, value);
}
enum Status_310_FrontfoglmpstsType {
  Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_OFF = 0,
  Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_ON = 1,
  Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_RESERVED = 2,
  Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_NOT_AVAILABLE = 3
};
bool Status_310_FrontfoglmpstsType_IsValid(int value);
const Status_310_FrontfoglmpstsType Status_310_FrontfoglmpstsType_FrontfoglmpstsType_MIN = Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_OFF;
const Status_310_FrontfoglmpstsType Status_310_FrontfoglmpstsType_FrontfoglmpstsType_MAX = Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_NOT_AVAILABLE;
const int Status_310_FrontfoglmpstsType_FrontfoglmpstsType_ARRAYSIZE = Status_310_FrontfoglmpstsType_FrontfoglmpstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_FrontfoglmpstsType_descriptor();
inline const ::std::string& Status_310_FrontfoglmpstsType_Name(Status_310_FrontfoglmpstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_FrontfoglmpstsType_descriptor(), value);
}
inline bool Status_310_FrontfoglmpstsType_Parse(
    const ::std::string& name, Status_310_FrontfoglmpstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_FrontfoglmpstsType>(
    Status_310_FrontfoglmpstsType_descriptor(), name, value);
}
enum Status_310_RearfoglmpstsType {
  Status_310_RearfoglmpstsType_REARFOGLMPSTS_OFF = 0,
  Status_310_RearfoglmpstsType_REARFOGLMPSTS_ON = 1
};
bool Status_310_RearfoglmpstsType_IsValid(int value);
const Status_310_RearfoglmpstsType Status_310_RearfoglmpstsType_RearfoglmpstsType_MIN = Status_310_RearfoglmpstsType_REARFOGLMPSTS_OFF;
const Status_310_RearfoglmpstsType Status_310_RearfoglmpstsType_RearfoglmpstsType_MAX = Status_310_RearfoglmpstsType_REARFOGLMPSTS_ON;
const int Status_310_RearfoglmpstsType_RearfoglmpstsType_ARRAYSIZE = Status_310_RearfoglmpstsType_RearfoglmpstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_RearfoglmpstsType_descriptor();
inline const ::std::string& Status_310_RearfoglmpstsType_Name(Status_310_RearfoglmpstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_RearfoglmpstsType_descriptor(), value);
}
inline bool Status_310_RearfoglmpstsType_Parse(
    const ::std::string& name, Status_310_RearfoglmpstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_RearfoglmpstsType>(
    Status_310_RearfoglmpstsType_descriptor(), name, value);
}
enum Status_310_LowbeamstsType {
  Status_310_LowbeamstsType_LOWBEAMSTS_OFF = 0,
  Status_310_LowbeamstsType_LOWBEAMSTS_ON = 1
};
bool Status_310_LowbeamstsType_IsValid(int value);
const Status_310_LowbeamstsType Status_310_LowbeamstsType_LowbeamstsType_MIN = Status_310_LowbeamstsType_LOWBEAMSTS_OFF;
const Status_310_LowbeamstsType Status_310_LowbeamstsType_LowbeamstsType_MAX = Status_310_LowbeamstsType_LOWBEAMSTS_ON;
const int Status_310_LowbeamstsType_LowbeamstsType_ARRAYSIZE = Status_310_LowbeamstsType_LowbeamstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_LowbeamstsType_descriptor();
inline const ::std::string& Status_310_LowbeamstsType_Name(Status_310_LowbeamstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_LowbeamstsType_descriptor(), value);
}
inline bool Status_310_LowbeamstsType_Parse(
    const ::std::string& name, Status_310_LowbeamstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_LowbeamstsType>(
    Status_310_LowbeamstsType_descriptor(), name, value);
}
enum Status_310_HighbeamstsType {
  Status_310_HighbeamstsType_HIGHBEAMSTS_OFF = 0,
  Status_310_HighbeamstsType_HIGHBEAMSTS_ON = 1
};
bool Status_310_HighbeamstsType_IsValid(int value);
const Status_310_HighbeamstsType Status_310_HighbeamstsType_HighbeamstsType_MIN = Status_310_HighbeamstsType_HIGHBEAMSTS_OFF;
const Status_310_HighbeamstsType Status_310_HighbeamstsType_HighbeamstsType_MAX = Status_310_HighbeamstsType_HIGHBEAMSTS_ON;
const int Status_310_HighbeamstsType_HighbeamstsType_ARRAYSIZE = Status_310_HighbeamstsType_HighbeamstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_HighbeamstsType_descriptor();
inline const ::std::string& Status_310_HighbeamstsType_Name(Status_310_HighbeamstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_HighbeamstsType_descriptor(), value);
}
inline bool Status_310_HighbeamstsType_Parse(
    const ::std::string& name, Status_310_HighbeamstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_HighbeamstsType>(
    Status_310_HighbeamstsType_descriptor(), name, value);
}
enum Status_310_LeftturnlampstsType {
  Status_310_LeftturnlampstsType_LEFTTURNLAMPSTS_OFF = 0,
  Status_310_LeftturnlampstsType_LEFTTURNLAMPSTS_ON = 1
};
bool Status_310_LeftturnlampstsType_IsValid(int value);
const Status_310_LeftturnlampstsType Status_310_LeftturnlampstsType_LeftturnlampstsType_MIN = Status_310_LeftturnlampstsType_LEFTTURNLAMPSTS_OFF;
const Status_310_LeftturnlampstsType Status_310_LeftturnlampstsType_LeftturnlampstsType_MAX = Status_310_LeftturnlampstsType_LEFTTURNLAMPSTS_ON;
const int Status_310_LeftturnlampstsType_LeftturnlampstsType_ARRAYSIZE = Status_310_LeftturnlampstsType_LeftturnlampstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_LeftturnlampstsType_descriptor();
inline const ::std::string& Status_310_LeftturnlampstsType_Name(Status_310_LeftturnlampstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_LeftturnlampstsType_descriptor(), value);
}
inline bool Status_310_LeftturnlampstsType_Parse(
    const ::std::string& name, Status_310_LeftturnlampstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_LeftturnlampstsType>(
    Status_310_LeftturnlampstsType_descriptor(), name, value);
}
enum Status_310_RightturnlampstsType {
  Status_310_RightturnlampstsType_RIGHTTURNLAMPSTS_OFF = 0,
  Status_310_RightturnlampstsType_RIGHTTURNLAMPSTS_ON = 1
};
bool Status_310_RightturnlampstsType_IsValid(int value);
const Status_310_RightturnlampstsType Status_310_RightturnlampstsType_RightturnlampstsType_MIN = Status_310_RightturnlampstsType_RIGHTTURNLAMPSTS_OFF;
const Status_310_RightturnlampstsType Status_310_RightturnlampstsType_RightturnlampstsType_MAX = Status_310_RightturnlampstsType_RIGHTTURNLAMPSTS_ON;
const int Status_310_RightturnlampstsType_RightturnlampstsType_ARRAYSIZE = Status_310_RightturnlampstsType_RightturnlampstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_RightturnlampstsType_descriptor();
inline const ::std::string& Status_310_RightturnlampstsType_Name(Status_310_RightturnlampstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_RightturnlampstsType_descriptor(), value);
}
inline bool Status_310_RightturnlampstsType_Parse(
    const ::std::string& name, Status_310_RightturnlampstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_RightturnlampstsType>(
    Status_310_RightturnlampstsType_descriptor(), name, value);
}
enum Status_310_Bcm_availstsType {
  Status_310_Bcm_availstsType_BCM_AVAILSTS_MANUAL_MODE = 0,
  Status_310_Bcm_availstsType_BCM_AVAILSTS_AUTONOMOUS_MODE = 1,
  Status_310_Bcm_availstsType_BCM_AVAILSTS_RESERVED1 = 2,
  Status_310_Bcm_availstsType_BCM_AVAILSTS_RESERVED2 = 3
};
bool Status_310_Bcm_availstsType_IsValid(int value);
const Status_310_Bcm_availstsType Status_310_Bcm_availstsType_Bcm_availstsType_MIN = Status_310_Bcm_availstsType_BCM_AVAILSTS_MANUAL_MODE;
const Status_310_Bcm_availstsType Status_310_Bcm_availstsType_Bcm_availstsType_MAX = Status_310_Bcm_availstsType_BCM_AVAILSTS_RESERVED2;
const int Status_310_Bcm_availstsType_Bcm_availstsType_ARRAYSIZE = Status_310_Bcm_availstsType_Bcm_availstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_Bcm_availstsType_descriptor();
inline const ::std::string& Status_310_Bcm_availstsType_Name(Status_310_Bcm_availstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_Bcm_availstsType_descriptor(), value);
}
inline bool Status_310_Bcm_availstsType_Parse(
    const ::std::string& name, Status_310_Bcm_availstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_Bcm_availstsType>(
    Status_310_Bcm_availstsType_descriptor(), name, value);
}
enum Status_310_BrakelmpstsType {
  Status_310_BrakelmpstsType_BRAKELMPSTS_OFF = 0,
  Status_310_BrakelmpstsType_BRAKELMPSTS_ON = 1
};
bool Status_310_BrakelmpstsType_IsValid(int value);
const Status_310_BrakelmpstsType Status_310_BrakelmpstsType_BrakelmpstsType_MIN = Status_310_BrakelmpstsType_BRAKELMPSTS_OFF;
const Status_310_BrakelmpstsType Status_310_BrakelmpstsType_BrakelmpstsType_MAX = Status_310_BrakelmpstsType_BRAKELMPSTS_ON;
const int Status_310_BrakelmpstsType_BrakelmpstsType_ARRAYSIZE = Status_310_BrakelmpstsType_BrakelmpstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_310_BrakelmpstsType_descriptor();
inline const ::std::string& Status_310_BrakelmpstsType_Name(Status_310_BrakelmpstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_310_BrakelmpstsType_descriptor(), value);
}
inline bool Status_310_BrakelmpstsType_Parse(
    const ::std::string& name, Status_310_BrakelmpstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status_310_BrakelmpstsType>(
    Status_310_BrakelmpstsType_descriptor(), name, value);
}
enum Ads_req_vin_390_Req_vin_signalType {
  Ads_req_vin_390_Req_vin_signalType_REQ_VIN_SIGNAL_NO_REQUEST = 0,
  Ads_req_vin_390_Req_vin_signalType_REQ_VIN_SIGNAL_REQUEST = 1
};
bool Ads_req_vin_390_Req_vin_signalType_IsValid(int value);
const Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_MIN = Ads_req_vin_390_Req_vin_signalType_REQ_VIN_SIGNAL_NO_REQUEST;
const Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_MAX = Ads_req_vin_390_Req_vin_signalType_REQ_VIN_SIGNAL_REQUEST;
const int Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_ARRAYSIZE = Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads_req_vin_390_Req_vin_signalType_descriptor();
inline const ::std::string& Ads_req_vin_390_Req_vin_signalType_Name(Ads_req_vin_390_Req_vin_signalType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads_req_vin_390_Req_vin_signalType_descriptor(), value);
}
inline bool Ads_req_vin_390_Req_vin_signalType_Parse(
    const ::std::string& name, Ads_req_vin_390_Req_vin_signalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads_req_vin_390_Req_vin_signalType>(
    Ads_req_vin_390_Req_vin_signalType_descriptor(), name, value);
}
enum Ads1_111_Ads_dectostopType {
  Ads1_111_Ads_dectostopType_ADS_DECTOSTOP_NO_DEMAND = 0,
  Ads1_111_Ads_dectostopType_ADS_DECTOSTOP_DEMAND = 1
};
bool Ads1_111_Ads_dectostopType_IsValid(int value);
const Ads1_111_Ads_dectostopType Ads1_111_Ads_dectostopType_Ads_dectostopType_MIN = Ads1_111_Ads_dectostopType_ADS_DECTOSTOP_NO_DEMAND;
const Ads1_111_Ads_dectostopType Ads1_111_Ads_dectostopType_Ads_dectostopType_MAX = Ads1_111_Ads_dectostopType_ADS_DECTOSTOP_DEMAND;
const int Ads1_111_Ads_dectostopType_Ads_dectostopType_ARRAYSIZE = Ads1_111_Ads_dectostopType_Ads_dectostopType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads1_111_Ads_dectostopType_descriptor();
inline const ::std::string& Ads1_111_Ads_dectostopType_Name(Ads1_111_Ads_dectostopType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads1_111_Ads_dectostopType_descriptor(), value);
}
inline bool Ads1_111_Ads_dectostopType_Parse(
    const ::std::string& name, Ads1_111_Ads_dectostopType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads1_111_Ads_dectostopType>(
    Ads1_111_Ads_dectostopType_descriptor(), name, value);
}
enum Ads1_111_Ads_modeType {
  Ads1_111_Ads_modeType_ADS_MODE_OFF_MODE = 0,
  Ads1_111_Ads_modeType_ADS_MODE_ACTIVE_MODE = 3
};
bool Ads1_111_Ads_modeType_IsValid(int value);
const Ads1_111_Ads_modeType Ads1_111_Ads_modeType_Ads_modeType_MIN = Ads1_111_Ads_modeType_ADS_MODE_OFF_MODE;
const Ads1_111_Ads_modeType Ads1_111_Ads_modeType_Ads_modeType_MAX = Ads1_111_Ads_modeType_ADS_MODE_ACTIVE_MODE;
const int Ads1_111_Ads_modeType_Ads_modeType_ARRAYSIZE = Ads1_111_Ads_modeType_Ads_modeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads1_111_Ads_modeType_descriptor();
inline const ::std::string& Ads1_111_Ads_modeType_Name(Ads1_111_Ads_modeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads1_111_Ads_modeType_descriptor(), value);
}
inline bool Ads1_111_Ads_modeType_Parse(
    const ::std::string& name, Ads1_111_Ads_modeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads1_111_Ads_modeType>(
    Ads1_111_Ads_modeType_descriptor(), name, value);
}
enum Ads1_111_Ads_driveoff_reqType {
  Ads1_111_Ads_driveoff_reqType_ADS_DRIVEOFF_REQ_NO_DEMAND = 0,
  Ads1_111_Ads_driveoff_reqType_ADS_DRIVEOFF_REQ_DEMAND = 1
};
bool Ads1_111_Ads_driveoff_reqType_IsValid(int value);
const Ads1_111_Ads_driveoff_reqType Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_MIN = Ads1_111_Ads_driveoff_reqType_ADS_DRIVEOFF_REQ_NO_DEMAND;
const Ads1_111_Ads_driveoff_reqType Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_MAX = Ads1_111_Ads_driveoff_reqType_ADS_DRIVEOFF_REQ_DEMAND;
const int Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_ARRAYSIZE = Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads1_111_Ads_driveoff_reqType_descriptor();
inline const ::std::string& Ads1_111_Ads_driveoff_reqType_Name(Ads1_111_Ads_driveoff_reqType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads1_111_Ads_driveoff_reqType_descriptor(), value);
}
inline bool Ads1_111_Ads_driveoff_reqType_Parse(
    const ::std::string& name, Ads1_111_Ads_driveoff_reqType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads1_111_Ads_driveoff_reqType>(
    Ads1_111_Ads_driveoff_reqType_descriptor(), name, value);
}
enum Ads1_111_Ads_aeb_tgtdecel_reqType {
  Ads1_111_Ads_aeb_tgtdecel_reqType_ADS_AEB_TGTDECEL_REQ_NO_DEMAND = 0,
  Ads1_111_Ads_aeb_tgtdecel_reqType_ADS_AEB_TGTDECEL_REQ_DEMAND = 1
};
bool Ads1_111_Ads_aeb_tgtdecel_reqType_IsValid(int value);
const Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_MIN = Ads1_111_Ads_aeb_tgtdecel_reqType_ADS_AEB_TGTDECEL_REQ_NO_DEMAND;
const Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_MAX = Ads1_111_Ads_aeb_tgtdecel_reqType_ADS_AEB_TGTDECEL_REQ_DEMAND;
const int Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_ARRAYSIZE = Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads1_111_Ads_aeb_tgtdecel_reqType_descriptor();
inline const ::std::string& Ads1_111_Ads_aeb_tgtdecel_reqType_Name(Ads1_111_Ads_aeb_tgtdecel_reqType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads1_111_Ads_aeb_tgtdecel_reqType_descriptor(), value);
}
inline bool Ads1_111_Ads_aeb_tgtdecel_reqType_Parse(
    const ::std::string& name, Ads1_111_Ads_aeb_tgtdecel_reqType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads1_111_Ads_aeb_tgtdecel_reqType>(
    Ads1_111_Ads_aeb_tgtdecel_reqType_descriptor(), name, value);
}
enum Fbs2_240_FlwheeldirectionType {
  Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_INVALID = 0,
  Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_FORWARD = 1,
  Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_BACKWARD = 2,
  Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_STOP = 3
};
bool Fbs2_240_FlwheeldirectionType_IsValid(int value);
const Fbs2_240_FlwheeldirectionType Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_MIN = Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_INVALID;
const Fbs2_240_FlwheeldirectionType Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_MAX = Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_STOP;
const int Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_ARRAYSIZE = Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs2_240_FlwheeldirectionType_descriptor();
inline const ::std::string& Fbs2_240_FlwheeldirectionType_Name(Fbs2_240_FlwheeldirectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs2_240_FlwheeldirectionType_descriptor(), value);
}
inline bool Fbs2_240_FlwheeldirectionType_Parse(
    const ::std::string& name, Fbs2_240_FlwheeldirectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs2_240_FlwheeldirectionType>(
    Fbs2_240_FlwheeldirectionType_descriptor(), name, value);
}
enum Fbs2_240_RlwheeldrivedirectionType {
  Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_INVALID = 0,
  Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_FORWARD = 1,
  Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_BACKWARD = 2,
  Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_STOP = 3
};
bool Fbs2_240_RlwheeldrivedirectionType_IsValid(int value);
const Fbs2_240_RlwheeldrivedirectionType Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_MIN = Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_INVALID;
const Fbs2_240_RlwheeldrivedirectionType Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_MAX = Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_STOP;
const int Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_ARRAYSIZE = Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs2_240_RlwheeldrivedirectionType_descriptor();
inline const ::std::string& Fbs2_240_RlwheeldrivedirectionType_Name(Fbs2_240_RlwheeldrivedirectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs2_240_RlwheeldrivedirectionType_descriptor(), value);
}
inline bool Fbs2_240_RlwheeldrivedirectionType_Parse(
    const ::std::string& name, Fbs2_240_RlwheeldrivedirectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs2_240_RlwheeldrivedirectionType>(
    Fbs2_240_RlwheeldrivedirectionType_descriptor(), name, value);
}
enum Fbs2_240_RrwheeldirectionType {
  Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_INVALID = 0,
  Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_FORWARD = 1,
  Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_BACKWARD = 2,
  Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_STOP = 3
};
bool Fbs2_240_RrwheeldirectionType_IsValid(int value);
const Fbs2_240_RrwheeldirectionType Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_MIN = Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_INVALID;
const Fbs2_240_RrwheeldirectionType Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_MAX = Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_STOP;
const int Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_ARRAYSIZE = Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs2_240_RrwheeldirectionType_descriptor();
inline const ::std::string& Fbs2_240_RrwheeldirectionType_Name(Fbs2_240_RrwheeldirectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs2_240_RrwheeldirectionType_descriptor(), value);
}
inline bool Fbs2_240_RrwheeldirectionType_Parse(
    const ::std::string& name, Fbs2_240_RrwheeldirectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs2_240_RrwheeldirectionType>(
    Fbs2_240_RrwheeldirectionType_descriptor(), name, value);
}
enum Fbs1_243_FrwheeldirectionType {
  Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_INVALID = 0,
  Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_FORWARD = 1,
  Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_BACKWARD = 2,
  Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_STOP = 3
};
bool Fbs1_243_FrwheeldirectionType_IsValid(int value);
const Fbs1_243_FrwheeldirectionType Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_MIN = Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_INVALID;
const Fbs1_243_FrwheeldirectionType Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_MAX = Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_STOP;
const int Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_ARRAYSIZE = Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs1_243_FrwheeldirectionType_descriptor();
inline const ::std::string& Fbs1_243_FrwheeldirectionType_Name(Fbs1_243_FrwheeldirectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs1_243_FrwheeldirectionType_descriptor(), value);
}
inline bool Fbs1_243_FrwheeldirectionType_Parse(
    const ::std::string& name, Fbs1_243_FrwheeldirectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs1_243_FrwheeldirectionType>(
    Fbs1_243_FrwheeldirectionType_descriptor(), name, value);
}
enum Fail_241_EngfailType {
  Fail_241_EngfailType_ENGFAIL_NO_FAIL = 0,
  Fail_241_EngfailType_ENGFAIL_FAIL = 1
};
bool Fail_241_EngfailType_IsValid(int value);
const Fail_241_EngfailType Fail_241_EngfailType_EngfailType_MIN = Fail_241_EngfailType_ENGFAIL_NO_FAIL;
const Fail_241_EngfailType Fail_241_EngfailType_EngfailType_MAX = Fail_241_EngfailType_ENGFAIL_FAIL;
const int Fail_241_EngfailType_EngfailType_ARRAYSIZE = Fail_241_EngfailType_EngfailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fail_241_EngfailType_descriptor();
inline const ::std::string& Fail_241_EngfailType_Name(Fail_241_EngfailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fail_241_EngfailType_descriptor(), value);
}
inline bool Fail_241_EngfailType_Parse(
    const ::std::string& name, Fail_241_EngfailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fail_241_EngfailType>(
    Fail_241_EngfailType_descriptor(), name, value);
}
enum Fail_241_EspfailType {
  Fail_241_EspfailType_ESPFAIL_NO_FAILURE = 0,
  Fail_241_EspfailType_ESPFAIL_FAILURE = 1
};
bool Fail_241_EspfailType_IsValid(int value);
const Fail_241_EspfailType Fail_241_EspfailType_EspfailType_MIN = Fail_241_EspfailType_ESPFAIL_NO_FAILURE;
const Fail_241_EspfailType Fail_241_EspfailType_EspfailType_MAX = Fail_241_EspfailType_ESPFAIL_FAILURE;
const int Fail_241_EspfailType_EspfailType_ARRAYSIZE = Fail_241_EspfailType_EspfailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fail_241_EspfailType_descriptor();
inline const ::std::string& Fail_241_EspfailType_Name(Fail_241_EspfailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fail_241_EspfailType_descriptor(), value);
}
inline bool Fail_241_EspfailType_Parse(
    const ::std::string& name, Fail_241_EspfailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fail_241_EspfailType>(
    Fail_241_EspfailType_descriptor(), name, value);
}
enum Fail_241_EpbfailType {
  Fail_241_EpbfailType_EPBFAIL_UNDEFINED = 0,
  Fail_241_EpbfailType_EPBFAIL_NO_ERROR = 1,
  Fail_241_EpbfailType_EPBFAIL_ERROR = 2,
  Fail_241_EpbfailType_EPBFAIL_DIAGNOSIS = 3
};
bool Fail_241_EpbfailType_IsValid(int value);
const Fail_241_EpbfailType Fail_241_EpbfailType_EpbfailType_MIN = Fail_241_EpbfailType_EPBFAIL_UNDEFINED;
const Fail_241_EpbfailType Fail_241_EpbfailType_EpbfailType_MAX = Fail_241_EpbfailType_EPBFAIL_DIAGNOSIS;
const int Fail_241_EpbfailType_EpbfailType_ARRAYSIZE = Fail_241_EpbfailType_EpbfailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fail_241_EpbfailType_descriptor();
inline const ::std::string& Fail_241_EpbfailType_Name(Fail_241_EpbfailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fail_241_EpbfailType_descriptor(), value);
}
inline bool Fail_241_EpbfailType_Parse(
    const ::std::string& name, Fail_241_EpbfailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fail_241_EpbfailType>(
    Fail_241_EpbfailType_descriptor(), name, value);
}
enum Fail_241_ShiftfailType {
  Fail_241_ShiftfailType_SHIFTFAIL_NO_FAIL = 0,
  Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_MALFUNCTION = 1,
  Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_P_ENGAGEMENT_FAULT = 2,
  Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_P_DISENGAGEMENT_FAULT = 3,
  Fail_241_ShiftfailType_SHIFTFAIL_RESERVED = 4,
  Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_LIMIT_FUNCTION = 15
};
bool Fail_241_ShiftfailType_IsValid(int value);
const Fail_241_ShiftfailType Fail_241_ShiftfailType_ShiftfailType_MIN = Fail_241_ShiftfailType_SHIFTFAIL_NO_FAIL;
const Fail_241_ShiftfailType Fail_241_ShiftfailType_ShiftfailType_MAX = Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_LIMIT_FUNCTION;
const int Fail_241_ShiftfailType_ShiftfailType_ARRAYSIZE = Fail_241_ShiftfailType_ShiftfailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fail_241_ShiftfailType_descriptor();
inline const ::std::string& Fail_241_ShiftfailType_Name(Fail_241_ShiftfailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fail_241_ShiftfailType_descriptor(), value);
}
inline bool Fail_241_ShiftfailType_Parse(
    const ::std::string& name, Fail_241_ShiftfailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fail_241_ShiftfailType>(
    Fail_241_ShiftfailType_descriptor(), name, value);
}
enum Fail_241_EpsfailType {
  Fail_241_EpsfailType_EPSFAIL_NO_FAULT = 0,
  Fail_241_EpsfailType_EPSFAIL_FAULT = 1
};
bool Fail_241_EpsfailType_IsValid(int value);
const Fail_241_EpsfailType Fail_241_EpsfailType_EpsfailType_MIN = Fail_241_EpsfailType_EPSFAIL_NO_FAULT;
const Fail_241_EpsfailType Fail_241_EpsfailType_EpsfailType_MAX = Fail_241_EpsfailType_EPSFAIL_FAULT;
const int Fail_241_EpsfailType_EpsfailType_ARRAYSIZE = Fail_241_EpsfailType_EpsfailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fail_241_EpsfailType_descriptor();
inline const ::std::string& Fail_241_EpsfailType_Name(Fail_241_EpsfailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fail_241_EpsfailType_descriptor(), value);
}
inline bool Fail_241_EpsfailType_Parse(
    const ::std::string& name, Fail_241_EpsfailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fail_241_EpsfailType>(
    Fail_241_EpsfailType_descriptor(), name, value);
}
enum Fbs3_237_EpbswtichpositionType {
  Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_NEUTRAL = 0,
  Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_RELEASE = 1,
  Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_APPLY = 2,
  Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_RESERVED1 = 3
};
bool Fbs3_237_EpbswtichpositionType_IsValid(int value);
const Fbs3_237_EpbswtichpositionType Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_MIN = Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_NEUTRAL;
const Fbs3_237_EpbswtichpositionType Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_MAX = Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_RESERVED1;
const int Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_ARRAYSIZE = Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs3_237_EpbswtichpositionType_descriptor();
inline const ::std::string& Fbs3_237_EpbswtichpositionType_Name(Fbs3_237_EpbswtichpositionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs3_237_EpbswtichpositionType_descriptor(), value);
}
inline bool Fbs3_237_EpbswtichpositionType_Parse(
    const ::std::string& name, Fbs3_237_EpbswtichpositionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs3_237_EpbswtichpositionType>(
    Fbs3_237_EpbswtichpositionType_descriptor(), name, value);
}
enum Fbs3_237_CurrentgearType {
  Fbs3_237_CurrentgearType_CURRENTGEAR_P = 0,
  Fbs3_237_CurrentgearType_CURRENTGEAR_R = 1,
  Fbs3_237_CurrentgearType_CURRENTGEAR_N = 2,
  Fbs3_237_CurrentgearType_CURRENTGEAR_D = 3
};
bool Fbs3_237_CurrentgearType_IsValid(int value);
const Fbs3_237_CurrentgearType Fbs3_237_CurrentgearType_CurrentgearType_MIN = Fbs3_237_CurrentgearType_CURRENTGEAR_P;
const Fbs3_237_CurrentgearType Fbs3_237_CurrentgearType_CurrentgearType_MAX = Fbs3_237_CurrentgearType_CURRENTGEAR_D;
const int Fbs3_237_CurrentgearType_CurrentgearType_ARRAYSIZE = Fbs3_237_CurrentgearType_CurrentgearType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs3_237_CurrentgearType_descriptor();
inline const ::std::string& Fbs3_237_CurrentgearType_Name(Fbs3_237_CurrentgearType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs3_237_CurrentgearType_descriptor(), value);
}
inline bool Fbs3_237_CurrentgearType_Parse(
    const ::std::string& name, Fbs3_237_CurrentgearType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs3_237_CurrentgearType>(
    Fbs3_237_CurrentgearType_descriptor(), name, value);
}
enum Fbs3_237_Eps_streeingmodeType {
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL = 0,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_AUTOMATIC_AVAIL = 1,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL_FROM_DRVNTERFERENCE = 2,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL_FROM_EPS_FAILED_DETECTED = 3,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_TEMPORARY_INHIBITED = 4,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED1 = 5,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED2 = 6,
  Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED3 = 7
};
bool Fbs3_237_Eps_streeingmodeType_IsValid(int value);
const Fbs3_237_Eps_streeingmodeType Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_MIN = Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL;
const Fbs3_237_Eps_streeingmodeType Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_MAX = Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED3;
const int Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_ARRAYSIZE = Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs3_237_Eps_streeingmodeType_descriptor();
inline const ::std::string& Fbs3_237_Eps_streeingmodeType_Name(Fbs3_237_Eps_streeingmodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs3_237_Eps_streeingmodeType_descriptor(), value);
}
inline bool Fbs3_237_Eps_streeingmodeType_Parse(
    const ::std::string& name, Fbs3_237_Eps_streeingmodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs3_237_Eps_streeingmodeType>(
    Fbs3_237_Eps_streeingmodeType_descriptor(), name, value);
}
enum Fbs3_237_EpscurrmodType {
  Fbs3_237_EpscurrmodType_EPSCURRMOD_NORMAL_MODE = 0,
  Fbs3_237_EpscurrmodType_EPSCURRMOD_SPORT_MODE = 1,
  Fbs3_237_EpscurrmodType_EPSCURRMOD_COMFORT_MODE = 2,
  Fbs3_237_EpscurrmodType_EPSCURRMOD_MODESELECTIONNOTPOSSIBLE = 3,
  Fbs3_237_EpscurrmodType_EPSCURRMOD_NO_DISPLAY = 4,
  Fbs3_237_EpscurrmodType_EPSCURRMOD_CONDITIONNOTMEET = 5,
  Fbs3_237_EpscurrmodType_EPSCURRMOD_RESERVED1 = 6
};
bool Fbs3_237_EpscurrmodType_IsValid(int value);
const Fbs3_237_EpscurrmodType Fbs3_237_EpscurrmodType_EpscurrmodType_MIN = Fbs3_237_EpscurrmodType_EPSCURRMOD_NORMAL_MODE;
const Fbs3_237_EpscurrmodType Fbs3_237_EpscurrmodType_EpscurrmodType_MAX = Fbs3_237_EpscurrmodType_EPSCURRMOD_RESERVED1;
const int Fbs3_237_EpscurrmodType_EpscurrmodType_ARRAYSIZE = Fbs3_237_EpscurrmodType_EpscurrmodType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Fbs3_237_EpscurrmodType_descriptor();
inline const ::std::string& Fbs3_237_EpscurrmodType_Name(Fbs3_237_EpscurrmodType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Fbs3_237_EpscurrmodType_descriptor(), value);
}
inline bool Fbs3_237_EpscurrmodType_Parse(
    const ::std::string& name, Fbs3_237_EpscurrmodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Fbs3_237_EpscurrmodType>(
    Fbs3_237_EpscurrmodType_descriptor(), name, value);
}
enum Ads3_38e_Ads_bcm_workstsType {
  Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_DISABLE = 0,
  Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_ENABLE = 1,
  Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_ACTIVE = 2,
  Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_FAILED = 3
};
bool Ads3_38e_Ads_bcm_workstsType_IsValid(int value);
const Ads3_38e_Ads_bcm_workstsType Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_MIN = Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_DISABLE;
const Ads3_38e_Ads_bcm_workstsType Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_MAX = Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_FAILED;
const int Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_ARRAYSIZE = Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_Ads_bcm_workstsType_descriptor();
inline const ::std::string& Ads3_38e_Ads_bcm_workstsType_Name(Ads3_38e_Ads_bcm_workstsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_Ads_bcm_workstsType_descriptor(), value);
}
inline bool Ads3_38e_Ads_bcm_workstsType_Parse(
    const ::std::string& name, Ads3_38e_Ads_bcm_workstsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_Ads_bcm_workstsType>(
    Ads3_38e_Ads_bcm_workstsType_descriptor(), name, value);
}
enum Ads3_38e_Ads_bcmworkstsvalidType {
  Ads3_38e_Ads_bcmworkstsvalidType_ADS_BCMWORKSTSVALID_INVALID = 0,
  Ads3_38e_Ads_bcmworkstsvalidType_ADS_BCMWORKSTSVALID_VALID = 1
};
bool Ads3_38e_Ads_bcmworkstsvalidType_IsValid(int value);
const Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_MIN = Ads3_38e_Ads_bcmworkstsvalidType_ADS_BCMWORKSTSVALID_INVALID;
const Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_MAX = Ads3_38e_Ads_bcmworkstsvalidType_ADS_BCMWORKSTSVALID_VALID;
const int Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_ARRAYSIZE = Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_Ads_bcmworkstsvalidType_descriptor();
inline const ::std::string& Ads3_38e_Ads_bcmworkstsvalidType_Name(Ads3_38e_Ads_bcmworkstsvalidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_Ads_bcmworkstsvalidType_descriptor(), value);
}
inline bool Ads3_38e_Ads_bcmworkstsvalidType_Parse(
    const ::std::string& name, Ads3_38e_Ads_bcmworkstsvalidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_Ads_bcmworkstsvalidType>(
    Ads3_38e_Ads_bcmworkstsvalidType_descriptor(), name, value);
}
enum Ads3_38e_Ads_reqcontrolbcmType {
  Ads3_38e_Ads_reqcontrolbcmType_ADS_REQCONTROLBCM_NO_REQUEST = 0,
  Ads3_38e_Ads_reqcontrolbcmType_ADS_REQCONTROLBCM_REQUEST = 1
};
bool Ads3_38e_Ads_reqcontrolbcmType_IsValid(int value);
const Ads3_38e_Ads_reqcontrolbcmType Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_MIN = Ads3_38e_Ads_reqcontrolbcmType_ADS_REQCONTROLBCM_NO_REQUEST;
const Ads3_38e_Ads_reqcontrolbcmType Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_MAX = Ads3_38e_Ads_reqcontrolbcmType_ADS_REQCONTROLBCM_REQUEST;
const int Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_ARRAYSIZE = Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_Ads_reqcontrolbcmType_descriptor();
inline const ::std::string& Ads3_38e_Ads_reqcontrolbcmType_Name(Ads3_38e_Ads_reqcontrolbcmType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_Ads_reqcontrolbcmType_descriptor(), value);
}
inline bool Ads3_38e_Ads_reqcontrolbcmType_Parse(
    const ::std::string& name, Ads3_38e_Ads_reqcontrolbcmType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_Ads_reqcontrolbcmType>(
    Ads3_38e_Ads_reqcontrolbcmType_descriptor(), name, value);
}
enum Ads3_38e_HighbeamtonType {
  Ads3_38e_HighbeamtonType_HIGHBEAMTON_TURN_OFF = 0,
  Ads3_38e_HighbeamtonType_HIGHBEAMTON_TURN_ON = 1
};
bool Ads3_38e_HighbeamtonType_IsValid(int value);
const Ads3_38e_HighbeamtonType Ads3_38e_HighbeamtonType_HighbeamtonType_MIN = Ads3_38e_HighbeamtonType_HIGHBEAMTON_TURN_OFF;
const Ads3_38e_HighbeamtonType Ads3_38e_HighbeamtonType_HighbeamtonType_MAX = Ads3_38e_HighbeamtonType_HIGHBEAMTON_TURN_ON;
const int Ads3_38e_HighbeamtonType_HighbeamtonType_ARRAYSIZE = Ads3_38e_HighbeamtonType_HighbeamtonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_HighbeamtonType_descriptor();
inline const ::std::string& Ads3_38e_HighbeamtonType_Name(Ads3_38e_HighbeamtonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_HighbeamtonType_descriptor(), value);
}
inline bool Ads3_38e_HighbeamtonType_Parse(
    const ::std::string& name, Ads3_38e_HighbeamtonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_HighbeamtonType>(
    Ads3_38e_HighbeamtonType_descriptor(), name, value);
}
enum Ads3_38e_DippedbeamonType {
  Ads3_38e_DippedbeamonType_DIPPEDBEAMON_TURN_OFF = 0,
  Ads3_38e_DippedbeamonType_DIPPEDBEAMON_TURN_ON = 1
};
bool Ads3_38e_DippedbeamonType_IsValid(int value);
const Ads3_38e_DippedbeamonType Ads3_38e_DippedbeamonType_DippedbeamonType_MIN = Ads3_38e_DippedbeamonType_DIPPEDBEAMON_TURN_OFF;
const Ads3_38e_DippedbeamonType Ads3_38e_DippedbeamonType_DippedbeamonType_MAX = Ads3_38e_DippedbeamonType_DIPPEDBEAMON_TURN_ON;
const int Ads3_38e_DippedbeamonType_DippedbeamonType_ARRAYSIZE = Ads3_38e_DippedbeamonType_DippedbeamonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_DippedbeamonType_descriptor();
inline const ::std::string& Ads3_38e_DippedbeamonType_Name(Ads3_38e_DippedbeamonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_DippedbeamonType_descriptor(), value);
}
inline bool Ads3_38e_DippedbeamonType_Parse(
    const ::std::string& name, Ads3_38e_DippedbeamonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_DippedbeamonType>(
    Ads3_38e_DippedbeamonType_descriptor(), name, value);
}
enum Ads3_38e_TurnllightonType {
  Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_OFF = 0,
  Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_LEFT_ON = 1,
  Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_RIGHT_ON = 2,
  Ads3_38e_TurnllightonType_TURNLLIGHTON_RESERVED = 3
};
bool Ads3_38e_TurnllightonType_IsValid(int value);
const Ads3_38e_TurnllightonType Ads3_38e_TurnllightonType_TurnllightonType_MIN = Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_OFF;
const Ads3_38e_TurnllightonType Ads3_38e_TurnllightonType_TurnllightonType_MAX = Ads3_38e_TurnllightonType_TURNLLIGHTON_RESERVED;
const int Ads3_38e_TurnllightonType_TurnllightonType_ARRAYSIZE = Ads3_38e_TurnllightonType_TurnllightonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_TurnllightonType_descriptor();
inline const ::std::string& Ads3_38e_TurnllightonType_Name(Ads3_38e_TurnllightonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_TurnllightonType_descriptor(), value);
}
inline bool Ads3_38e_TurnllightonType_Parse(
    const ::std::string& name, Ads3_38e_TurnllightonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_TurnllightonType>(
    Ads3_38e_TurnllightonType_descriptor(), name, value);
}
enum Ads3_38e_EmergencylightonType {
  Ads3_38e_EmergencylightonType_EMERGENCYLIGHTON_TURN_OFF = 0,
  Ads3_38e_EmergencylightonType_EMERGENCYLIGHTON_TURN_ON = 1
};
bool Ads3_38e_EmergencylightonType_IsValid(int value);
const Ads3_38e_EmergencylightonType Ads3_38e_EmergencylightonType_EmergencylightonType_MIN = Ads3_38e_EmergencylightonType_EMERGENCYLIGHTON_TURN_OFF;
const Ads3_38e_EmergencylightonType Ads3_38e_EmergencylightonType_EmergencylightonType_MAX = Ads3_38e_EmergencylightonType_EMERGENCYLIGHTON_TURN_ON;
const int Ads3_38e_EmergencylightonType_EmergencylightonType_ARRAYSIZE = Ads3_38e_EmergencylightonType_EmergencylightonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_EmergencylightonType_descriptor();
inline const ::std::string& Ads3_38e_EmergencylightonType_Name(Ads3_38e_EmergencylightonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_EmergencylightonType_descriptor(), value);
}
inline bool Ads3_38e_EmergencylightonType_Parse(
    const ::std::string& name, Ads3_38e_EmergencylightonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_EmergencylightonType>(
    Ads3_38e_EmergencylightonType_descriptor(), name, value);
}
enum Ads3_38e_FfoglamponType {
  Ads3_38e_FfoglamponType_FFOGLAMPON_TURN_OFF = 0,
  Ads3_38e_FfoglamponType_FFOGLAMPON_TURN_ON = 1
};
bool Ads3_38e_FfoglamponType_IsValid(int value);
const Ads3_38e_FfoglamponType Ads3_38e_FfoglamponType_FfoglamponType_MIN = Ads3_38e_FfoglamponType_FFOGLAMPON_TURN_OFF;
const Ads3_38e_FfoglamponType Ads3_38e_FfoglamponType_FfoglamponType_MAX = Ads3_38e_FfoglamponType_FFOGLAMPON_TURN_ON;
const int Ads3_38e_FfoglamponType_FfoglamponType_ARRAYSIZE = Ads3_38e_FfoglamponType_FfoglamponType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_FfoglamponType_descriptor();
inline const ::std::string& Ads3_38e_FfoglamponType_Name(Ads3_38e_FfoglamponType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_FfoglamponType_descriptor(), value);
}
inline bool Ads3_38e_FfoglamponType_Parse(
    const ::std::string& name, Ads3_38e_FfoglamponType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_FfoglamponType>(
    Ads3_38e_FfoglamponType_descriptor(), name, value);
}
enum Ads3_38e_RfoglamponType {
  Ads3_38e_RfoglamponType_RFOGLAMPON_TURN_OFF = 0,
  Ads3_38e_RfoglamponType_RFOGLAMPON_TURN_ON = 1
};
bool Ads3_38e_RfoglamponType_IsValid(int value);
const Ads3_38e_RfoglamponType Ads3_38e_RfoglamponType_RfoglamponType_MIN = Ads3_38e_RfoglamponType_RFOGLAMPON_TURN_OFF;
const Ads3_38e_RfoglamponType Ads3_38e_RfoglamponType_RfoglamponType_MAX = Ads3_38e_RfoglamponType_RFOGLAMPON_TURN_ON;
const int Ads3_38e_RfoglamponType_RfoglamponType_ARRAYSIZE = Ads3_38e_RfoglamponType_RfoglamponType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_RfoglamponType_descriptor();
inline const ::std::string& Ads3_38e_RfoglamponType_Name(Ads3_38e_RfoglamponType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_RfoglamponType_descriptor(), value);
}
inline bool Ads3_38e_RfoglamponType_Parse(
    const ::std::string& name, Ads3_38e_RfoglamponType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_RfoglamponType>(
    Ads3_38e_RfoglamponType_descriptor(), name, value);
}
enum Ads3_38e_BrakelightType {
  Ads3_38e_BrakelightType_BRAKELIGHT_TURN_OFF = 0,
  Ads3_38e_BrakelightType_BRAKELIGHT_TURN_ON = 1
};
bool Ads3_38e_BrakelightType_IsValid(int value);
const Ads3_38e_BrakelightType Ads3_38e_BrakelightType_BrakelightType_MIN = Ads3_38e_BrakelightType_BRAKELIGHT_TURN_OFF;
const Ads3_38e_BrakelightType Ads3_38e_BrakelightType_BrakelightType_MAX = Ads3_38e_BrakelightType_BRAKELIGHT_TURN_ON;
const int Ads3_38e_BrakelightType_BrakelightType_ARRAYSIZE = Ads3_38e_BrakelightType_BrakelightType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_BrakelightType_descriptor();
inline const ::std::string& Ads3_38e_BrakelightType_Name(Ads3_38e_BrakelightType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_BrakelightType_descriptor(), value);
}
inline bool Ads3_38e_BrakelightType_Parse(
    const ::std::string& name, Ads3_38e_BrakelightType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_BrakelightType>(
    Ads3_38e_BrakelightType_descriptor(), name, value);
}
enum Ads3_38e_HornonType {
  Ads3_38e_HornonType_HORNON_TURN_OFF = 0,
  Ads3_38e_HornonType_HORNON_TURN_ON = 1
};
bool Ads3_38e_HornonType_IsValid(int value);
const Ads3_38e_HornonType Ads3_38e_HornonType_HornonType_MIN = Ads3_38e_HornonType_HORNON_TURN_OFF;
const Ads3_38e_HornonType Ads3_38e_HornonType_HornonType_MAX = Ads3_38e_HornonType_HORNON_TURN_ON;
const int Ads3_38e_HornonType_HornonType_ARRAYSIZE = Ads3_38e_HornonType_HornonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_HornonType_descriptor();
inline const ::std::string& Ads3_38e_HornonType_Name(Ads3_38e_HornonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_HornonType_descriptor(), value);
}
inline bool Ads3_38e_HornonType_Parse(
    const ::std::string& name, Ads3_38e_HornonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_HornonType>(
    Ads3_38e_HornonType_descriptor(), name, value);
}
enum Ads3_38e_FwindshieldwiperType {
  Ads3_38e_FwindshieldwiperType_FWINDSHIELDWIPER_TURN_OFF = 0,
  Ads3_38e_FwindshieldwiperType_FWINDSHIELDWIPER_TURN_ON = 1
};
bool Ads3_38e_FwindshieldwiperType_IsValid(int value);
const Ads3_38e_FwindshieldwiperType Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_MIN = Ads3_38e_FwindshieldwiperType_FWINDSHIELDWIPER_TURN_OFF;
const Ads3_38e_FwindshieldwiperType Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_MAX = Ads3_38e_FwindshieldwiperType_FWINDSHIELDWIPER_TURN_ON;
const int Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_ARRAYSIZE = Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_FwindshieldwiperType_descriptor();
inline const ::std::string& Ads3_38e_FwindshieldwiperType_Name(Ads3_38e_FwindshieldwiperType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_FwindshieldwiperType_descriptor(), value);
}
inline bool Ads3_38e_FwindshieldwiperType_Parse(
    const ::std::string& name, Ads3_38e_FwindshieldwiperType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_FwindshieldwiperType>(
    Ads3_38e_FwindshieldwiperType_descriptor(), name, value);
}
enum Ads3_38e_RwindshieldwiperType {
  Ads3_38e_RwindshieldwiperType_RWINDSHIELDWIPER_TURN_OFF = 0,
  Ads3_38e_RwindshieldwiperType_RWINDSHIELDWIPER_TURN_ON = 1
};
bool Ads3_38e_RwindshieldwiperType_IsValid(int value);
const Ads3_38e_RwindshieldwiperType Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_MIN = Ads3_38e_RwindshieldwiperType_RWINDSHIELDWIPER_TURN_OFF;
const Ads3_38e_RwindshieldwiperType Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_MAX = Ads3_38e_RwindshieldwiperType_RWINDSHIELDWIPER_TURN_ON;
const int Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_ARRAYSIZE = Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ads3_38e_RwindshieldwiperType_descriptor();
inline const ::std::string& Ads3_38e_RwindshieldwiperType_Name(Ads3_38e_RwindshieldwiperType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ads3_38e_RwindshieldwiperType_descriptor(), value);
}
inline bool Ads3_38e_RwindshieldwiperType_Parse(
    const ::std::string& name, Ads3_38e_RwindshieldwiperType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ads3_38e_RwindshieldwiperType>(
    Ads3_38e_RwindshieldwiperType_descriptor(), name, value);
}
// ===================================================================

class Ads_shifter_115 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Ads_shifter_115) */ {
 public:
  Ads_shifter_115();
  virtual ~Ads_shifter_115();

  Ads_shifter_115(const Ads_shifter_115& from);

  inline Ads_shifter_115& operator=(const Ads_shifter_115& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ads_shifter_115(Ads_shifter_115&& from) noexcept
    : Ads_shifter_115() {
    *this = ::std::move(from);
  }

  inline Ads_shifter_115& operator=(Ads_shifter_115&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ads_shifter_115& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ads_shifter_115* internal_default_instance() {
    return reinterpret_cast<const Ads_shifter_115*>(
               &_Ads_shifter_115_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Ads_shifter_115* other);
  friend void swap(Ads_shifter_115& a, Ads_shifter_115& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ads_shifter_115* New() const final {
    return CreateMaybeMessage<Ads_shifter_115>(NULL);
  }

  Ads_shifter_115* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ads_shifter_115>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ads_shifter_115& from);
  void MergeFrom(const Ads_shifter_115& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ads_shifter_115* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ads_shifter_115_Ads_shiftmodeType Ads_shiftmodeType;
  static const Ads_shiftmodeType ADS_SHIFTMODE_INVALID =
    Ads_shifter_115_Ads_shiftmodeType_ADS_SHIFTMODE_INVALID;
  static const Ads_shiftmodeType ADS_SHIFTMODE_VALID =
    Ads_shifter_115_Ads_shiftmodeType_ADS_SHIFTMODE_VALID;
  static inline bool Ads_shiftmodeType_IsValid(int value) {
    return Ads_shifter_115_Ads_shiftmodeType_IsValid(value);
  }
  static const Ads_shiftmodeType Ads_shiftmodeType_MIN =
    Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_MIN;
  static const Ads_shiftmodeType Ads_shiftmodeType_MAX =
    Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_MAX;
  static const int Ads_shiftmodeType_ARRAYSIZE =
    Ads_shifter_115_Ads_shiftmodeType_Ads_shiftmodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_shiftmodeType_descriptor() {
    return Ads_shifter_115_Ads_shiftmodeType_descriptor();
  }
  static inline const ::std::string& Ads_shiftmodeType_Name(Ads_shiftmodeType value) {
    return Ads_shifter_115_Ads_shiftmodeType_Name(value);
  }
  static inline bool Ads_shiftmodeType_Parse(const ::std::string& name,
      Ads_shiftmodeType* value) {
    return Ads_shifter_115_Ads_shiftmodeType_Parse(name, value);
  }

  typedef Ads_shifter_115_Ads_targetgearType Ads_targetgearType;
  static const Ads_targetgearType ADS_TARGETGEAR_N =
    Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_N;
  static const Ads_targetgearType ADS_TARGETGEAR_R =
    Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_R;
  static const Ads_targetgearType ADS_TARGETGEAR_P =
    Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_P;
  static const Ads_targetgearType ADS_TARGETGEAR_D =
    Ads_shifter_115_Ads_targetgearType_ADS_TARGETGEAR_D;
  static inline bool Ads_targetgearType_IsValid(int value) {
    return Ads_shifter_115_Ads_targetgearType_IsValid(value);
  }
  static const Ads_targetgearType Ads_targetgearType_MIN =
    Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_MIN;
  static const Ads_targetgearType Ads_targetgearType_MAX =
    Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_MAX;
  static const int Ads_targetgearType_ARRAYSIZE =
    Ads_shifter_115_Ads_targetgearType_Ads_targetgearType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_targetgearType_descriptor() {
    return Ads_shifter_115_Ads_targetgearType_descriptor();
  }
  static inline const ::std::string& Ads_targetgearType_Name(Ads_targetgearType value) {
    return Ads_shifter_115_Ads_targetgearType_Name(value);
  }
  static inline bool Ads_targetgearType_Parse(const ::std::string& name,
      Ads_targetgearType* value) {
    return Ads_shifter_115_Ads_targetgearType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Ads_shifter_115.Ads_shiftmodeType ads_shiftmode = 1;
  bool has_ads_shiftmode() const;
  void clear_ads_shiftmode();
  static const int kAdsShiftmodeFieldNumber = 1;
  ::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType ads_shiftmode() const;
  void set_ads_shiftmode(::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType value);

  // optional .apollo.canbus.Ads_shifter_115.Ads_targetgearType ads_targetgear = 2;
  bool has_ads_targetgear() const;
  void clear_ads_targetgear();
  static const int kAdsTargetgearFieldNumber = 2;
  ::apollo::canbus::Ads_shifter_115_Ads_targetgearType ads_targetgear() const;
  void set_ads_targetgear(::apollo::canbus::Ads_shifter_115_Ads_targetgearType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Ads_shifter_115)
 private:
  void set_has_ads_shiftmode();
  void clear_has_ads_shiftmode();
  void set_has_ads_targetgear();
  void clear_has_ads_targetgear();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int ads_shiftmode_;
  int ads_targetgear_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ads_eps_113 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Ads_eps_113) */ {
 public:
  Ads_eps_113();
  virtual ~Ads_eps_113();

  Ads_eps_113(const Ads_eps_113& from);

  inline Ads_eps_113& operator=(const Ads_eps_113& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ads_eps_113(Ads_eps_113&& from) noexcept
    : Ads_eps_113() {
    *this = ::std::move(from);
  }

  inline Ads_eps_113& operator=(Ads_eps_113&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ads_eps_113& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ads_eps_113* internal_default_instance() {
    return reinterpret_cast<const Ads_eps_113*>(
               &_Ads_eps_113_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Ads_eps_113* other);
  friend void swap(Ads_eps_113& a, Ads_eps_113& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ads_eps_113* New() const final {
    return CreateMaybeMessage<Ads_eps_113>(NULL);
  }

  Ads_eps_113* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ads_eps_113>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ads_eps_113& from);
  void MergeFrom(const Ads_eps_113& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ads_eps_113* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ads_eps_113_Ads_epsmodeType Ads_epsmodeType;
  static const Ads_epsmodeType ADS_EPSMODE_DISABLE =
    Ads_eps_113_Ads_epsmodeType_ADS_EPSMODE_DISABLE;
  static const Ads_epsmodeType ADS_EPSMODE_ACTIVE =
    Ads_eps_113_Ads_epsmodeType_ADS_EPSMODE_ACTIVE;
  static inline bool Ads_epsmodeType_IsValid(int value) {
    return Ads_eps_113_Ads_epsmodeType_IsValid(value);
  }
  static const Ads_epsmodeType Ads_epsmodeType_MIN =
    Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_MIN;
  static const Ads_epsmodeType Ads_epsmodeType_MAX =
    Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_MAX;
  static const int Ads_epsmodeType_ARRAYSIZE =
    Ads_eps_113_Ads_epsmodeType_Ads_epsmodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_epsmodeType_descriptor() {
    return Ads_eps_113_Ads_epsmodeType_descriptor();
  }
  static inline const ::std::string& Ads_epsmodeType_Name(Ads_epsmodeType value) {
    return Ads_eps_113_Ads_epsmodeType_Name(value);
  }
  static inline bool Ads_epsmodeType_Parse(const ::std::string& name,
      Ads_epsmodeType* value) {
    return Ads_eps_113_Ads_epsmodeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional double ads_reqepstargetangle = 2;
  bool has_ads_reqepstargetangle() const;
  void clear_ads_reqepstargetangle();
  static const int kAdsReqepstargetangleFieldNumber = 2;
  double ads_reqepstargetangle() const;
  void set_ads_reqepstargetangle(double value);

  // optional .apollo.canbus.Ads_eps_113.Ads_epsmodeType ads_epsmode = 1;
  bool has_ads_epsmode() const;
  void clear_ads_epsmode();
  static const int kAdsEpsmodeFieldNumber = 1;
  ::apollo::canbus::Ads_eps_113_Ads_epsmodeType ads_epsmode() const;
  void set_ads_epsmode(::apollo::canbus::Ads_eps_113_Ads_epsmodeType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Ads_eps_113)
 private:
  void set_has_ads_epsmode();
  void clear_has_ads_epsmode();
  void set_has_ads_reqepstargetangle();
  void clear_has_ads_reqepstargetangle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double ads_reqepstargetangle_;
  int ads_epsmode_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Status_310 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Status_310) */ {
 public:
  Status_310();
  virtual ~Status_310();

  Status_310(const Status_310& from);

  inline Status_310& operator=(const Status_310& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Status_310(Status_310&& from) noexcept
    : Status_310() {
    *this = ::std::move(from);
  }

  inline Status_310& operator=(Status_310&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Status_310& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Status_310* internal_default_instance() {
    return reinterpret_cast<const Status_310*>(
               &_Status_310_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Status_310* other);
  friend void swap(Status_310& a, Status_310& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Status_310* New() const final {
    return CreateMaybeMessage<Status_310>(NULL);
  }

  Status_310* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Status_310>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Status_310& from);
  void MergeFrom(const Status_310& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Status_310* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Status_310_LongitudeaccvalidType LongitudeaccvalidType;
  static const LongitudeaccvalidType LONGITUDEACCVALID_INVALID =
    Status_310_LongitudeaccvalidType_LONGITUDEACCVALID_INVALID;
  static const LongitudeaccvalidType LONGITUDEACCVALID_VALID =
    Status_310_LongitudeaccvalidType_LONGITUDEACCVALID_VALID;
  static inline bool LongitudeaccvalidType_IsValid(int value) {
    return Status_310_LongitudeaccvalidType_IsValid(value);
  }
  static const LongitudeaccvalidType LongitudeaccvalidType_MIN =
    Status_310_LongitudeaccvalidType_LongitudeaccvalidType_MIN;
  static const LongitudeaccvalidType LongitudeaccvalidType_MAX =
    Status_310_LongitudeaccvalidType_LongitudeaccvalidType_MAX;
  static const int LongitudeaccvalidType_ARRAYSIZE =
    Status_310_LongitudeaccvalidType_LongitudeaccvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LongitudeaccvalidType_descriptor() {
    return Status_310_LongitudeaccvalidType_descriptor();
  }
  static inline const ::std::string& LongitudeaccvalidType_Name(LongitudeaccvalidType value) {
    return Status_310_LongitudeaccvalidType_Name(value);
  }
  static inline bool LongitudeaccvalidType_Parse(const ::std::string& name,
      LongitudeaccvalidType* value) {
    return Status_310_LongitudeaccvalidType_Parse(name, value);
  }

  typedef Status_310_LateralaccevalidType LateralaccevalidType;
  static const LateralaccevalidType LATERALACCEVALID_INVALID =
    Status_310_LateralaccevalidType_LATERALACCEVALID_INVALID;
  static const LateralaccevalidType LATERALACCEVALID_VALID =
    Status_310_LateralaccevalidType_LATERALACCEVALID_VALID;
  static inline bool LateralaccevalidType_IsValid(int value) {
    return Status_310_LateralaccevalidType_IsValid(value);
  }
  static const LateralaccevalidType LateralaccevalidType_MIN =
    Status_310_LateralaccevalidType_LateralaccevalidType_MIN;
  static const LateralaccevalidType LateralaccevalidType_MAX =
    Status_310_LateralaccevalidType_LateralaccevalidType_MAX;
  static const int LateralaccevalidType_ARRAYSIZE =
    Status_310_LateralaccevalidType_LateralaccevalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LateralaccevalidType_descriptor() {
    return Status_310_LateralaccevalidType_descriptor();
  }
  static inline const ::std::string& LateralaccevalidType_Name(LateralaccevalidType value) {
    return Status_310_LateralaccevalidType_Name(value);
  }
  static inline bool LateralaccevalidType_Parse(const ::std::string& name,
      LateralaccevalidType* value) {
    return Status_310_LateralaccevalidType_Parse(name, value);
  }

  typedef Status_310_VehdynyawratevalidType VehdynyawratevalidType;
  static const VehdynyawratevalidType VEHDYNYAWRATEVALID_INVALID =
    Status_310_VehdynyawratevalidType_VEHDYNYAWRATEVALID_INVALID;
  static const VehdynyawratevalidType VEHDYNYAWRATEVALID_VALID =
    Status_310_VehdynyawratevalidType_VEHDYNYAWRATEVALID_VALID;
  static inline bool VehdynyawratevalidType_IsValid(int value) {
    return Status_310_VehdynyawratevalidType_IsValid(value);
  }
  static const VehdynyawratevalidType VehdynyawratevalidType_MIN =
    Status_310_VehdynyawratevalidType_VehdynyawratevalidType_MIN;
  static const VehdynyawratevalidType VehdynyawratevalidType_MAX =
    Status_310_VehdynyawratevalidType_VehdynyawratevalidType_MAX;
  static const int VehdynyawratevalidType_ARRAYSIZE =
    Status_310_VehdynyawratevalidType_VehdynyawratevalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VehdynyawratevalidType_descriptor() {
    return Status_310_VehdynyawratevalidType_descriptor();
  }
  static inline const ::std::string& VehdynyawratevalidType_Name(VehdynyawratevalidType value) {
    return Status_310_VehdynyawratevalidType_Name(value);
  }
  static inline bool VehdynyawratevalidType_Parse(const ::std::string& name,
      VehdynyawratevalidType* value) {
    return Status_310_VehdynyawratevalidType_Parse(name, value);
  }

  typedef Status_310_FlwheelspdvalidType FlwheelspdvalidType;
  static const FlwheelspdvalidType FLWHEELSPDVALID_INVALID =
    Status_310_FlwheelspdvalidType_FLWHEELSPDVALID_INVALID;
  static const FlwheelspdvalidType FLWHEELSPDVALID_VALID =
    Status_310_FlwheelspdvalidType_FLWHEELSPDVALID_VALID;
  static inline bool FlwheelspdvalidType_IsValid(int value) {
    return Status_310_FlwheelspdvalidType_IsValid(value);
  }
  static const FlwheelspdvalidType FlwheelspdvalidType_MIN =
    Status_310_FlwheelspdvalidType_FlwheelspdvalidType_MIN;
  static const FlwheelspdvalidType FlwheelspdvalidType_MAX =
    Status_310_FlwheelspdvalidType_FlwheelspdvalidType_MAX;
  static const int FlwheelspdvalidType_ARRAYSIZE =
    Status_310_FlwheelspdvalidType_FlwheelspdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FlwheelspdvalidType_descriptor() {
    return Status_310_FlwheelspdvalidType_descriptor();
  }
  static inline const ::std::string& FlwheelspdvalidType_Name(FlwheelspdvalidType value) {
    return Status_310_FlwheelspdvalidType_Name(value);
  }
  static inline bool FlwheelspdvalidType_Parse(const ::std::string& name,
      FlwheelspdvalidType* value) {
    return Status_310_FlwheelspdvalidType_Parse(name, value);
  }

  typedef Status_310_FrwheelspdvalidType FrwheelspdvalidType;
  static const FrwheelspdvalidType FRWHEELSPDVALID_INVALID =
    Status_310_FrwheelspdvalidType_FRWHEELSPDVALID_INVALID;
  static const FrwheelspdvalidType FRWHEELSPDVALID_VALID =
    Status_310_FrwheelspdvalidType_FRWHEELSPDVALID_VALID;
  static inline bool FrwheelspdvalidType_IsValid(int value) {
    return Status_310_FrwheelspdvalidType_IsValid(value);
  }
  static const FrwheelspdvalidType FrwheelspdvalidType_MIN =
    Status_310_FrwheelspdvalidType_FrwheelspdvalidType_MIN;
  static const FrwheelspdvalidType FrwheelspdvalidType_MAX =
    Status_310_FrwheelspdvalidType_FrwheelspdvalidType_MAX;
  static const int FrwheelspdvalidType_ARRAYSIZE =
    Status_310_FrwheelspdvalidType_FrwheelspdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FrwheelspdvalidType_descriptor() {
    return Status_310_FrwheelspdvalidType_descriptor();
  }
  static inline const ::std::string& FrwheelspdvalidType_Name(FrwheelspdvalidType value) {
    return Status_310_FrwheelspdvalidType_Name(value);
  }
  static inline bool FrwheelspdvalidType_Parse(const ::std::string& name,
      FrwheelspdvalidType* value) {
    return Status_310_FrwheelspdvalidType_Parse(name, value);
  }

  typedef Status_310_RlwheelspdvalidType RlwheelspdvalidType;
  static const RlwheelspdvalidType RLWHEELSPDVALID_INVALID =
    Status_310_RlwheelspdvalidType_RLWHEELSPDVALID_INVALID;
  static const RlwheelspdvalidType RLWHEELSPDVALID_VALID =
    Status_310_RlwheelspdvalidType_RLWHEELSPDVALID_VALID;
  static inline bool RlwheelspdvalidType_IsValid(int value) {
    return Status_310_RlwheelspdvalidType_IsValid(value);
  }
  static const RlwheelspdvalidType RlwheelspdvalidType_MIN =
    Status_310_RlwheelspdvalidType_RlwheelspdvalidType_MIN;
  static const RlwheelspdvalidType RlwheelspdvalidType_MAX =
    Status_310_RlwheelspdvalidType_RlwheelspdvalidType_MAX;
  static const int RlwheelspdvalidType_ARRAYSIZE =
    Status_310_RlwheelspdvalidType_RlwheelspdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RlwheelspdvalidType_descriptor() {
    return Status_310_RlwheelspdvalidType_descriptor();
  }
  static inline const ::std::string& RlwheelspdvalidType_Name(RlwheelspdvalidType value) {
    return Status_310_RlwheelspdvalidType_Name(value);
  }
  static inline bool RlwheelspdvalidType_Parse(const ::std::string& name,
      RlwheelspdvalidType* value) {
    return Status_310_RlwheelspdvalidType_Parse(name, value);
  }

  typedef Status_310_RrwheelspdvalidType RrwheelspdvalidType;
  static const RrwheelspdvalidType RRWHEELSPDVALID_INVALID =
    Status_310_RrwheelspdvalidType_RRWHEELSPDVALID_INVALID;
  static const RrwheelspdvalidType RRWHEELSPDVALID_VALID =
    Status_310_RrwheelspdvalidType_RRWHEELSPDVALID_VALID;
  static inline bool RrwheelspdvalidType_IsValid(int value) {
    return Status_310_RrwheelspdvalidType_IsValid(value);
  }
  static const RrwheelspdvalidType RrwheelspdvalidType_MIN =
    Status_310_RrwheelspdvalidType_RrwheelspdvalidType_MIN;
  static const RrwheelspdvalidType RrwheelspdvalidType_MAX =
    Status_310_RrwheelspdvalidType_RrwheelspdvalidType_MAX;
  static const int RrwheelspdvalidType_ARRAYSIZE =
    Status_310_RrwheelspdvalidType_RrwheelspdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RrwheelspdvalidType_descriptor() {
    return Status_310_RrwheelspdvalidType_descriptor();
  }
  static inline const ::std::string& RrwheelspdvalidType_Name(RrwheelspdvalidType value) {
    return Status_310_RrwheelspdvalidType_Name(value);
  }
  static inline bool RrwheelspdvalidType_Parse(const ::std::string& name,
      RrwheelspdvalidType* value) {
    return Status_310_RrwheelspdvalidType_Parse(name, value);
  }

  typedef Status_310_VehiclespdvalidType VehiclespdvalidType;
  static const VehiclespdvalidType VEHICLESPDVALID_INVALID =
    Status_310_VehiclespdvalidType_VEHICLESPDVALID_INVALID;
  static const VehiclespdvalidType VEHICLESPDVALID_VALID =
    Status_310_VehiclespdvalidType_VEHICLESPDVALID_VALID;
  static inline bool VehiclespdvalidType_IsValid(int value) {
    return Status_310_VehiclespdvalidType_IsValid(value);
  }
  static const VehiclespdvalidType VehiclespdvalidType_MIN =
    Status_310_VehiclespdvalidType_VehiclespdvalidType_MIN;
  static const VehiclespdvalidType VehiclespdvalidType_MAX =
    Status_310_VehiclespdvalidType_VehiclespdvalidType_MAX;
  static const int VehiclespdvalidType_ARRAYSIZE =
    Status_310_VehiclespdvalidType_VehiclespdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VehiclespdvalidType_descriptor() {
    return Status_310_VehiclespdvalidType_descriptor();
  }
  static inline const ::std::string& VehiclespdvalidType_Name(VehiclespdvalidType value) {
    return Status_310_VehiclespdvalidType_Name(value);
  }
  static inline bool VehiclespdvalidType_Parse(const ::std::string& name,
      VehiclespdvalidType* value) {
    return Status_310_VehiclespdvalidType_Parse(name, value);
  }

  typedef Status_310_LongitudedrivingmodeType LongitudedrivingmodeType;
  static const LongitudedrivingmodeType LONGITUDEDRIVINGMODE_MANUALMODE =
    Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_MANUALMODE;
  static const LongitudedrivingmodeType LONGITUDEDRIVINGMODE_AUTOMATICSTANDBY =
    Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICSTANDBY;
  static const LongitudedrivingmodeType LONGITUDEDRIVINGMODE_AUTOMATICACCELERATION =
    Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICACCELERATION;
  static const LongitudedrivingmodeType LONGITUDEDRIVINGMODE_AUTOMATICDECELERATION =
    Status_310_LongitudedrivingmodeType_LONGITUDEDRIVINGMODE_AUTOMATICDECELERATION;
  static inline bool LongitudedrivingmodeType_IsValid(int value) {
    return Status_310_LongitudedrivingmodeType_IsValid(value);
  }
  static const LongitudedrivingmodeType LongitudedrivingmodeType_MIN =
    Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_MIN;
  static const LongitudedrivingmodeType LongitudedrivingmodeType_MAX =
    Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_MAX;
  static const int LongitudedrivingmodeType_ARRAYSIZE =
    Status_310_LongitudedrivingmodeType_LongitudedrivingmodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LongitudedrivingmodeType_descriptor() {
    return Status_310_LongitudedrivingmodeType_descriptor();
  }
  static inline const ::std::string& LongitudedrivingmodeType_Name(LongitudedrivingmodeType value) {
    return Status_310_LongitudedrivingmodeType_Name(value);
  }
  static inline bool LongitudedrivingmodeType_Parse(const ::std::string& name,
      LongitudedrivingmodeType* value) {
    return Status_310_LongitudedrivingmodeType_Parse(name, value);
  }

  typedef Status_310_EngspdvalidType EngspdvalidType;
  static const EngspdvalidType ENGSPDVALID_INVALID =
    Status_310_EngspdvalidType_ENGSPDVALID_INVALID;
  static const EngspdvalidType ENGSPDVALID_VALID =
    Status_310_EngspdvalidType_ENGSPDVALID_VALID;
  static const EngspdvalidType ENGSPDVALID_INIT_VALUE =
    Status_310_EngspdvalidType_ENGSPDVALID_INIT_VALUE;
  static const EngspdvalidType ENGSPDVALID_RESERVED =
    Status_310_EngspdvalidType_ENGSPDVALID_RESERVED;
  static inline bool EngspdvalidType_IsValid(int value) {
    return Status_310_EngspdvalidType_IsValid(value);
  }
  static const EngspdvalidType EngspdvalidType_MIN =
    Status_310_EngspdvalidType_EngspdvalidType_MIN;
  static const EngspdvalidType EngspdvalidType_MAX =
    Status_310_EngspdvalidType_EngspdvalidType_MAX;
  static const int EngspdvalidType_ARRAYSIZE =
    Status_310_EngspdvalidType_EngspdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EngspdvalidType_descriptor() {
    return Status_310_EngspdvalidType_descriptor();
  }
  static inline const ::std::string& EngspdvalidType_Name(EngspdvalidType value) {
    return Status_310_EngspdvalidType_Name(value);
  }
  static inline bool EngspdvalidType_Parse(const ::std::string& name,
      EngspdvalidType* value) {
    return Status_310_EngspdvalidType_Parse(name, value);
  }

  typedef Status_310_AccepedaloverrideType AccepedaloverrideType;
  static const AccepedaloverrideType ACCEPEDALOVERRIDE_NOT_OVERRIDE =
    Status_310_AccepedaloverrideType_ACCEPEDALOVERRIDE_NOT_OVERRIDE;
  static const AccepedaloverrideType ACCEPEDALOVERRIDE_OVERRIDE =
    Status_310_AccepedaloverrideType_ACCEPEDALOVERRIDE_OVERRIDE;
  static inline bool AccepedaloverrideType_IsValid(int value) {
    return Status_310_AccepedaloverrideType_IsValid(value);
  }
  static const AccepedaloverrideType AccepedaloverrideType_MIN =
    Status_310_AccepedaloverrideType_AccepedaloverrideType_MIN;
  static const AccepedaloverrideType AccepedaloverrideType_MAX =
    Status_310_AccepedaloverrideType_AccepedaloverrideType_MAX;
  static const int AccepedaloverrideType_ARRAYSIZE =
    Status_310_AccepedaloverrideType_AccepedaloverrideType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AccepedaloverrideType_descriptor() {
    return Status_310_AccepedaloverrideType_descriptor();
  }
  static inline const ::std::string& AccepedaloverrideType_Name(AccepedaloverrideType value) {
    return Status_310_AccepedaloverrideType_Name(value);
  }
  static inline bool AccepedaloverrideType_Parse(const ::std::string& name,
      AccepedaloverrideType* value) {
    return Status_310_AccepedaloverrideType_Parse(name, value);
  }

  typedef Status_310_BrakepedalstatusType BrakepedalstatusType;
  static const BrakepedalstatusType BRAKEPEDALSTATUS_NOT_PRESSED =
    Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_NOT_PRESSED;
  static const BrakepedalstatusType BRAKEPEDALSTATUS_PRESSED =
    Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_PRESSED;
  static const BrakepedalstatusType BRAKEPEDALSTATUS_RESERVED1 =
    Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_RESERVED1;
  static const BrakepedalstatusType BRAKEPEDALSTATUS_ERROR =
    Status_310_BrakepedalstatusType_BRAKEPEDALSTATUS_ERROR;
  static inline bool BrakepedalstatusType_IsValid(int value) {
    return Status_310_BrakepedalstatusType_IsValid(value);
  }
  static const BrakepedalstatusType BrakepedalstatusType_MIN =
    Status_310_BrakepedalstatusType_BrakepedalstatusType_MIN;
  static const BrakepedalstatusType BrakepedalstatusType_MAX =
    Status_310_BrakepedalstatusType_BrakepedalstatusType_MAX;
  static const int BrakepedalstatusType_ARRAYSIZE =
    Status_310_BrakepedalstatusType_BrakepedalstatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BrakepedalstatusType_descriptor() {
    return Status_310_BrakepedalstatusType_descriptor();
  }
  static inline const ::std::string& BrakepedalstatusType_Name(BrakepedalstatusType value) {
    return Status_310_BrakepedalstatusType_Name(value);
  }
  static inline bool BrakepedalstatusType_Parse(const ::std::string& name,
      BrakepedalstatusType* value) {
    return Status_310_BrakepedalstatusType_Parse(name, value);
  }

  typedef Status_310_EspbrakelightstsType EspbrakelightstsType;
  static const EspbrakelightstsType ESPBRAKELIGHTSTS_OFF =
    Status_310_EspbrakelightstsType_ESPBRAKELIGHTSTS_OFF;
  static const EspbrakelightstsType ESPBRAKELIGHTSTS_ON =
    Status_310_EspbrakelightstsType_ESPBRAKELIGHTSTS_ON;
  static inline bool EspbrakelightstsType_IsValid(int value) {
    return Status_310_EspbrakelightstsType_IsValid(value);
  }
  static const EspbrakelightstsType EspbrakelightstsType_MIN =
    Status_310_EspbrakelightstsType_EspbrakelightstsType_MIN;
  static const EspbrakelightstsType EspbrakelightstsType_MAX =
    Status_310_EspbrakelightstsType_EspbrakelightstsType_MAX;
  static const int EspbrakelightstsType_ARRAYSIZE =
    Status_310_EspbrakelightstsType_EspbrakelightstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EspbrakelightstsType_descriptor() {
    return Status_310_EspbrakelightstsType_descriptor();
  }
  static inline const ::std::string& EspbrakelightstsType_Name(EspbrakelightstsType value) {
    return Status_310_EspbrakelightstsType_Name(value);
  }
  static inline bool EspbrakelightstsType_Parse(const ::std::string& name,
      EspbrakelightstsType* value) {
    return Status_310_EspbrakelightstsType_Parse(name, value);
  }

  typedef Status_310_EpbswtpositionvalidType EpbswtpositionvalidType;
  static const EpbswtpositionvalidType EPBSWTPOSITIONVALID_VALID =
    Status_310_EpbswtpositionvalidType_EPBSWTPOSITIONVALID_VALID;
  static const EpbswtpositionvalidType EPBSWTPOSITIONVALID_NOT_VALID =
    Status_310_EpbswtpositionvalidType_EPBSWTPOSITIONVALID_NOT_VALID;
  static inline bool EpbswtpositionvalidType_IsValid(int value) {
    return Status_310_EpbswtpositionvalidType_IsValid(value);
  }
  static const EpbswtpositionvalidType EpbswtpositionvalidType_MIN =
    Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_MIN;
  static const EpbswtpositionvalidType EpbswtpositionvalidType_MAX =
    Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_MAX;
  static const int EpbswtpositionvalidType_ARRAYSIZE =
    Status_310_EpbswtpositionvalidType_EpbswtpositionvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpbswtpositionvalidType_descriptor() {
    return Status_310_EpbswtpositionvalidType_descriptor();
  }
  static inline const ::std::string& EpbswtpositionvalidType_Name(EpbswtpositionvalidType value) {
    return Status_310_EpbswtpositionvalidType_Name(value);
  }
  static inline bool EpbswtpositionvalidType_Parse(const ::std::string& name,
      EpbswtpositionvalidType* value) {
    return Status_310_EpbswtpositionvalidType_Parse(name, value);
  }

  typedef Status_310_EpbstsType EpbstsType;
  static const EpbstsType EPBSTS_RELEASED =
    Status_310_EpbstsType_EPBSTS_RELEASED;
  static const EpbstsType EPBSTS_CLOSED =
    Status_310_EpbstsType_EPBSTS_CLOSED;
  static const EpbstsType EPBSTS_IN_PROGRESS =
    Status_310_EpbstsType_EPBSTS_IN_PROGRESS;
  static const EpbstsType EPBSTS_UNKNOWN =
    Status_310_EpbstsType_EPBSTS_UNKNOWN;
  static inline bool EpbstsType_IsValid(int value) {
    return Status_310_EpbstsType_IsValid(value);
  }
  static const EpbstsType EpbstsType_MIN =
    Status_310_EpbstsType_EpbstsType_MIN;
  static const EpbstsType EpbstsType_MAX =
    Status_310_EpbstsType_EpbstsType_MAX;
  static const int EpbstsType_ARRAYSIZE =
    Status_310_EpbstsType_EpbstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpbstsType_descriptor() {
    return Status_310_EpbstsType_descriptor();
  }
  static inline const ::std::string& EpbstsType_Name(EpbstsType value) {
    return Status_310_EpbstsType_Name(value);
  }
  static inline bool EpbstsType_Parse(const ::std::string& name,
      EpbstsType* value) {
    return Status_310_EpbstsType_Parse(name, value);
  }

  typedef Status_310_CurrentgearvalidType CurrentgearvalidType;
  static const CurrentgearvalidType CURRENTGEARVALID_INVALID =
    Status_310_CurrentgearvalidType_CURRENTGEARVALID_INVALID;
  static const CurrentgearvalidType CURRENTGEARVALID_VALID =
    Status_310_CurrentgearvalidType_CURRENTGEARVALID_VALID;
  static inline bool CurrentgearvalidType_IsValid(int value) {
    return Status_310_CurrentgearvalidType_IsValid(value);
  }
  static const CurrentgearvalidType CurrentgearvalidType_MIN =
    Status_310_CurrentgearvalidType_CurrentgearvalidType_MIN;
  static const CurrentgearvalidType CurrentgearvalidType_MAX =
    Status_310_CurrentgearvalidType_CurrentgearvalidType_MAX;
  static const int CurrentgearvalidType_ARRAYSIZE =
    Status_310_CurrentgearvalidType_CurrentgearvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CurrentgearvalidType_descriptor() {
    return Status_310_CurrentgearvalidType_descriptor();
  }
  static inline const ::std::string& CurrentgearvalidType_Name(CurrentgearvalidType value) {
    return Status_310_CurrentgearvalidType_Name(value);
  }
  static inline bool CurrentgearvalidType_Parse(const ::std::string& name,
      CurrentgearvalidType* value) {
    return Status_310_CurrentgearvalidType_Parse(name, value);
  }

  typedef Status_310_EpstrqsnsrstsType EpstrqsnsrstsType;
  static const EpstrqsnsrstsType EPSTRQSNSRSTS_NORMAL =
    Status_310_EpstrqsnsrstsType_EPSTRQSNSRSTS_NORMAL;
  static const EpstrqsnsrstsType EPSTRQSNSRSTS_ABNORMAL =
    Status_310_EpstrqsnsrstsType_EPSTRQSNSRSTS_ABNORMAL;
  static inline bool EpstrqsnsrstsType_IsValid(int value) {
    return Status_310_EpstrqsnsrstsType_IsValid(value);
  }
  static const EpstrqsnsrstsType EpstrqsnsrstsType_MIN =
    Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_MIN;
  static const EpstrqsnsrstsType EpstrqsnsrstsType_MAX =
    Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_MAX;
  static const int EpstrqsnsrstsType_ARRAYSIZE =
    Status_310_EpstrqsnsrstsType_EpstrqsnsrstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpstrqsnsrstsType_descriptor() {
    return Status_310_EpstrqsnsrstsType_descriptor();
  }
  static inline const ::std::string& EpstrqsnsrstsType_Name(EpstrqsnsrstsType value) {
    return Status_310_EpstrqsnsrstsType_Name(value);
  }
  static inline bool EpstrqsnsrstsType_Parse(const ::std::string& name,
      EpstrqsnsrstsType* value) {
    return Status_310_EpstrqsnsrstsType_Parse(name, value);
  }

  typedef Status_310_Eps_interferdetdvalidType Eps_interferdetdvalidType;
  static const Eps_interferdetdvalidType EPS_INTERFERDETDVALID_INVALID =
    Status_310_Eps_interferdetdvalidType_EPS_INTERFERDETDVALID_INVALID;
  static const Eps_interferdetdvalidType EPS_INTERFERDETDVALID_VALID =
    Status_310_Eps_interferdetdvalidType_EPS_INTERFERDETDVALID_VALID;
  static inline bool Eps_interferdetdvalidType_IsValid(int value) {
    return Status_310_Eps_interferdetdvalidType_IsValid(value);
  }
  static const Eps_interferdetdvalidType Eps_interferdetdvalidType_MIN =
    Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_MIN;
  static const Eps_interferdetdvalidType Eps_interferdetdvalidType_MAX =
    Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_MAX;
  static const int Eps_interferdetdvalidType_ARRAYSIZE =
    Status_310_Eps_interferdetdvalidType_Eps_interferdetdvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Eps_interferdetdvalidType_descriptor() {
    return Status_310_Eps_interferdetdvalidType_descriptor();
  }
  static inline const ::std::string& Eps_interferdetdvalidType_Name(Eps_interferdetdvalidType value) {
    return Status_310_Eps_interferdetdvalidType_Name(value);
  }
  static inline bool Eps_interferdetdvalidType_Parse(const ::std::string& name,
      Eps_interferdetdvalidType* value) {
    return Status_310_Eps_interferdetdvalidType_Parse(name, value);
  }

  typedef Status_310_EpshandsdetnstsType EpshandsdetnstsType;
  static const EpshandsdetnstsType EPSHANDSDETNSTS_HANDSOFF_NOT_DETECTED =
    Status_310_EpshandsdetnstsType_EPSHANDSDETNSTS_HANDSOFF_NOT_DETECTED;
  static const EpshandsdetnstsType EPSHANDSDETNSTS_HANDOFFF_DETECTED =
    Status_310_EpshandsdetnstsType_EPSHANDSDETNSTS_HANDOFFF_DETECTED;
  static inline bool EpshandsdetnstsType_IsValid(int value) {
    return Status_310_EpshandsdetnstsType_IsValid(value);
  }
  static const EpshandsdetnstsType EpshandsdetnstsType_MIN =
    Status_310_EpshandsdetnstsType_EpshandsdetnstsType_MIN;
  static const EpshandsdetnstsType EpshandsdetnstsType_MAX =
    Status_310_EpshandsdetnstsType_EpshandsdetnstsType_MAX;
  static const int EpshandsdetnstsType_ARRAYSIZE =
    Status_310_EpshandsdetnstsType_EpshandsdetnstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpshandsdetnstsType_descriptor() {
    return Status_310_EpshandsdetnstsType_descriptor();
  }
  static inline const ::std::string& EpshandsdetnstsType_Name(EpshandsdetnstsType value) {
    return Status_310_EpshandsdetnstsType_Name(value);
  }
  static inline bool EpshandsdetnstsType_Parse(const ::std::string& name,
      EpshandsdetnstsType* value) {
    return Status_310_EpshandsdetnstsType_Parse(name, value);
  }

  typedef Status_310_Eps_handsdetnstsvalidType Eps_handsdetnstsvalidType;
  static const Eps_handsdetnstsvalidType EPS_HANDSDETNSTSVALID_INVALID =
    Status_310_Eps_handsdetnstsvalidType_EPS_HANDSDETNSTSVALID_INVALID;
  static const Eps_handsdetnstsvalidType EPS_HANDSDETNSTSVALID_VALID =
    Status_310_Eps_handsdetnstsvalidType_EPS_HANDSDETNSTSVALID_VALID;
  static inline bool Eps_handsdetnstsvalidType_IsValid(int value) {
    return Status_310_Eps_handsdetnstsvalidType_IsValid(value);
  }
  static const Eps_handsdetnstsvalidType Eps_handsdetnstsvalidType_MIN =
    Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_MIN;
  static const Eps_handsdetnstsvalidType Eps_handsdetnstsvalidType_MAX =
    Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_MAX;
  static const int Eps_handsdetnstsvalidType_ARRAYSIZE =
    Status_310_Eps_handsdetnstsvalidType_Eps_handsdetnstsvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Eps_handsdetnstsvalidType_descriptor() {
    return Status_310_Eps_handsdetnstsvalidType_descriptor();
  }
  static inline const ::std::string& Eps_handsdetnstsvalidType_Name(Eps_handsdetnstsvalidType value) {
    return Status_310_Eps_handsdetnstsvalidType_Name(value);
  }
  static inline bool Eps_handsdetnstsvalidType_Parse(const ::std::string& name,
      Eps_handsdetnstsvalidType* value) {
    return Status_310_Eps_handsdetnstsvalidType_Parse(name, value);
  }

  typedef Status_310_SteerwheelanglesignType SteerwheelanglesignType;
  static const SteerwheelanglesignType STEERWHEELANGLESIGN_LEFT_POSITIVE =
    Status_310_SteerwheelanglesignType_STEERWHEELANGLESIGN_LEFT_POSITIVE;
  static const SteerwheelanglesignType STEERWHEELANGLESIGN_RIGHT_NEGATIVE =
    Status_310_SteerwheelanglesignType_STEERWHEELANGLESIGN_RIGHT_NEGATIVE;
  static inline bool SteerwheelanglesignType_IsValid(int value) {
    return Status_310_SteerwheelanglesignType_IsValid(value);
  }
  static const SteerwheelanglesignType SteerwheelanglesignType_MIN =
    Status_310_SteerwheelanglesignType_SteerwheelanglesignType_MIN;
  static const SteerwheelanglesignType SteerwheelanglesignType_MAX =
    Status_310_SteerwheelanglesignType_SteerwheelanglesignType_MAX;
  static const int SteerwheelanglesignType_ARRAYSIZE =
    Status_310_SteerwheelanglesignType_SteerwheelanglesignType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SteerwheelanglesignType_descriptor() {
    return Status_310_SteerwheelanglesignType_descriptor();
  }
  static inline const ::std::string& SteerwheelanglesignType_Name(SteerwheelanglesignType value) {
    return Status_310_SteerwheelanglesignType_Name(value);
  }
  static inline bool SteerwheelanglesignType_Parse(const ::std::string& name,
      SteerwheelanglesignType* value) {
    return Status_310_SteerwheelanglesignType_Parse(name, value);
  }

  typedef Status_310_SteerwheelspdsignType SteerwheelspdsignType;
  static const SteerwheelspdsignType STEERWHEELSPDSIGN_LEFT_POSITIVE =
    Status_310_SteerwheelspdsignType_STEERWHEELSPDSIGN_LEFT_POSITIVE;
  static const SteerwheelspdsignType STEERWHEELSPDSIGN_RIGHT_NEGATIVE =
    Status_310_SteerwheelspdsignType_STEERWHEELSPDSIGN_RIGHT_NEGATIVE;
  static inline bool SteerwheelspdsignType_IsValid(int value) {
    return Status_310_SteerwheelspdsignType_IsValid(value);
  }
  static const SteerwheelspdsignType SteerwheelspdsignType_MIN =
    Status_310_SteerwheelspdsignType_SteerwheelspdsignType_MIN;
  static const SteerwheelspdsignType SteerwheelspdsignType_MAX =
    Status_310_SteerwheelspdsignType_SteerwheelspdsignType_MAX;
  static const int SteerwheelspdsignType_ARRAYSIZE =
    Status_310_SteerwheelspdsignType_SteerwheelspdsignType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SteerwheelspdsignType_descriptor() {
    return Status_310_SteerwheelspdsignType_descriptor();
  }
  static inline const ::std::string& SteerwheelspdsignType_Name(SteerwheelspdsignType value) {
    return Status_310_SteerwheelspdsignType_Name(value);
  }
  static inline bool SteerwheelspdsignType_Parse(const ::std::string& name,
      SteerwheelspdsignType* value) {
    return Status_310_SteerwheelspdsignType_Parse(name, value);
  }

  typedef Status_310_DriverdoorstsType DriverdoorstsType;
  static const DriverdoorstsType DRIVERDOORSTS_CLOSED =
    Status_310_DriverdoorstsType_DRIVERDOORSTS_CLOSED;
  static const DriverdoorstsType DRIVERDOORSTS_OPEN =
    Status_310_DriverdoorstsType_DRIVERDOORSTS_OPEN;
  static inline bool DriverdoorstsType_IsValid(int value) {
    return Status_310_DriverdoorstsType_IsValid(value);
  }
  static const DriverdoorstsType DriverdoorstsType_MIN =
    Status_310_DriverdoorstsType_DriverdoorstsType_MIN;
  static const DriverdoorstsType DriverdoorstsType_MAX =
    Status_310_DriverdoorstsType_DriverdoorstsType_MAX;
  static const int DriverdoorstsType_ARRAYSIZE =
    Status_310_DriverdoorstsType_DriverdoorstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DriverdoorstsType_descriptor() {
    return Status_310_DriverdoorstsType_descriptor();
  }
  static inline const ::std::string& DriverdoorstsType_Name(DriverdoorstsType value) {
    return Status_310_DriverdoorstsType_Name(value);
  }
  static inline bool DriverdoorstsType_Parse(const ::std::string& name,
      DriverdoorstsType* value) {
    return Status_310_DriverdoorstsType_Parse(name, value);
  }

  typedef Status_310_RldoorstsType RldoorstsType;
  static const RldoorstsType RLDOORSTS_CLOSED =
    Status_310_RldoorstsType_RLDOORSTS_CLOSED;
  static const RldoorstsType RLDOORSTS_OPEN =
    Status_310_RldoorstsType_RLDOORSTS_OPEN;
  static inline bool RldoorstsType_IsValid(int value) {
    return Status_310_RldoorstsType_IsValid(value);
  }
  static const RldoorstsType RldoorstsType_MIN =
    Status_310_RldoorstsType_RldoorstsType_MIN;
  static const RldoorstsType RldoorstsType_MAX =
    Status_310_RldoorstsType_RldoorstsType_MAX;
  static const int RldoorstsType_ARRAYSIZE =
    Status_310_RldoorstsType_RldoorstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RldoorstsType_descriptor() {
    return Status_310_RldoorstsType_descriptor();
  }
  static inline const ::std::string& RldoorstsType_Name(RldoorstsType value) {
    return Status_310_RldoorstsType_Name(value);
  }
  static inline bool RldoorstsType_Parse(const ::std::string& name,
      RldoorstsType* value) {
    return Status_310_RldoorstsType_Parse(name, value);
  }

  typedef Status_310_PassengerdoorstsType PassengerdoorstsType;
  static const PassengerdoorstsType PASSENGERDOORSTS_CLOSED =
    Status_310_PassengerdoorstsType_PASSENGERDOORSTS_CLOSED;
  static const PassengerdoorstsType PASSENGERDOORSTS_OPEN =
    Status_310_PassengerdoorstsType_PASSENGERDOORSTS_OPEN;
  static inline bool PassengerdoorstsType_IsValid(int value) {
    return Status_310_PassengerdoorstsType_IsValid(value);
  }
  static const PassengerdoorstsType PassengerdoorstsType_MIN =
    Status_310_PassengerdoorstsType_PassengerdoorstsType_MIN;
  static const PassengerdoorstsType PassengerdoorstsType_MAX =
    Status_310_PassengerdoorstsType_PassengerdoorstsType_MAX;
  static const int PassengerdoorstsType_ARRAYSIZE =
    Status_310_PassengerdoorstsType_PassengerdoorstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PassengerdoorstsType_descriptor() {
    return Status_310_PassengerdoorstsType_descriptor();
  }
  static inline const ::std::string& PassengerdoorstsType_Name(PassengerdoorstsType value) {
    return Status_310_PassengerdoorstsType_Name(value);
  }
  static inline bool PassengerdoorstsType_Parse(const ::std::string& name,
      PassengerdoorstsType* value) {
    return Status_310_PassengerdoorstsType_Parse(name, value);
  }

  typedef Status_310_RrdoorstsType RrdoorstsType;
  static const RrdoorstsType RRDOORSTS_CLOSED =
    Status_310_RrdoorstsType_RRDOORSTS_CLOSED;
  static const RrdoorstsType RRDOORSTS_OPEN =
    Status_310_RrdoorstsType_RRDOORSTS_OPEN;
  static inline bool RrdoorstsType_IsValid(int value) {
    return Status_310_RrdoorstsType_IsValid(value);
  }
  static const RrdoorstsType RrdoorstsType_MIN =
    Status_310_RrdoorstsType_RrdoorstsType_MIN;
  static const RrdoorstsType RrdoorstsType_MAX =
    Status_310_RrdoorstsType_RrdoorstsType_MAX;
  static const int RrdoorstsType_ARRAYSIZE =
    Status_310_RrdoorstsType_RrdoorstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RrdoorstsType_descriptor() {
    return Status_310_RrdoorstsType_descriptor();
  }
  static inline const ::std::string& RrdoorstsType_Name(RrdoorstsType value) {
    return Status_310_RrdoorstsType_Name(value);
  }
  static inline bool RrdoorstsType_Parse(const ::std::string& name,
      RrdoorstsType* value) {
    return Status_310_RrdoorstsType_Parse(name, value);
  }

  typedef Status_310_FrontfoglmpstsType FrontfoglmpstsType;
  static const FrontfoglmpstsType FRONTFOGLMPSTS_OFF =
    Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_OFF;
  static const FrontfoglmpstsType FRONTFOGLMPSTS_ON =
    Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_ON;
  static const FrontfoglmpstsType FRONTFOGLMPSTS_RESERVED =
    Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_RESERVED;
  static const FrontfoglmpstsType FRONTFOGLMPSTS_NOT_AVAILABLE =
    Status_310_FrontfoglmpstsType_FRONTFOGLMPSTS_NOT_AVAILABLE;
  static inline bool FrontfoglmpstsType_IsValid(int value) {
    return Status_310_FrontfoglmpstsType_IsValid(value);
  }
  static const FrontfoglmpstsType FrontfoglmpstsType_MIN =
    Status_310_FrontfoglmpstsType_FrontfoglmpstsType_MIN;
  static const FrontfoglmpstsType FrontfoglmpstsType_MAX =
    Status_310_FrontfoglmpstsType_FrontfoglmpstsType_MAX;
  static const int FrontfoglmpstsType_ARRAYSIZE =
    Status_310_FrontfoglmpstsType_FrontfoglmpstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FrontfoglmpstsType_descriptor() {
    return Status_310_FrontfoglmpstsType_descriptor();
  }
  static inline const ::std::string& FrontfoglmpstsType_Name(FrontfoglmpstsType value) {
    return Status_310_FrontfoglmpstsType_Name(value);
  }
  static inline bool FrontfoglmpstsType_Parse(const ::std::string& name,
      FrontfoglmpstsType* value) {
    return Status_310_FrontfoglmpstsType_Parse(name, value);
  }

  typedef Status_310_RearfoglmpstsType RearfoglmpstsType;
  static const RearfoglmpstsType REARFOGLMPSTS_OFF =
    Status_310_RearfoglmpstsType_REARFOGLMPSTS_OFF;
  static const RearfoglmpstsType REARFOGLMPSTS_ON =
    Status_310_RearfoglmpstsType_REARFOGLMPSTS_ON;
  static inline bool RearfoglmpstsType_IsValid(int value) {
    return Status_310_RearfoglmpstsType_IsValid(value);
  }
  static const RearfoglmpstsType RearfoglmpstsType_MIN =
    Status_310_RearfoglmpstsType_RearfoglmpstsType_MIN;
  static const RearfoglmpstsType RearfoglmpstsType_MAX =
    Status_310_RearfoglmpstsType_RearfoglmpstsType_MAX;
  static const int RearfoglmpstsType_ARRAYSIZE =
    Status_310_RearfoglmpstsType_RearfoglmpstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RearfoglmpstsType_descriptor() {
    return Status_310_RearfoglmpstsType_descriptor();
  }
  static inline const ::std::string& RearfoglmpstsType_Name(RearfoglmpstsType value) {
    return Status_310_RearfoglmpstsType_Name(value);
  }
  static inline bool RearfoglmpstsType_Parse(const ::std::string& name,
      RearfoglmpstsType* value) {
    return Status_310_RearfoglmpstsType_Parse(name, value);
  }

  typedef Status_310_LowbeamstsType LowbeamstsType;
  static const LowbeamstsType LOWBEAMSTS_OFF =
    Status_310_LowbeamstsType_LOWBEAMSTS_OFF;
  static const LowbeamstsType LOWBEAMSTS_ON =
    Status_310_LowbeamstsType_LOWBEAMSTS_ON;
  static inline bool LowbeamstsType_IsValid(int value) {
    return Status_310_LowbeamstsType_IsValid(value);
  }
  static const LowbeamstsType LowbeamstsType_MIN =
    Status_310_LowbeamstsType_LowbeamstsType_MIN;
  static const LowbeamstsType LowbeamstsType_MAX =
    Status_310_LowbeamstsType_LowbeamstsType_MAX;
  static const int LowbeamstsType_ARRAYSIZE =
    Status_310_LowbeamstsType_LowbeamstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LowbeamstsType_descriptor() {
    return Status_310_LowbeamstsType_descriptor();
  }
  static inline const ::std::string& LowbeamstsType_Name(LowbeamstsType value) {
    return Status_310_LowbeamstsType_Name(value);
  }
  static inline bool LowbeamstsType_Parse(const ::std::string& name,
      LowbeamstsType* value) {
    return Status_310_LowbeamstsType_Parse(name, value);
  }

  typedef Status_310_HighbeamstsType HighbeamstsType;
  static const HighbeamstsType HIGHBEAMSTS_OFF =
    Status_310_HighbeamstsType_HIGHBEAMSTS_OFF;
  static const HighbeamstsType HIGHBEAMSTS_ON =
    Status_310_HighbeamstsType_HIGHBEAMSTS_ON;
  static inline bool HighbeamstsType_IsValid(int value) {
    return Status_310_HighbeamstsType_IsValid(value);
  }
  static const HighbeamstsType HighbeamstsType_MIN =
    Status_310_HighbeamstsType_HighbeamstsType_MIN;
  static const HighbeamstsType HighbeamstsType_MAX =
    Status_310_HighbeamstsType_HighbeamstsType_MAX;
  static const int HighbeamstsType_ARRAYSIZE =
    Status_310_HighbeamstsType_HighbeamstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HighbeamstsType_descriptor() {
    return Status_310_HighbeamstsType_descriptor();
  }
  static inline const ::std::string& HighbeamstsType_Name(HighbeamstsType value) {
    return Status_310_HighbeamstsType_Name(value);
  }
  static inline bool HighbeamstsType_Parse(const ::std::string& name,
      HighbeamstsType* value) {
    return Status_310_HighbeamstsType_Parse(name, value);
  }

  typedef Status_310_LeftturnlampstsType LeftturnlampstsType;
  static const LeftturnlampstsType LEFTTURNLAMPSTS_OFF =
    Status_310_LeftturnlampstsType_LEFTTURNLAMPSTS_OFF;
  static const LeftturnlampstsType LEFTTURNLAMPSTS_ON =
    Status_310_LeftturnlampstsType_LEFTTURNLAMPSTS_ON;
  static inline bool LeftturnlampstsType_IsValid(int value) {
    return Status_310_LeftturnlampstsType_IsValid(value);
  }
  static const LeftturnlampstsType LeftturnlampstsType_MIN =
    Status_310_LeftturnlampstsType_LeftturnlampstsType_MIN;
  static const LeftturnlampstsType LeftturnlampstsType_MAX =
    Status_310_LeftturnlampstsType_LeftturnlampstsType_MAX;
  static const int LeftturnlampstsType_ARRAYSIZE =
    Status_310_LeftturnlampstsType_LeftturnlampstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LeftturnlampstsType_descriptor() {
    return Status_310_LeftturnlampstsType_descriptor();
  }
  static inline const ::std::string& LeftturnlampstsType_Name(LeftturnlampstsType value) {
    return Status_310_LeftturnlampstsType_Name(value);
  }
  static inline bool LeftturnlampstsType_Parse(const ::std::string& name,
      LeftturnlampstsType* value) {
    return Status_310_LeftturnlampstsType_Parse(name, value);
  }

  typedef Status_310_RightturnlampstsType RightturnlampstsType;
  static const RightturnlampstsType RIGHTTURNLAMPSTS_OFF =
    Status_310_RightturnlampstsType_RIGHTTURNLAMPSTS_OFF;
  static const RightturnlampstsType RIGHTTURNLAMPSTS_ON =
    Status_310_RightturnlampstsType_RIGHTTURNLAMPSTS_ON;
  static inline bool RightturnlampstsType_IsValid(int value) {
    return Status_310_RightturnlampstsType_IsValid(value);
  }
  static const RightturnlampstsType RightturnlampstsType_MIN =
    Status_310_RightturnlampstsType_RightturnlampstsType_MIN;
  static const RightturnlampstsType RightturnlampstsType_MAX =
    Status_310_RightturnlampstsType_RightturnlampstsType_MAX;
  static const int RightturnlampstsType_ARRAYSIZE =
    Status_310_RightturnlampstsType_RightturnlampstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RightturnlampstsType_descriptor() {
    return Status_310_RightturnlampstsType_descriptor();
  }
  static inline const ::std::string& RightturnlampstsType_Name(RightturnlampstsType value) {
    return Status_310_RightturnlampstsType_Name(value);
  }
  static inline bool RightturnlampstsType_Parse(const ::std::string& name,
      RightturnlampstsType* value) {
    return Status_310_RightturnlampstsType_Parse(name, value);
  }

  typedef Status_310_Bcm_availstsType Bcm_availstsType;
  static const Bcm_availstsType BCM_AVAILSTS_MANUAL_MODE =
    Status_310_Bcm_availstsType_BCM_AVAILSTS_MANUAL_MODE;
  static const Bcm_availstsType BCM_AVAILSTS_AUTONOMOUS_MODE =
    Status_310_Bcm_availstsType_BCM_AVAILSTS_AUTONOMOUS_MODE;
  static const Bcm_availstsType BCM_AVAILSTS_RESERVED1 =
    Status_310_Bcm_availstsType_BCM_AVAILSTS_RESERVED1;
  static const Bcm_availstsType BCM_AVAILSTS_RESERVED2 =
    Status_310_Bcm_availstsType_BCM_AVAILSTS_RESERVED2;
  static inline bool Bcm_availstsType_IsValid(int value) {
    return Status_310_Bcm_availstsType_IsValid(value);
  }
  static const Bcm_availstsType Bcm_availstsType_MIN =
    Status_310_Bcm_availstsType_Bcm_availstsType_MIN;
  static const Bcm_availstsType Bcm_availstsType_MAX =
    Status_310_Bcm_availstsType_Bcm_availstsType_MAX;
  static const int Bcm_availstsType_ARRAYSIZE =
    Status_310_Bcm_availstsType_Bcm_availstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Bcm_availstsType_descriptor() {
    return Status_310_Bcm_availstsType_descriptor();
  }
  static inline const ::std::string& Bcm_availstsType_Name(Bcm_availstsType value) {
    return Status_310_Bcm_availstsType_Name(value);
  }
  static inline bool Bcm_availstsType_Parse(const ::std::string& name,
      Bcm_availstsType* value) {
    return Status_310_Bcm_availstsType_Parse(name, value);
  }

  typedef Status_310_BrakelmpstsType BrakelmpstsType;
  static const BrakelmpstsType BRAKELMPSTS_OFF =
    Status_310_BrakelmpstsType_BRAKELMPSTS_OFF;
  static const BrakelmpstsType BRAKELMPSTS_ON =
    Status_310_BrakelmpstsType_BRAKELMPSTS_ON;
  static inline bool BrakelmpstsType_IsValid(int value) {
    return Status_310_BrakelmpstsType_IsValid(value);
  }
  static const BrakelmpstsType BrakelmpstsType_MIN =
    Status_310_BrakelmpstsType_BrakelmpstsType_MIN;
  static const BrakelmpstsType BrakelmpstsType_MAX =
    Status_310_BrakelmpstsType_BrakelmpstsType_MAX;
  static const int BrakelmpstsType_ARRAYSIZE =
    Status_310_BrakelmpstsType_BrakelmpstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BrakelmpstsType_descriptor() {
    return Status_310_BrakelmpstsType_descriptor();
  }
  static inline const ::std::string& BrakelmpstsType_Name(BrakelmpstsType value) {
    return Status_310_BrakelmpstsType_Name(value);
  }
  static inline bool BrakelmpstsType_Parse(const ::std::string& name,
      BrakelmpstsType* value) {
    return Status_310_BrakelmpstsType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Status_310.LongitudeaccvalidType longitudeaccvalid = 1;
  bool has_longitudeaccvalid() const;
  void clear_longitudeaccvalid();
  static const int kLongitudeaccvalidFieldNumber = 1;
  ::apollo::canbus::Status_310_LongitudeaccvalidType longitudeaccvalid() const;
  void set_longitudeaccvalid(::apollo::canbus::Status_310_LongitudeaccvalidType value);

  // optional .apollo.canbus.Status_310.LateralaccevalidType lateralaccevalid = 2;
  bool has_lateralaccevalid() const;
  void clear_lateralaccevalid();
  static const int kLateralaccevalidFieldNumber = 2;
  ::apollo::canbus::Status_310_LateralaccevalidType lateralaccevalid() const;
  void set_lateralaccevalid(::apollo::canbus::Status_310_LateralaccevalidType value);

  // optional .apollo.canbus.Status_310.VehdynyawratevalidType vehdynyawratevalid = 3;
  bool has_vehdynyawratevalid() const;
  void clear_vehdynyawratevalid();
  static const int kVehdynyawratevalidFieldNumber = 3;
  ::apollo::canbus::Status_310_VehdynyawratevalidType vehdynyawratevalid() const;
  void set_vehdynyawratevalid(::apollo::canbus::Status_310_VehdynyawratevalidType value);

  // optional .apollo.canbus.Status_310.FlwheelspdvalidType flwheelspdvalid = 4;
  bool has_flwheelspdvalid() const;
  void clear_flwheelspdvalid();
  static const int kFlwheelspdvalidFieldNumber = 4;
  ::apollo::canbus::Status_310_FlwheelspdvalidType flwheelspdvalid() const;
  void set_flwheelspdvalid(::apollo::canbus::Status_310_FlwheelspdvalidType value);

  // optional .apollo.canbus.Status_310.FrwheelspdvalidType frwheelspdvalid = 5;
  bool has_frwheelspdvalid() const;
  void clear_frwheelspdvalid();
  static const int kFrwheelspdvalidFieldNumber = 5;
  ::apollo::canbus::Status_310_FrwheelspdvalidType frwheelspdvalid() const;
  void set_frwheelspdvalid(::apollo::canbus::Status_310_FrwheelspdvalidType value);

  // optional .apollo.canbus.Status_310.RlwheelspdvalidType rlwheelspdvalid = 6;
  bool has_rlwheelspdvalid() const;
  void clear_rlwheelspdvalid();
  static const int kRlwheelspdvalidFieldNumber = 6;
  ::apollo::canbus::Status_310_RlwheelspdvalidType rlwheelspdvalid() const;
  void set_rlwheelspdvalid(::apollo::canbus::Status_310_RlwheelspdvalidType value);

  // optional .apollo.canbus.Status_310.RrwheelspdvalidType rrwheelspdvalid = 7;
  bool has_rrwheelspdvalid() const;
  void clear_rrwheelspdvalid();
  static const int kRrwheelspdvalidFieldNumber = 7;
  ::apollo::canbus::Status_310_RrwheelspdvalidType rrwheelspdvalid() const;
  void set_rrwheelspdvalid(::apollo::canbus::Status_310_RrwheelspdvalidType value);

  // optional .apollo.canbus.Status_310.VehiclespdvalidType vehiclespdvalid = 8;
  bool has_vehiclespdvalid() const;
  void clear_vehiclespdvalid();
  static const int kVehiclespdvalidFieldNumber = 8;
  ::apollo::canbus::Status_310_VehiclespdvalidType vehiclespdvalid() const;
  void set_vehiclespdvalid(::apollo::canbus::Status_310_VehiclespdvalidType value);

  // optional .apollo.canbus.Status_310.LongitudedrivingmodeType longitudedrivingmode = 9;
  bool has_longitudedrivingmode() const;
  void clear_longitudedrivingmode();
  static const int kLongitudedrivingmodeFieldNumber = 9;
  ::apollo::canbus::Status_310_LongitudedrivingmodeType longitudedrivingmode() const;
  void set_longitudedrivingmode(::apollo::canbus::Status_310_LongitudedrivingmodeType value);

  // optional .apollo.canbus.Status_310.EngspdvalidType engspdvalid = 10;
  bool has_engspdvalid() const;
  void clear_engspdvalid();
  static const int kEngspdvalidFieldNumber = 10;
  ::apollo::canbus::Status_310_EngspdvalidType engspdvalid() const;
  void set_engspdvalid(::apollo::canbus::Status_310_EngspdvalidType value);

  // optional .apollo.canbus.Status_310.AccepedaloverrideType accepedaloverride = 11;
  bool has_accepedaloverride() const;
  void clear_accepedaloverride();
  static const int kAccepedaloverrideFieldNumber = 11;
  ::apollo::canbus::Status_310_AccepedaloverrideType accepedaloverride() const;
  void set_accepedaloverride(::apollo::canbus::Status_310_AccepedaloverrideType value);

  // optional .apollo.canbus.Status_310.BrakepedalstatusType brakepedalstatus = 12;
  bool has_brakepedalstatus() const;
  void clear_brakepedalstatus();
  static const int kBrakepedalstatusFieldNumber = 12;
  ::apollo::canbus::Status_310_BrakepedalstatusType brakepedalstatus() const;
  void set_brakepedalstatus(::apollo::canbus::Status_310_BrakepedalstatusType value);

  // optional .apollo.canbus.Status_310.EspbrakelightstsType espbrakelightsts = 13;
  bool has_espbrakelightsts() const;
  void clear_espbrakelightsts();
  static const int kEspbrakelightstsFieldNumber = 13;
  ::apollo::canbus::Status_310_EspbrakelightstsType espbrakelightsts() const;
  void set_espbrakelightsts(::apollo::canbus::Status_310_EspbrakelightstsType value);

  // optional .apollo.canbus.Status_310.EpbswtpositionvalidType epbswtpositionvalid = 14;
  bool has_epbswtpositionvalid() const;
  void clear_epbswtpositionvalid();
  static const int kEpbswtpositionvalidFieldNumber = 14;
  ::apollo::canbus::Status_310_EpbswtpositionvalidType epbswtpositionvalid() const;
  void set_epbswtpositionvalid(::apollo::canbus::Status_310_EpbswtpositionvalidType value);

  // optional .apollo.canbus.Status_310.EpbstsType epbsts = 15;
  bool has_epbsts() const;
  void clear_epbsts();
  static const int kEpbstsFieldNumber = 15;
  ::apollo::canbus::Status_310_EpbstsType epbsts() const;
  void set_epbsts(::apollo::canbus::Status_310_EpbstsType value);

  // optional .apollo.canbus.Status_310.CurrentgearvalidType currentgearvalid = 16;
  bool has_currentgearvalid() const;
  void clear_currentgearvalid();
  static const int kCurrentgearvalidFieldNumber = 16;
  ::apollo::canbus::Status_310_CurrentgearvalidType currentgearvalid() const;
  void set_currentgearvalid(::apollo::canbus::Status_310_CurrentgearvalidType value);

  // optional .apollo.canbus.Status_310.EpstrqsnsrstsType epstrqsnsrsts = 17;
  bool has_epstrqsnsrsts() const;
  void clear_epstrqsnsrsts();
  static const int kEpstrqsnsrstsFieldNumber = 17;
  ::apollo::canbus::Status_310_EpstrqsnsrstsType epstrqsnsrsts() const;
  void set_epstrqsnsrsts(::apollo::canbus::Status_310_EpstrqsnsrstsType value);

  // optional .apollo.canbus.Status_310.Eps_interferdetdvalidType eps_interferdetdvalid = 18;
  bool has_eps_interferdetdvalid() const;
  void clear_eps_interferdetdvalid();
  static const int kEpsInterferdetdvalidFieldNumber = 18;
  ::apollo::canbus::Status_310_Eps_interferdetdvalidType eps_interferdetdvalid() const;
  void set_eps_interferdetdvalid(::apollo::canbus::Status_310_Eps_interferdetdvalidType value);

  // optional .apollo.canbus.Status_310.EpshandsdetnstsType epshandsdetnsts = 19;
  bool has_epshandsdetnsts() const;
  void clear_epshandsdetnsts();
  static const int kEpshandsdetnstsFieldNumber = 19;
  ::apollo::canbus::Status_310_EpshandsdetnstsType epshandsdetnsts() const;
  void set_epshandsdetnsts(::apollo::canbus::Status_310_EpshandsdetnstsType value);

  // optional .apollo.canbus.Status_310.Eps_handsdetnstsvalidType eps_handsdetnstsvalid = 20;
  bool has_eps_handsdetnstsvalid() const;
  void clear_eps_handsdetnstsvalid();
  static const int kEpsHandsdetnstsvalidFieldNumber = 20;
  ::apollo::canbus::Status_310_Eps_handsdetnstsvalidType eps_handsdetnstsvalid() const;
  void set_eps_handsdetnstsvalid(::apollo::canbus::Status_310_Eps_handsdetnstsvalidType value);

  // optional .apollo.canbus.Status_310.SteerwheelanglesignType steerwheelanglesign = 21;
  bool has_steerwheelanglesign() const;
  void clear_steerwheelanglesign();
  static const int kSteerwheelanglesignFieldNumber = 21;
  ::apollo::canbus::Status_310_SteerwheelanglesignType steerwheelanglesign() const;
  void set_steerwheelanglesign(::apollo::canbus::Status_310_SteerwheelanglesignType value);

  // optional .apollo.canbus.Status_310.SteerwheelspdsignType steerwheelspdsign = 22;
  bool has_steerwheelspdsign() const;
  void clear_steerwheelspdsign();
  static const int kSteerwheelspdsignFieldNumber = 22;
  ::apollo::canbus::Status_310_SteerwheelspdsignType steerwheelspdsign() const;
  void set_steerwheelspdsign(::apollo::canbus::Status_310_SteerwheelspdsignType value);

  // optional .apollo.canbus.Status_310.DriverdoorstsType driverdoorsts = 23;
  bool has_driverdoorsts() const;
  void clear_driverdoorsts();
  static const int kDriverdoorstsFieldNumber = 23;
  ::apollo::canbus::Status_310_DriverdoorstsType driverdoorsts() const;
  void set_driverdoorsts(::apollo::canbus::Status_310_DriverdoorstsType value);

  // optional .apollo.canbus.Status_310.RldoorstsType rldoorsts = 24;
  bool has_rldoorsts() const;
  void clear_rldoorsts();
  static const int kRldoorstsFieldNumber = 24;
  ::apollo::canbus::Status_310_RldoorstsType rldoorsts() const;
  void set_rldoorsts(::apollo::canbus::Status_310_RldoorstsType value);

  // optional .apollo.canbus.Status_310.PassengerdoorstsType passengerdoorsts = 25;
  bool has_passengerdoorsts() const;
  void clear_passengerdoorsts();
  static const int kPassengerdoorstsFieldNumber = 25;
  ::apollo::canbus::Status_310_PassengerdoorstsType passengerdoorsts() const;
  void set_passengerdoorsts(::apollo::canbus::Status_310_PassengerdoorstsType value);

  // optional .apollo.canbus.Status_310.RrdoorstsType rrdoorsts = 26;
  bool has_rrdoorsts() const;
  void clear_rrdoorsts();
  static const int kRrdoorstsFieldNumber = 26;
  ::apollo::canbus::Status_310_RrdoorstsType rrdoorsts() const;
  void set_rrdoorsts(::apollo::canbus::Status_310_RrdoorstsType value);

  // optional .apollo.canbus.Status_310.FrontfoglmpstsType frontfoglmpsts = 27;
  bool has_frontfoglmpsts() const;
  void clear_frontfoglmpsts();
  static const int kFrontfoglmpstsFieldNumber = 27;
  ::apollo::canbus::Status_310_FrontfoglmpstsType frontfoglmpsts() const;
  void set_frontfoglmpsts(::apollo::canbus::Status_310_FrontfoglmpstsType value);

  // optional .apollo.canbus.Status_310.RearfoglmpstsType rearfoglmpsts = 28;
  bool has_rearfoglmpsts() const;
  void clear_rearfoglmpsts();
  static const int kRearfoglmpstsFieldNumber = 28;
  ::apollo::canbus::Status_310_RearfoglmpstsType rearfoglmpsts() const;
  void set_rearfoglmpsts(::apollo::canbus::Status_310_RearfoglmpstsType value);

  // optional .apollo.canbus.Status_310.LowbeamstsType lowbeamsts = 29;
  bool has_lowbeamsts() const;
  void clear_lowbeamsts();
  static const int kLowbeamstsFieldNumber = 29;
  ::apollo::canbus::Status_310_LowbeamstsType lowbeamsts() const;
  void set_lowbeamsts(::apollo::canbus::Status_310_LowbeamstsType value);

  // optional .apollo.canbus.Status_310.HighbeamstsType highbeamsts = 30;
  bool has_highbeamsts() const;
  void clear_highbeamsts();
  static const int kHighbeamstsFieldNumber = 30;
  ::apollo::canbus::Status_310_HighbeamstsType highbeamsts() const;
  void set_highbeamsts(::apollo::canbus::Status_310_HighbeamstsType value);

  // optional .apollo.canbus.Status_310.LeftturnlampstsType leftturnlampsts = 31;
  bool has_leftturnlampsts() const;
  void clear_leftturnlampsts();
  static const int kLeftturnlampstsFieldNumber = 31;
  ::apollo::canbus::Status_310_LeftturnlampstsType leftturnlampsts() const;
  void set_leftturnlampsts(::apollo::canbus::Status_310_LeftturnlampstsType value);

  // optional .apollo.canbus.Status_310.RightturnlampstsType rightturnlampsts = 32;
  bool has_rightturnlampsts() const;
  void clear_rightturnlampsts();
  static const int kRightturnlampstsFieldNumber = 32;
  ::apollo::canbus::Status_310_RightturnlampstsType rightturnlampsts() const;
  void set_rightturnlampsts(::apollo::canbus::Status_310_RightturnlampstsType value);

  // optional .apollo.canbus.Status_310.Bcm_availstsType bcm_availsts = 33;
  bool has_bcm_availsts() const;
  void clear_bcm_availsts();
  static const int kBcmAvailstsFieldNumber = 33;
  ::apollo::canbus::Status_310_Bcm_availstsType bcm_availsts() const;
  void set_bcm_availsts(::apollo::canbus::Status_310_Bcm_availstsType value);

  // optional .apollo.canbus.Status_310.BrakelmpstsType brakelmpsts = 34;
  bool has_brakelmpsts() const;
  void clear_brakelmpsts();
  static const int kBrakelmpstsFieldNumber = 34;
  ::apollo::canbus::Status_310_BrakelmpstsType brakelmpsts() const;
  void set_brakelmpsts(::apollo::canbus::Status_310_BrakelmpstsType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Status_310)
 private:
  void set_has_longitudeaccvalid();
  void clear_has_longitudeaccvalid();
  void set_has_lateralaccevalid();
  void clear_has_lateralaccevalid();
  void set_has_vehdynyawratevalid();
  void clear_has_vehdynyawratevalid();
  void set_has_flwheelspdvalid();
  void clear_has_flwheelspdvalid();
  void set_has_frwheelspdvalid();
  void clear_has_frwheelspdvalid();
  void set_has_rlwheelspdvalid();
  void clear_has_rlwheelspdvalid();
  void set_has_rrwheelspdvalid();
  void clear_has_rrwheelspdvalid();
  void set_has_vehiclespdvalid();
  void clear_has_vehiclespdvalid();
  void set_has_longitudedrivingmode();
  void clear_has_longitudedrivingmode();
  void set_has_engspdvalid();
  void clear_has_engspdvalid();
  void set_has_accepedaloverride();
  void clear_has_accepedaloverride();
  void set_has_brakepedalstatus();
  void clear_has_brakepedalstatus();
  void set_has_espbrakelightsts();
  void clear_has_espbrakelightsts();
  void set_has_epbswtpositionvalid();
  void clear_has_epbswtpositionvalid();
  void set_has_epbsts();
  void clear_has_epbsts();
  void set_has_currentgearvalid();
  void clear_has_currentgearvalid();
  void set_has_epstrqsnsrsts();
  void clear_has_epstrqsnsrsts();
  void set_has_eps_interferdetdvalid();
  void clear_has_eps_interferdetdvalid();
  void set_has_epshandsdetnsts();
  void clear_has_epshandsdetnsts();
  void set_has_eps_handsdetnstsvalid();
  void clear_has_eps_handsdetnstsvalid();
  void set_has_steerwheelanglesign();
  void clear_has_steerwheelanglesign();
  void set_has_steerwheelspdsign();
  void clear_has_steerwheelspdsign();
  void set_has_driverdoorsts();
  void clear_has_driverdoorsts();
  void set_has_rldoorsts();
  void clear_has_rldoorsts();
  void set_has_passengerdoorsts();
  void clear_has_passengerdoorsts();
  void set_has_rrdoorsts();
  void clear_has_rrdoorsts();
  void set_has_frontfoglmpsts();
  void clear_has_frontfoglmpsts();
  void set_has_rearfoglmpsts();
  void clear_has_rearfoglmpsts();
  void set_has_lowbeamsts();
  void clear_has_lowbeamsts();
  void set_has_highbeamsts();
  void clear_has_highbeamsts();
  void set_has_leftturnlampsts();
  void clear_has_leftturnlampsts();
  void set_has_rightturnlampsts();
  void clear_has_rightturnlampsts();
  void set_has_bcm_availsts();
  void clear_has_bcm_availsts();
  void set_has_brakelmpsts();
  void clear_has_brakelmpsts();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  int longitudeaccvalid_;
  int lateralaccevalid_;
  int vehdynyawratevalid_;
  int flwheelspdvalid_;
  int frwheelspdvalid_;
  int rlwheelspdvalid_;
  int rrwheelspdvalid_;
  int vehiclespdvalid_;
  int longitudedrivingmode_;
  int engspdvalid_;
  int accepedaloverride_;
  int brakepedalstatus_;
  int espbrakelightsts_;
  int epbswtpositionvalid_;
  int epbsts_;
  int currentgearvalid_;
  int epstrqsnsrsts_;
  int eps_interferdetdvalid_;
  int epshandsdetnsts_;
  int eps_handsdetnstsvalid_;
  int steerwheelanglesign_;
  int steerwheelspdsign_;
  int driverdoorsts_;
  int rldoorsts_;
  int passengerdoorsts_;
  int rrdoorsts_;
  int frontfoglmpsts_;
  int rearfoglmpsts_;
  int lowbeamsts_;
  int highbeamsts_;
  int leftturnlampsts_;
  int rightturnlampsts_;
  int bcm_availsts_;
  int brakelmpsts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vin_resp3_393 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Vin_resp3_393) */ {
 public:
  Vin_resp3_393();
  virtual ~Vin_resp3_393();

  Vin_resp3_393(const Vin_resp3_393& from);

  inline Vin_resp3_393& operator=(const Vin_resp3_393& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vin_resp3_393(Vin_resp3_393&& from) noexcept
    : Vin_resp3_393() {
    *this = ::std::move(from);
  }

  inline Vin_resp3_393& operator=(Vin_resp3_393&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vin_resp3_393& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vin_resp3_393* internal_default_instance() {
    return reinterpret_cast<const Vin_resp3_393*>(
               &_Vin_resp3_393_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Vin_resp3_393* other);
  friend void swap(Vin_resp3_393& a, Vin_resp3_393& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vin_resp3_393* New() const final {
    return CreateMaybeMessage<Vin_resp3_393>(NULL);
  }

  Vin_resp3_393* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vin_resp3_393>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vin_resp3_393& from);
  void MergeFrom(const Vin_resp3_393& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vin_resp3_393* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vin16 = 1;
  bool has_vin16() const;
  void clear_vin16();
  static const int kVin16FieldNumber = 1;
  ::google::protobuf::int32 vin16() const;
  void set_vin16(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Vin_resp3_393)
 private:
  void set_has_vin16();
  void clear_has_vin16();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 vin16_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vin_resp2_392 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Vin_resp2_392) */ {
 public:
  Vin_resp2_392();
  virtual ~Vin_resp2_392();

  Vin_resp2_392(const Vin_resp2_392& from);

  inline Vin_resp2_392& operator=(const Vin_resp2_392& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vin_resp2_392(Vin_resp2_392&& from) noexcept
    : Vin_resp2_392() {
    *this = ::std::move(from);
  }

  inline Vin_resp2_392& operator=(Vin_resp2_392&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vin_resp2_392& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vin_resp2_392* internal_default_instance() {
    return reinterpret_cast<const Vin_resp2_392*>(
               &_Vin_resp2_392_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Vin_resp2_392* other);
  friend void swap(Vin_resp2_392& a, Vin_resp2_392& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vin_resp2_392* New() const final {
    return CreateMaybeMessage<Vin_resp2_392>(NULL);
  }

  Vin_resp2_392* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vin_resp2_392>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vin_resp2_392& from);
  void MergeFrom(const Vin_resp2_392& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vin_resp2_392* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vin15 = 1;
  bool has_vin15() const;
  void clear_vin15();
  static const int kVin15FieldNumber = 1;
  ::google::protobuf::int32 vin15() const;
  void set_vin15(::google::protobuf::int32 value);

  // optional int32 vin14 = 2;
  bool has_vin14() const;
  void clear_vin14();
  static const int kVin14FieldNumber = 2;
  ::google::protobuf::int32 vin14() const;
  void set_vin14(::google::protobuf::int32 value);

  // optional int32 vin13 = 3;
  bool has_vin13() const;
  void clear_vin13();
  static const int kVin13FieldNumber = 3;
  ::google::protobuf::int32 vin13() const;
  void set_vin13(::google::protobuf::int32 value);

  // optional int32 vin12 = 4;
  bool has_vin12() const;
  void clear_vin12();
  static const int kVin12FieldNumber = 4;
  ::google::protobuf::int32 vin12() const;
  void set_vin12(::google::protobuf::int32 value);

  // optional int32 vin11 = 5;
  bool has_vin11() const;
  void clear_vin11();
  static const int kVin11FieldNumber = 5;
  ::google::protobuf::int32 vin11() const;
  void set_vin11(::google::protobuf::int32 value);

  // optional int32 vin10 = 6;
  bool has_vin10() const;
  void clear_vin10();
  static const int kVin10FieldNumber = 6;
  ::google::protobuf::int32 vin10() const;
  void set_vin10(::google::protobuf::int32 value);

  // optional int32 vin09 = 7;
  bool has_vin09() const;
  void clear_vin09();
  static const int kVin09FieldNumber = 7;
  ::google::protobuf::int32 vin09() const;
  void set_vin09(::google::protobuf::int32 value);

  // optional int32 vin08 = 8;
  bool has_vin08() const;
  void clear_vin08();
  static const int kVin08FieldNumber = 8;
  ::google::protobuf::int32 vin08() const;
  void set_vin08(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Vin_resp2_392)
 private:
  void set_has_vin15();
  void clear_has_vin15();
  void set_has_vin14();
  void clear_has_vin14();
  void set_has_vin13();
  void clear_has_vin13();
  void set_has_vin12();
  void clear_has_vin12();
  void set_has_vin11();
  void clear_has_vin11();
  void set_has_vin10();
  void clear_has_vin10();
  void set_has_vin09();
  void clear_has_vin09();
  void set_has_vin08();
  void clear_has_vin08();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 vin15_;
  ::google::protobuf::int32 vin14_;
  ::google::protobuf::int32 vin13_;
  ::google::protobuf::int32 vin12_;
  ::google::protobuf::int32 vin11_;
  ::google::protobuf::int32 vin10_;
  ::google::protobuf::int32 vin09_;
  ::google::protobuf::int32 vin08_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vin_resp1_391 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Vin_resp1_391) */ {
 public:
  Vin_resp1_391();
  virtual ~Vin_resp1_391();

  Vin_resp1_391(const Vin_resp1_391& from);

  inline Vin_resp1_391& operator=(const Vin_resp1_391& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vin_resp1_391(Vin_resp1_391&& from) noexcept
    : Vin_resp1_391() {
    *this = ::std::move(from);
  }

  inline Vin_resp1_391& operator=(Vin_resp1_391&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vin_resp1_391& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vin_resp1_391* internal_default_instance() {
    return reinterpret_cast<const Vin_resp1_391*>(
               &_Vin_resp1_391_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Vin_resp1_391* other);
  friend void swap(Vin_resp1_391& a, Vin_resp1_391& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vin_resp1_391* New() const final {
    return CreateMaybeMessage<Vin_resp1_391>(NULL);
  }

  Vin_resp1_391* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vin_resp1_391>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vin_resp1_391& from);
  void MergeFrom(const Vin_resp1_391& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vin_resp1_391* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vin07 = 1;
  bool has_vin07() const;
  void clear_vin07();
  static const int kVin07FieldNumber = 1;
  ::google::protobuf::int32 vin07() const;
  void set_vin07(::google::protobuf::int32 value);

  // optional int32 vin06 = 2;
  bool has_vin06() const;
  void clear_vin06();
  static const int kVin06FieldNumber = 2;
  ::google::protobuf::int32 vin06() const;
  void set_vin06(::google::protobuf::int32 value);

  // optional int32 vin05 = 3;
  bool has_vin05() const;
  void clear_vin05();
  static const int kVin05FieldNumber = 3;
  ::google::protobuf::int32 vin05() const;
  void set_vin05(::google::protobuf::int32 value);

  // optional int32 vin04 = 4;
  bool has_vin04() const;
  void clear_vin04();
  static const int kVin04FieldNumber = 4;
  ::google::protobuf::int32 vin04() const;
  void set_vin04(::google::protobuf::int32 value);

  // optional int32 vin03 = 5;
  bool has_vin03() const;
  void clear_vin03();
  static const int kVin03FieldNumber = 5;
  ::google::protobuf::int32 vin03() const;
  void set_vin03(::google::protobuf::int32 value);

  // optional int32 vin02 = 6;
  bool has_vin02() const;
  void clear_vin02();
  static const int kVin02FieldNumber = 6;
  ::google::protobuf::int32 vin02() const;
  void set_vin02(::google::protobuf::int32 value);

  // optional int32 vin00 = 7;
  bool has_vin00() const;
  void clear_vin00();
  static const int kVin00FieldNumber = 7;
  ::google::protobuf::int32 vin00() const;
  void set_vin00(::google::protobuf::int32 value);

  // optional int32 vin01 = 8;
  bool has_vin01() const;
  void clear_vin01();
  static const int kVin01FieldNumber = 8;
  ::google::protobuf::int32 vin01() const;
  void set_vin01(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Vin_resp1_391)
 private:
  void set_has_vin07();
  void clear_has_vin07();
  void set_has_vin06();
  void clear_has_vin06();
  void set_has_vin05();
  void clear_has_vin05();
  void set_has_vin04();
  void clear_has_vin04();
  void set_has_vin03();
  void clear_has_vin03();
  void set_has_vin02();
  void clear_has_vin02();
  void set_has_vin00();
  void clear_has_vin00();
  void set_has_vin01();
  void clear_has_vin01();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 vin07_;
  ::google::protobuf::int32 vin06_;
  ::google::protobuf::int32 vin05_;
  ::google::protobuf::int32 vin04_;
  ::google::protobuf::int32 vin03_;
  ::google::protobuf::int32 vin02_;
  ::google::protobuf::int32 vin00_;
  ::google::protobuf::int32 vin01_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ads_req_vin_390 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Ads_req_vin_390) */ {
 public:
  Ads_req_vin_390();
  virtual ~Ads_req_vin_390();

  Ads_req_vin_390(const Ads_req_vin_390& from);

  inline Ads_req_vin_390& operator=(const Ads_req_vin_390& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ads_req_vin_390(Ads_req_vin_390&& from) noexcept
    : Ads_req_vin_390() {
    *this = ::std::move(from);
  }

  inline Ads_req_vin_390& operator=(Ads_req_vin_390&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ads_req_vin_390& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ads_req_vin_390* internal_default_instance() {
    return reinterpret_cast<const Ads_req_vin_390*>(
               &_Ads_req_vin_390_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Ads_req_vin_390* other);
  friend void swap(Ads_req_vin_390& a, Ads_req_vin_390& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ads_req_vin_390* New() const final {
    return CreateMaybeMessage<Ads_req_vin_390>(NULL);
  }

  Ads_req_vin_390* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ads_req_vin_390>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ads_req_vin_390& from);
  void MergeFrom(const Ads_req_vin_390& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ads_req_vin_390* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ads_req_vin_390_Req_vin_signalType Req_vin_signalType;
  static const Req_vin_signalType REQ_VIN_SIGNAL_NO_REQUEST =
    Ads_req_vin_390_Req_vin_signalType_REQ_VIN_SIGNAL_NO_REQUEST;
  static const Req_vin_signalType REQ_VIN_SIGNAL_REQUEST =
    Ads_req_vin_390_Req_vin_signalType_REQ_VIN_SIGNAL_REQUEST;
  static inline bool Req_vin_signalType_IsValid(int value) {
    return Ads_req_vin_390_Req_vin_signalType_IsValid(value);
  }
  static const Req_vin_signalType Req_vin_signalType_MIN =
    Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_MIN;
  static const Req_vin_signalType Req_vin_signalType_MAX =
    Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_MAX;
  static const int Req_vin_signalType_ARRAYSIZE =
    Ads_req_vin_390_Req_vin_signalType_Req_vin_signalType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Req_vin_signalType_descriptor() {
    return Ads_req_vin_390_Req_vin_signalType_descriptor();
  }
  static inline const ::std::string& Req_vin_signalType_Name(Req_vin_signalType value) {
    return Ads_req_vin_390_Req_vin_signalType_Name(value);
  }
  static inline bool Req_vin_signalType_Parse(const ::std::string& name,
      Req_vin_signalType* value) {
    return Ads_req_vin_390_Req_vin_signalType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Ads_req_vin_390.Req_vin_signalType req_vin_signal = 1;
  bool has_req_vin_signal() const;
  void clear_req_vin_signal();
  static const int kReqVinSignalFieldNumber = 1;
  ::apollo::canbus::Ads_req_vin_390_Req_vin_signalType req_vin_signal() const;
  void set_req_vin_signal(::apollo::canbus::Ads_req_vin_390_Req_vin_signalType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Ads_req_vin_390)
 private:
  void set_has_req_vin_signal();
  void clear_has_req_vin_signal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int req_vin_signal_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ads1_111 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Ads1_111) */ {
 public:
  Ads1_111();
  virtual ~Ads1_111();

  Ads1_111(const Ads1_111& from);

  inline Ads1_111& operator=(const Ads1_111& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ads1_111(Ads1_111&& from) noexcept
    : Ads1_111() {
    *this = ::std::move(from);
  }

  inline Ads1_111& operator=(Ads1_111&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ads1_111& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ads1_111* internal_default_instance() {
    return reinterpret_cast<const Ads1_111*>(
               &_Ads1_111_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Ads1_111* other);
  friend void swap(Ads1_111& a, Ads1_111& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ads1_111* New() const final {
    return CreateMaybeMessage<Ads1_111>(NULL);
  }

  Ads1_111* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ads1_111>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ads1_111& from);
  void MergeFrom(const Ads1_111& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ads1_111* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ads1_111_Ads_dectostopType Ads_dectostopType;
  static const Ads_dectostopType ADS_DECTOSTOP_NO_DEMAND =
    Ads1_111_Ads_dectostopType_ADS_DECTOSTOP_NO_DEMAND;
  static const Ads_dectostopType ADS_DECTOSTOP_DEMAND =
    Ads1_111_Ads_dectostopType_ADS_DECTOSTOP_DEMAND;
  static inline bool Ads_dectostopType_IsValid(int value) {
    return Ads1_111_Ads_dectostopType_IsValid(value);
  }
  static const Ads_dectostopType Ads_dectostopType_MIN =
    Ads1_111_Ads_dectostopType_Ads_dectostopType_MIN;
  static const Ads_dectostopType Ads_dectostopType_MAX =
    Ads1_111_Ads_dectostopType_Ads_dectostopType_MAX;
  static const int Ads_dectostopType_ARRAYSIZE =
    Ads1_111_Ads_dectostopType_Ads_dectostopType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_dectostopType_descriptor() {
    return Ads1_111_Ads_dectostopType_descriptor();
  }
  static inline const ::std::string& Ads_dectostopType_Name(Ads_dectostopType value) {
    return Ads1_111_Ads_dectostopType_Name(value);
  }
  static inline bool Ads_dectostopType_Parse(const ::std::string& name,
      Ads_dectostopType* value) {
    return Ads1_111_Ads_dectostopType_Parse(name, value);
  }

  typedef Ads1_111_Ads_modeType Ads_modeType;
  static const Ads_modeType ADS_MODE_OFF_MODE =
    Ads1_111_Ads_modeType_ADS_MODE_OFF_MODE;
  static const Ads_modeType ADS_MODE_ACTIVE_MODE =
    Ads1_111_Ads_modeType_ADS_MODE_ACTIVE_MODE;
  static inline bool Ads_modeType_IsValid(int value) {
    return Ads1_111_Ads_modeType_IsValid(value);
  }
  static const Ads_modeType Ads_modeType_MIN =
    Ads1_111_Ads_modeType_Ads_modeType_MIN;
  static const Ads_modeType Ads_modeType_MAX =
    Ads1_111_Ads_modeType_Ads_modeType_MAX;
  static const int Ads_modeType_ARRAYSIZE =
    Ads1_111_Ads_modeType_Ads_modeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_modeType_descriptor() {
    return Ads1_111_Ads_modeType_descriptor();
  }
  static inline const ::std::string& Ads_modeType_Name(Ads_modeType value) {
    return Ads1_111_Ads_modeType_Name(value);
  }
  static inline bool Ads_modeType_Parse(const ::std::string& name,
      Ads_modeType* value) {
    return Ads1_111_Ads_modeType_Parse(name, value);
  }

  typedef Ads1_111_Ads_driveoff_reqType Ads_driveoff_reqType;
  static const Ads_driveoff_reqType ADS_DRIVEOFF_REQ_NO_DEMAND =
    Ads1_111_Ads_driveoff_reqType_ADS_DRIVEOFF_REQ_NO_DEMAND;
  static const Ads_driveoff_reqType ADS_DRIVEOFF_REQ_DEMAND =
    Ads1_111_Ads_driveoff_reqType_ADS_DRIVEOFF_REQ_DEMAND;
  static inline bool Ads_driveoff_reqType_IsValid(int value) {
    return Ads1_111_Ads_driveoff_reqType_IsValid(value);
  }
  static const Ads_driveoff_reqType Ads_driveoff_reqType_MIN =
    Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_MIN;
  static const Ads_driveoff_reqType Ads_driveoff_reqType_MAX =
    Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_MAX;
  static const int Ads_driveoff_reqType_ARRAYSIZE =
    Ads1_111_Ads_driveoff_reqType_Ads_driveoff_reqType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_driveoff_reqType_descriptor() {
    return Ads1_111_Ads_driveoff_reqType_descriptor();
  }
  static inline const ::std::string& Ads_driveoff_reqType_Name(Ads_driveoff_reqType value) {
    return Ads1_111_Ads_driveoff_reqType_Name(value);
  }
  static inline bool Ads_driveoff_reqType_Parse(const ::std::string& name,
      Ads_driveoff_reqType* value) {
    return Ads1_111_Ads_driveoff_reqType_Parse(name, value);
  }

  typedef Ads1_111_Ads_aeb_tgtdecel_reqType Ads_aeb_tgtdecel_reqType;
  static const Ads_aeb_tgtdecel_reqType ADS_AEB_TGTDECEL_REQ_NO_DEMAND =
    Ads1_111_Ads_aeb_tgtdecel_reqType_ADS_AEB_TGTDECEL_REQ_NO_DEMAND;
  static const Ads_aeb_tgtdecel_reqType ADS_AEB_TGTDECEL_REQ_DEMAND =
    Ads1_111_Ads_aeb_tgtdecel_reqType_ADS_AEB_TGTDECEL_REQ_DEMAND;
  static inline bool Ads_aeb_tgtdecel_reqType_IsValid(int value) {
    return Ads1_111_Ads_aeb_tgtdecel_reqType_IsValid(value);
  }
  static const Ads_aeb_tgtdecel_reqType Ads_aeb_tgtdecel_reqType_MIN =
    Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_MIN;
  static const Ads_aeb_tgtdecel_reqType Ads_aeb_tgtdecel_reqType_MAX =
    Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_MAX;
  static const int Ads_aeb_tgtdecel_reqType_ARRAYSIZE =
    Ads1_111_Ads_aeb_tgtdecel_reqType_Ads_aeb_tgtdecel_reqType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_aeb_tgtdecel_reqType_descriptor() {
    return Ads1_111_Ads_aeb_tgtdecel_reqType_descriptor();
  }
  static inline const ::std::string& Ads_aeb_tgtdecel_reqType_Name(Ads_aeb_tgtdecel_reqType value) {
    return Ads1_111_Ads_aeb_tgtdecel_reqType_Name(value);
  }
  static inline bool Ads_aeb_tgtdecel_reqType_Parse(const ::std::string& name,
      Ads_aeb_tgtdecel_reqType* value) {
    return Ads1_111_Ads_aeb_tgtdecel_reqType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Ads1_111.Ads_dectostopType ads_dectostop = 1;
  bool has_ads_dectostop() const;
  void clear_ads_dectostop();
  static const int kAdsDectostopFieldNumber = 1;
  ::apollo::canbus::Ads1_111_Ads_dectostopType ads_dectostop() const;
  void set_ads_dectostop(::apollo::canbus::Ads1_111_Ads_dectostopType value);

  // optional .apollo.canbus.Ads1_111.Ads_modeType ads_mode = 2;
  bool has_ads_mode() const;
  void clear_ads_mode();
  static const int kAdsModeFieldNumber = 2;
  ::apollo::canbus::Ads1_111_Ads_modeType ads_mode() const;
  void set_ads_mode(::apollo::canbus::Ads1_111_Ads_modeType value);

  // optional double ads_taracce = 3;
  bool has_ads_taracce() const;
  void clear_ads_taracce();
  static const int kAdsTaracceFieldNumber = 3;
  double ads_taracce() const;
  void set_ads_taracce(double value);

  // optional double ads_aeb_taracce = 5;
  bool has_ads_aeb_taracce() const;
  void clear_ads_aeb_taracce();
  static const int kAdsAebTaracceFieldNumber = 5;
  double ads_aeb_taracce() const;
  void set_ads_aeb_taracce(double value);

  // optional .apollo.canbus.Ads1_111.Ads_driveoff_reqType ads_driveoff_req = 4;
  bool has_ads_driveoff_req() const;
  void clear_ads_driveoff_req();
  static const int kAdsDriveoffReqFieldNumber = 4;
  ::apollo::canbus::Ads1_111_Ads_driveoff_reqType ads_driveoff_req() const;
  void set_ads_driveoff_req(::apollo::canbus::Ads1_111_Ads_driveoff_reqType value);

  // optional .apollo.canbus.Ads1_111.Ads_aeb_tgtdecel_reqType ads_aeb_tgtdecel_req = 6;
  bool has_ads_aeb_tgtdecel_req() const;
  void clear_ads_aeb_tgtdecel_req();
  static const int kAdsAebTgtdecelReqFieldNumber = 6;
  ::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType ads_aeb_tgtdecel_req() const;
  void set_ads_aeb_tgtdecel_req(::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Ads1_111)
 private:
  void set_has_ads_dectostop();
  void clear_has_ads_dectostop();
  void set_has_ads_mode();
  void clear_has_ads_mode();
  void set_has_ads_taracce();
  void clear_has_ads_taracce();
  void set_has_ads_driveoff_req();
  void clear_has_ads_driveoff_req();
  void set_has_ads_aeb_taracce();
  void clear_has_ads_aeb_taracce();
  void set_has_ads_aeb_tgtdecel_req();
  void clear_has_ads_aeb_tgtdecel_req();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int ads_dectostop_;
  int ads_mode_;
  double ads_taracce_;
  double ads_aeb_taracce_;
  int ads_driveoff_req_;
  int ads_aeb_tgtdecel_req_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fbs2_240 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Fbs2_240) */ {
 public:
  Fbs2_240();
  virtual ~Fbs2_240();

  Fbs2_240(const Fbs2_240& from);

  inline Fbs2_240& operator=(const Fbs2_240& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fbs2_240(Fbs2_240&& from) noexcept
    : Fbs2_240() {
    *this = ::std::move(from);
  }

  inline Fbs2_240& operator=(Fbs2_240&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fbs2_240& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fbs2_240* internal_default_instance() {
    return reinterpret_cast<const Fbs2_240*>(
               &_Fbs2_240_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Fbs2_240* other);
  friend void swap(Fbs2_240& a, Fbs2_240& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fbs2_240* New() const final {
    return CreateMaybeMessage<Fbs2_240>(NULL);
  }

  Fbs2_240* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fbs2_240>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Fbs2_240& from);
  void MergeFrom(const Fbs2_240& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fbs2_240* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Fbs2_240_FlwheeldirectionType FlwheeldirectionType;
  static const FlwheeldirectionType FLWHEELDIRECTION_INVALID =
    Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_INVALID;
  static const FlwheeldirectionType FLWHEELDIRECTION_FORWARD =
    Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_FORWARD;
  static const FlwheeldirectionType FLWHEELDIRECTION_BACKWARD =
    Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_BACKWARD;
  static const FlwheeldirectionType FLWHEELDIRECTION_STOP =
    Fbs2_240_FlwheeldirectionType_FLWHEELDIRECTION_STOP;
  static inline bool FlwheeldirectionType_IsValid(int value) {
    return Fbs2_240_FlwheeldirectionType_IsValid(value);
  }
  static const FlwheeldirectionType FlwheeldirectionType_MIN =
    Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_MIN;
  static const FlwheeldirectionType FlwheeldirectionType_MAX =
    Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_MAX;
  static const int FlwheeldirectionType_ARRAYSIZE =
    Fbs2_240_FlwheeldirectionType_FlwheeldirectionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FlwheeldirectionType_descriptor() {
    return Fbs2_240_FlwheeldirectionType_descriptor();
  }
  static inline const ::std::string& FlwheeldirectionType_Name(FlwheeldirectionType value) {
    return Fbs2_240_FlwheeldirectionType_Name(value);
  }
  static inline bool FlwheeldirectionType_Parse(const ::std::string& name,
      FlwheeldirectionType* value) {
    return Fbs2_240_FlwheeldirectionType_Parse(name, value);
  }

  typedef Fbs2_240_RlwheeldrivedirectionType RlwheeldrivedirectionType;
  static const RlwheeldrivedirectionType RLWHEELDRIVEDIRECTION_INVALID =
    Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_INVALID;
  static const RlwheeldrivedirectionType RLWHEELDRIVEDIRECTION_FORWARD =
    Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_FORWARD;
  static const RlwheeldrivedirectionType RLWHEELDRIVEDIRECTION_BACKWARD =
    Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_BACKWARD;
  static const RlwheeldrivedirectionType RLWHEELDRIVEDIRECTION_STOP =
    Fbs2_240_RlwheeldrivedirectionType_RLWHEELDRIVEDIRECTION_STOP;
  static inline bool RlwheeldrivedirectionType_IsValid(int value) {
    return Fbs2_240_RlwheeldrivedirectionType_IsValid(value);
  }
  static const RlwheeldrivedirectionType RlwheeldrivedirectionType_MIN =
    Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_MIN;
  static const RlwheeldrivedirectionType RlwheeldrivedirectionType_MAX =
    Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_MAX;
  static const int RlwheeldrivedirectionType_ARRAYSIZE =
    Fbs2_240_RlwheeldrivedirectionType_RlwheeldrivedirectionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RlwheeldrivedirectionType_descriptor() {
    return Fbs2_240_RlwheeldrivedirectionType_descriptor();
  }
  static inline const ::std::string& RlwheeldrivedirectionType_Name(RlwheeldrivedirectionType value) {
    return Fbs2_240_RlwheeldrivedirectionType_Name(value);
  }
  static inline bool RlwheeldrivedirectionType_Parse(const ::std::string& name,
      RlwheeldrivedirectionType* value) {
    return Fbs2_240_RlwheeldrivedirectionType_Parse(name, value);
  }

  typedef Fbs2_240_RrwheeldirectionType RrwheeldirectionType;
  static const RrwheeldirectionType RRWHEELDIRECTION_INVALID =
    Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_INVALID;
  static const RrwheeldirectionType RRWHEELDIRECTION_FORWARD =
    Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_FORWARD;
  static const RrwheeldirectionType RRWHEELDIRECTION_BACKWARD =
    Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_BACKWARD;
  static const RrwheeldirectionType RRWHEELDIRECTION_STOP =
    Fbs2_240_RrwheeldirectionType_RRWHEELDIRECTION_STOP;
  static inline bool RrwheeldirectionType_IsValid(int value) {
    return Fbs2_240_RrwheeldirectionType_IsValid(value);
  }
  static const RrwheeldirectionType RrwheeldirectionType_MIN =
    Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_MIN;
  static const RrwheeldirectionType RrwheeldirectionType_MAX =
    Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_MAX;
  static const int RrwheeldirectionType_ARRAYSIZE =
    Fbs2_240_RrwheeldirectionType_RrwheeldirectionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RrwheeldirectionType_descriptor() {
    return Fbs2_240_RrwheeldirectionType_descriptor();
  }
  static inline const ::std::string& RrwheeldirectionType_Name(RrwheeldirectionType value) {
    return Fbs2_240_RrwheeldirectionType_Name(value);
  }
  static inline bool RrwheeldirectionType_Parse(const ::std::string& name,
      RrwheeldirectionType* value) {
    return Fbs2_240_RrwheeldirectionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional double frwheelspd = 2;
  bool has_frwheelspd() const;
  void clear_frwheelspd();
  static const int kFrwheelspdFieldNumber = 2;
  double frwheelspd() const;
  void set_frwheelspd(double value);

  // optional .apollo.canbus.Fbs2_240.FlwheeldirectionType flwheeldirection = 1;
  bool has_flwheeldirection() const;
  void clear_flwheeldirection();
  static const int kFlwheeldirectionFieldNumber = 1;
  ::apollo::canbus::Fbs2_240_FlwheeldirectionType flwheeldirection() const;
  void set_flwheeldirection(::apollo::canbus::Fbs2_240_FlwheeldirectionType value);

  // optional .apollo.canbus.Fbs2_240.RlwheeldrivedirectionType rlwheeldrivedirection = 3;
  bool has_rlwheeldrivedirection() const;
  void clear_rlwheeldrivedirection();
  static const int kRlwheeldrivedirectionFieldNumber = 3;
  ::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType rlwheeldrivedirection() const;
  void set_rlwheeldrivedirection(::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType value);

  // optional double rlwheelspd = 4;
  bool has_rlwheelspd() const;
  void clear_rlwheelspd();
  static const int kRlwheelspdFieldNumber = 4;
  double rlwheelspd() const;
  void set_rlwheelspd(double value);

  // optional double rrwheelspd = 6;
  bool has_rrwheelspd() const;
  void clear_rrwheelspd();
  static const int kRrwheelspdFieldNumber = 6;
  double rrwheelspd() const;
  void set_rrwheelspd(double value);

  // optional double vehiclespd = 7;
  bool has_vehiclespd() const;
  void clear_vehiclespd();
  static const int kVehiclespdFieldNumber = 7;
  double vehiclespd() const;
  void set_vehiclespd(double value);

  // optional .apollo.canbus.Fbs2_240.RrwheeldirectionType rrwheeldirection = 5;
  bool has_rrwheeldirection() const;
  void clear_rrwheeldirection();
  static const int kRrwheeldirectionFieldNumber = 5;
  ::apollo::canbus::Fbs2_240_RrwheeldirectionType rrwheeldirection() const;
  void set_rrwheeldirection(::apollo::canbus::Fbs2_240_RrwheeldirectionType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Fbs2_240)
 private:
  void set_has_flwheeldirection();
  void clear_has_flwheeldirection();
  void set_has_frwheelspd();
  void clear_has_frwheelspd();
  void set_has_rlwheeldrivedirection();
  void clear_has_rlwheeldrivedirection();
  void set_has_rlwheelspd();
  void clear_has_rlwheelspd();
  void set_has_rrwheeldirection();
  void clear_has_rrwheeldirection();
  void set_has_rrwheelspd();
  void clear_has_rrwheelspd();
  void set_has_vehiclespd();
  void clear_has_vehiclespd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double frwheelspd_;
  int flwheeldirection_;
  int rlwheeldrivedirection_;
  double rlwheelspd_;
  double rrwheelspd_;
  double vehiclespd_;
  int rrwheeldirection_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fbs1_243 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Fbs1_243) */ {
 public:
  Fbs1_243();
  virtual ~Fbs1_243();

  Fbs1_243(const Fbs1_243& from);

  inline Fbs1_243& operator=(const Fbs1_243& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fbs1_243(Fbs1_243&& from) noexcept
    : Fbs1_243() {
    *this = ::std::move(from);
  }

  inline Fbs1_243& operator=(Fbs1_243&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fbs1_243& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fbs1_243* internal_default_instance() {
    return reinterpret_cast<const Fbs1_243*>(
               &_Fbs1_243_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Fbs1_243* other);
  friend void swap(Fbs1_243& a, Fbs1_243& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fbs1_243* New() const final {
    return CreateMaybeMessage<Fbs1_243>(NULL);
  }

  Fbs1_243* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fbs1_243>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Fbs1_243& from);
  void MergeFrom(const Fbs1_243& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fbs1_243* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Fbs1_243_FrwheeldirectionType FrwheeldirectionType;
  static const FrwheeldirectionType FRWHEELDIRECTION_INVALID =
    Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_INVALID;
  static const FrwheeldirectionType FRWHEELDIRECTION_FORWARD =
    Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_FORWARD;
  static const FrwheeldirectionType FRWHEELDIRECTION_BACKWARD =
    Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_BACKWARD;
  static const FrwheeldirectionType FRWHEELDIRECTION_STOP =
    Fbs1_243_FrwheeldirectionType_FRWHEELDIRECTION_STOP;
  static inline bool FrwheeldirectionType_IsValid(int value) {
    return Fbs1_243_FrwheeldirectionType_IsValid(value);
  }
  static const FrwheeldirectionType FrwheeldirectionType_MIN =
    Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_MIN;
  static const FrwheeldirectionType FrwheeldirectionType_MAX =
    Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_MAX;
  static const int FrwheeldirectionType_ARRAYSIZE =
    Fbs1_243_FrwheeldirectionType_FrwheeldirectionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FrwheeldirectionType_descriptor() {
    return Fbs1_243_FrwheeldirectionType_descriptor();
  }
  static inline const ::std::string& FrwheeldirectionType_Name(FrwheeldirectionType value) {
    return Fbs1_243_FrwheeldirectionType_Name(value);
  }
  static inline bool FrwheeldirectionType_Parse(const ::std::string& name,
      FrwheeldirectionType* value) {
    return Fbs1_243_FrwheeldirectionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional double longitudeacce = 1;
  bool has_longitudeacce() const;
  void clear_longitudeacce();
  static const int kLongitudeacceFieldNumber = 1;
  double longitudeacce() const;
  void set_longitudeacce(double value);

  // optional double lateralacce = 2;
  bool has_lateralacce() const;
  void clear_lateralacce();
  static const int kLateralacceFieldNumber = 2;
  double lateralacce() const;
  void set_lateralacce(double value);

  // optional double vehdynyawrate = 3;
  bool has_vehdynyawrate() const;
  void clear_vehdynyawrate();
  static const int kVehdynyawrateFieldNumber = 3;
  double vehdynyawrate() const;
  void set_vehdynyawrate(double value);

  // optional double flwheelspd = 4;
  bool has_flwheelspd() const;
  void clear_flwheelspd();
  static const int kFlwheelspdFieldNumber = 4;
  double flwheelspd() const;
  void set_flwheelspd(double value);

  // optional .apollo.canbus.Fbs1_243.FrwheeldirectionType frwheeldirection = 5;
  bool has_frwheeldirection() const;
  void clear_frwheeldirection();
  static const int kFrwheeldirectionFieldNumber = 5;
  ::apollo::canbus::Fbs1_243_FrwheeldirectionType frwheeldirection() const;
  void set_frwheeldirection(::apollo::canbus::Fbs1_243_FrwheeldirectionType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Fbs1_243)
 private:
  void set_has_longitudeacce();
  void clear_has_longitudeacce();
  void set_has_lateralacce();
  void clear_has_lateralacce();
  void set_has_vehdynyawrate();
  void clear_has_vehdynyawrate();
  void set_has_flwheelspd();
  void clear_has_flwheelspd();
  void set_has_frwheeldirection();
  void clear_has_frwheeldirection();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double longitudeacce_;
  double lateralacce_;
  double vehdynyawrate_;
  double flwheelspd_;
  int frwheeldirection_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fbs4_235 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Fbs4_235) */ {
 public:
  Fbs4_235();
  virtual ~Fbs4_235();

  Fbs4_235(const Fbs4_235& from);

  inline Fbs4_235& operator=(const Fbs4_235& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fbs4_235(Fbs4_235&& from) noexcept
    : Fbs4_235() {
    *this = ::std::move(from);
  }

  inline Fbs4_235& operator=(Fbs4_235&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fbs4_235& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fbs4_235* internal_default_instance() {
    return reinterpret_cast<const Fbs4_235*>(
               &_Fbs4_235_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Fbs4_235* other);
  friend void swap(Fbs4_235& a, Fbs4_235& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fbs4_235* New() const final {
    return CreateMaybeMessage<Fbs4_235>(NULL);
  }

  Fbs4_235* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fbs4_235>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Fbs4_235& from);
  void MergeFrom(const Fbs4_235& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fbs4_235* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double steerwheelangle = 1;
  bool has_steerwheelangle() const;
  void clear_steerwheelangle();
  static const int kSteerwheelangleFieldNumber = 1;
  double steerwheelangle() const;
  void set_steerwheelangle(double value);

  // optional double steerwheelspd = 2;
  bool has_steerwheelspd() const;
  void clear_steerwheelspd();
  static const int kSteerwheelspdFieldNumber = 2;
  double steerwheelspd() const;
  void set_steerwheelspd(double value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Fbs4_235)
 private:
  void set_has_steerwheelangle();
  void clear_has_steerwheelangle();
  void set_has_steerwheelspd();
  void clear_has_steerwheelspd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double steerwheelangle_;
  double steerwheelspd_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fail_241 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Fail_241) */ {
 public:
  Fail_241();
  virtual ~Fail_241();

  Fail_241(const Fail_241& from);

  inline Fail_241& operator=(const Fail_241& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fail_241(Fail_241&& from) noexcept
    : Fail_241() {
    *this = ::std::move(from);
  }

  inline Fail_241& operator=(Fail_241&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fail_241& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fail_241* internal_default_instance() {
    return reinterpret_cast<const Fail_241*>(
               &_Fail_241_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Fail_241* other);
  friend void swap(Fail_241& a, Fail_241& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fail_241* New() const final {
    return CreateMaybeMessage<Fail_241>(NULL);
  }

  Fail_241* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fail_241>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Fail_241& from);
  void MergeFrom(const Fail_241& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fail_241* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Fail_241_EngfailType EngfailType;
  static const EngfailType ENGFAIL_NO_FAIL =
    Fail_241_EngfailType_ENGFAIL_NO_FAIL;
  static const EngfailType ENGFAIL_FAIL =
    Fail_241_EngfailType_ENGFAIL_FAIL;
  static inline bool EngfailType_IsValid(int value) {
    return Fail_241_EngfailType_IsValid(value);
  }
  static const EngfailType EngfailType_MIN =
    Fail_241_EngfailType_EngfailType_MIN;
  static const EngfailType EngfailType_MAX =
    Fail_241_EngfailType_EngfailType_MAX;
  static const int EngfailType_ARRAYSIZE =
    Fail_241_EngfailType_EngfailType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EngfailType_descriptor() {
    return Fail_241_EngfailType_descriptor();
  }
  static inline const ::std::string& EngfailType_Name(EngfailType value) {
    return Fail_241_EngfailType_Name(value);
  }
  static inline bool EngfailType_Parse(const ::std::string& name,
      EngfailType* value) {
    return Fail_241_EngfailType_Parse(name, value);
  }

  typedef Fail_241_EspfailType EspfailType;
  static const EspfailType ESPFAIL_NO_FAILURE =
    Fail_241_EspfailType_ESPFAIL_NO_FAILURE;
  static const EspfailType ESPFAIL_FAILURE =
    Fail_241_EspfailType_ESPFAIL_FAILURE;
  static inline bool EspfailType_IsValid(int value) {
    return Fail_241_EspfailType_IsValid(value);
  }
  static const EspfailType EspfailType_MIN =
    Fail_241_EspfailType_EspfailType_MIN;
  static const EspfailType EspfailType_MAX =
    Fail_241_EspfailType_EspfailType_MAX;
  static const int EspfailType_ARRAYSIZE =
    Fail_241_EspfailType_EspfailType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EspfailType_descriptor() {
    return Fail_241_EspfailType_descriptor();
  }
  static inline const ::std::string& EspfailType_Name(EspfailType value) {
    return Fail_241_EspfailType_Name(value);
  }
  static inline bool EspfailType_Parse(const ::std::string& name,
      EspfailType* value) {
    return Fail_241_EspfailType_Parse(name, value);
  }

  typedef Fail_241_EpbfailType EpbfailType;
  static const EpbfailType EPBFAIL_UNDEFINED =
    Fail_241_EpbfailType_EPBFAIL_UNDEFINED;
  static const EpbfailType EPBFAIL_NO_ERROR =
    Fail_241_EpbfailType_EPBFAIL_NO_ERROR;
  static const EpbfailType EPBFAIL_ERROR =
    Fail_241_EpbfailType_EPBFAIL_ERROR;
  static const EpbfailType EPBFAIL_DIAGNOSIS =
    Fail_241_EpbfailType_EPBFAIL_DIAGNOSIS;
  static inline bool EpbfailType_IsValid(int value) {
    return Fail_241_EpbfailType_IsValid(value);
  }
  static const EpbfailType EpbfailType_MIN =
    Fail_241_EpbfailType_EpbfailType_MIN;
  static const EpbfailType EpbfailType_MAX =
    Fail_241_EpbfailType_EpbfailType_MAX;
  static const int EpbfailType_ARRAYSIZE =
    Fail_241_EpbfailType_EpbfailType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpbfailType_descriptor() {
    return Fail_241_EpbfailType_descriptor();
  }
  static inline const ::std::string& EpbfailType_Name(EpbfailType value) {
    return Fail_241_EpbfailType_Name(value);
  }
  static inline bool EpbfailType_Parse(const ::std::string& name,
      EpbfailType* value) {
    return Fail_241_EpbfailType_Parse(name, value);
  }

  typedef Fail_241_ShiftfailType ShiftfailType;
  static const ShiftfailType SHIFTFAIL_NO_FAIL =
    Fail_241_ShiftfailType_SHIFTFAIL_NO_FAIL;
  static const ShiftfailType SHIFTFAIL_TRANSMISSION_MALFUNCTION =
    Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_MALFUNCTION;
  static const ShiftfailType SHIFTFAIL_TRANSMISSION_P_ENGAGEMENT_FAULT =
    Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_P_ENGAGEMENT_FAULT;
  static const ShiftfailType SHIFTFAIL_TRANSMISSION_P_DISENGAGEMENT_FAULT =
    Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_P_DISENGAGEMENT_FAULT;
  static const ShiftfailType SHIFTFAIL_RESERVED =
    Fail_241_ShiftfailType_SHIFTFAIL_RESERVED;
  static const ShiftfailType SHIFTFAIL_TRANSMISSION_LIMIT_FUNCTION =
    Fail_241_ShiftfailType_SHIFTFAIL_TRANSMISSION_LIMIT_FUNCTION;
  static inline bool ShiftfailType_IsValid(int value) {
    return Fail_241_ShiftfailType_IsValid(value);
  }
  static const ShiftfailType ShiftfailType_MIN =
    Fail_241_ShiftfailType_ShiftfailType_MIN;
  static const ShiftfailType ShiftfailType_MAX =
    Fail_241_ShiftfailType_ShiftfailType_MAX;
  static const int ShiftfailType_ARRAYSIZE =
    Fail_241_ShiftfailType_ShiftfailType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ShiftfailType_descriptor() {
    return Fail_241_ShiftfailType_descriptor();
  }
  static inline const ::std::string& ShiftfailType_Name(ShiftfailType value) {
    return Fail_241_ShiftfailType_Name(value);
  }
  static inline bool ShiftfailType_Parse(const ::std::string& name,
      ShiftfailType* value) {
    return Fail_241_ShiftfailType_Parse(name, value);
  }

  typedef Fail_241_EpsfailType EpsfailType;
  static const EpsfailType EPSFAIL_NO_FAULT =
    Fail_241_EpsfailType_EPSFAIL_NO_FAULT;
  static const EpsfailType EPSFAIL_FAULT =
    Fail_241_EpsfailType_EPSFAIL_FAULT;
  static inline bool EpsfailType_IsValid(int value) {
    return Fail_241_EpsfailType_IsValid(value);
  }
  static const EpsfailType EpsfailType_MIN =
    Fail_241_EpsfailType_EpsfailType_MIN;
  static const EpsfailType EpsfailType_MAX =
    Fail_241_EpsfailType_EpsfailType_MAX;
  static const int EpsfailType_ARRAYSIZE =
    Fail_241_EpsfailType_EpsfailType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpsfailType_descriptor() {
    return Fail_241_EpsfailType_descriptor();
  }
  static inline const ::std::string& EpsfailType_Name(EpsfailType value) {
    return Fail_241_EpsfailType_Name(value);
  }
  static inline bool EpsfailType_Parse(const ::std::string& name,
      EpsfailType* value) {
    return Fail_241_EpsfailType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Fail_241.EngfailType engfail = 1;
  bool has_engfail() const;
  void clear_engfail();
  static const int kEngfailFieldNumber = 1;
  ::apollo::canbus::Fail_241_EngfailType engfail() const;
  void set_engfail(::apollo::canbus::Fail_241_EngfailType value);

  // optional .apollo.canbus.Fail_241.EspfailType espfail = 2;
  bool has_espfail() const;
  void clear_espfail();
  static const int kEspfailFieldNumber = 2;
  ::apollo::canbus::Fail_241_EspfailType espfail() const;
  void set_espfail(::apollo::canbus::Fail_241_EspfailType value);

  // optional .apollo.canbus.Fail_241.EpbfailType epbfail = 3;
  bool has_epbfail() const;
  void clear_epbfail();
  static const int kEpbfailFieldNumber = 3;
  ::apollo::canbus::Fail_241_EpbfailType epbfail() const;
  void set_epbfail(::apollo::canbus::Fail_241_EpbfailType value);

  // optional .apollo.canbus.Fail_241.ShiftfailType shiftfail = 4;
  bool has_shiftfail() const;
  void clear_shiftfail();
  static const int kShiftfailFieldNumber = 4;
  ::apollo::canbus::Fail_241_ShiftfailType shiftfail() const;
  void set_shiftfail(::apollo::canbus::Fail_241_ShiftfailType value);

  // optional .apollo.canbus.Fail_241.EpsfailType epsfail = 5;
  bool has_epsfail() const;
  void clear_epsfail();
  static const int kEpsfailFieldNumber = 5;
  ::apollo::canbus::Fail_241_EpsfailType epsfail() const;
  void set_epsfail(::apollo::canbus::Fail_241_EpsfailType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Fail_241)
 private:
  void set_has_engfail();
  void clear_has_engfail();
  void set_has_espfail();
  void clear_has_espfail();
  void set_has_epbfail();
  void clear_has_epbfail();
  void set_has_shiftfail();
  void clear_has_shiftfail();
  void set_has_epsfail();
  void clear_has_epsfail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int engfail_;
  int espfail_;
  int epbfail_;
  int shiftfail_;
  int epsfail_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fbs3_237 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Fbs3_237) */ {
 public:
  Fbs3_237();
  virtual ~Fbs3_237();

  Fbs3_237(const Fbs3_237& from);

  inline Fbs3_237& operator=(const Fbs3_237& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fbs3_237(Fbs3_237&& from) noexcept
    : Fbs3_237() {
    *this = ::std::move(from);
  }

  inline Fbs3_237& operator=(Fbs3_237&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fbs3_237& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fbs3_237* internal_default_instance() {
    return reinterpret_cast<const Fbs3_237*>(
               &_Fbs3_237_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Fbs3_237* other);
  friend void swap(Fbs3_237& a, Fbs3_237& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fbs3_237* New() const final {
    return CreateMaybeMessage<Fbs3_237>(NULL);
  }

  Fbs3_237* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fbs3_237>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Fbs3_237& from);
  void MergeFrom(const Fbs3_237& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fbs3_237* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Fbs3_237_EpbswtichpositionType EpbswtichpositionType;
  static const EpbswtichpositionType EPBSWTICHPOSITION_NEUTRAL =
    Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_NEUTRAL;
  static const EpbswtichpositionType EPBSWTICHPOSITION_RELEASE =
    Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_RELEASE;
  static const EpbswtichpositionType EPBSWTICHPOSITION_APPLY =
    Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_APPLY;
  static const EpbswtichpositionType EPBSWTICHPOSITION_RESERVED1 =
    Fbs3_237_EpbswtichpositionType_EPBSWTICHPOSITION_RESERVED1;
  static inline bool EpbswtichpositionType_IsValid(int value) {
    return Fbs3_237_EpbswtichpositionType_IsValid(value);
  }
  static const EpbswtichpositionType EpbswtichpositionType_MIN =
    Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_MIN;
  static const EpbswtichpositionType EpbswtichpositionType_MAX =
    Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_MAX;
  static const int EpbswtichpositionType_ARRAYSIZE =
    Fbs3_237_EpbswtichpositionType_EpbswtichpositionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpbswtichpositionType_descriptor() {
    return Fbs3_237_EpbswtichpositionType_descriptor();
  }
  static inline const ::std::string& EpbswtichpositionType_Name(EpbswtichpositionType value) {
    return Fbs3_237_EpbswtichpositionType_Name(value);
  }
  static inline bool EpbswtichpositionType_Parse(const ::std::string& name,
      EpbswtichpositionType* value) {
    return Fbs3_237_EpbswtichpositionType_Parse(name, value);
  }

  typedef Fbs3_237_CurrentgearType CurrentgearType;
  static const CurrentgearType CURRENTGEAR_P =
    Fbs3_237_CurrentgearType_CURRENTGEAR_P;
  static const CurrentgearType CURRENTGEAR_R =
    Fbs3_237_CurrentgearType_CURRENTGEAR_R;
  static const CurrentgearType CURRENTGEAR_N =
    Fbs3_237_CurrentgearType_CURRENTGEAR_N;
  static const CurrentgearType CURRENTGEAR_D =
    Fbs3_237_CurrentgearType_CURRENTGEAR_D;
  static inline bool CurrentgearType_IsValid(int value) {
    return Fbs3_237_CurrentgearType_IsValid(value);
  }
  static const CurrentgearType CurrentgearType_MIN =
    Fbs3_237_CurrentgearType_CurrentgearType_MIN;
  static const CurrentgearType CurrentgearType_MAX =
    Fbs3_237_CurrentgearType_CurrentgearType_MAX;
  static const int CurrentgearType_ARRAYSIZE =
    Fbs3_237_CurrentgearType_CurrentgearType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CurrentgearType_descriptor() {
    return Fbs3_237_CurrentgearType_descriptor();
  }
  static inline const ::std::string& CurrentgearType_Name(CurrentgearType value) {
    return Fbs3_237_CurrentgearType_Name(value);
  }
  static inline bool CurrentgearType_Parse(const ::std::string& name,
      CurrentgearType* value) {
    return Fbs3_237_CurrentgearType_Parse(name, value);
  }

  typedef Fbs3_237_Eps_streeingmodeType Eps_streeingmodeType;
  static const Eps_streeingmodeType EPS_STREEINGMODE_MANUAL =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL;
  static const Eps_streeingmodeType EPS_STREEINGMODE_AUTOMATIC_AVAIL =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_AUTOMATIC_AVAIL;
  static const Eps_streeingmodeType EPS_STREEINGMODE_MANUAL_FROM_DRVNTERFERENCE =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL_FROM_DRVNTERFERENCE;
  static const Eps_streeingmodeType EPS_STREEINGMODE_MANUAL_FROM_EPS_FAILED_DETECTED =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_MANUAL_FROM_EPS_FAILED_DETECTED;
  static const Eps_streeingmodeType EPS_STREEINGMODE_TEMPORARY_INHIBITED =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_TEMPORARY_INHIBITED;
  static const Eps_streeingmodeType EPS_STREEINGMODE_RESERVED1 =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED1;
  static const Eps_streeingmodeType EPS_STREEINGMODE_RESERVED2 =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED2;
  static const Eps_streeingmodeType EPS_STREEINGMODE_RESERVED3 =
    Fbs3_237_Eps_streeingmodeType_EPS_STREEINGMODE_RESERVED3;
  static inline bool Eps_streeingmodeType_IsValid(int value) {
    return Fbs3_237_Eps_streeingmodeType_IsValid(value);
  }
  static const Eps_streeingmodeType Eps_streeingmodeType_MIN =
    Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_MIN;
  static const Eps_streeingmodeType Eps_streeingmodeType_MAX =
    Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_MAX;
  static const int Eps_streeingmodeType_ARRAYSIZE =
    Fbs3_237_Eps_streeingmodeType_Eps_streeingmodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Eps_streeingmodeType_descriptor() {
    return Fbs3_237_Eps_streeingmodeType_descriptor();
  }
  static inline const ::std::string& Eps_streeingmodeType_Name(Eps_streeingmodeType value) {
    return Fbs3_237_Eps_streeingmodeType_Name(value);
  }
  static inline bool Eps_streeingmodeType_Parse(const ::std::string& name,
      Eps_streeingmodeType* value) {
    return Fbs3_237_Eps_streeingmodeType_Parse(name, value);
  }

  typedef Fbs3_237_EpscurrmodType EpscurrmodType;
  static const EpscurrmodType EPSCURRMOD_NORMAL_MODE =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_NORMAL_MODE;
  static const EpscurrmodType EPSCURRMOD_SPORT_MODE =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_SPORT_MODE;
  static const EpscurrmodType EPSCURRMOD_COMFORT_MODE =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_COMFORT_MODE;
  static const EpscurrmodType EPSCURRMOD_MODESELECTIONNOTPOSSIBLE =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_MODESELECTIONNOTPOSSIBLE;
  static const EpscurrmodType EPSCURRMOD_NO_DISPLAY =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_NO_DISPLAY;
  static const EpscurrmodType EPSCURRMOD_CONDITIONNOTMEET =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_CONDITIONNOTMEET;
  static const EpscurrmodType EPSCURRMOD_RESERVED1 =
    Fbs3_237_EpscurrmodType_EPSCURRMOD_RESERVED1;
  static inline bool EpscurrmodType_IsValid(int value) {
    return Fbs3_237_EpscurrmodType_IsValid(value);
  }
  static const EpscurrmodType EpscurrmodType_MIN =
    Fbs3_237_EpscurrmodType_EpscurrmodType_MIN;
  static const EpscurrmodType EpscurrmodType_MAX =
    Fbs3_237_EpscurrmodType_EpscurrmodType_MAX;
  static const int EpscurrmodType_ARRAYSIZE =
    Fbs3_237_EpscurrmodType_EpscurrmodType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EpscurrmodType_descriptor() {
    return Fbs3_237_EpscurrmodType_descriptor();
  }
  static inline const ::std::string& EpscurrmodType_Name(EpscurrmodType value) {
    return Fbs3_237_EpscurrmodType_Name(value);
  }
  static inline bool EpscurrmodType_Parse(const ::std::string& name,
      EpscurrmodType* value) {
    return Fbs3_237_EpscurrmodType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional double engspd = 1;
  bool has_engspd() const;
  void clear_engspd();
  static const int kEngspdFieldNumber = 1;
  double engspd() const;
  void set_engspd(double value);

  // optional double accpedalpos = 2;
  bool has_accpedalpos() const;
  void clear_accpedalpos();
  static const int kAccpedalposFieldNumber = 2;
  double accpedalpos() const;
  void set_accpedalpos(double value);

  // optional .apollo.canbus.Fbs3_237.EpbswtichpositionType epbswtichposition = 3;
  bool has_epbswtichposition() const;
  void clear_epbswtichposition();
  static const int kEpbswtichpositionFieldNumber = 3;
  ::apollo::canbus::Fbs3_237_EpbswtichpositionType epbswtichposition() const;
  void set_epbswtichposition(::apollo::canbus::Fbs3_237_EpbswtichpositionType value);

  // optional .apollo.canbus.Fbs3_237.CurrentgearType currentgear = 4;
  bool has_currentgear() const;
  void clear_currentgear();
  static const int kCurrentgearFieldNumber = 4;
  ::apollo::canbus::Fbs3_237_CurrentgearType currentgear() const;
  void set_currentgear(::apollo::canbus::Fbs3_237_CurrentgearType value);

  // optional double epsdrvinputtrqvalue = 6;
  bool has_epsdrvinputtrqvalue() const;
  void clear_epsdrvinputtrqvalue();
  static const int kEpsdrvinputtrqvalueFieldNumber = 6;
  double epsdrvinputtrqvalue() const;
  void set_epsdrvinputtrqvalue(double value);

  // optional .apollo.canbus.Fbs3_237.Eps_streeingmodeType eps_streeingmode = 5;
  bool has_eps_streeingmode() const;
  void clear_eps_streeingmode();
  static const int kEpsStreeingmodeFieldNumber = 5;
  ::apollo::canbus::Fbs3_237_Eps_streeingmodeType eps_streeingmode() const;
  void set_eps_streeingmode(::apollo::canbus::Fbs3_237_Eps_streeingmodeType value);

  // optional .apollo.canbus.Fbs3_237.EpscurrmodType epscurrmod = 8;
  bool has_epscurrmod() const;
  void clear_epscurrmod();
  static const int kEpscurrmodFieldNumber = 8;
  ::apollo::canbus::Fbs3_237_EpscurrmodType epscurrmod() const;
  void set_epscurrmod(::apollo::canbus::Fbs3_237_EpscurrmodType value);

  // optional double epsconsumedcurrvalue = 7;
  bool has_epsconsumedcurrvalue() const;
  void clear_epsconsumedcurrvalue();
  static const int kEpsconsumedcurrvalueFieldNumber = 7;
  double epsconsumedcurrvalue() const;
  void set_epsconsumedcurrvalue(double value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Fbs3_237)
 private:
  void set_has_engspd();
  void clear_has_engspd();
  void set_has_accpedalpos();
  void clear_has_accpedalpos();
  void set_has_epbswtichposition();
  void clear_has_epbswtichposition();
  void set_has_currentgear();
  void clear_has_currentgear();
  void set_has_eps_streeingmode();
  void clear_has_eps_streeingmode();
  void set_has_epsdrvinputtrqvalue();
  void clear_has_epsdrvinputtrqvalue();
  void set_has_epsconsumedcurrvalue();
  void clear_has_epsconsumedcurrvalue();
  void set_has_epscurrmod();
  void clear_has_epscurrmod();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double engspd_;
  double accpedalpos_;
  int epbswtichposition_;
  int currentgear_;
  double epsdrvinputtrqvalue_;
  int eps_streeingmode_;
  int epscurrmod_;
  double epsconsumedcurrvalue_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ads3_38e : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Ads3_38e) */ {
 public:
  Ads3_38e();
  virtual ~Ads3_38e();

  Ads3_38e(const Ads3_38e& from);

  inline Ads3_38e& operator=(const Ads3_38e& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ads3_38e(Ads3_38e&& from) noexcept
    : Ads3_38e() {
    *this = ::std::move(from);
  }

  inline Ads3_38e& operator=(Ads3_38e&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ads3_38e& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ads3_38e* internal_default_instance() {
    return reinterpret_cast<const Ads3_38e*>(
               &_Ads3_38e_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Ads3_38e* other);
  friend void swap(Ads3_38e& a, Ads3_38e& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ads3_38e* New() const final {
    return CreateMaybeMessage<Ads3_38e>(NULL);
  }

  Ads3_38e* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ads3_38e>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ads3_38e& from);
  void MergeFrom(const Ads3_38e& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ads3_38e* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ads3_38e_Ads_bcm_workstsType Ads_bcm_workstsType;
  static const Ads_bcm_workstsType ADS_BCM_WORKSTS_DISABLE =
    Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_DISABLE;
  static const Ads_bcm_workstsType ADS_BCM_WORKSTS_ENABLE =
    Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_ENABLE;
  static const Ads_bcm_workstsType ADS_BCM_WORKSTS_ACTIVE =
    Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_ACTIVE;
  static const Ads_bcm_workstsType ADS_BCM_WORKSTS_FAILED =
    Ads3_38e_Ads_bcm_workstsType_ADS_BCM_WORKSTS_FAILED;
  static inline bool Ads_bcm_workstsType_IsValid(int value) {
    return Ads3_38e_Ads_bcm_workstsType_IsValid(value);
  }
  static const Ads_bcm_workstsType Ads_bcm_workstsType_MIN =
    Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_MIN;
  static const Ads_bcm_workstsType Ads_bcm_workstsType_MAX =
    Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_MAX;
  static const int Ads_bcm_workstsType_ARRAYSIZE =
    Ads3_38e_Ads_bcm_workstsType_Ads_bcm_workstsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_bcm_workstsType_descriptor() {
    return Ads3_38e_Ads_bcm_workstsType_descriptor();
  }
  static inline const ::std::string& Ads_bcm_workstsType_Name(Ads_bcm_workstsType value) {
    return Ads3_38e_Ads_bcm_workstsType_Name(value);
  }
  static inline bool Ads_bcm_workstsType_Parse(const ::std::string& name,
      Ads_bcm_workstsType* value) {
    return Ads3_38e_Ads_bcm_workstsType_Parse(name, value);
  }

  typedef Ads3_38e_Ads_bcmworkstsvalidType Ads_bcmworkstsvalidType;
  static const Ads_bcmworkstsvalidType ADS_BCMWORKSTSVALID_INVALID =
    Ads3_38e_Ads_bcmworkstsvalidType_ADS_BCMWORKSTSVALID_INVALID;
  static const Ads_bcmworkstsvalidType ADS_BCMWORKSTSVALID_VALID =
    Ads3_38e_Ads_bcmworkstsvalidType_ADS_BCMWORKSTSVALID_VALID;
  static inline bool Ads_bcmworkstsvalidType_IsValid(int value) {
    return Ads3_38e_Ads_bcmworkstsvalidType_IsValid(value);
  }
  static const Ads_bcmworkstsvalidType Ads_bcmworkstsvalidType_MIN =
    Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_MIN;
  static const Ads_bcmworkstsvalidType Ads_bcmworkstsvalidType_MAX =
    Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_MAX;
  static const int Ads_bcmworkstsvalidType_ARRAYSIZE =
    Ads3_38e_Ads_bcmworkstsvalidType_Ads_bcmworkstsvalidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_bcmworkstsvalidType_descriptor() {
    return Ads3_38e_Ads_bcmworkstsvalidType_descriptor();
  }
  static inline const ::std::string& Ads_bcmworkstsvalidType_Name(Ads_bcmworkstsvalidType value) {
    return Ads3_38e_Ads_bcmworkstsvalidType_Name(value);
  }
  static inline bool Ads_bcmworkstsvalidType_Parse(const ::std::string& name,
      Ads_bcmworkstsvalidType* value) {
    return Ads3_38e_Ads_bcmworkstsvalidType_Parse(name, value);
  }

  typedef Ads3_38e_Ads_reqcontrolbcmType Ads_reqcontrolbcmType;
  static const Ads_reqcontrolbcmType ADS_REQCONTROLBCM_NO_REQUEST =
    Ads3_38e_Ads_reqcontrolbcmType_ADS_REQCONTROLBCM_NO_REQUEST;
  static const Ads_reqcontrolbcmType ADS_REQCONTROLBCM_REQUEST =
    Ads3_38e_Ads_reqcontrolbcmType_ADS_REQCONTROLBCM_REQUEST;
  static inline bool Ads_reqcontrolbcmType_IsValid(int value) {
    return Ads3_38e_Ads_reqcontrolbcmType_IsValid(value);
  }
  static const Ads_reqcontrolbcmType Ads_reqcontrolbcmType_MIN =
    Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_MIN;
  static const Ads_reqcontrolbcmType Ads_reqcontrolbcmType_MAX =
    Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_MAX;
  static const int Ads_reqcontrolbcmType_ARRAYSIZE =
    Ads3_38e_Ads_reqcontrolbcmType_Ads_reqcontrolbcmType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ads_reqcontrolbcmType_descriptor() {
    return Ads3_38e_Ads_reqcontrolbcmType_descriptor();
  }
  static inline const ::std::string& Ads_reqcontrolbcmType_Name(Ads_reqcontrolbcmType value) {
    return Ads3_38e_Ads_reqcontrolbcmType_Name(value);
  }
  static inline bool Ads_reqcontrolbcmType_Parse(const ::std::string& name,
      Ads_reqcontrolbcmType* value) {
    return Ads3_38e_Ads_reqcontrolbcmType_Parse(name, value);
  }

  typedef Ads3_38e_HighbeamtonType HighbeamtonType;
  static const HighbeamtonType HIGHBEAMTON_TURN_OFF =
    Ads3_38e_HighbeamtonType_HIGHBEAMTON_TURN_OFF;
  static const HighbeamtonType HIGHBEAMTON_TURN_ON =
    Ads3_38e_HighbeamtonType_HIGHBEAMTON_TURN_ON;
  static inline bool HighbeamtonType_IsValid(int value) {
    return Ads3_38e_HighbeamtonType_IsValid(value);
  }
  static const HighbeamtonType HighbeamtonType_MIN =
    Ads3_38e_HighbeamtonType_HighbeamtonType_MIN;
  static const HighbeamtonType HighbeamtonType_MAX =
    Ads3_38e_HighbeamtonType_HighbeamtonType_MAX;
  static const int HighbeamtonType_ARRAYSIZE =
    Ads3_38e_HighbeamtonType_HighbeamtonType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HighbeamtonType_descriptor() {
    return Ads3_38e_HighbeamtonType_descriptor();
  }
  static inline const ::std::string& HighbeamtonType_Name(HighbeamtonType value) {
    return Ads3_38e_HighbeamtonType_Name(value);
  }
  static inline bool HighbeamtonType_Parse(const ::std::string& name,
      HighbeamtonType* value) {
    return Ads3_38e_HighbeamtonType_Parse(name, value);
  }

  typedef Ads3_38e_DippedbeamonType DippedbeamonType;
  static const DippedbeamonType DIPPEDBEAMON_TURN_OFF =
    Ads3_38e_DippedbeamonType_DIPPEDBEAMON_TURN_OFF;
  static const DippedbeamonType DIPPEDBEAMON_TURN_ON =
    Ads3_38e_DippedbeamonType_DIPPEDBEAMON_TURN_ON;
  static inline bool DippedbeamonType_IsValid(int value) {
    return Ads3_38e_DippedbeamonType_IsValid(value);
  }
  static const DippedbeamonType DippedbeamonType_MIN =
    Ads3_38e_DippedbeamonType_DippedbeamonType_MIN;
  static const DippedbeamonType DippedbeamonType_MAX =
    Ads3_38e_DippedbeamonType_DippedbeamonType_MAX;
  static const int DippedbeamonType_ARRAYSIZE =
    Ads3_38e_DippedbeamonType_DippedbeamonType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DippedbeamonType_descriptor() {
    return Ads3_38e_DippedbeamonType_descriptor();
  }
  static inline const ::std::string& DippedbeamonType_Name(DippedbeamonType value) {
    return Ads3_38e_DippedbeamonType_Name(value);
  }
  static inline bool DippedbeamonType_Parse(const ::std::string& name,
      DippedbeamonType* value) {
    return Ads3_38e_DippedbeamonType_Parse(name, value);
  }

  typedef Ads3_38e_TurnllightonType TurnllightonType;
  static const TurnllightonType TURNLLIGHTON_TURN_OFF =
    Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_OFF;
  static const TurnllightonType TURNLLIGHTON_TURN_LEFT_ON =
    Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_LEFT_ON;
  static const TurnllightonType TURNLLIGHTON_TURN_RIGHT_ON =
    Ads3_38e_TurnllightonType_TURNLLIGHTON_TURN_RIGHT_ON;
  static const TurnllightonType TURNLLIGHTON_RESERVED =
    Ads3_38e_TurnllightonType_TURNLLIGHTON_RESERVED;
  static inline bool TurnllightonType_IsValid(int value) {
    return Ads3_38e_TurnllightonType_IsValid(value);
  }
  static const TurnllightonType TurnllightonType_MIN =
    Ads3_38e_TurnllightonType_TurnllightonType_MIN;
  static const TurnllightonType TurnllightonType_MAX =
    Ads3_38e_TurnllightonType_TurnllightonType_MAX;
  static const int TurnllightonType_ARRAYSIZE =
    Ads3_38e_TurnllightonType_TurnllightonType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TurnllightonType_descriptor() {
    return Ads3_38e_TurnllightonType_descriptor();
  }
  static inline const ::std::string& TurnllightonType_Name(TurnllightonType value) {
    return Ads3_38e_TurnllightonType_Name(value);
  }
  static inline bool TurnllightonType_Parse(const ::std::string& name,
      TurnllightonType* value) {
    return Ads3_38e_TurnllightonType_Parse(name, value);
  }

  typedef Ads3_38e_EmergencylightonType EmergencylightonType;
  static const EmergencylightonType EMERGENCYLIGHTON_TURN_OFF =
    Ads3_38e_EmergencylightonType_EMERGENCYLIGHTON_TURN_OFF;
  static const EmergencylightonType EMERGENCYLIGHTON_TURN_ON =
    Ads3_38e_EmergencylightonType_EMERGENCYLIGHTON_TURN_ON;
  static inline bool EmergencylightonType_IsValid(int value) {
    return Ads3_38e_EmergencylightonType_IsValid(value);
  }
  static const EmergencylightonType EmergencylightonType_MIN =
    Ads3_38e_EmergencylightonType_EmergencylightonType_MIN;
  static const EmergencylightonType EmergencylightonType_MAX =
    Ads3_38e_EmergencylightonType_EmergencylightonType_MAX;
  static const int EmergencylightonType_ARRAYSIZE =
    Ads3_38e_EmergencylightonType_EmergencylightonType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EmergencylightonType_descriptor() {
    return Ads3_38e_EmergencylightonType_descriptor();
  }
  static inline const ::std::string& EmergencylightonType_Name(EmergencylightonType value) {
    return Ads3_38e_EmergencylightonType_Name(value);
  }
  static inline bool EmergencylightonType_Parse(const ::std::string& name,
      EmergencylightonType* value) {
    return Ads3_38e_EmergencylightonType_Parse(name, value);
  }

  typedef Ads3_38e_FfoglamponType FfoglamponType;
  static const FfoglamponType FFOGLAMPON_TURN_OFF =
    Ads3_38e_FfoglamponType_FFOGLAMPON_TURN_OFF;
  static const FfoglamponType FFOGLAMPON_TURN_ON =
    Ads3_38e_FfoglamponType_FFOGLAMPON_TURN_ON;
  static inline bool FfoglamponType_IsValid(int value) {
    return Ads3_38e_FfoglamponType_IsValid(value);
  }
  static const FfoglamponType FfoglamponType_MIN =
    Ads3_38e_FfoglamponType_FfoglamponType_MIN;
  static const FfoglamponType FfoglamponType_MAX =
    Ads3_38e_FfoglamponType_FfoglamponType_MAX;
  static const int FfoglamponType_ARRAYSIZE =
    Ads3_38e_FfoglamponType_FfoglamponType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FfoglamponType_descriptor() {
    return Ads3_38e_FfoglamponType_descriptor();
  }
  static inline const ::std::string& FfoglamponType_Name(FfoglamponType value) {
    return Ads3_38e_FfoglamponType_Name(value);
  }
  static inline bool FfoglamponType_Parse(const ::std::string& name,
      FfoglamponType* value) {
    return Ads3_38e_FfoglamponType_Parse(name, value);
  }

  typedef Ads3_38e_RfoglamponType RfoglamponType;
  static const RfoglamponType RFOGLAMPON_TURN_OFF =
    Ads3_38e_RfoglamponType_RFOGLAMPON_TURN_OFF;
  static const RfoglamponType RFOGLAMPON_TURN_ON =
    Ads3_38e_RfoglamponType_RFOGLAMPON_TURN_ON;
  static inline bool RfoglamponType_IsValid(int value) {
    return Ads3_38e_RfoglamponType_IsValid(value);
  }
  static const RfoglamponType RfoglamponType_MIN =
    Ads3_38e_RfoglamponType_RfoglamponType_MIN;
  static const RfoglamponType RfoglamponType_MAX =
    Ads3_38e_RfoglamponType_RfoglamponType_MAX;
  static const int RfoglamponType_ARRAYSIZE =
    Ads3_38e_RfoglamponType_RfoglamponType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RfoglamponType_descriptor() {
    return Ads3_38e_RfoglamponType_descriptor();
  }
  static inline const ::std::string& RfoglamponType_Name(RfoglamponType value) {
    return Ads3_38e_RfoglamponType_Name(value);
  }
  static inline bool RfoglamponType_Parse(const ::std::string& name,
      RfoglamponType* value) {
    return Ads3_38e_RfoglamponType_Parse(name, value);
  }

  typedef Ads3_38e_BrakelightType BrakelightType;
  static const BrakelightType BRAKELIGHT_TURN_OFF =
    Ads3_38e_BrakelightType_BRAKELIGHT_TURN_OFF;
  static const BrakelightType BRAKELIGHT_TURN_ON =
    Ads3_38e_BrakelightType_BRAKELIGHT_TURN_ON;
  static inline bool BrakelightType_IsValid(int value) {
    return Ads3_38e_BrakelightType_IsValid(value);
  }
  static const BrakelightType BrakelightType_MIN =
    Ads3_38e_BrakelightType_BrakelightType_MIN;
  static const BrakelightType BrakelightType_MAX =
    Ads3_38e_BrakelightType_BrakelightType_MAX;
  static const int BrakelightType_ARRAYSIZE =
    Ads3_38e_BrakelightType_BrakelightType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BrakelightType_descriptor() {
    return Ads3_38e_BrakelightType_descriptor();
  }
  static inline const ::std::string& BrakelightType_Name(BrakelightType value) {
    return Ads3_38e_BrakelightType_Name(value);
  }
  static inline bool BrakelightType_Parse(const ::std::string& name,
      BrakelightType* value) {
    return Ads3_38e_BrakelightType_Parse(name, value);
  }

  typedef Ads3_38e_HornonType HornonType;
  static const HornonType HORNON_TURN_OFF =
    Ads3_38e_HornonType_HORNON_TURN_OFF;
  static const HornonType HORNON_TURN_ON =
    Ads3_38e_HornonType_HORNON_TURN_ON;
  static inline bool HornonType_IsValid(int value) {
    return Ads3_38e_HornonType_IsValid(value);
  }
  static const HornonType HornonType_MIN =
    Ads3_38e_HornonType_HornonType_MIN;
  static const HornonType HornonType_MAX =
    Ads3_38e_HornonType_HornonType_MAX;
  static const int HornonType_ARRAYSIZE =
    Ads3_38e_HornonType_HornonType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HornonType_descriptor() {
    return Ads3_38e_HornonType_descriptor();
  }
  static inline const ::std::string& HornonType_Name(HornonType value) {
    return Ads3_38e_HornonType_Name(value);
  }
  static inline bool HornonType_Parse(const ::std::string& name,
      HornonType* value) {
    return Ads3_38e_HornonType_Parse(name, value);
  }

  typedef Ads3_38e_FwindshieldwiperType FwindshieldwiperType;
  static const FwindshieldwiperType FWINDSHIELDWIPER_TURN_OFF =
    Ads3_38e_FwindshieldwiperType_FWINDSHIELDWIPER_TURN_OFF;
  static const FwindshieldwiperType FWINDSHIELDWIPER_TURN_ON =
    Ads3_38e_FwindshieldwiperType_FWINDSHIELDWIPER_TURN_ON;
  static inline bool FwindshieldwiperType_IsValid(int value) {
    return Ads3_38e_FwindshieldwiperType_IsValid(value);
  }
  static const FwindshieldwiperType FwindshieldwiperType_MIN =
    Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_MIN;
  static const FwindshieldwiperType FwindshieldwiperType_MAX =
    Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_MAX;
  static const int FwindshieldwiperType_ARRAYSIZE =
    Ads3_38e_FwindshieldwiperType_FwindshieldwiperType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FwindshieldwiperType_descriptor() {
    return Ads3_38e_FwindshieldwiperType_descriptor();
  }
  static inline const ::std::string& FwindshieldwiperType_Name(FwindshieldwiperType value) {
    return Ads3_38e_FwindshieldwiperType_Name(value);
  }
  static inline bool FwindshieldwiperType_Parse(const ::std::string& name,
      FwindshieldwiperType* value) {
    return Ads3_38e_FwindshieldwiperType_Parse(name, value);
  }

  typedef Ads3_38e_RwindshieldwiperType RwindshieldwiperType;
  static const RwindshieldwiperType RWINDSHIELDWIPER_TURN_OFF =
    Ads3_38e_RwindshieldwiperType_RWINDSHIELDWIPER_TURN_OFF;
  static const RwindshieldwiperType RWINDSHIELDWIPER_TURN_ON =
    Ads3_38e_RwindshieldwiperType_RWINDSHIELDWIPER_TURN_ON;
  static inline bool RwindshieldwiperType_IsValid(int value) {
    return Ads3_38e_RwindshieldwiperType_IsValid(value);
  }
  static const RwindshieldwiperType RwindshieldwiperType_MIN =
    Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_MIN;
  static const RwindshieldwiperType RwindshieldwiperType_MAX =
    Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_MAX;
  static const int RwindshieldwiperType_ARRAYSIZE =
    Ads3_38e_RwindshieldwiperType_RwindshieldwiperType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RwindshieldwiperType_descriptor() {
    return Ads3_38e_RwindshieldwiperType_descriptor();
  }
  static inline const ::std::string& RwindshieldwiperType_Name(RwindshieldwiperType value) {
    return Ads3_38e_RwindshieldwiperType_Name(value);
  }
  static inline bool RwindshieldwiperType_Parse(const ::std::string& name,
      RwindshieldwiperType* value) {
    return Ads3_38e_RwindshieldwiperType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Ads3_38e.Ads_bcm_workstsType ads_bcm_worksts = 1;
  bool has_ads_bcm_worksts() const;
  void clear_ads_bcm_worksts();
  static const int kAdsBcmWorkstsFieldNumber = 1;
  ::apollo::canbus::Ads3_38e_Ads_bcm_workstsType ads_bcm_worksts() const;
  void set_ads_bcm_worksts(::apollo::canbus::Ads3_38e_Ads_bcm_workstsType value);

  // optional .apollo.canbus.Ads3_38e.Ads_bcmworkstsvalidType ads_bcmworkstsvalid = 2;
  bool has_ads_bcmworkstsvalid() const;
  void clear_ads_bcmworkstsvalid();
  static const int kAdsBcmworkstsvalidFieldNumber = 2;
  ::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType ads_bcmworkstsvalid() const;
  void set_ads_bcmworkstsvalid(::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType value);

  // optional .apollo.canbus.Ads3_38e.Ads_reqcontrolbcmType ads_reqcontrolbcm = 3;
  bool has_ads_reqcontrolbcm() const;
  void clear_ads_reqcontrolbcm();
  static const int kAdsReqcontrolbcmFieldNumber = 3;
  ::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType ads_reqcontrolbcm() const;
  void set_ads_reqcontrolbcm(::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType value);

  // optional .apollo.canbus.Ads3_38e.HighbeamtonType highbeamton = 4;
  bool has_highbeamton() const;
  void clear_highbeamton();
  static const int kHighbeamtonFieldNumber = 4;
  ::apollo::canbus::Ads3_38e_HighbeamtonType highbeamton() const;
  void set_highbeamton(::apollo::canbus::Ads3_38e_HighbeamtonType value);

  // optional .apollo.canbus.Ads3_38e.DippedbeamonType dippedbeamon = 5;
  bool has_dippedbeamon() const;
  void clear_dippedbeamon();
  static const int kDippedbeamonFieldNumber = 5;
  ::apollo::canbus::Ads3_38e_DippedbeamonType dippedbeamon() const;
  void set_dippedbeamon(::apollo::canbus::Ads3_38e_DippedbeamonType value);

  // optional .apollo.canbus.Ads3_38e.TurnllightonType turnllighton = 6;
  bool has_turnllighton() const;
  void clear_turnllighton();
  static const int kTurnllightonFieldNumber = 6;
  ::apollo::canbus::Ads3_38e_TurnllightonType turnllighton() const;
  void set_turnllighton(::apollo::canbus::Ads3_38e_TurnllightonType value);

  // optional .apollo.canbus.Ads3_38e.EmergencylightonType emergencylighton = 7;
  bool has_emergencylighton() const;
  void clear_emergencylighton();
  static const int kEmergencylightonFieldNumber = 7;
  ::apollo::canbus::Ads3_38e_EmergencylightonType emergencylighton() const;
  void set_emergencylighton(::apollo::canbus::Ads3_38e_EmergencylightonType value);

  // optional .apollo.canbus.Ads3_38e.FfoglamponType ffoglampon = 8;
  bool has_ffoglampon() const;
  void clear_ffoglampon();
  static const int kFfoglamponFieldNumber = 8;
  ::apollo::canbus::Ads3_38e_FfoglamponType ffoglampon() const;
  void set_ffoglampon(::apollo::canbus::Ads3_38e_FfoglamponType value);

  // optional .apollo.canbus.Ads3_38e.RfoglamponType rfoglampon = 9;
  bool has_rfoglampon() const;
  void clear_rfoglampon();
  static const int kRfoglamponFieldNumber = 9;
  ::apollo::canbus::Ads3_38e_RfoglamponType rfoglampon() const;
  void set_rfoglampon(::apollo::canbus::Ads3_38e_RfoglamponType value);

  // optional .apollo.canbus.Ads3_38e.BrakelightType brakelight = 10;
  bool has_brakelight() const;
  void clear_brakelight();
  static const int kBrakelightFieldNumber = 10;
  ::apollo::canbus::Ads3_38e_BrakelightType brakelight() const;
  void set_brakelight(::apollo::canbus::Ads3_38e_BrakelightType value);

  // optional .apollo.canbus.Ads3_38e.HornonType hornon = 11;
  bool has_hornon() const;
  void clear_hornon();
  static const int kHornonFieldNumber = 11;
  ::apollo::canbus::Ads3_38e_HornonType hornon() const;
  void set_hornon(::apollo::canbus::Ads3_38e_HornonType value);

  // optional .apollo.canbus.Ads3_38e.FwindshieldwiperType fwindshieldwiper = 12;
  bool has_fwindshieldwiper() const;
  void clear_fwindshieldwiper();
  static const int kFwindshieldwiperFieldNumber = 12;
  ::apollo::canbus::Ads3_38e_FwindshieldwiperType fwindshieldwiper() const;
  void set_fwindshieldwiper(::apollo::canbus::Ads3_38e_FwindshieldwiperType value);

  // optional .apollo.canbus.Ads3_38e.RwindshieldwiperType rwindshieldwiper = 13;
  bool has_rwindshieldwiper() const;
  void clear_rwindshieldwiper();
  static const int kRwindshieldwiperFieldNumber = 13;
  ::apollo::canbus::Ads3_38e_RwindshieldwiperType rwindshieldwiper() const;
  void set_rwindshieldwiper(::apollo::canbus::Ads3_38e_RwindshieldwiperType value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Ads3_38e)
 private:
  void set_has_ads_bcm_worksts();
  void clear_has_ads_bcm_worksts();
  void set_has_ads_bcmworkstsvalid();
  void clear_has_ads_bcmworkstsvalid();
  void set_has_ads_reqcontrolbcm();
  void clear_has_ads_reqcontrolbcm();
  void set_has_highbeamton();
  void clear_has_highbeamton();
  void set_has_dippedbeamon();
  void clear_has_dippedbeamon();
  void set_has_turnllighton();
  void clear_has_turnllighton();
  void set_has_emergencylighton();
  void clear_has_emergencylighton();
  void set_has_ffoglampon();
  void clear_has_ffoglampon();
  void set_has_rfoglampon();
  void clear_has_rfoglampon();
  void set_has_brakelight();
  void clear_has_brakelight();
  void set_has_hornon();
  void clear_has_hornon();
  void set_has_fwindshieldwiper();
  void clear_has_fwindshieldwiper();
  void set_has_rwindshieldwiper();
  void clear_has_rwindshieldwiper();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int ads_bcm_worksts_;
  int ads_bcmworkstsvalid_;
  int ads_reqcontrolbcm_;
  int highbeamton_;
  int dippedbeamon_;
  int turnllighton_;
  int emergencylighton_;
  int ffoglampon_;
  int rfoglampon_;
  int brakelight_;
  int hornon_;
  int fwindshieldwiper_;
  int rwindshieldwiper_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Wey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.Wey) */ {
 public:
  Wey();
  virtual ~Wey();

  Wey(const Wey& from);

  inline Wey& operator=(const Wey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Wey(Wey&& from) noexcept
    : Wey() {
    *this = ::std::move(from);
  }

  inline Wey& operator=(Wey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Wey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Wey* internal_default_instance() {
    return reinterpret_cast<const Wey*>(
               &_Wey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Wey* other);
  friend void swap(Wey& a, Wey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Wey* New() const final {
    return CreateMaybeMessage<Wey>(NULL);
  }

  Wey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Wey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Wey& from);
  void MergeFrom(const Wey& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Wey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.Ads_shifter_115 ads_shifter_115 = 1;
  bool has_ads_shifter_115() const;
  void clear_ads_shifter_115();
  static const int kAdsShifter115FieldNumber = 1;
  private:
  const ::apollo::canbus::Ads_shifter_115& _internal_ads_shifter_115() const;
  public:
  const ::apollo::canbus::Ads_shifter_115& ads_shifter_115() const;
  ::apollo::canbus::Ads_shifter_115* release_ads_shifter_115();
  ::apollo::canbus::Ads_shifter_115* mutable_ads_shifter_115();
  void set_allocated_ads_shifter_115(::apollo::canbus::Ads_shifter_115* ads_shifter_115);

  // optional .apollo.canbus.Ads_eps_113 ads_eps_113 = 2;
  bool has_ads_eps_113() const;
  void clear_ads_eps_113();
  static const int kAdsEps113FieldNumber = 2;
  private:
  const ::apollo::canbus::Ads_eps_113& _internal_ads_eps_113() const;
  public:
  const ::apollo::canbus::Ads_eps_113& ads_eps_113() const;
  ::apollo::canbus::Ads_eps_113* release_ads_eps_113();
  ::apollo::canbus::Ads_eps_113* mutable_ads_eps_113();
  void set_allocated_ads_eps_113(::apollo::canbus::Ads_eps_113* ads_eps_113);

  // optional .apollo.canbus.Status_310 status_310 = 3;
  bool has_status_310() const;
  void clear_status_310();
  static const int kStatus310FieldNumber = 3;
  private:
  const ::apollo::canbus::Status_310& _internal_status_310() const;
  public:
  const ::apollo::canbus::Status_310& status_310() const;
  ::apollo::canbus::Status_310* release_status_310();
  ::apollo::canbus::Status_310* mutable_status_310();
  void set_allocated_status_310(::apollo::canbus::Status_310* status_310);

  // optional .apollo.canbus.Vin_resp3_393 vin_resp3_393 = 4;
  bool has_vin_resp3_393() const;
  void clear_vin_resp3_393();
  static const int kVinResp3393FieldNumber = 4;
  private:
  const ::apollo::canbus::Vin_resp3_393& _internal_vin_resp3_393() const;
  public:
  const ::apollo::canbus::Vin_resp3_393& vin_resp3_393() const;
  ::apollo::canbus::Vin_resp3_393* release_vin_resp3_393();
  ::apollo::canbus::Vin_resp3_393* mutable_vin_resp3_393();
  void set_allocated_vin_resp3_393(::apollo::canbus::Vin_resp3_393* vin_resp3_393);

  // optional .apollo.canbus.Vin_resp2_392 vin_resp2_392 = 5;
  bool has_vin_resp2_392() const;
  void clear_vin_resp2_392();
  static const int kVinResp2392FieldNumber = 5;
  private:
  const ::apollo::canbus::Vin_resp2_392& _internal_vin_resp2_392() const;
  public:
  const ::apollo::canbus::Vin_resp2_392& vin_resp2_392() const;
  ::apollo::canbus::Vin_resp2_392* release_vin_resp2_392();
  ::apollo::canbus::Vin_resp2_392* mutable_vin_resp2_392();
  void set_allocated_vin_resp2_392(::apollo::canbus::Vin_resp2_392* vin_resp2_392);

  // optional .apollo.canbus.Vin_resp1_391 vin_resp1_391 = 6;
  bool has_vin_resp1_391() const;
  void clear_vin_resp1_391();
  static const int kVinResp1391FieldNumber = 6;
  private:
  const ::apollo::canbus::Vin_resp1_391& _internal_vin_resp1_391() const;
  public:
  const ::apollo::canbus::Vin_resp1_391& vin_resp1_391() const;
  ::apollo::canbus::Vin_resp1_391* release_vin_resp1_391();
  ::apollo::canbus::Vin_resp1_391* mutable_vin_resp1_391();
  void set_allocated_vin_resp1_391(::apollo::canbus::Vin_resp1_391* vin_resp1_391);

  // optional .apollo.canbus.Ads_req_vin_390 ads_req_vin_390 = 7;
  bool has_ads_req_vin_390() const;
  void clear_ads_req_vin_390();
  static const int kAdsReqVin390FieldNumber = 7;
  private:
  const ::apollo::canbus::Ads_req_vin_390& _internal_ads_req_vin_390() const;
  public:
  const ::apollo::canbus::Ads_req_vin_390& ads_req_vin_390() const;
  ::apollo::canbus::Ads_req_vin_390* release_ads_req_vin_390();
  ::apollo::canbus::Ads_req_vin_390* mutable_ads_req_vin_390();
  void set_allocated_ads_req_vin_390(::apollo::canbus::Ads_req_vin_390* ads_req_vin_390);

  // optional .apollo.canbus.Ads1_111 ads1_111 = 8;
  bool has_ads1_111() const;
  void clear_ads1_111();
  static const int kAds1111FieldNumber = 8;
  private:
  const ::apollo::canbus::Ads1_111& _internal_ads1_111() const;
  public:
  const ::apollo::canbus::Ads1_111& ads1_111() const;
  ::apollo::canbus::Ads1_111* release_ads1_111();
  ::apollo::canbus::Ads1_111* mutable_ads1_111();
  void set_allocated_ads1_111(::apollo::canbus::Ads1_111* ads1_111);

  // optional .apollo.canbus.Fbs2_240 fbs2_240 = 9;
  bool has_fbs2_240() const;
  void clear_fbs2_240();
  static const int kFbs2240FieldNumber = 9;
  private:
  const ::apollo::canbus::Fbs2_240& _internal_fbs2_240() const;
  public:
  const ::apollo::canbus::Fbs2_240& fbs2_240() const;
  ::apollo::canbus::Fbs2_240* release_fbs2_240();
  ::apollo::canbus::Fbs2_240* mutable_fbs2_240();
  void set_allocated_fbs2_240(::apollo::canbus::Fbs2_240* fbs2_240);

  // optional .apollo.canbus.Fbs1_243 fbs1_243 = 10;
  bool has_fbs1_243() const;
  void clear_fbs1_243();
  static const int kFbs1243FieldNumber = 10;
  private:
  const ::apollo::canbus::Fbs1_243& _internal_fbs1_243() const;
  public:
  const ::apollo::canbus::Fbs1_243& fbs1_243() const;
  ::apollo::canbus::Fbs1_243* release_fbs1_243();
  ::apollo::canbus::Fbs1_243* mutable_fbs1_243();
  void set_allocated_fbs1_243(::apollo::canbus::Fbs1_243* fbs1_243);

  // optional .apollo.canbus.Fbs4_235 fbs4_235 = 11;
  bool has_fbs4_235() const;
  void clear_fbs4_235();
  static const int kFbs4235FieldNumber = 11;
  private:
  const ::apollo::canbus::Fbs4_235& _internal_fbs4_235() const;
  public:
  const ::apollo::canbus::Fbs4_235& fbs4_235() const;
  ::apollo::canbus::Fbs4_235* release_fbs4_235();
  ::apollo::canbus::Fbs4_235* mutable_fbs4_235();
  void set_allocated_fbs4_235(::apollo::canbus::Fbs4_235* fbs4_235);

  // optional .apollo.canbus.Fail_241 fail_241 = 12;
  bool has_fail_241() const;
  void clear_fail_241();
  static const int kFail241FieldNumber = 12;
  private:
  const ::apollo::canbus::Fail_241& _internal_fail_241() const;
  public:
  const ::apollo::canbus::Fail_241& fail_241() const;
  ::apollo::canbus::Fail_241* release_fail_241();
  ::apollo::canbus::Fail_241* mutable_fail_241();
  void set_allocated_fail_241(::apollo::canbus::Fail_241* fail_241);

  // optional .apollo.canbus.Fbs3_237 fbs3_237 = 13;
  bool has_fbs3_237() const;
  void clear_fbs3_237();
  static const int kFbs3237FieldNumber = 13;
  private:
  const ::apollo::canbus::Fbs3_237& _internal_fbs3_237() const;
  public:
  const ::apollo::canbus::Fbs3_237& fbs3_237() const;
  ::apollo::canbus::Fbs3_237* release_fbs3_237();
  ::apollo::canbus::Fbs3_237* mutable_fbs3_237();
  void set_allocated_fbs3_237(::apollo::canbus::Fbs3_237* fbs3_237);

  // optional .apollo.canbus.Ads3_38e ads3_38e = 14;
  bool has_ads3_38e() const;
  void clear_ads3_38e();
  static const int kAds338EFieldNumber = 14;
  private:
  const ::apollo::canbus::Ads3_38e& _internal_ads3_38e() const;
  public:
  const ::apollo::canbus::Ads3_38e& ads3_38e() const;
  ::apollo::canbus::Ads3_38e* release_ads3_38e();
  ::apollo::canbus::Ads3_38e* mutable_ads3_38e();
  void set_allocated_ads3_38e(::apollo::canbus::Ads3_38e* ads3_38e);

  // @@protoc_insertion_point(class_scope:apollo.canbus.Wey)
 private:
  void set_has_ads_shifter_115();
  void clear_has_ads_shifter_115();
  void set_has_ads_eps_113();
  void clear_has_ads_eps_113();
  void set_has_status_310();
  void clear_has_status_310();
  void set_has_vin_resp3_393();
  void clear_has_vin_resp3_393();
  void set_has_vin_resp2_392();
  void clear_has_vin_resp2_392();
  void set_has_vin_resp1_391();
  void clear_has_vin_resp1_391();
  void set_has_ads_req_vin_390();
  void clear_has_ads_req_vin_390();
  void set_has_ads1_111();
  void clear_has_ads1_111();
  void set_has_fbs2_240();
  void clear_has_fbs2_240();
  void set_has_fbs1_243();
  void clear_has_fbs1_243();
  void set_has_fbs4_235();
  void clear_has_fbs4_235();
  void set_has_fail_241();
  void clear_has_fail_241();
  void set_has_fbs3_237();
  void clear_has_fbs3_237();
  void set_has_ads3_38e();
  void clear_has_ads3_38e();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::apollo::canbus::Ads_shifter_115* ads_shifter_115_;
  ::apollo::canbus::Ads_eps_113* ads_eps_113_;
  ::apollo::canbus::Status_310* status_310_;
  ::apollo::canbus::Vin_resp3_393* vin_resp3_393_;
  ::apollo::canbus::Vin_resp2_392* vin_resp2_392_;
  ::apollo::canbus::Vin_resp1_391* vin_resp1_391_;
  ::apollo::canbus::Ads_req_vin_390* ads_req_vin_390_;
  ::apollo::canbus::Ads1_111* ads1_111_;
  ::apollo::canbus::Fbs2_240* fbs2_240_;
  ::apollo::canbus::Fbs1_243* fbs1_243_;
  ::apollo::canbus::Fbs4_235* fbs4_235_;
  ::apollo::canbus::Fail_241* fail_241_;
  ::apollo::canbus::Fbs3_237* fbs3_237_;
  ::apollo::canbus::Ads3_38e* ads3_38e_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fwey_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ads_shifter_115

// optional .apollo.canbus.Ads_shifter_115.Ads_shiftmodeType ads_shiftmode = 1;
inline bool Ads_shifter_115::has_ads_shiftmode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ads_shifter_115::set_has_ads_shiftmode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ads_shifter_115::clear_has_ads_shiftmode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ads_shifter_115::clear_ads_shiftmode() {
  ads_shiftmode_ = 0;
  clear_has_ads_shiftmode();
}
inline ::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115::ads_shiftmode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads_shifter_115.ads_shiftmode)
  return static_cast< ::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType >(ads_shiftmode_);
}
inline void Ads_shifter_115::set_ads_shiftmode(::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType value) {
  assert(::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType_IsValid(value));
  set_has_ads_shiftmode();
  ads_shiftmode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads_shifter_115.ads_shiftmode)
}

// optional .apollo.canbus.Ads_shifter_115.Ads_targetgearType ads_targetgear = 2;
inline bool Ads_shifter_115::has_ads_targetgear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ads_shifter_115::set_has_ads_targetgear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ads_shifter_115::clear_has_ads_targetgear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ads_shifter_115::clear_ads_targetgear() {
  ads_targetgear_ = 0;
  clear_has_ads_targetgear();
}
inline ::apollo::canbus::Ads_shifter_115_Ads_targetgearType Ads_shifter_115::ads_targetgear() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads_shifter_115.ads_targetgear)
  return static_cast< ::apollo::canbus::Ads_shifter_115_Ads_targetgearType >(ads_targetgear_);
}
inline void Ads_shifter_115::set_ads_targetgear(::apollo::canbus::Ads_shifter_115_Ads_targetgearType value) {
  assert(::apollo::canbus::Ads_shifter_115_Ads_targetgearType_IsValid(value));
  set_has_ads_targetgear();
  ads_targetgear_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads_shifter_115.ads_targetgear)
}

// -------------------------------------------------------------------

// Ads_eps_113

// optional .apollo.canbus.Ads_eps_113.Ads_epsmodeType ads_epsmode = 1;
inline bool Ads_eps_113::has_ads_epsmode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ads_eps_113::set_has_ads_epsmode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ads_eps_113::clear_has_ads_epsmode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ads_eps_113::clear_ads_epsmode() {
  ads_epsmode_ = 0;
  clear_has_ads_epsmode();
}
inline ::apollo::canbus::Ads_eps_113_Ads_epsmodeType Ads_eps_113::ads_epsmode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads_eps_113.ads_epsmode)
  return static_cast< ::apollo::canbus::Ads_eps_113_Ads_epsmodeType >(ads_epsmode_);
}
inline void Ads_eps_113::set_ads_epsmode(::apollo::canbus::Ads_eps_113_Ads_epsmodeType value) {
  assert(::apollo::canbus::Ads_eps_113_Ads_epsmodeType_IsValid(value));
  set_has_ads_epsmode();
  ads_epsmode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads_eps_113.ads_epsmode)
}

// optional double ads_reqepstargetangle = 2;
inline bool Ads_eps_113::has_ads_reqepstargetangle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ads_eps_113::set_has_ads_reqepstargetangle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ads_eps_113::clear_has_ads_reqepstargetangle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ads_eps_113::clear_ads_reqepstargetangle() {
  ads_reqepstargetangle_ = 0;
  clear_has_ads_reqepstargetangle();
}
inline double Ads_eps_113::ads_reqepstargetangle() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads_eps_113.ads_reqepstargetangle)
  return ads_reqepstargetangle_;
}
inline void Ads_eps_113::set_ads_reqepstargetangle(double value) {
  set_has_ads_reqepstargetangle();
  ads_reqepstargetangle_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads_eps_113.ads_reqepstargetangle)
}

// -------------------------------------------------------------------

// Status_310

// optional .apollo.canbus.Status_310.LongitudeaccvalidType longitudeaccvalid = 1;
inline bool Status_310::has_longitudeaccvalid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Status_310::set_has_longitudeaccvalid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Status_310::clear_has_longitudeaccvalid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Status_310::clear_longitudeaccvalid() {
  longitudeaccvalid_ = 0;
  clear_has_longitudeaccvalid();
}
inline ::apollo::canbus::Status_310_LongitudeaccvalidType Status_310::longitudeaccvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.longitudeaccvalid)
  return static_cast< ::apollo::canbus::Status_310_LongitudeaccvalidType >(longitudeaccvalid_);
}
inline void Status_310::set_longitudeaccvalid(::apollo::canbus::Status_310_LongitudeaccvalidType value) {
  assert(::apollo::canbus::Status_310_LongitudeaccvalidType_IsValid(value));
  set_has_longitudeaccvalid();
  longitudeaccvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.longitudeaccvalid)
}

// optional .apollo.canbus.Status_310.LateralaccevalidType lateralaccevalid = 2;
inline bool Status_310::has_lateralaccevalid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Status_310::set_has_lateralaccevalid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Status_310::clear_has_lateralaccevalid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Status_310::clear_lateralaccevalid() {
  lateralaccevalid_ = 0;
  clear_has_lateralaccevalid();
}
inline ::apollo::canbus::Status_310_LateralaccevalidType Status_310::lateralaccevalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.lateralaccevalid)
  return static_cast< ::apollo::canbus::Status_310_LateralaccevalidType >(lateralaccevalid_);
}
inline void Status_310::set_lateralaccevalid(::apollo::canbus::Status_310_LateralaccevalidType value) {
  assert(::apollo::canbus::Status_310_LateralaccevalidType_IsValid(value));
  set_has_lateralaccevalid();
  lateralaccevalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.lateralaccevalid)
}

// optional .apollo.canbus.Status_310.VehdynyawratevalidType vehdynyawratevalid = 3;
inline bool Status_310::has_vehdynyawratevalid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Status_310::set_has_vehdynyawratevalid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Status_310::clear_has_vehdynyawratevalid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Status_310::clear_vehdynyawratevalid() {
  vehdynyawratevalid_ = 0;
  clear_has_vehdynyawratevalid();
}
inline ::apollo::canbus::Status_310_VehdynyawratevalidType Status_310::vehdynyawratevalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.vehdynyawratevalid)
  return static_cast< ::apollo::canbus::Status_310_VehdynyawratevalidType >(vehdynyawratevalid_);
}
inline void Status_310::set_vehdynyawratevalid(::apollo::canbus::Status_310_VehdynyawratevalidType value) {
  assert(::apollo::canbus::Status_310_VehdynyawratevalidType_IsValid(value));
  set_has_vehdynyawratevalid();
  vehdynyawratevalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.vehdynyawratevalid)
}

// optional .apollo.canbus.Status_310.FlwheelspdvalidType flwheelspdvalid = 4;
inline bool Status_310::has_flwheelspdvalid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Status_310::set_has_flwheelspdvalid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Status_310::clear_has_flwheelspdvalid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Status_310::clear_flwheelspdvalid() {
  flwheelspdvalid_ = 0;
  clear_has_flwheelspdvalid();
}
inline ::apollo::canbus::Status_310_FlwheelspdvalidType Status_310::flwheelspdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.flwheelspdvalid)
  return static_cast< ::apollo::canbus::Status_310_FlwheelspdvalidType >(flwheelspdvalid_);
}
inline void Status_310::set_flwheelspdvalid(::apollo::canbus::Status_310_FlwheelspdvalidType value) {
  assert(::apollo::canbus::Status_310_FlwheelspdvalidType_IsValid(value));
  set_has_flwheelspdvalid();
  flwheelspdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.flwheelspdvalid)
}

// optional .apollo.canbus.Status_310.FrwheelspdvalidType frwheelspdvalid = 5;
inline bool Status_310::has_frwheelspdvalid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Status_310::set_has_frwheelspdvalid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Status_310::clear_has_frwheelspdvalid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Status_310::clear_frwheelspdvalid() {
  frwheelspdvalid_ = 0;
  clear_has_frwheelspdvalid();
}
inline ::apollo::canbus::Status_310_FrwheelspdvalidType Status_310::frwheelspdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.frwheelspdvalid)
  return static_cast< ::apollo::canbus::Status_310_FrwheelspdvalidType >(frwheelspdvalid_);
}
inline void Status_310::set_frwheelspdvalid(::apollo::canbus::Status_310_FrwheelspdvalidType value) {
  assert(::apollo::canbus::Status_310_FrwheelspdvalidType_IsValid(value));
  set_has_frwheelspdvalid();
  frwheelspdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.frwheelspdvalid)
}

// optional .apollo.canbus.Status_310.RlwheelspdvalidType rlwheelspdvalid = 6;
inline bool Status_310::has_rlwheelspdvalid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Status_310::set_has_rlwheelspdvalid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Status_310::clear_has_rlwheelspdvalid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Status_310::clear_rlwheelspdvalid() {
  rlwheelspdvalid_ = 0;
  clear_has_rlwheelspdvalid();
}
inline ::apollo::canbus::Status_310_RlwheelspdvalidType Status_310::rlwheelspdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.rlwheelspdvalid)
  return static_cast< ::apollo::canbus::Status_310_RlwheelspdvalidType >(rlwheelspdvalid_);
}
inline void Status_310::set_rlwheelspdvalid(::apollo::canbus::Status_310_RlwheelspdvalidType value) {
  assert(::apollo::canbus::Status_310_RlwheelspdvalidType_IsValid(value));
  set_has_rlwheelspdvalid();
  rlwheelspdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.rlwheelspdvalid)
}

// optional .apollo.canbus.Status_310.RrwheelspdvalidType rrwheelspdvalid = 7;
inline bool Status_310::has_rrwheelspdvalid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Status_310::set_has_rrwheelspdvalid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Status_310::clear_has_rrwheelspdvalid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Status_310::clear_rrwheelspdvalid() {
  rrwheelspdvalid_ = 0;
  clear_has_rrwheelspdvalid();
}
inline ::apollo::canbus::Status_310_RrwheelspdvalidType Status_310::rrwheelspdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.rrwheelspdvalid)
  return static_cast< ::apollo::canbus::Status_310_RrwheelspdvalidType >(rrwheelspdvalid_);
}
inline void Status_310::set_rrwheelspdvalid(::apollo::canbus::Status_310_RrwheelspdvalidType value) {
  assert(::apollo::canbus::Status_310_RrwheelspdvalidType_IsValid(value));
  set_has_rrwheelspdvalid();
  rrwheelspdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.rrwheelspdvalid)
}

// optional .apollo.canbus.Status_310.VehiclespdvalidType vehiclespdvalid = 8;
inline bool Status_310::has_vehiclespdvalid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Status_310::set_has_vehiclespdvalid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Status_310::clear_has_vehiclespdvalid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Status_310::clear_vehiclespdvalid() {
  vehiclespdvalid_ = 0;
  clear_has_vehiclespdvalid();
}
inline ::apollo::canbus::Status_310_VehiclespdvalidType Status_310::vehiclespdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.vehiclespdvalid)
  return static_cast< ::apollo::canbus::Status_310_VehiclespdvalidType >(vehiclespdvalid_);
}
inline void Status_310::set_vehiclespdvalid(::apollo::canbus::Status_310_VehiclespdvalidType value) {
  assert(::apollo::canbus::Status_310_VehiclespdvalidType_IsValid(value));
  set_has_vehiclespdvalid();
  vehiclespdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.vehiclespdvalid)
}

// optional .apollo.canbus.Status_310.LongitudedrivingmodeType longitudedrivingmode = 9;
inline bool Status_310::has_longitudedrivingmode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Status_310::set_has_longitudedrivingmode() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Status_310::clear_has_longitudedrivingmode() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Status_310::clear_longitudedrivingmode() {
  longitudedrivingmode_ = 0;
  clear_has_longitudedrivingmode();
}
inline ::apollo::canbus::Status_310_LongitudedrivingmodeType Status_310::longitudedrivingmode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.longitudedrivingmode)
  return static_cast< ::apollo::canbus::Status_310_LongitudedrivingmodeType >(longitudedrivingmode_);
}
inline void Status_310::set_longitudedrivingmode(::apollo::canbus::Status_310_LongitudedrivingmodeType value) {
  assert(::apollo::canbus::Status_310_LongitudedrivingmodeType_IsValid(value));
  set_has_longitudedrivingmode();
  longitudedrivingmode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.longitudedrivingmode)
}

// optional .apollo.canbus.Status_310.EngspdvalidType engspdvalid = 10;
inline bool Status_310::has_engspdvalid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Status_310::set_has_engspdvalid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Status_310::clear_has_engspdvalid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Status_310::clear_engspdvalid() {
  engspdvalid_ = 0;
  clear_has_engspdvalid();
}
inline ::apollo::canbus::Status_310_EngspdvalidType Status_310::engspdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.engspdvalid)
  return static_cast< ::apollo::canbus::Status_310_EngspdvalidType >(engspdvalid_);
}
inline void Status_310::set_engspdvalid(::apollo::canbus::Status_310_EngspdvalidType value) {
  assert(::apollo::canbus::Status_310_EngspdvalidType_IsValid(value));
  set_has_engspdvalid();
  engspdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.engspdvalid)
}

// optional .apollo.canbus.Status_310.AccepedaloverrideType accepedaloverride = 11;
inline bool Status_310::has_accepedaloverride() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Status_310::set_has_accepedaloverride() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Status_310::clear_has_accepedaloverride() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Status_310::clear_accepedaloverride() {
  accepedaloverride_ = 0;
  clear_has_accepedaloverride();
}
inline ::apollo::canbus::Status_310_AccepedaloverrideType Status_310::accepedaloverride() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.accepedaloverride)
  return static_cast< ::apollo::canbus::Status_310_AccepedaloverrideType >(accepedaloverride_);
}
inline void Status_310::set_accepedaloverride(::apollo::canbus::Status_310_AccepedaloverrideType value) {
  assert(::apollo::canbus::Status_310_AccepedaloverrideType_IsValid(value));
  set_has_accepedaloverride();
  accepedaloverride_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.accepedaloverride)
}

// optional .apollo.canbus.Status_310.BrakepedalstatusType brakepedalstatus = 12;
inline bool Status_310::has_brakepedalstatus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Status_310::set_has_brakepedalstatus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Status_310::clear_has_brakepedalstatus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Status_310::clear_brakepedalstatus() {
  brakepedalstatus_ = 0;
  clear_has_brakepedalstatus();
}
inline ::apollo::canbus::Status_310_BrakepedalstatusType Status_310::brakepedalstatus() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.brakepedalstatus)
  return static_cast< ::apollo::canbus::Status_310_BrakepedalstatusType >(brakepedalstatus_);
}
inline void Status_310::set_brakepedalstatus(::apollo::canbus::Status_310_BrakepedalstatusType value) {
  assert(::apollo::canbus::Status_310_BrakepedalstatusType_IsValid(value));
  set_has_brakepedalstatus();
  brakepedalstatus_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.brakepedalstatus)
}

// optional .apollo.canbus.Status_310.EspbrakelightstsType espbrakelightsts = 13;
inline bool Status_310::has_espbrakelightsts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Status_310::set_has_espbrakelightsts() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Status_310::clear_has_espbrakelightsts() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Status_310::clear_espbrakelightsts() {
  espbrakelightsts_ = 0;
  clear_has_espbrakelightsts();
}
inline ::apollo::canbus::Status_310_EspbrakelightstsType Status_310::espbrakelightsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.espbrakelightsts)
  return static_cast< ::apollo::canbus::Status_310_EspbrakelightstsType >(espbrakelightsts_);
}
inline void Status_310::set_espbrakelightsts(::apollo::canbus::Status_310_EspbrakelightstsType value) {
  assert(::apollo::canbus::Status_310_EspbrakelightstsType_IsValid(value));
  set_has_espbrakelightsts();
  espbrakelightsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.espbrakelightsts)
}

// optional .apollo.canbus.Status_310.EpbswtpositionvalidType epbswtpositionvalid = 14;
inline bool Status_310::has_epbswtpositionvalid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Status_310::set_has_epbswtpositionvalid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Status_310::clear_has_epbswtpositionvalid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Status_310::clear_epbswtpositionvalid() {
  epbswtpositionvalid_ = 0;
  clear_has_epbswtpositionvalid();
}
inline ::apollo::canbus::Status_310_EpbswtpositionvalidType Status_310::epbswtpositionvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.epbswtpositionvalid)
  return static_cast< ::apollo::canbus::Status_310_EpbswtpositionvalidType >(epbswtpositionvalid_);
}
inline void Status_310::set_epbswtpositionvalid(::apollo::canbus::Status_310_EpbswtpositionvalidType value) {
  assert(::apollo::canbus::Status_310_EpbswtpositionvalidType_IsValid(value));
  set_has_epbswtpositionvalid();
  epbswtpositionvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.epbswtpositionvalid)
}

// optional .apollo.canbus.Status_310.EpbstsType epbsts = 15;
inline bool Status_310::has_epbsts() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Status_310::set_has_epbsts() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Status_310::clear_has_epbsts() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Status_310::clear_epbsts() {
  epbsts_ = 0;
  clear_has_epbsts();
}
inline ::apollo::canbus::Status_310_EpbstsType Status_310::epbsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.epbsts)
  return static_cast< ::apollo::canbus::Status_310_EpbstsType >(epbsts_);
}
inline void Status_310::set_epbsts(::apollo::canbus::Status_310_EpbstsType value) {
  assert(::apollo::canbus::Status_310_EpbstsType_IsValid(value));
  set_has_epbsts();
  epbsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.epbsts)
}

// optional .apollo.canbus.Status_310.CurrentgearvalidType currentgearvalid = 16;
inline bool Status_310::has_currentgearvalid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Status_310::set_has_currentgearvalid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Status_310::clear_has_currentgearvalid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Status_310::clear_currentgearvalid() {
  currentgearvalid_ = 0;
  clear_has_currentgearvalid();
}
inline ::apollo::canbus::Status_310_CurrentgearvalidType Status_310::currentgearvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.currentgearvalid)
  return static_cast< ::apollo::canbus::Status_310_CurrentgearvalidType >(currentgearvalid_);
}
inline void Status_310::set_currentgearvalid(::apollo::canbus::Status_310_CurrentgearvalidType value) {
  assert(::apollo::canbus::Status_310_CurrentgearvalidType_IsValid(value));
  set_has_currentgearvalid();
  currentgearvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.currentgearvalid)
}

// optional .apollo.canbus.Status_310.EpstrqsnsrstsType epstrqsnsrsts = 17;
inline bool Status_310::has_epstrqsnsrsts() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Status_310::set_has_epstrqsnsrsts() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Status_310::clear_has_epstrqsnsrsts() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Status_310::clear_epstrqsnsrsts() {
  epstrqsnsrsts_ = 0;
  clear_has_epstrqsnsrsts();
}
inline ::apollo::canbus::Status_310_EpstrqsnsrstsType Status_310::epstrqsnsrsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.epstrqsnsrsts)
  return static_cast< ::apollo::canbus::Status_310_EpstrqsnsrstsType >(epstrqsnsrsts_);
}
inline void Status_310::set_epstrqsnsrsts(::apollo::canbus::Status_310_EpstrqsnsrstsType value) {
  assert(::apollo::canbus::Status_310_EpstrqsnsrstsType_IsValid(value));
  set_has_epstrqsnsrsts();
  epstrqsnsrsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.epstrqsnsrsts)
}

// optional .apollo.canbus.Status_310.Eps_interferdetdvalidType eps_interferdetdvalid = 18;
inline bool Status_310::has_eps_interferdetdvalid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Status_310::set_has_eps_interferdetdvalid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Status_310::clear_has_eps_interferdetdvalid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Status_310::clear_eps_interferdetdvalid() {
  eps_interferdetdvalid_ = 0;
  clear_has_eps_interferdetdvalid();
}
inline ::apollo::canbus::Status_310_Eps_interferdetdvalidType Status_310::eps_interferdetdvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.eps_interferdetdvalid)
  return static_cast< ::apollo::canbus::Status_310_Eps_interferdetdvalidType >(eps_interferdetdvalid_);
}
inline void Status_310::set_eps_interferdetdvalid(::apollo::canbus::Status_310_Eps_interferdetdvalidType value) {
  assert(::apollo::canbus::Status_310_Eps_interferdetdvalidType_IsValid(value));
  set_has_eps_interferdetdvalid();
  eps_interferdetdvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.eps_interferdetdvalid)
}

// optional .apollo.canbus.Status_310.EpshandsdetnstsType epshandsdetnsts = 19;
inline bool Status_310::has_epshandsdetnsts() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Status_310::set_has_epshandsdetnsts() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Status_310::clear_has_epshandsdetnsts() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Status_310::clear_epshandsdetnsts() {
  epshandsdetnsts_ = 0;
  clear_has_epshandsdetnsts();
}
inline ::apollo::canbus::Status_310_EpshandsdetnstsType Status_310::epshandsdetnsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.epshandsdetnsts)
  return static_cast< ::apollo::canbus::Status_310_EpshandsdetnstsType >(epshandsdetnsts_);
}
inline void Status_310::set_epshandsdetnsts(::apollo::canbus::Status_310_EpshandsdetnstsType value) {
  assert(::apollo::canbus::Status_310_EpshandsdetnstsType_IsValid(value));
  set_has_epshandsdetnsts();
  epshandsdetnsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.epshandsdetnsts)
}

// optional .apollo.canbus.Status_310.Eps_handsdetnstsvalidType eps_handsdetnstsvalid = 20;
inline bool Status_310::has_eps_handsdetnstsvalid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Status_310::set_has_eps_handsdetnstsvalid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Status_310::clear_has_eps_handsdetnstsvalid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Status_310::clear_eps_handsdetnstsvalid() {
  eps_handsdetnstsvalid_ = 0;
  clear_has_eps_handsdetnstsvalid();
}
inline ::apollo::canbus::Status_310_Eps_handsdetnstsvalidType Status_310::eps_handsdetnstsvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.eps_handsdetnstsvalid)
  return static_cast< ::apollo::canbus::Status_310_Eps_handsdetnstsvalidType >(eps_handsdetnstsvalid_);
}
inline void Status_310::set_eps_handsdetnstsvalid(::apollo::canbus::Status_310_Eps_handsdetnstsvalidType value) {
  assert(::apollo::canbus::Status_310_Eps_handsdetnstsvalidType_IsValid(value));
  set_has_eps_handsdetnstsvalid();
  eps_handsdetnstsvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.eps_handsdetnstsvalid)
}

// optional .apollo.canbus.Status_310.SteerwheelanglesignType steerwheelanglesign = 21;
inline bool Status_310::has_steerwheelanglesign() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Status_310::set_has_steerwheelanglesign() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Status_310::clear_has_steerwheelanglesign() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Status_310::clear_steerwheelanglesign() {
  steerwheelanglesign_ = 0;
  clear_has_steerwheelanglesign();
}
inline ::apollo::canbus::Status_310_SteerwheelanglesignType Status_310::steerwheelanglesign() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.steerwheelanglesign)
  return static_cast< ::apollo::canbus::Status_310_SteerwheelanglesignType >(steerwheelanglesign_);
}
inline void Status_310::set_steerwheelanglesign(::apollo::canbus::Status_310_SteerwheelanglesignType value) {
  assert(::apollo::canbus::Status_310_SteerwheelanglesignType_IsValid(value));
  set_has_steerwheelanglesign();
  steerwheelanglesign_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.steerwheelanglesign)
}

// optional .apollo.canbus.Status_310.SteerwheelspdsignType steerwheelspdsign = 22;
inline bool Status_310::has_steerwheelspdsign() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Status_310::set_has_steerwheelspdsign() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Status_310::clear_has_steerwheelspdsign() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Status_310::clear_steerwheelspdsign() {
  steerwheelspdsign_ = 0;
  clear_has_steerwheelspdsign();
}
inline ::apollo::canbus::Status_310_SteerwheelspdsignType Status_310::steerwheelspdsign() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.steerwheelspdsign)
  return static_cast< ::apollo::canbus::Status_310_SteerwheelspdsignType >(steerwheelspdsign_);
}
inline void Status_310::set_steerwheelspdsign(::apollo::canbus::Status_310_SteerwheelspdsignType value) {
  assert(::apollo::canbus::Status_310_SteerwheelspdsignType_IsValid(value));
  set_has_steerwheelspdsign();
  steerwheelspdsign_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.steerwheelspdsign)
}

// optional .apollo.canbus.Status_310.DriverdoorstsType driverdoorsts = 23;
inline bool Status_310::has_driverdoorsts() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Status_310::set_has_driverdoorsts() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Status_310::clear_has_driverdoorsts() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Status_310::clear_driverdoorsts() {
  driverdoorsts_ = 0;
  clear_has_driverdoorsts();
}
inline ::apollo::canbus::Status_310_DriverdoorstsType Status_310::driverdoorsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.driverdoorsts)
  return static_cast< ::apollo::canbus::Status_310_DriverdoorstsType >(driverdoorsts_);
}
inline void Status_310::set_driverdoorsts(::apollo::canbus::Status_310_DriverdoorstsType value) {
  assert(::apollo::canbus::Status_310_DriverdoorstsType_IsValid(value));
  set_has_driverdoorsts();
  driverdoorsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.driverdoorsts)
}

// optional .apollo.canbus.Status_310.RldoorstsType rldoorsts = 24;
inline bool Status_310::has_rldoorsts() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Status_310::set_has_rldoorsts() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Status_310::clear_has_rldoorsts() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Status_310::clear_rldoorsts() {
  rldoorsts_ = 0;
  clear_has_rldoorsts();
}
inline ::apollo::canbus::Status_310_RldoorstsType Status_310::rldoorsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.rldoorsts)
  return static_cast< ::apollo::canbus::Status_310_RldoorstsType >(rldoorsts_);
}
inline void Status_310::set_rldoorsts(::apollo::canbus::Status_310_RldoorstsType value) {
  assert(::apollo::canbus::Status_310_RldoorstsType_IsValid(value));
  set_has_rldoorsts();
  rldoorsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.rldoorsts)
}

// optional .apollo.canbus.Status_310.PassengerdoorstsType passengerdoorsts = 25;
inline bool Status_310::has_passengerdoorsts() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Status_310::set_has_passengerdoorsts() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Status_310::clear_has_passengerdoorsts() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Status_310::clear_passengerdoorsts() {
  passengerdoorsts_ = 0;
  clear_has_passengerdoorsts();
}
inline ::apollo::canbus::Status_310_PassengerdoorstsType Status_310::passengerdoorsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.passengerdoorsts)
  return static_cast< ::apollo::canbus::Status_310_PassengerdoorstsType >(passengerdoorsts_);
}
inline void Status_310::set_passengerdoorsts(::apollo::canbus::Status_310_PassengerdoorstsType value) {
  assert(::apollo::canbus::Status_310_PassengerdoorstsType_IsValid(value));
  set_has_passengerdoorsts();
  passengerdoorsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.passengerdoorsts)
}

// optional .apollo.canbus.Status_310.RrdoorstsType rrdoorsts = 26;
inline bool Status_310::has_rrdoorsts() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Status_310::set_has_rrdoorsts() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Status_310::clear_has_rrdoorsts() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Status_310::clear_rrdoorsts() {
  rrdoorsts_ = 0;
  clear_has_rrdoorsts();
}
inline ::apollo::canbus::Status_310_RrdoorstsType Status_310::rrdoorsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.rrdoorsts)
  return static_cast< ::apollo::canbus::Status_310_RrdoorstsType >(rrdoorsts_);
}
inline void Status_310::set_rrdoorsts(::apollo::canbus::Status_310_RrdoorstsType value) {
  assert(::apollo::canbus::Status_310_RrdoorstsType_IsValid(value));
  set_has_rrdoorsts();
  rrdoorsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.rrdoorsts)
}

// optional .apollo.canbus.Status_310.FrontfoglmpstsType frontfoglmpsts = 27;
inline bool Status_310::has_frontfoglmpsts() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Status_310::set_has_frontfoglmpsts() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Status_310::clear_has_frontfoglmpsts() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Status_310::clear_frontfoglmpsts() {
  frontfoglmpsts_ = 0;
  clear_has_frontfoglmpsts();
}
inline ::apollo::canbus::Status_310_FrontfoglmpstsType Status_310::frontfoglmpsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.frontfoglmpsts)
  return static_cast< ::apollo::canbus::Status_310_FrontfoglmpstsType >(frontfoglmpsts_);
}
inline void Status_310::set_frontfoglmpsts(::apollo::canbus::Status_310_FrontfoglmpstsType value) {
  assert(::apollo::canbus::Status_310_FrontfoglmpstsType_IsValid(value));
  set_has_frontfoglmpsts();
  frontfoglmpsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.frontfoglmpsts)
}

// optional .apollo.canbus.Status_310.RearfoglmpstsType rearfoglmpsts = 28;
inline bool Status_310::has_rearfoglmpsts() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Status_310::set_has_rearfoglmpsts() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Status_310::clear_has_rearfoglmpsts() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Status_310::clear_rearfoglmpsts() {
  rearfoglmpsts_ = 0;
  clear_has_rearfoglmpsts();
}
inline ::apollo::canbus::Status_310_RearfoglmpstsType Status_310::rearfoglmpsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.rearfoglmpsts)
  return static_cast< ::apollo::canbus::Status_310_RearfoglmpstsType >(rearfoglmpsts_);
}
inline void Status_310::set_rearfoglmpsts(::apollo::canbus::Status_310_RearfoglmpstsType value) {
  assert(::apollo::canbus::Status_310_RearfoglmpstsType_IsValid(value));
  set_has_rearfoglmpsts();
  rearfoglmpsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.rearfoglmpsts)
}

// optional .apollo.canbus.Status_310.LowbeamstsType lowbeamsts = 29;
inline bool Status_310::has_lowbeamsts() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Status_310::set_has_lowbeamsts() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Status_310::clear_has_lowbeamsts() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Status_310::clear_lowbeamsts() {
  lowbeamsts_ = 0;
  clear_has_lowbeamsts();
}
inline ::apollo::canbus::Status_310_LowbeamstsType Status_310::lowbeamsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.lowbeamsts)
  return static_cast< ::apollo::canbus::Status_310_LowbeamstsType >(lowbeamsts_);
}
inline void Status_310::set_lowbeamsts(::apollo::canbus::Status_310_LowbeamstsType value) {
  assert(::apollo::canbus::Status_310_LowbeamstsType_IsValid(value));
  set_has_lowbeamsts();
  lowbeamsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.lowbeamsts)
}

// optional .apollo.canbus.Status_310.HighbeamstsType highbeamsts = 30;
inline bool Status_310::has_highbeamsts() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Status_310::set_has_highbeamsts() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Status_310::clear_has_highbeamsts() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Status_310::clear_highbeamsts() {
  highbeamsts_ = 0;
  clear_has_highbeamsts();
}
inline ::apollo::canbus::Status_310_HighbeamstsType Status_310::highbeamsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.highbeamsts)
  return static_cast< ::apollo::canbus::Status_310_HighbeamstsType >(highbeamsts_);
}
inline void Status_310::set_highbeamsts(::apollo::canbus::Status_310_HighbeamstsType value) {
  assert(::apollo::canbus::Status_310_HighbeamstsType_IsValid(value));
  set_has_highbeamsts();
  highbeamsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.highbeamsts)
}

// optional .apollo.canbus.Status_310.LeftturnlampstsType leftturnlampsts = 31;
inline bool Status_310::has_leftturnlampsts() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Status_310::set_has_leftturnlampsts() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Status_310::clear_has_leftturnlampsts() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Status_310::clear_leftturnlampsts() {
  leftturnlampsts_ = 0;
  clear_has_leftturnlampsts();
}
inline ::apollo::canbus::Status_310_LeftturnlampstsType Status_310::leftturnlampsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.leftturnlampsts)
  return static_cast< ::apollo::canbus::Status_310_LeftturnlampstsType >(leftturnlampsts_);
}
inline void Status_310::set_leftturnlampsts(::apollo::canbus::Status_310_LeftturnlampstsType value) {
  assert(::apollo::canbus::Status_310_LeftturnlampstsType_IsValid(value));
  set_has_leftturnlampsts();
  leftturnlampsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.leftturnlampsts)
}

// optional .apollo.canbus.Status_310.RightturnlampstsType rightturnlampsts = 32;
inline bool Status_310::has_rightturnlampsts() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Status_310::set_has_rightturnlampsts() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Status_310::clear_has_rightturnlampsts() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Status_310::clear_rightturnlampsts() {
  rightturnlampsts_ = 0;
  clear_has_rightturnlampsts();
}
inline ::apollo::canbus::Status_310_RightturnlampstsType Status_310::rightturnlampsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.rightturnlampsts)
  return static_cast< ::apollo::canbus::Status_310_RightturnlampstsType >(rightturnlampsts_);
}
inline void Status_310::set_rightturnlampsts(::apollo::canbus::Status_310_RightturnlampstsType value) {
  assert(::apollo::canbus::Status_310_RightturnlampstsType_IsValid(value));
  set_has_rightturnlampsts();
  rightturnlampsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.rightturnlampsts)
}

// optional .apollo.canbus.Status_310.Bcm_availstsType bcm_availsts = 33;
inline bool Status_310::has_bcm_availsts() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Status_310::set_has_bcm_availsts() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Status_310::clear_has_bcm_availsts() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Status_310::clear_bcm_availsts() {
  bcm_availsts_ = 0;
  clear_has_bcm_availsts();
}
inline ::apollo::canbus::Status_310_Bcm_availstsType Status_310::bcm_availsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.bcm_availsts)
  return static_cast< ::apollo::canbus::Status_310_Bcm_availstsType >(bcm_availsts_);
}
inline void Status_310::set_bcm_availsts(::apollo::canbus::Status_310_Bcm_availstsType value) {
  assert(::apollo::canbus::Status_310_Bcm_availstsType_IsValid(value));
  set_has_bcm_availsts();
  bcm_availsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.bcm_availsts)
}

// optional .apollo.canbus.Status_310.BrakelmpstsType brakelmpsts = 34;
inline bool Status_310::has_brakelmpsts() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Status_310::set_has_brakelmpsts() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Status_310::clear_has_brakelmpsts() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Status_310::clear_brakelmpsts() {
  brakelmpsts_ = 0;
  clear_has_brakelmpsts();
}
inline ::apollo::canbus::Status_310_BrakelmpstsType Status_310::brakelmpsts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Status_310.brakelmpsts)
  return static_cast< ::apollo::canbus::Status_310_BrakelmpstsType >(brakelmpsts_);
}
inline void Status_310::set_brakelmpsts(::apollo::canbus::Status_310_BrakelmpstsType value) {
  assert(::apollo::canbus::Status_310_BrakelmpstsType_IsValid(value));
  set_has_brakelmpsts();
  brakelmpsts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Status_310.brakelmpsts)
}

// -------------------------------------------------------------------

// Vin_resp3_393

// optional int32 vin16 = 1;
inline bool Vin_resp3_393::has_vin16() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vin_resp3_393::set_has_vin16() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vin_resp3_393::clear_has_vin16() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vin_resp3_393::clear_vin16() {
  vin16_ = 0;
  clear_has_vin16();
}
inline ::google::protobuf::int32 Vin_resp3_393::vin16() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp3_393.vin16)
  return vin16_;
}
inline void Vin_resp3_393::set_vin16(::google::protobuf::int32 value) {
  set_has_vin16();
  vin16_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp3_393.vin16)
}

// -------------------------------------------------------------------

// Vin_resp2_392

// optional int32 vin15 = 1;
inline bool Vin_resp2_392::has_vin15() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vin_resp2_392::set_has_vin15() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vin_resp2_392::clear_has_vin15() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vin_resp2_392::clear_vin15() {
  vin15_ = 0;
  clear_has_vin15();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin15() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin15)
  return vin15_;
}
inline void Vin_resp2_392::set_vin15(::google::protobuf::int32 value) {
  set_has_vin15();
  vin15_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin15)
}

// optional int32 vin14 = 2;
inline bool Vin_resp2_392::has_vin14() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vin_resp2_392::set_has_vin14() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vin_resp2_392::clear_has_vin14() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vin_resp2_392::clear_vin14() {
  vin14_ = 0;
  clear_has_vin14();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin14() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin14)
  return vin14_;
}
inline void Vin_resp2_392::set_vin14(::google::protobuf::int32 value) {
  set_has_vin14();
  vin14_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin14)
}

// optional int32 vin13 = 3;
inline bool Vin_resp2_392::has_vin13() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Vin_resp2_392::set_has_vin13() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Vin_resp2_392::clear_has_vin13() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Vin_resp2_392::clear_vin13() {
  vin13_ = 0;
  clear_has_vin13();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin13() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin13)
  return vin13_;
}
inline void Vin_resp2_392::set_vin13(::google::protobuf::int32 value) {
  set_has_vin13();
  vin13_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin13)
}

// optional int32 vin12 = 4;
inline bool Vin_resp2_392::has_vin12() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Vin_resp2_392::set_has_vin12() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Vin_resp2_392::clear_has_vin12() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Vin_resp2_392::clear_vin12() {
  vin12_ = 0;
  clear_has_vin12();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin12() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin12)
  return vin12_;
}
inline void Vin_resp2_392::set_vin12(::google::protobuf::int32 value) {
  set_has_vin12();
  vin12_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin12)
}

// optional int32 vin11 = 5;
inline bool Vin_resp2_392::has_vin11() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Vin_resp2_392::set_has_vin11() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Vin_resp2_392::clear_has_vin11() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Vin_resp2_392::clear_vin11() {
  vin11_ = 0;
  clear_has_vin11();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin11() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin11)
  return vin11_;
}
inline void Vin_resp2_392::set_vin11(::google::protobuf::int32 value) {
  set_has_vin11();
  vin11_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin11)
}

// optional int32 vin10 = 6;
inline bool Vin_resp2_392::has_vin10() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Vin_resp2_392::set_has_vin10() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Vin_resp2_392::clear_has_vin10() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Vin_resp2_392::clear_vin10() {
  vin10_ = 0;
  clear_has_vin10();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin10() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin10)
  return vin10_;
}
inline void Vin_resp2_392::set_vin10(::google::protobuf::int32 value) {
  set_has_vin10();
  vin10_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin10)
}

// optional int32 vin09 = 7;
inline bool Vin_resp2_392::has_vin09() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Vin_resp2_392::set_has_vin09() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Vin_resp2_392::clear_has_vin09() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Vin_resp2_392::clear_vin09() {
  vin09_ = 0;
  clear_has_vin09();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin09() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin09)
  return vin09_;
}
inline void Vin_resp2_392::set_vin09(::google::protobuf::int32 value) {
  set_has_vin09();
  vin09_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin09)
}

// optional int32 vin08 = 8;
inline bool Vin_resp2_392::has_vin08() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Vin_resp2_392::set_has_vin08() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Vin_resp2_392::clear_has_vin08() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Vin_resp2_392::clear_vin08() {
  vin08_ = 0;
  clear_has_vin08();
}
inline ::google::protobuf::int32 Vin_resp2_392::vin08() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp2_392.vin08)
  return vin08_;
}
inline void Vin_resp2_392::set_vin08(::google::protobuf::int32 value) {
  set_has_vin08();
  vin08_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp2_392.vin08)
}

// -------------------------------------------------------------------

// Vin_resp1_391

// optional int32 vin07 = 1;
inline bool Vin_resp1_391::has_vin07() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vin_resp1_391::set_has_vin07() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vin_resp1_391::clear_has_vin07() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vin_resp1_391::clear_vin07() {
  vin07_ = 0;
  clear_has_vin07();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin07() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin07)
  return vin07_;
}
inline void Vin_resp1_391::set_vin07(::google::protobuf::int32 value) {
  set_has_vin07();
  vin07_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin07)
}

// optional int32 vin06 = 2;
inline bool Vin_resp1_391::has_vin06() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vin_resp1_391::set_has_vin06() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vin_resp1_391::clear_has_vin06() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vin_resp1_391::clear_vin06() {
  vin06_ = 0;
  clear_has_vin06();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin06() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin06)
  return vin06_;
}
inline void Vin_resp1_391::set_vin06(::google::protobuf::int32 value) {
  set_has_vin06();
  vin06_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin06)
}

// optional int32 vin05 = 3;
inline bool Vin_resp1_391::has_vin05() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Vin_resp1_391::set_has_vin05() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Vin_resp1_391::clear_has_vin05() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Vin_resp1_391::clear_vin05() {
  vin05_ = 0;
  clear_has_vin05();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin05() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin05)
  return vin05_;
}
inline void Vin_resp1_391::set_vin05(::google::protobuf::int32 value) {
  set_has_vin05();
  vin05_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin05)
}

// optional int32 vin04 = 4;
inline bool Vin_resp1_391::has_vin04() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Vin_resp1_391::set_has_vin04() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Vin_resp1_391::clear_has_vin04() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Vin_resp1_391::clear_vin04() {
  vin04_ = 0;
  clear_has_vin04();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin04() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin04)
  return vin04_;
}
inline void Vin_resp1_391::set_vin04(::google::protobuf::int32 value) {
  set_has_vin04();
  vin04_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin04)
}

// optional int32 vin03 = 5;
inline bool Vin_resp1_391::has_vin03() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Vin_resp1_391::set_has_vin03() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Vin_resp1_391::clear_has_vin03() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Vin_resp1_391::clear_vin03() {
  vin03_ = 0;
  clear_has_vin03();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin03() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin03)
  return vin03_;
}
inline void Vin_resp1_391::set_vin03(::google::protobuf::int32 value) {
  set_has_vin03();
  vin03_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin03)
}

// optional int32 vin02 = 6;
inline bool Vin_resp1_391::has_vin02() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Vin_resp1_391::set_has_vin02() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Vin_resp1_391::clear_has_vin02() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Vin_resp1_391::clear_vin02() {
  vin02_ = 0;
  clear_has_vin02();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin02() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin02)
  return vin02_;
}
inline void Vin_resp1_391::set_vin02(::google::protobuf::int32 value) {
  set_has_vin02();
  vin02_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin02)
}

// optional int32 vin00 = 7;
inline bool Vin_resp1_391::has_vin00() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Vin_resp1_391::set_has_vin00() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Vin_resp1_391::clear_has_vin00() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Vin_resp1_391::clear_vin00() {
  vin00_ = 0;
  clear_has_vin00();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin00() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin00)
  return vin00_;
}
inline void Vin_resp1_391::set_vin00(::google::protobuf::int32 value) {
  set_has_vin00();
  vin00_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin00)
}

// optional int32 vin01 = 8;
inline bool Vin_resp1_391::has_vin01() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Vin_resp1_391::set_has_vin01() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Vin_resp1_391::clear_has_vin01() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Vin_resp1_391::clear_vin01() {
  vin01_ = 0;
  clear_has_vin01();
}
inline ::google::protobuf::int32 Vin_resp1_391::vin01() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Vin_resp1_391.vin01)
  return vin01_;
}
inline void Vin_resp1_391::set_vin01(::google::protobuf::int32 value) {
  set_has_vin01();
  vin01_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Vin_resp1_391.vin01)
}

// -------------------------------------------------------------------

// Ads_req_vin_390

// optional .apollo.canbus.Ads_req_vin_390.Req_vin_signalType req_vin_signal = 1;
inline bool Ads_req_vin_390::has_req_vin_signal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ads_req_vin_390::set_has_req_vin_signal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ads_req_vin_390::clear_has_req_vin_signal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ads_req_vin_390::clear_req_vin_signal() {
  req_vin_signal_ = 0;
  clear_has_req_vin_signal();
}
inline ::apollo::canbus::Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390::req_vin_signal() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads_req_vin_390.req_vin_signal)
  return static_cast< ::apollo::canbus::Ads_req_vin_390_Req_vin_signalType >(req_vin_signal_);
}
inline void Ads_req_vin_390::set_req_vin_signal(::apollo::canbus::Ads_req_vin_390_Req_vin_signalType value) {
  assert(::apollo::canbus::Ads_req_vin_390_Req_vin_signalType_IsValid(value));
  set_has_req_vin_signal();
  req_vin_signal_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads_req_vin_390.req_vin_signal)
}

// -------------------------------------------------------------------

// Ads1_111

// optional .apollo.canbus.Ads1_111.Ads_dectostopType ads_dectostop = 1;
inline bool Ads1_111::has_ads_dectostop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ads1_111::set_has_ads_dectostop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ads1_111::clear_has_ads_dectostop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ads1_111::clear_ads_dectostop() {
  ads_dectostop_ = 0;
  clear_has_ads_dectostop();
}
inline ::apollo::canbus::Ads1_111_Ads_dectostopType Ads1_111::ads_dectostop() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads1_111.ads_dectostop)
  return static_cast< ::apollo::canbus::Ads1_111_Ads_dectostopType >(ads_dectostop_);
}
inline void Ads1_111::set_ads_dectostop(::apollo::canbus::Ads1_111_Ads_dectostopType value) {
  assert(::apollo::canbus::Ads1_111_Ads_dectostopType_IsValid(value));
  set_has_ads_dectostop();
  ads_dectostop_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads1_111.ads_dectostop)
}

// optional .apollo.canbus.Ads1_111.Ads_modeType ads_mode = 2;
inline bool Ads1_111::has_ads_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ads1_111::set_has_ads_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ads1_111::clear_has_ads_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ads1_111::clear_ads_mode() {
  ads_mode_ = 0;
  clear_has_ads_mode();
}
inline ::apollo::canbus::Ads1_111_Ads_modeType Ads1_111::ads_mode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads1_111.ads_mode)
  return static_cast< ::apollo::canbus::Ads1_111_Ads_modeType >(ads_mode_);
}
inline void Ads1_111::set_ads_mode(::apollo::canbus::Ads1_111_Ads_modeType value) {
  assert(::apollo::canbus::Ads1_111_Ads_modeType_IsValid(value));
  set_has_ads_mode();
  ads_mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads1_111.ads_mode)
}

// optional double ads_taracce = 3;
inline bool Ads1_111::has_ads_taracce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ads1_111::set_has_ads_taracce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ads1_111::clear_has_ads_taracce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ads1_111::clear_ads_taracce() {
  ads_taracce_ = 0;
  clear_has_ads_taracce();
}
inline double Ads1_111::ads_taracce() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads1_111.ads_taracce)
  return ads_taracce_;
}
inline void Ads1_111::set_ads_taracce(double value) {
  set_has_ads_taracce();
  ads_taracce_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads1_111.ads_taracce)
}

// optional .apollo.canbus.Ads1_111.Ads_driveoff_reqType ads_driveoff_req = 4;
inline bool Ads1_111::has_ads_driveoff_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Ads1_111::set_has_ads_driveoff_req() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Ads1_111::clear_has_ads_driveoff_req() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Ads1_111::clear_ads_driveoff_req() {
  ads_driveoff_req_ = 0;
  clear_has_ads_driveoff_req();
}
inline ::apollo::canbus::Ads1_111_Ads_driveoff_reqType Ads1_111::ads_driveoff_req() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads1_111.ads_driveoff_req)
  return static_cast< ::apollo::canbus::Ads1_111_Ads_driveoff_reqType >(ads_driveoff_req_);
}
inline void Ads1_111::set_ads_driveoff_req(::apollo::canbus::Ads1_111_Ads_driveoff_reqType value) {
  assert(::apollo::canbus::Ads1_111_Ads_driveoff_reqType_IsValid(value));
  set_has_ads_driveoff_req();
  ads_driveoff_req_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads1_111.ads_driveoff_req)
}

// optional double ads_aeb_taracce = 5;
inline bool Ads1_111::has_ads_aeb_taracce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Ads1_111::set_has_ads_aeb_taracce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Ads1_111::clear_has_ads_aeb_taracce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Ads1_111::clear_ads_aeb_taracce() {
  ads_aeb_taracce_ = 0;
  clear_has_ads_aeb_taracce();
}
inline double Ads1_111::ads_aeb_taracce() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads1_111.ads_aeb_taracce)
  return ads_aeb_taracce_;
}
inline void Ads1_111::set_ads_aeb_taracce(double value) {
  set_has_ads_aeb_taracce();
  ads_aeb_taracce_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads1_111.ads_aeb_taracce)
}

// optional .apollo.canbus.Ads1_111.Ads_aeb_tgtdecel_reqType ads_aeb_tgtdecel_req = 6;
inline bool Ads1_111::has_ads_aeb_tgtdecel_req() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Ads1_111::set_has_ads_aeb_tgtdecel_req() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Ads1_111::clear_has_ads_aeb_tgtdecel_req() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Ads1_111::clear_ads_aeb_tgtdecel_req() {
  ads_aeb_tgtdecel_req_ = 0;
  clear_has_ads_aeb_tgtdecel_req();
}
inline ::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111::ads_aeb_tgtdecel_req() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads1_111.ads_aeb_tgtdecel_req)
  return static_cast< ::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType >(ads_aeb_tgtdecel_req_);
}
inline void Ads1_111::set_ads_aeb_tgtdecel_req(::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType value) {
  assert(::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType_IsValid(value));
  set_has_ads_aeb_tgtdecel_req();
  ads_aeb_tgtdecel_req_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads1_111.ads_aeb_tgtdecel_req)
}

// -------------------------------------------------------------------

// Fbs2_240

// optional .apollo.canbus.Fbs2_240.FlwheeldirectionType flwheeldirection = 1;
inline bool Fbs2_240::has_flwheeldirection() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fbs2_240::set_has_flwheeldirection() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Fbs2_240::clear_has_flwheeldirection() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Fbs2_240::clear_flwheeldirection() {
  flwheeldirection_ = 0;
  clear_has_flwheeldirection();
}
inline ::apollo::canbus::Fbs2_240_FlwheeldirectionType Fbs2_240::flwheeldirection() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.flwheeldirection)
  return static_cast< ::apollo::canbus::Fbs2_240_FlwheeldirectionType >(flwheeldirection_);
}
inline void Fbs2_240::set_flwheeldirection(::apollo::canbus::Fbs2_240_FlwheeldirectionType value) {
  assert(::apollo::canbus::Fbs2_240_FlwheeldirectionType_IsValid(value));
  set_has_flwheeldirection();
  flwheeldirection_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.flwheeldirection)
}

// optional double frwheelspd = 2;
inline bool Fbs2_240::has_frwheelspd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fbs2_240::set_has_frwheelspd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Fbs2_240::clear_has_frwheelspd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Fbs2_240::clear_frwheelspd() {
  frwheelspd_ = 0;
  clear_has_frwheelspd();
}
inline double Fbs2_240::frwheelspd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.frwheelspd)
  return frwheelspd_;
}
inline void Fbs2_240::set_frwheelspd(double value) {
  set_has_frwheelspd();
  frwheelspd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.frwheelspd)
}

// optional .apollo.canbus.Fbs2_240.RlwheeldrivedirectionType rlwheeldrivedirection = 3;
inline bool Fbs2_240::has_rlwheeldrivedirection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Fbs2_240::set_has_rlwheeldrivedirection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Fbs2_240::clear_has_rlwheeldrivedirection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Fbs2_240::clear_rlwheeldrivedirection() {
  rlwheeldrivedirection_ = 0;
  clear_has_rlwheeldrivedirection();
}
inline ::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType Fbs2_240::rlwheeldrivedirection() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.rlwheeldrivedirection)
  return static_cast< ::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType >(rlwheeldrivedirection_);
}
inline void Fbs2_240::set_rlwheeldrivedirection(::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType value) {
  assert(::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType_IsValid(value));
  set_has_rlwheeldrivedirection();
  rlwheeldrivedirection_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.rlwheeldrivedirection)
}

// optional double rlwheelspd = 4;
inline bool Fbs2_240::has_rlwheelspd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Fbs2_240::set_has_rlwheelspd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Fbs2_240::clear_has_rlwheelspd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Fbs2_240::clear_rlwheelspd() {
  rlwheelspd_ = 0;
  clear_has_rlwheelspd();
}
inline double Fbs2_240::rlwheelspd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.rlwheelspd)
  return rlwheelspd_;
}
inline void Fbs2_240::set_rlwheelspd(double value) {
  set_has_rlwheelspd();
  rlwheelspd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.rlwheelspd)
}

// optional .apollo.canbus.Fbs2_240.RrwheeldirectionType rrwheeldirection = 5;
inline bool Fbs2_240::has_rrwheeldirection() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Fbs2_240::set_has_rrwheeldirection() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Fbs2_240::clear_has_rrwheeldirection() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Fbs2_240::clear_rrwheeldirection() {
  rrwheeldirection_ = 0;
  clear_has_rrwheeldirection();
}
inline ::apollo::canbus::Fbs2_240_RrwheeldirectionType Fbs2_240::rrwheeldirection() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.rrwheeldirection)
  return static_cast< ::apollo::canbus::Fbs2_240_RrwheeldirectionType >(rrwheeldirection_);
}
inline void Fbs2_240::set_rrwheeldirection(::apollo::canbus::Fbs2_240_RrwheeldirectionType value) {
  assert(::apollo::canbus::Fbs2_240_RrwheeldirectionType_IsValid(value));
  set_has_rrwheeldirection();
  rrwheeldirection_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.rrwheeldirection)
}

// optional double rrwheelspd = 6;
inline bool Fbs2_240::has_rrwheelspd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Fbs2_240::set_has_rrwheelspd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Fbs2_240::clear_has_rrwheelspd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Fbs2_240::clear_rrwheelspd() {
  rrwheelspd_ = 0;
  clear_has_rrwheelspd();
}
inline double Fbs2_240::rrwheelspd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.rrwheelspd)
  return rrwheelspd_;
}
inline void Fbs2_240::set_rrwheelspd(double value) {
  set_has_rrwheelspd();
  rrwheelspd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.rrwheelspd)
}

// optional double vehiclespd = 7;
inline bool Fbs2_240::has_vehiclespd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Fbs2_240::set_has_vehiclespd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Fbs2_240::clear_has_vehiclespd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Fbs2_240::clear_vehiclespd() {
  vehiclespd_ = 0;
  clear_has_vehiclespd();
}
inline double Fbs2_240::vehiclespd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs2_240.vehiclespd)
  return vehiclespd_;
}
inline void Fbs2_240::set_vehiclespd(double value) {
  set_has_vehiclespd();
  vehiclespd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs2_240.vehiclespd)
}

// -------------------------------------------------------------------

// Fbs1_243

// optional double longitudeacce = 1;
inline bool Fbs1_243::has_longitudeacce() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fbs1_243::set_has_longitudeacce() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Fbs1_243::clear_has_longitudeacce() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Fbs1_243::clear_longitudeacce() {
  longitudeacce_ = 0;
  clear_has_longitudeacce();
}
inline double Fbs1_243::longitudeacce() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs1_243.longitudeacce)
  return longitudeacce_;
}
inline void Fbs1_243::set_longitudeacce(double value) {
  set_has_longitudeacce();
  longitudeacce_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs1_243.longitudeacce)
}

// optional double lateralacce = 2;
inline bool Fbs1_243::has_lateralacce() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fbs1_243::set_has_lateralacce() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Fbs1_243::clear_has_lateralacce() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Fbs1_243::clear_lateralacce() {
  lateralacce_ = 0;
  clear_has_lateralacce();
}
inline double Fbs1_243::lateralacce() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs1_243.lateralacce)
  return lateralacce_;
}
inline void Fbs1_243::set_lateralacce(double value) {
  set_has_lateralacce();
  lateralacce_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs1_243.lateralacce)
}

// optional double vehdynyawrate = 3;
inline bool Fbs1_243::has_vehdynyawrate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Fbs1_243::set_has_vehdynyawrate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Fbs1_243::clear_has_vehdynyawrate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Fbs1_243::clear_vehdynyawrate() {
  vehdynyawrate_ = 0;
  clear_has_vehdynyawrate();
}
inline double Fbs1_243::vehdynyawrate() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs1_243.vehdynyawrate)
  return vehdynyawrate_;
}
inline void Fbs1_243::set_vehdynyawrate(double value) {
  set_has_vehdynyawrate();
  vehdynyawrate_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs1_243.vehdynyawrate)
}

// optional double flwheelspd = 4;
inline bool Fbs1_243::has_flwheelspd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Fbs1_243::set_has_flwheelspd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Fbs1_243::clear_has_flwheelspd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Fbs1_243::clear_flwheelspd() {
  flwheelspd_ = 0;
  clear_has_flwheelspd();
}
inline double Fbs1_243::flwheelspd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs1_243.flwheelspd)
  return flwheelspd_;
}
inline void Fbs1_243::set_flwheelspd(double value) {
  set_has_flwheelspd();
  flwheelspd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs1_243.flwheelspd)
}

// optional .apollo.canbus.Fbs1_243.FrwheeldirectionType frwheeldirection = 5;
inline bool Fbs1_243::has_frwheeldirection() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Fbs1_243::set_has_frwheeldirection() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Fbs1_243::clear_has_frwheeldirection() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Fbs1_243::clear_frwheeldirection() {
  frwheeldirection_ = 0;
  clear_has_frwheeldirection();
}
inline ::apollo::canbus::Fbs1_243_FrwheeldirectionType Fbs1_243::frwheeldirection() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs1_243.frwheeldirection)
  return static_cast< ::apollo::canbus::Fbs1_243_FrwheeldirectionType >(frwheeldirection_);
}
inline void Fbs1_243::set_frwheeldirection(::apollo::canbus::Fbs1_243_FrwheeldirectionType value) {
  assert(::apollo::canbus::Fbs1_243_FrwheeldirectionType_IsValid(value));
  set_has_frwheeldirection();
  frwheeldirection_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs1_243.frwheeldirection)
}

// -------------------------------------------------------------------

// Fbs4_235

// optional double steerwheelangle = 1;
inline bool Fbs4_235::has_steerwheelangle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fbs4_235::set_has_steerwheelangle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Fbs4_235::clear_has_steerwheelangle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Fbs4_235::clear_steerwheelangle() {
  steerwheelangle_ = 0;
  clear_has_steerwheelangle();
}
inline double Fbs4_235::steerwheelangle() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs4_235.steerwheelangle)
  return steerwheelangle_;
}
inline void Fbs4_235::set_steerwheelangle(double value) {
  set_has_steerwheelangle();
  steerwheelangle_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs4_235.steerwheelangle)
}

// optional double steerwheelspd = 2;
inline bool Fbs4_235::has_steerwheelspd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fbs4_235::set_has_steerwheelspd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Fbs4_235::clear_has_steerwheelspd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Fbs4_235::clear_steerwheelspd() {
  steerwheelspd_ = 0;
  clear_has_steerwheelspd();
}
inline double Fbs4_235::steerwheelspd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs4_235.steerwheelspd)
  return steerwheelspd_;
}
inline void Fbs4_235::set_steerwheelspd(double value) {
  set_has_steerwheelspd();
  steerwheelspd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs4_235.steerwheelspd)
}

// -------------------------------------------------------------------

// Fail_241

// optional .apollo.canbus.Fail_241.EngfailType engfail = 1;
inline bool Fail_241::has_engfail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fail_241::set_has_engfail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Fail_241::clear_has_engfail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Fail_241::clear_engfail() {
  engfail_ = 0;
  clear_has_engfail();
}
inline ::apollo::canbus::Fail_241_EngfailType Fail_241::engfail() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fail_241.engfail)
  return static_cast< ::apollo::canbus::Fail_241_EngfailType >(engfail_);
}
inline void Fail_241::set_engfail(::apollo::canbus::Fail_241_EngfailType value) {
  assert(::apollo::canbus::Fail_241_EngfailType_IsValid(value));
  set_has_engfail();
  engfail_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fail_241.engfail)
}

// optional .apollo.canbus.Fail_241.EspfailType espfail = 2;
inline bool Fail_241::has_espfail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fail_241::set_has_espfail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Fail_241::clear_has_espfail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Fail_241::clear_espfail() {
  espfail_ = 0;
  clear_has_espfail();
}
inline ::apollo::canbus::Fail_241_EspfailType Fail_241::espfail() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fail_241.espfail)
  return static_cast< ::apollo::canbus::Fail_241_EspfailType >(espfail_);
}
inline void Fail_241::set_espfail(::apollo::canbus::Fail_241_EspfailType value) {
  assert(::apollo::canbus::Fail_241_EspfailType_IsValid(value));
  set_has_espfail();
  espfail_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fail_241.espfail)
}

// optional .apollo.canbus.Fail_241.EpbfailType epbfail = 3;
inline bool Fail_241::has_epbfail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Fail_241::set_has_epbfail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Fail_241::clear_has_epbfail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Fail_241::clear_epbfail() {
  epbfail_ = 0;
  clear_has_epbfail();
}
inline ::apollo::canbus::Fail_241_EpbfailType Fail_241::epbfail() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fail_241.epbfail)
  return static_cast< ::apollo::canbus::Fail_241_EpbfailType >(epbfail_);
}
inline void Fail_241::set_epbfail(::apollo::canbus::Fail_241_EpbfailType value) {
  assert(::apollo::canbus::Fail_241_EpbfailType_IsValid(value));
  set_has_epbfail();
  epbfail_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fail_241.epbfail)
}

// optional .apollo.canbus.Fail_241.ShiftfailType shiftfail = 4;
inline bool Fail_241::has_shiftfail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Fail_241::set_has_shiftfail() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Fail_241::clear_has_shiftfail() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Fail_241::clear_shiftfail() {
  shiftfail_ = 0;
  clear_has_shiftfail();
}
inline ::apollo::canbus::Fail_241_ShiftfailType Fail_241::shiftfail() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fail_241.shiftfail)
  return static_cast< ::apollo::canbus::Fail_241_ShiftfailType >(shiftfail_);
}
inline void Fail_241::set_shiftfail(::apollo::canbus::Fail_241_ShiftfailType value) {
  assert(::apollo::canbus::Fail_241_ShiftfailType_IsValid(value));
  set_has_shiftfail();
  shiftfail_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fail_241.shiftfail)
}

// optional .apollo.canbus.Fail_241.EpsfailType epsfail = 5;
inline bool Fail_241::has_epsfail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Fail_241::set_has_epsfail() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Fail_241::clear_has_epsfail() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Fail_241::clear_epsfail() {
  epsfail_ = 0;
  clear_has_epsfail();
}
inline ::apollo::canbus::Fail_241_EpsfailType Fail_241::epsfail() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fail_241.epsfail)
  return static_cast< ::apollo::canbus::Fail_241_EpsfailType >(epsfail_);
}
inline void Fail_241::set_epsfail(::apollo::canbus::Fail_241_EpsfailType value) {
  assert(::apollo::canbus::Fail_241_EpsfailType_IsValid(value));
  set_has_epsfail();
  epsfail_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fail_241.epsfail)
}

// -------------------------------------------------------------------

// Fbs3_237

// optional double engspd = 1;
inline bool Fbs3_237::has_engspd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fbs3_237::set_has_engspd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Fbs3_237::clear_has_engspd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Fbs3_237::clear_engspd() {
  engspd_ = 0;
  clear_has_engspd();
}
inline double Fbs3_237::engspd() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.engspd)
  return engspd_;
}
inline void Fbs3_237::set_engspd(double value) {
  set_has_engspd();
  engspd_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.engspd)
}

// optional double accpedalpos = 2;
inline bool Fbs3_237::has_accpedalpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fbs3_237::set_has_accpedalpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Fbs3_237::clear_has_accpedalpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Fbs3_237::clear_accpedalpos() {
  accpedalpos_ = 0;
  clear_has_accpedalpos();
}
inline double Fbs3_237::accpedalpos() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.accpedalpos)
  return accpedalpos_;
}
inline void Fbs3_237::set_accpedalpos(double value) {
  set_has_accpedalpos();
  accpedalpos_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.accpedalpos)
}

// optional .apollo.canbus.Fbs3_237.EpbswtichpositionType epbswtichposition = 3;
inline bool Fbs3_237::has_epbswtichposition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Fbs3_237::set_has_epbswtichposition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Fbs3_237::clear_has_epbswtichposition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Fbs3_237::clear_epbswtichposition() {
  epbswtichposition_ = 0;
  clear_has_epbswtichposition();
}
inline ::apollo::canbus::Fbs3_237_EpbswtichpositionType Fbs3_237::epbswtichposition() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.epbswtichposition)
  return static_cast< ::apollo::canbus::Fbs3_237_EpbswtichpositionType >(epbswtichposition_);
}
inline void Fbs3_237::set_epbswtichposition(::apollo::canbus::Fbs3_237_EpbswtichpositionType value) {
  assert(::apollo::canbus::Fbs3_237_EpbswtichpositionType_IsValid(value));
  set_has_epbswtichposition();
  epbswtichposition_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.epbswtichposition)
}

// optional .apollo.canbus.Fbs3_237.CurrentgearType currentgear = 4;
inline bool Fbs3_237::has_currentgear() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Fbs3_237::set_has_currentgear() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Fbs3_237::clear_has_currentgear() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Fbs3_237::clear_currentgear() {
  currentgear_ = 0;
  clear_has_currentgear();
}
inline ::apollo::canbus::Fbs3_237_CurrentgearType Fbs3_237::currentgear() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.currentgear)
  return static_cast< ::apollo::canbus::Fbs3_237_CurrentgearType >(currentgear_);
}
inline void Fbs3_237::set_currentgear(::apollo::canbus::Fbs3_237_CurrentgearType value) {
  assert(::apollo::canbus::Fbs3_237_CurrentgearType_IsValid(value));
  set_has_currentgear();
  currentgear_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.currentgear)
}

// optional .apollo.canbus.Fbs3_237.Eps_streeingmodeType eps_streeingmode = 5;
inline bool Fbs3_237::has_eps_streeingmode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Fbs3_237::set_has_eps_streeingmode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Fbs3_237::clear_has_eps_streeingmode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Fbs3_237::clear_eps_streeingmode() {
  eps_streeingmode_ = 0;
  clear_has_eps_streeingmode();
}
inline ::apollo::canbus::Fbs3_237_Eps_streeingmodeType Fbs3_237::eps_streeingmode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.eps_streeingmode)
  return static_cast< ::apollo::canbus::Fbs3_237_Eps_streeingmodeType >(eps_streeingmode_);
}
inline void Fbs3_237::set_eps_streeingmode(::apollo::canbus::Fbs3_237_Eps_streeingmodeType value) {
  assert(::apollo::canbus::Fbs3_237_Eps_streeingmodeType_IsValid(value));
  set_has_eps_streeingmode();
  eps_streeingmode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.eps_streeingmode)
}

// optional double epsdrvinputtrqvalue = 6;
inline bool Fbs3_237::has_epsdrvinputtrqvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Fbs3_237::set_has_epsdrvinputtrqvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Fbs3_237::clear_has_epsdrvinputtrqvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Fbs3_237::clear_epsdrvinputtrqvalue() {
  epsdrvinputtrqvalue_ = 0;
  clear_has_epsdrvinputtrqvalue();
}
inline double Fbs3_237::epsdrvinputtrqvalue() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.epsdrvinputtrqvalue)
  return epsdrvinputtrqvalue_;
}
inline void Fbs3_237::set_epsdrvinputtrqvalue(double value) {
  set_has_epsdrvinputtrqvalue();
  epsdrvinputtrqvalue_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.epsdrvinputtrqvalue)
}

// optional double epsconsumedcurrvalue = 7;
inline bool Fbs3_237::has_epsconsumedcurrvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Fbs3_237::set_has_epsconsumedcurrvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Fbs3_237::clear_has_epsconsumedcurrvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Fbs3_237::clear_epsconsumedcurrvalue() {
  epsconsumedcurrvalue_ = 0;
  clear_has_epsconsumedcurrvalue();
}
inline double Fbs3_237::epsconsumedcurrvalue() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.epsconsumedcurrvalue)
  return epsconsumedcurrvalue_;
}
inline void Fbs3_237::set_epsconsumedcurrvalue(double value) {
  set_has_epsconsumedcurrvalue();
  epsconsumedcurrvalue_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.epsconsumedcurrvalue)
}

// optional .apollo.canbus.Fbs3_237.EpscurrmodType epscurrmod = 8;
inline bool Fbs3_237::has_epscurrmod() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Fbs3_237::set_has_epscurrmod() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Fbs3_237::clear_has_epscurrmod() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Fbs3_237::clear_epscurrmod() {
  epscurrmod_ = 0;
  clear_has_epscurrmod();
}
inline ::apollo::canbus::Fbs3_237_EpscurrmodType Fbs3_237::epscurrmod() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Fbs3_237.epscurrmod)
  return static_cast< ::apollo::canbus::Fbs3_237_EpscurrmodType >(epscurrmod_);
}
inline void Fbs3_237::set_epscurrmod(::apollo::canbus::Fbs3_237_EpscurrmodType value) {
  assert(::apollo::canbus::Fbs3_237_EpscurrmodType_IsValid(value));
  set_has_epscurrmod();
  epscurrmod_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Fbs3_237.epscurrmod)
}

// -------------------------------------------------------------------

// Ads3_38e

// optional .apollo.canbus.Ads3_38e.Ads_bcm_workstsType ads_bcm_worksts = 1;
inline bool Ads3_38e::has_ads_bcm_worksts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ads3_38e::set_has_ads_bcm_worksts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ads3_38e::clear_has_ads_bcm_worksts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ads3_38e::clear_ads_bcm_worksts() {
  ads_bcm_worksts_ = 0;
  clear_has_ads_bcm_worksts();
}
inline ::apollo::canbus::Ads3_38e_Ads_bcm_workstsType Ads3_38e::ads_bcm_worksts() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.ads_bcm_worksts)
  return static_cast< ::apollo::canbus::Ads3_38e_Ads_bcm_workstsType >(ads_bcm_worksts_);
}
inline void Ads3_38e::set_ads_bcm_worksts(::apollo::canbus::Ads3_38e_Ads_bcm_workstsType value) {
  assert(::apollo::canbus::Ads3_38e_Ads_bcm_workstsType_IsValid(value));
  set_has_ads_bcm_worksts();
  ads_bcm_worksts_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.ads_bcm_worksts)
}

// optional .apollo.canbus.Ads3_38e.Ads_bcmworkstsvalidType ads_bcmworkstsvalid = 2;
inline bool Ads3_38e::has_ads_bcmworkstsvalid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ads3_38e::set_has_ads_bcmworkstsvalid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ads3_38e::clear_has_ads_bcmworkstsvalid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ads3_38e::clear_ads_bcmworkstsvalid() {
  ads_bcmworkstsvalid_ = 0;
  clear_has_ads_bcmworkstsvalid();
}
inline ::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e::ads_bcmworkstsvalid() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.ads_bcmworkstsvalid)
  return static_cast< ::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType >(ads_bcmworkstsvalid_);
}
inline void Ads3_38e::set_ads_bcmworkstsvalid(::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType value) {
  assert(::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType_IsValid(value));
  set_has_ads_bcmworkstsvalid();
  ads_bcmworkstsvalid_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.ads_bcmworkstsvalid)
}

// optional .apollo.canbus.Ads3_38e.Ads_reqcontrolbcmType ads_reqcontrolbcm = 3;
inline bool Ads3_38e::has_ads_reqcontrolbcm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ads3_38e::set_has_ads_reqcontrolbcm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ads3_38e::clear_has_ads_reqcontrolbcm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ads3_38e::clear_ads_reqcontrolbcm() {
  ads_reqcontrolbcm_ = 0;
  clear_has_ads_reqcontrolbcm();
}
inline ::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType Ads3_38e::ads_reqcontrolbcm() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.ads_reqcontrolbcm)
  return static_cast< ::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType >(ads_reqcontrolbcm_);
}
inline void Ads3_38e::set_ads_reqcontrolbcm(::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType value) {
  assert(::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType_IsValid(value));
  set_has_ads_reqcontrolbcm();
  ads_reqcontrolbcm_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.ads_reqcontrolbcm)
}

// optional .apollo.canbus.Ads3_38e.HighbeamtonType highbeamton = 4;
inline bool Ads3_38e::has_highbeamton() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Ads3_38e::set_has_highbeamton() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Ads3_38e::clear_has_highbeamton() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Ads3_38e::clear_highbeamton() {
  highbeamton_ = 0;
  clear_has_highbeamton();
}
inline ::apollo::canbus::Ads3_38e_HighbeamtonType Ads3_38e::highbeamton() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.highbeamton)
  return static_cast< ::apollo::canbus::Ads3_38e_HighbeamtonType >(highbeamton_);
}
inline void Ads3_38e::set_highbeamton(::apollo::canbus::Ads3_38e_HighbeamtonType value) {
  assert(::apollo::canbus::Ads3_38e_HighbeamtonType_IsValid(value));
  set_has_highbeamton();
  highbeamton_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.highbeamton)
}

// optional .apollo.canbus.Ads3_38e.DippedbeamonType dippedbeamon = 5;
inline bool Ads3_38e::has_dippedbeamon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Ads3_38e::set_has_dippedbeamon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Ads3_38e::clear_has_dippedbeamon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Ads3_38e::clear_dippedbeamon() {
  dippedbeamon_ = 0;
  clear_has_dippedbeamon();
}
inline ::apollo::canbus::Ads3_38e_DippedbeamonType Ads3_38e::dippedbeamon() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.dippedbeamon)
  return static_cast< ::apollo::canbus::Ads3_38e_DippedbeamonType >(dippedbeamon_);
}
inline void Ads3_38e::set_dippedbeamon(::apollo::canbus::Ads3_38e_DippedbeamonType value) {
  assert(::apollo::canbus::Ads3_38e_DippedbeamonType_IsValid(value));
  set_has_dippedbeamon();
  dippedbeamon_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.dippedbeamon)
}

// optional .apollo.canbus.Ads3_38e.TurnllightonType turnllighton = 6;
inline bool Ads3_38e::has_turnllighton() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Ads3_38e::set_has_turnllighton() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Ads3_38e::clear_has_turnllighton() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Ads3_38e::clear_turnllighton() {
  turnllighton_ = 0;
  clear_has_turnllighton();
}
inline ::apollo::canbus::Ads3_38e_TurnllightonType Ads3_38e::turnllighton() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.turnllighton)
  return static_cast< ::apollo::canbus::Ads3_38e_TurnllightonType >(turnllighton_);
}
inline void Ads3_38e::set_turnllighton(::apollo::canbus::Ads3_38e_TurnllightonType value) {
  assert(::apollo::canbus::Ads3_38e_TurnllightonType_IsValid(value));
  set_has_turnllighton();
  turnllighton_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.turnllighton)
}

// optional .apollo.canbus.Ads3_38e.EmergencylightonType emergencylighton = 7;
inline bool Ads3_38e::has_emergencylighton() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Ads3_38e::set_has_emergencylighton() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Ads3_38e::clear_has_emergencylighton() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Ads3_38e::clear_emergencylighton() {
  emergencylighton_ = 0;
  clear_has_emergencylighton();
}
inline ::apollo::canbus::Ads3_38e_EmergencylightonType Ads3_38e::emergencylighton() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.emergencylighton)
  return static_cast< ::apollo::canbus::Ads3_38e_EmergencylightonType >(emergencylighton_);
}
inline void Ads3_38e::set_emergencylighton(::apollo::canbus::Ads3_38e_EmergencylightonType value) {
  assert(::apollo::canbus::Ads3_38e_EmergencylightonType_IsValid(value));
  set_has_emergencylighton();
  emergencylighton_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.emergencylighton)
}

// optional .apollo.canbus.Ads3_38e.FfoglamponType ffoglampon = 8;
inline bool Ads3_38e::has_ffoglampon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Ads3_38e::set_has_ffoglampon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Ads3_38e::clear_has_ffoglampon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Ads3_38e::clear_ffoglampon() {
  ffoglampon_ = 0;
  clear_has_ffoglampon();
}
inline ::apollo::canbus::Ads3_38e_FfoglamponType Ads3_38e::ffoglampon() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.ffoglampon)
  return static_cast< ::apollo::canbus::Ads3_38e_FfoglamponType >(ffoglampon_);
}
inline void Ads3_38e::set_ffoglampon(::apollo::canbus::Ads3_38e_FfoglamponType value) {
  assert(::apollo::canbus::Ads3_38e_FfoglamponType_IsValid(value));
  set_has_ffoglampon();
  ffoglampon_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.ffoglampon)
}

// optional .apollo.canbus.Ads3_38e.RfoglamponType rfoglampon = 9;
inline bool Ads3_38e::has_rfoglampon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Ads3_38e::set_has_rfoglampon() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Ads3_38e::clear_has_rfoglampon() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Ads3_38e::clear_rfoglampon() {
  rfoglampon_ = 0;
  clear_has_rfoglampon();
}
inline ::apollo::canbus::Ads3_38e_RfoglamponType Ads3_38e::rfoglampon() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.rfoglampon)
  return static_cast< ::apollo::canbus::Ads3_38e_RfoglamponType >(rfoglampon_);
}
inline void Ads3_38e::set_rfoglampon(::apollo::canbus::Ads3_38e_RfoglamponType value) {
  assert(::apollo::canbus::Ads3_38e_RfoglamponType_IsValid(value));
  set_has_rfoglampon();
  rfoglampon_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.rfoglampon)
}

// optional .apollo.canbus.Ads3_38e.BrakelightType brakelight = 10;
inline bool Ads3_38e::has_brakelight() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Ads3_38e::set_has_brakelight() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Ads3_38e::clear_has_brakelight() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Ads3_38e::clear_brakelight() {
  brakelight_ = 0;
  clear_has_brakelight();
}
inline ::apollo::canbus::Ads3_38e_BrakelightType Ads3_38e::brakelight() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.brakelight)
  return static_cast< ::apollo::canbus::Ads3_38e_BrakelightType >(brakelight_);
}
inline void Ads3_38e::set_brakelight(::apollo::canbus::Ads3_38e_BrakelightType value) {
  assert(::apollo::canbus::Ads3_38e_BrakelightType_IsValid(value));
  set_has_brakelight();
  brakelight_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.brakelight)
}

// optional .apollo.canbus.Ads3_38e.HornonType hornon = 11;
inline bool Ads3_38e::has_hornon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Ads3_38e::set_has_hornon() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Ads3_38e::clear_has_hornon() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Ads3_38e::clear_hornon() {
  hornon_ = 0;
  clear_has_hornon();
}
inline ::apollo::canbus::Ads3_38e_HornonType Ads3_38e::hornon() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.hornon)
  return static_cast< ::apollo::canbus::Ads3_38e_HornonType >(hornon_);
}
inline void Ads3_38e::set_hornon(::apollo::canbus::Ads3_38e_HornonType value) {
  assert(::apollo::canbus::Ads3_38e_HornonType_IsValid(value));
  set_has_hornon();
  hornon_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.hornon)
}

// optional .apollo.canbus.Ads3_38e.FwindshieldwiperType fwindshieldwiper = 12;
inline bool Ads3_38e::has_fwindshieldwiper() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Ads3_38e::set_has_fwindshieldwiper() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Ads3_38e::clear_has_fwindshieldwiper() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Ads3_38e::clear_fwindshieldwiper() {
  fwindshieldwiper_ = 0;
  clear_has_fwindshieldwiper();
}
inline ::apollo::canbus::Ads3_38e_FwindshieldwiperType Ads3_38e::fwindshieldwiper() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.fwindshieldwiper)
  return static_cast< ::apollo::canbus::Ads3_38e_FwindshieldwiperType >(fwindshieldwiper_);
}
inline void Ads3_38e::set_fwindshieldwiper(::apollo::canbus::Ads3_38e_FwindshieldwiperType value) {
  assert(::apollo::canbus::Ads3_38e_FwindshieldwiperType_IsValid(value));
  set_has_fwindshieldwiper();
  fwindshieldwiper_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.fwindshieldwiper)
}

// optional .apollo.canbus.Ads3_38e.RwindshieldwiperType rwindshieldwiper = 13;
inline bool Ads3_38e::has_rwindshieldwiper() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Ads3_38e::set_has_rwindshieldwiper() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Ads3_38e::clear_has_rwindshieldwiper() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Ads3_38e::clear_rwindshieldwiper() {
  rwindshieldwiper_ = 0;
  clear_has_rwindshieldwiper();
}
inline ::apollo::canbus::Ads3_38e_RwindshieldwiperType Ads3_38e::rwindshieldwiper() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Ads3_38e.rwindshieldwiper)
  return static_cast< ::apollo::canbus::Ads3_38e_RwindshieldwiperType >(rwindshieldwiper_);
}
inline void Ads3_38e::set_rwindshieldwiper(::apollo::canbus::Ads3_38e_RwindshieldwiperType value) {
  assert(::apollo::canbus::Ads3_38e_RwindshieldwiperType_IsValid(value));
  set_has_rwindshieldwiper();
  rwindshieldwiper_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Ads3_38e.rwindshieldwiper)
}

// -------------------------------------------------------------------

// Wey

// optional .apollo.canbus.Ads_shifter_115 ads_shifter_115 = 1;
inline bool Wey::has_ads_shifter_115() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Wey::set_has_ads_shifter_115() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Wey::clear_has_ads_shifter_115() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Wey::clear_ads_shifter_115() {
  if (ads_shifter_115_ != NULL) ads_shifter_115_->Clear();
  clear_has_ads_shifter_115();
}
inline const ::apollo::canbus::Ads_shifter_115& Wey::_internal_ads_shifter_115() const {
  return *ads_shifter_115_;
}
inline const ::apollo::canbus::Ads_shifter_115& Wey::ads_shifter_115() const {
  const ::apollo::canbus::Ads_shifter_115* p = ads_shifter_115_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.ads_shifter_115)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Ads_shifter_115*>(
      &::apollo::canbus::_Ads_shifter_115_default_instance_);
}
inline ::apollo::canbus::Ads_shifter_115* Wey::release_ads_shifter_115() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.ads_shifter_115)
  clear_has_ads_shifter_115();
  ::apollo::canbus::Ads_shifter_115* temp = ads_shifter_115_;
  ads_shifter_115_ = NULL;
  return temp;
}
inline ::apollo::canbus::Ads_shifter_115* Wey::mutable_ads_shifter_115() {
  set_has_ads_shifter_115();
  if (ads_shifter_115_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Ads_shifter_115>(GetArenaNoVirtual());
    ads_shifter_115_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.ads_shifter_115)
  return ads_shifter_115_;
}
inline void Wey::set_allocated_ads_shifter_115(::apollo::canbus::Ads_shifter_115* ads_shifter_115) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ads_shifter_115_;
  }
  if (ads_shifter_115) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ads_shifter_115 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ads_shifter_115, submessage_arena);
    }
    set_has_ads_shifter_115();
  } else {
    clear_has_ads_shifter_115();
  }
  ads_shifter_115_ = ads_shifter_115;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.ads_shifter_115)
}

// optional .apollo.canbus.Ads_eps_113 ads_eps_113 = 2;
inline bool Wey::has_ads_eps_113() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Wey::set_has_ads_eps_113() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Wey::clear_has_ads_eps_113() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Wey::clear_ads_eps_113() {
  if (ads_eps_113_ != NULL) ads_eps_113_->Clear();
  clear_has_ads_eps_113();
}
inline const ::apollo::canbus::Ads_eps_113& Wey::_internal_ads_eps_113() const {
  return *ads_eps_113_;
}
inline const ::apollo::canbus::Ads_eps_113& Wey::ads_eps_113() const {
  const ::apollo::canbus::Ads_eps_113* p = ads_eps_113_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.ads_eps_113)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Ads_eps_113*>(
      &::apollo::canbus::_Ads_eps_113_default_instance_);
}
inline ::apollo::canbus::Ads_eps_113* Wey::release_ads_eps_113() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.ads_eps_113)
  clear_has_ads_eps_113();
  ::apollo::canbus::Ads_eps_113* temp = ads_eps_113_;
  ads_eps_113_ = NULL;
  return temp;
}
inline ::apollo::canbus::Ads_eps_113* Wey::mutable_ads_eps_113() {
  set_has_ads_eps_113();
  if (ads_eps_113_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Ads_eps_113>(GetArenaNoVirtual());
    ads_eps_113_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.ads_eps_113)
  return ads_eps_113_;
}
inline void Wey::set_allocated_ads_eps_113(::apollo::canbus::Ads_eps_113* ads_eps_113) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ads_eps_113_;
  }
  if (ads_eps_113) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ads_eps_113 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ads_eps_113, submessage_arena);
    }
    set_has_ads_eps_113();
  } else {
    clear_has_ads_eps_113();
  }
  ads_eps_113_ = ads_eps_113;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.ads_eps_113)
}

// optional .apollo.canbus.Status_310 status_310 = 3;
inline bool Wey::has_status_310() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Wey::set_has_status_310() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Wey::clear_has_status_310() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Wey::clear_status_310() {
  if (status_310_ != NULL) status_310_->Clear();
  clear_has_status_310();
}
inline const ::apollo::canbus::Status_310& Wey::_internal_status_310() const {
  return *status_310_;
}
inline const ::apollo::canbus::Status_310& Wey::status_310() const {
  const ::apollo::canbus::Status_310* p = status_310_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.status_310)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Status_310*>(
      &::apollo::canbus::_Status_310_default_instance_);
}
inline ::apollo::canbus::Status_310* Wey::release_status_310() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.status_310)
  clear_has_status_310();
  ::apollo::canbus::Status_310* temp = status_310_;
  status_310_ = NULL;
  return temp;
}
inline ::apollo::canbus::Status_310* Wey::mutable_status_310() {
  set_has_status_310();
  if (status_310_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Status_310>(GetArenaNoVirtual());
    status_310_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.status_310)
  return status_310_;
}
inline void Wey::set_allocated_status_310(::apollo::canbus::Status_310* status_310) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_310_;
  }
  if (status_310) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_310 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_310, submessage_arena);
    }
    set_has_status_310();
  } else {
    clear_has_status_310();
  }
  status_310_ = status_310;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.status_310)
}

// optional .apollo.canbus.Vin_resp3_393 vin_resp3_393 = 4;
inline bool Wey::has_vin_resp3_393() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Wey::set_has_vin_resp3_393() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Wey::clear_has_vin_resp3_393() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Wey::clear_vin_resp3_393() {
  if (vin_resp3_393_ != NULL) vin_resp3_393_->Clear();
  clear_has_vin_resp3_393();
}
inline const ::apollo::canbus::Vin_resp3_393& Wey::_internal_vin_resp3_393() const {
  return *vin_resp3_393_;
}
inline const ::apollo::canbus::Vin_resp3_393& Wey::vin_resp3_393() const {
  const ::apollo::canbus::Vin_resp3_393* p = vin_resp3_393_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.vin_resp3_393)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Vin_resp3_393*>(
      &::apollo::canbus::_Vin_resp3_393_default_instance_);
}
inline ::apollo::canbus::Vin_resp3_393* Wey::release_vin_resp3_393() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.vin_resp3_393)
  clear_has_vin_resp3_393();
  ::apollo::canbus::Vin_resp3_393* temp = vin_resp3_393_;
  vin_resp3_393_ = NULL;
  return temp;
}
inline ::apollo::canbus::Vin_resp3_393* Wey::mutable_vin_resp3_393() {
  set_has_vin_resp3_393();
  if (vin_resp3_393_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Vin_resp3_393>(GetArenaNoVirtual());
    vin_resp3_393_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.vin_resp3_393)
  return vin_resp3_393_;
}
inline void Wey::set_allocated_vin_resp3_393(::apollo::canbus::Vin_resp3_393* vin_resp3_393) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vin_resp3_393_;
  }
  if (vin_resp3_393) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vin_resp3_393 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vin_resp3_393, submessage_arena);
    }
    set_has_vin_resp3_393();
  } else {
    clear_has_vin_resp3_393();
  }
  vin_resp3_393_ = vin_resp3_393;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.vin_resp3_393)
}

// optional .apollo.canbus.Vin_resp2_392 vin_resp2_392 = 5;
inline bool Wey::has_vin_resp2_392() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Wey::set_has_vin_resp2_392() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Wey::clear_has_vin_resp2_392() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Wey::clear_vin_resp2_392() {
  if (vin_resp2_392_ != NULL) vin_resp2_392_->Clear();
  clear_has_vin_resp2_392();
}
inline const ::apollo::canbus::Vin_resp2_392& Wey::_internal_vin_resp2_392() const {
  return *vin_resp2_392_;
}
inline const ::apollo::canbus::Vin_resp2_392& Wey::vin_resp2_392() const {
  const ::apollo::canbus::Vin_resp2_392* p = vin_resp2_392_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.vin_resp2_392)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Vin_resp2_392*>(
      &::apollo::canbus::_Vin_resp2_392_default_instance_);
}
inline ::apollo::canbus::Vin_resp2_392* Wey::release_vin_resp2_392() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.vin_resp2_392)
  clear_has_vin_resp2_392();
  ::apollo::canbus::Vin_resp2_392* temp = vin_resp2_392_;
  vin_resp2_392_ = NULL;
  return temp;
}
inline ::apollo::canbus::Vin_resp2_392* Wey::mutable_vin_resp2_392() {
  set_has_vin_resp2_392();
  if (vin_resp2_392_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Vin_resp2_392>(GetArenaNoVirtual());
    vin_resp2_392_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.vin_resp2_392)
  return vin_resp2_392_;
}
inline void Wey::set_allocated_vin_resp2_392(::apollo::canbus::Vin_resp2_392* vin_resp2_392) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vin_resp2_392_;
  }
  if (vin_resp2_392) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vin_resp2_392 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vin_resp2_392, submessage_arena);
    }
    set_has_vin_resp2_392();
  } else {
    clear_has_vin_resp2_392();
  }
  vin_resp2_392_ = vin_resp2_392;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.vin_resp2_392)
}

// optional .apollo.canbus.Vin_resp1_391 vin_resp1_391 = 6;
inline bool Wey::has_vin_resp1_391() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Wey::set_has_vin_resp1_391() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Wey::clear_has_vin_resp1_391() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Wey::clear_vin_resp1_391() {
  if (vin_resp1_391_ != NULL) vin_resp1_391_->Clear();
  clear_has_vin_resp1_391();
}
inline const ::apollo::canbus::Vin_resp1_391& Wey::_internal_vin_resp1_391() const {
  return *vin_resp1_391_;
}
inline const ::apollo::canbus::Vin_resp1_391& Wey::vin_resp1_391() const {
  const ::apollo::canbus::Vin_resp1_391* p = vin_resp1_391_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.vin_resp1_391)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Vin_resp1_391*>(
      &::apollo::canbus::_Vin_resp1_391_default_instance_);
}
inline ::apollo::canbus::Vin_resp1_391* Wey::release_vin_resp1_391() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.vin_resp1_391)
  clear_has_vin_resp1_391();
  ::apollo::canbus::Vin_resp1_391* temp = vin_resp1_391_;
  vin_resp1_391_ = NULL;
  return temp;
}
inline ::apollo::canbus::Vin_resp1_391* Wey::mutable_vin_resp1_391() {
  set_has_vin_resp1_391();
  if (vin_resp1_391_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Vin_resp1_391>(GetArenaNoVirtual());
    vin_resp1_391_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.vin_resp1_391)
  return vin_resp1_391_;
}
inline void Wey::set_allocated_vin_resp1_391(::apollo::canbus::Vin_resp1_391* vin_resp1_391) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vin_resp1_391_;
  }
  if (vin_resp1_391) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vin_resp1_391 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vin_resp1_391, submessage_arena);
    }
    set_has_vin_resp1_391();
  } else {
    clear_has_vin_resp1_391();
  }
  vin_resp1_391_ = vin_resp1_391;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.vin_resp1_391)
}

// optional .apollo.canbus.Ads_req_vin_390 ads_req_vin_390 = 7;
inline bool Wey::has_ads_req_vin_390() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Wey::set_has_ads_req_vin_390() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Wey::clear_has_ads_req_vin_390() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Wey::clear_ads_req_vin_390() {
  if (ads_req_vin_390_ != NULL) ads_req_vin_390_->Clear();
  clear_has_ads_req_vin_390();
}
inline const ::apollo::canbus::Ads_req_vin_390& Wey::_internal_ads_req_vin_390() const {
  return *ads_req_vin_390_;
}
inline const ::apollo::canbus::Ads_req_vin_390& Wey::ads_req_vin_390() const {
  const ::apollo::canbus::Ads_req_vin_390* p = ads_req_vin_390_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.ads_req_vin_390)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Ads_req_vin_390*>(
      &::apollo::canbus::_Ads_req_vin_390_default_instance_);
}
inline ::apollo::canbus::Ads_req_vin_390* Wey::release_ads_req_vin_390() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.ads_req_vin_390)
  clear_has_ads_req_vin_390();
  ::apollo::canbus::Ads_req_vin_390* temp = ads_req_vin_390_;
  ads_req_vin_390_ = NULL;
  return temp;
}
inline ::apollo::canbus::Ads_req_vin_390* Wey::mutable_ads_req_vin_390() {
  set_has_ads_req_vin_390();
  if (ads_req_vin_390_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Ads_req_vin_390>(GetArenaNoVirtual());
    ads_req_vin_390_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.ads_req_vin_390)
  return ads_req_vin_390_;
}
inline void Wey::set_allocated_ads_req_vin_390(::apollo::canbus::Ads_req_vin_390* ads_req_vin_390) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ads_req_vin_390_;
  }
  if (ads_req_vin_390) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ads_req_vin_390 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ads_req_vin_390, submessage_arena);
    }
    set_has_ads_req_vin_390();
  } else {
    clear_has_ads_req_vin_390();
  }
  ads_req_vin_390_ = ads_req_vin_390;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.ads_req_vin_390)
}

// optional .apollo.canbus.Ads1_111 ads1_111 = 8;
inline bool Wey::has_ads1_111() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Wey::set_has_ads1_111() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Wey::clear_has_ads1_111() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Wey::clear_ads1_111() {
  if (ads1_111_ != NULL) ads1_111_->Clear();
  clear_has_ads1_111();
}
inline const ::apollo::canbus::Ads1_111& Wey::_internal_ads1_111() const {
  return *ads1_111_;
}
inline const ::apollo::canbus::Ads1_111& Wey::ads1_111() const {
  const ::apollo::canbus::Ads1_111* p = ads1_111_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.ads1_111)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Ads1_111*>(
      &::apollo::canbus::_Ads1_111_default_instance_);
}
inline ::apollo::canbus::Ads1_111* Wey::release_ads1_111() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.ads1_111)
  clear_has_ads1_111();
  ::apollo::canbus::Ads1_111* temp = ads1_111_;
  ads1_111_ = NULL;
  return temp;
}
inline ::apollo::canbus::Ads1_111* Wey::mutable_ads1_111() {
  set_has_ads1_111();
  if (ads1_111_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Ads1_111>(GetArenaNoVirtual());
    ads1_111_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.ads1_111)
  return ads1_111_;
}
inline void Wey::set_allocated_ads1_111(::apollo::canbus::Ads1_111* ads1_111) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ads1_111_;
  }
  if (ads1_111) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ads1_111 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ads1_111, submessage_arena);
    }
    set_has_ads1_111();
  } else {
    clear_has_ads1_111();
  }
  ads1_111_ = ads1_111;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.ads1_111)
}

// optional .apollo.canbus.Fbs2_240 fbs2_240 = 9;
inline bool Wey::has_fbs2_240() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Wey::set_has_fbs2_240() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Wey::clear_has_fbs2_240() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Wey::clear_fbs2_240() {
  if (fbs2_240_ != NULL) fbs2_240_->Clear();
  clear_has_fbs2_240();
}
inline const ::apollo::canbus::Fbs2_240& Wey::_internal_fbs2_240() const {
  return *fbs2_240_;
}
inline const ::apollo::canbus::Fbs2_240& Wey::fbs2_240() const {
  const ::apollo::canbus::Fbs2_240* p = fbs2_240_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.fbs2_240)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Fbs2_240*>(
      &::apollo::canbus::_Fbs2_240_default_instance_);
}
inline ::apollo::canbus::Fbs2_240* Wey::release_fbs2_240() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.fbs2_240)
  clear_has_fbs2_240();
  ::apollo::canbus::Fbs2_240* temp = fbs2_240_;
  fbs2_240_ = NULL;
  return temp;
}
inline ::apollo::canbus::Fbs2_240* Wey::mutable_fbs2_240() {
  set_has_fbs2_240();
  if (fbs2_240_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Fbs2_240>(GetArenaNoVirtual());
    fbs2_240_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.fbs2_240)
  return fbs2_240_;
}
inline void Wey::set_allocated_fbs2_240(::apollo::canbus::Fbs2_240* fbs2_240) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fbs2_240_;
  }
  if (fbs2_240) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fbs2_240 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fbs2_240, submessage_arena);
    }
    set_has_fbs2_240();
  } else {
    clear_has_fbs2_240();
  }
  fbs2_240_ = fbs2_240;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.fbs2_240)
}

// optional .apollo.canbus.Fbs1_243 fbs1_243 = 10;
inline bool Wey::has_fbs1_243() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Wey::set_has_fbs1_243() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Wey::clear_has_fbs1_243() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Wey::clear_fbs1_243() {
  if (fbs1_243_ != NULL) fbs1_243_->Clear();
  clear_has_fbs1_243();
}
inline const ::apollo::canbus::Fbs1_243& Wey::_internal_fbs1_243() const {
  return *fbs1_243_;
}
inline const ::apollo::canbus::Fbs1_243& Wey::fbs1_243() const {
  const ::apollo::canbus::Fbs1_243* p = fbs1_243_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.fbs1_243)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Fbs1_243*>(
      &::apollo::canbus::_Fbs1_243_default_instance_);
}
inline ::apollo::canbus::Fbs1_243* Wey::release_fbs1_243() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.fbs1_243)
  clear_has_fbs1_243();
  ::apollo::canbus::Fbs1_243* temp = fbs1_243_;
  fbs1_243_ = NULL;
  return temp;
}
inline ::apollo::canbus::Fbs1_243* Wey::mutable_fbs1_243() {
  set_has_fbs1_243();
  if (fbs1_243_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Fbs1_243>(GetArenaNoVirtual());
    fbs1_243_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.fbs1_243)
  return fbs1_243_;
}
inline void Wey::set_allocated_fbs1_243(::apollo::canbus::Fbs1_243* fbs1_243) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fbs1_243_;
  }
  if (fbs1_243) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fbs1_243 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fbs1_243, submessage_arena);
    }
    set_has_fbs1_243();
  } else {
    clear_has_fbs1_243();
  }
  fbs1_243_ = fbs1_243;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.fbs1_243)
}

// optional .apollo.canbus.Fbs4_235 fbs4_235 = 11;
inline bool Wey::has_fbs4_235() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Wey::set_has_fbs4_235() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Wey::clear_has_fbs4_235() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Wey::clear_fbs4_235() {
  if (fbs4_235_ != NULL) fbs4_235_->Clear();
  clear_has_fbs4_235();
}
inline const ::apollo::canbus::Fbs4_235& Wey::_internal_fbs4_235() const {
  return *fbs4_235_;
}
inline const ::apollo::canbus::Fbs4_235& Wey::fbs4_235() const {
  const ::apollo::canbus::Fbs4_235* p = fbs4_235_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.fbs4_235)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Fbs4_235*>(
      &::apollo::canbus::_Fbs4_235_default_instance_);
}
inline ::apollo::canbus::Fbs4_235* Wey::release_fbs4_235() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.fbs4_235)
  clear_has_fbs4_235();
  ::apollo::canbus::Fbs4_235* temp = fbs4_235_;
  fbs4_235_ = NULL;
  return temp;
}
inline ::apollo::canbus::Fbs4_235* Wey::mutable_fbs4_235() {
  set_has_fbs4_235();
  if (fbs4_235_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Fbs4_235>(GetArenaNoVirtual());
    fbs4_235_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.fbs4_235)
  return fbs4_235_;
}
inline void Wey::set_allocated_fbs4_235(::apollo::canbus::Fbs4_235* fbs4_235) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fbs4_235_;
  }
  if (fbs4_235) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fbs4_235 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fbs4_235, submessage_arena);
    }
    set_has_fbs4_235();
  } else {
    clear_has_fbs4_235();
  }
  fbs4_235_ = fbs4_235;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.fbs4_235)
}

// optional .apollo.canbus.Fail_241 fail_241 = 12;
inline bool Wey::has_fail_241() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Wey::set_has_fail_241() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Wey::clear_has_fail_241() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Wey::clear_fail_241() {
  if (fail_241_ != NULL) fail_241_->Clear();
  clear_has_fail_241();
}
inline const ::apollo::canbus::Fail_241& Wey::_internal_fail_241() const {
  return *fail_241_;
}
inline const ::apollo::canbus::Fail_241& Wey::fail_241() const {
  const ::apollo::canbus::Fail_241* p = fail_241_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.fail_241)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Fail_241*>(
      &::apollo::canbus::_Fail_241_default_instance_);
}
inline ::apollo::canbus::Fail_241* Wey::release_fail_241() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.fail_241)
  clear_has_fail_241();
  ::apollo::canbus::Fail_241* temp = fail_241_;
  fail_241_ = NULL;
  return temp;
}
inline ::apollo::canbus::Fail_241* Wey::mutable_fail_241() {
  set_has_fail_241();
  if (fail_241_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Fail_241>(GetArenaNoVirtual());
    fail_241_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.fail_241)
  return fail_241_;
}
inline void Wey::set_allocated_fail_241(::apollo::canbus::Fail_241* fail_241) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fail_241_;
  }
  if (fail_241) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fail_241 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fail_241, submessage_arena);
    }
    set_has_fail_241();
  } else {
    clear_has_fail_241();
  }
  fail_241_ = fail_241;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.fail_241)
}

// optional .apollo.canbus.Fbs3_237 fbs3_237 = 13;
inline bool Wey::has_fbs3_237() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Wey::set_has_fbs3_237() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Wey::clear_has_fbs3_237() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Wey::clear_fbs3_237() {
  if (fbs3_237_ != NULL) fbs3_237_->Clear();
  clear_has_fbs3_237();
}
inline const ::apollo::canbus::Fbs3_237& Wey::_internal_fbs3_237() const {
  return *fbs3_237_;
}
inline const ::apollo::canbus::Fbs3_237& Wey::fbs3_237() const {
  const ::apollo::canbus::Fbs3_237* p = fbs3_237_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.fbs3_237)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Fbs3_237*>(
      &::apollo::canbus::_Fbs3_237_default_instance_);
}
inline ::apollo::canbus::Fbs3_237* Wey::release_fbs3_237() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.fbs3_237)
  clear_has_fbs3_237();
  ::apollo::canbus::Fbs3_237* temp = fbs3_237_;
  fbs3_237_ = NULL;
  return temp;
}
inline ::apollo::canbus::Fbs3_237* Wey::mutable_fbs3_237() {
  set_has_fbs3_237();
  if (fbs3_237_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Fbs3_237>(GetArenaNoVirtual());
    fbs3_237_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.fbs3_237)
  return fbs3_237_;
}
inline void Wey::set_allocated_fbs3_237(::apollo::canbus::Fbs3_237* fbs3_237) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fbs3_237_;
  }
  if (fbs3_237) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fbs3_237 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fbs3_237, submessage_arena);
    }
    set_has_fbs3_237();
  } else {
    clear_has_fbs3_237();
  }
  fbs3_237_ = fbs3_237;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.fbs3_237)
}

// optional .apollo.canbus.Ads3_38e ads3_38e = 14;
inline bool Wey::has_ads3_38e() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Wey::set_has_ads3_38e() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Wey::clear_has_ads3_38e() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Wey::clear_ads3_38e() {
  if (ads3_38e_ != NULL) ads3_38e_->Clear();
  clear_has_ads3_38e();
}
inline const ::apollo::canbus::Ads3_38e& Wey::_internal_ads3_38e() const {
  return *ads3_38e_;
}
inline const ::apollo::canbus::Ads3_38e& Wey::ads3_38e() const {
  const ::apollo::canbus::Ads3_38e* p = ads3_38e_;
  // @@protoc_insertion_point(field_get:apollo.canbus.Wey.ads3_38e)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::canbus::Ads3_38e*>(
      &::apollo::canbus::_Ads3_38e_default_instance_);
}
inline ::apollo::canbus::Ads3_38e* Wey::release_ads3_38e() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Wey.ads3_38e)
  clear_has_ads3_38e();
  ::apollo::canbus::Ads3_38e* temp = ads3_38e_;
  ads3_38e_ = NULL;
  return temp;
}
inline ::apollo::canbus::Ads3_38e* Wey::mutable_ads3_38e() {
  set_has_ads3_38e();
  if (ads3_38e_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::canbus::Ads3_38e>(GetArenaNoVirtual());
    ads3_38e_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Wey.ads3_38e)
  return ads3_38e_;
}
inline void Wey::set_allocated_ads3_38e(::apollo::canbus::Ads3_38e* ads3_38e) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ads3_38e_;
  }
  if (ads3_38e) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ads3_38e = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ads3_38e, submessage_arena);
    }
    set_has_ads3_38e();
  } else {
    clear_has_ads3_38e();
  }
  ads3_38e_ = ads3_38e;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Wey.ads3_38e)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace apollo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType>() {
  return ::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads_shifter_115_Ads_targetgearType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads_shifter_115_Ads_targetgearType>() {
  return ::apollo::canbus::Ads_shifter_115_Ads_targetgearType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads_eps_113_Ads_epsmodeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads_eps_113_Ads_epsmodeType>() {
  return ::apollo::canbus::Ads_eps_113_Ads_epsmodeType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_LongitudeaccvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_LongitudeaccvalidType>() {
  return ::apollo::canbus::Status_310_LongitudeaccvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_LateralaccevalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_LateralaccevalidType>() {
  return ::apollo::canbus::Status_310_LateralaccevalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_VehdynyawratevalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_VehdynyawratevalidType>() {
  return ::apollo::canbus::Status_310_VehdynyawratevalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_FlwheelspdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_FlwheelspdvalidType>() {
  return ::apollo::canbus::Status_310_FlwheelspdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_FrwheelspdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_FrwheelspdvalidType>() {
  return ::apollo::canbus::Status_310_FrwheelspdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_RlwheelspdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_RlwheelspdvalidType>() {
  return ::apollo::canbus::Status_310_RlwheelspdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_RrwheelspdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_RrwheelspdvalidType>() {
  return ::apollo::canbus::Status_310_RrwheelspdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_VehiclespdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_VehiclespdvalidType>() {
  return ::apollo::canbus::Status_310_VehiclespdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_LongitudedrivingmodeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_LongitudedrivingmodeType>() {
  return ::apollo::canbus::Status_310_LongitudedrivingmodeType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_EngspdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_EngspdvalidType>() {
  return ::apollo::canbus::Status_310_EngspdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_AccepedaloverrideType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_AccepedaloverrideType>() {
  return ::apollo::canbus::Status_310_AccepedaloverrideType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_BrakepedalstatusType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_BrakepedalstatusType>() {
  return ::apollo::canbus::Status_310_BrakepedalstatusType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_EspbrakelightstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_EspbrakelightstsType>() {
  return ::apollo::canbus::Status_310_EspbrakelightstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_EpbswtpositionvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_EpbswtpositionvalidType>() {
  return ::apollo::canbus::Status_310_EpbswtpositionvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_EpbstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_EpbstsType>() {
  return ::apollo::canbus::Status_310_EpbstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_CurrentgearvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_CurrentgearvalidType>() {
  return ::apollo::canbus::Status_310_CurrentgearvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_EpstrqsnsrstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_EpstrqsnsrstsType>() {
  return ::apollo::canbus::Status_310_EpstrqsnsrstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_Eps_interferdetdvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_Eps_interferdetdvalidType>() {
  return ::apollo::canbus::Status_310_Eps_interferdetdvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_EpshandsdetnstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_EpshandsdetnstsType>() {
  return ::apollo::canbus::Status_310_EpshandsdetnstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_Eps_handsdetnstsvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_Eps_handsdetnstsvalidType>() {
  return ::apollo::canbus::Status_310_Eps_handsdetnstsvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_SteerwheelanglesignType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_SteerwheelanglesignType>() {
  return ::apollo::canbus::Status_310_SteerwheelanglesignType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_SteerwheelspdsignType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_SteerwheelspdsignType>() {
  return ::apollo::canbus::Status_310_SteerwheelspdsignType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_DriverdoorstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_DriverdoorstsType>() {
  return ::apollo::canbus::Status_310_DriverdoorstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_RldoorstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_RldoorstsType>() {
  return ::apollo::canbus::Status_310_RldoorstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_PassengerdoorstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_PassengerdoorstsType>() {
  return ::apollo::canbus::Status_310_PassengerdoorstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_RrdoorstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_RrdoorstsType>() {
  return ::apollo::canbus::Status_310_RrdoorstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_FrontfoglmpstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_FrontfoglmpstsType>() {
  return ::apollo::canbus::Status_310_FrontfoglmpstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_RearfoglmpstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_RearfoglmpstsType>() {
  return ::apollo::canbus::Status_310_RearfoglmpstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_LowbeamstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_LowbeamstsType>() {
  return ::apollo::canbus::Status_310_LowbeamstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_HighbeamstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_HighbeamstsType>() {
  return ::apollo::canbus::Status_310_HighbeamstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_LeftturnlampstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_LeftturnlampstsType>() {
  return ::apollo::canbus::Status_310_LeftturnlampstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_RightturnlampstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_RightturnlampstsType>() {
  return ::apollo::canbus::Status_310_RightturnlampstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_Bcm_availstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_Bcm_availstsType>() {
  return ::apollo::canbus::Status_310_Bcm_availstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Status_310_BrakelmpstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Status_310_BrakelmpstsType>() {
  return ::apollo::canbus::Status_310_BrakelmpstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads_req_vin_390_Req_vin_signalType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads_req_vin_390_Req_vin_signalType>() {
  return ::apollo::canbus::Ads_req_vin_390_Req_vin_signalType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads1_111_Ads_dectostopType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads1_111_Ads_dectostopType>() {
  return ::apollo::canbus::Ads1_111_Ads_dectostopType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads1_111_Ads_modeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads1_111_Ads_modeType>() {
  return ::apollo::canbus::Ads1_111_Ads_modeType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads1_111_Ads_driveoff_reqType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads1_111_Ads_driveoff_reqType>() {
  return ::apollo::canbus::Ads1_111_Ads_driveoff_reqType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType>() {
  return ::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs2_240_FlwheeldirectionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs2_240_FlwheeldirectionType>() {
  return ::apollo::canbus::Fbs2_240_FlwheeldirectionType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType>() {
  return ::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs2_240_RrwheeldirectionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs2_240_RrwheeldirectionType>() {
  return ::apollo::canbus::Fbs2_240_RrwheeldirectionType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs1_243_FrwheeldirectionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs1_243_FrwheeldirectionType>() {
  return ::apollo::canbus::Fbs1_243_FrwheeldirectionType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fail_241_EngfailType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fail_241_EngfailType>() {
  return ::apollo::canbus::Fail_241_EngfailType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fail_241_EspfailType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fail_241_EspfailType>() {
  return ::apollo::canbus::Fail_241_EspfailType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fail_241_EpbfailType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fail_241_EpbfailType>() {
  return ::apollo::canbus::Fail_241_EpbfailType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fail_241_ShiftfailType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fail_241_ShiftfailType>() {
  return ::apollo::canbus::Fail_241_ShiftfailType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fail_241_EpsfailType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fail_241_EpsfailType>() {
  return ::apollo::canbus::Fail_241_EpsfailType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs3_237_EpbswtichpositionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs3_237_EpbswtichpositionType>() {
  return ::apollo::canbus::Fbs3_237_EpbswtichpositionType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs3_237_CurrentgearType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs3_237_CurrentgearType>() {
  return ::apollo::canbus::Fbs3_237_CurrentgearType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs3_237_Eps_streeingmodeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs3_237_Eps_streeingmodeType>() {
  return ::apollo::canbus::Fbs3_237_Eps_streeingmodeType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Fbs3_237_EpscurrmodType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Fbs3_237_EpscurrmodType>() {
  return ::apollo::canbus::Fbs3_237_EpscurrmodType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_Ads_bcm_workstsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_Ads_bcm_workstsType>() {
  return ::apollo::canbus::Ads3_38e_Ads_bcm_workstsType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType>() {
  return ::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType>() {
  return ::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_HighbeamtonType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_HighbeamtonType>() {
  return ::apollo::canbus::Ads3_38e_HighbeamtonType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_DippedbeamonType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_DippedbeamonType>() {
  return ::apollo::canbus::Ads3_38e_DippedbeamonType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_TurnllightonType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_TurnllightonType>() {
  return ::apollo::canbus::Ads3_38e_TurnllightonType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_EmergencylightonType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_EmergencylightonType>() {
  return ::apollo::canbus::Ads3_38e_EmergencylightonType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_FfoglamponType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_FfoglamponType>() {
  return ::apollo::canbus::Ads3_38e_FfoglamponType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_RfoglamponType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_RfoglamponType>() {
  return ::apollo::canbus::Ads3_38e_RfoglamponType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_BrakelightType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_BrakelightType>() {
  return ::apollo::canbus::Ads3_38e_BrakelightType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_HornonType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_HornonType>() {
  return ::apollo::canbus::Ads3_38e_HornonType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_FwindshieldwiperType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_FwindshieldwiperType>() {
  return ::apollo::canbus::Ads3_38e_FwindshieldwiperType_descriptor();
}
template <> struct is_proto_enum< ::apollo::canbus::Ads3_38e_RwindshieldwiperType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::canbus::Ads3_38e_RwindshieldwiperType>() {
  return ::apollo::canbus::Ads3_38e_RwindshieldwiperType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fwey_2eproto

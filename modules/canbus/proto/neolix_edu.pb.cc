// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/neolix_edu.proto

#include "modules/canbus/proto/neolix_edu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ads_brake_command_46;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ads_diagnosis_628;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ads_drive_command_50;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ads_eps_command_56;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ads_light_horn_command_310;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_diagnosis1_626;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_diagresp_718;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_frontwheelspeed_353;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_rearwheelspeed_354;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_systemstate_11;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_wheelimpulse_355;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pas_1st_data_311;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pas_2nd_data_312;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_brake_report_47;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_drive_report_52;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_eps_report_57;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_nm_401;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_powerstatus_214;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_vehicle_fault_response_201;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_vehicle_info_response_502;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_vehicle_status_report_101;
}  // namespace protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto
namespace apollo {
namespace canbus {
class Aeb_systemstate_11DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aeb_systemstate_11>
      _instance;
} _Aeb_systemstate_11_default_instance_;
class Vcu_vehicle_fault_response_201DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_vehicle_fault_response_201>
      _instance;
} _Vcu_vehicle_fault_response_201_default_instance_;
class Vcu_powerstatus_214DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_powerstatus_214>
      _instance;
} _Vcu_powerstatus_214_default_instance_;
class Ads_light_horn_command_310DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ads_light_horn_command_310>
      _instance;
} _Ads_light_horn_command_310_default_instance_;
class Ads_brake_command_46DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ads_brake_command_46>
      _instance;
} _Ads_brake_command_46_default_instance_;
class Vcu_brake_report_47DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_brake_report_47>
      _instance;
} _Vcu_brake_report_47_default_instance_;
class Vcu_eps_report_57DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_eps_report_57>
      _instance;
} _Vcu_eps_report_57_default_instance_;
class Ads_eps_command_56DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ads_eps_command_56>
      _instance;
} _Ads_eps_command_56_default_instance_;
class Ads_drive_command_50DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ads_drive_command_50>
      _instance;
} _Ads_drive_command_50_default_instance_;
class Vcu_drive_report_52DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_drive_report_52>
      _instance;
} _Vcu_drive_report_52_default_instance_;
class Ads_diagnosis_628DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ads_diagnosis_628>
      _instance;
} _Ads_diagnosis_628_default_instance_;
class Vcu_nm_401DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_nm_401>
      _instance;
} _Vcu_nm_401_default_instance_;
class Vcu_vehicle_status_report_101DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_vehicle_status_report_101>
      _instance;
} _Vcu_vehicle_status_report_101_default_instance_;
class Vcu_vehicle_info_response_502DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vcu_vehicle_info_response_502>
      _instance;
} _Vcu_vehicle_info_response_502_default_instance_;
class Aeb_diagnosis1_626DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aeb_diagnosis1_626>
      _instance;
} _Aeb_diagnosis1_626_default_instance_;
class Aeb_diagresp_718DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aeb_diagresp_718>
      _instance;
} _Aeb_diagresp_718_default_instance_;
class Pas_1st_data_311DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pas_1st_data_311>
      _instance;
} _Pas_1st_data_311_default_instance_;
class Pas_2nd_data_312DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pas_2nd_data_312>
      _instance;
} _Pas_2nd_data_312_default_instance_;
class Aeb_wheelimpulse_355DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aeb_wheelimpulse_355>
      _instance;
} _Aeb_wheelimpulse_355_default_instance_;
class Aeb_rearwheelspeed_354DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aeb_rearwheelspeed_354>
      _instance;
} _Aeb_rearwheelspeed_354_default_instance_;
class Aeb_frontwheelspeed_353DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Aeb_frontwheelspeed_353>
      _instance;
} _Aeb_frontwheelspeed_353_default_instance_;
class Neolix_eduDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Neolix_edu>
      _instance;
} _Neolix_edu_default_instance_;
}  // namespace canbus
}  // namespace apollo
namespace protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto {
static void InitDefaultsAeb_systemstate_11() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aeb_systemstate_11_default_instance_;
    new (ptr) ::apollo::canbus::Aeb_systemstate_11();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Aeb_systemstate_11::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_systemstate_11 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAeb_systemstate_11}, {}};

static void InitDefaultsVcu_vehicle_fault_response_201() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_vehicle_fault_response_201_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_vehicle_fault_response_201();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_vehicle_fault_response_201::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_vehicle_fault_response_201 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_vehicle_fault_response_201}, {}};

static void InitDefaultsVcu_powerstatus_214() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_powerstatus_214_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_powerstatus_214();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_powerstatus_214::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_powerstatus_214 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_powerstatus_214}, {}};

static void InitDefaultsAds_light_horn_command_310() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_light_horn_command_310_default_instance_;
    new (ptr) ::apollo::canbus::Ads_light_horn_command_310();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_light_horn_command_310::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ads_light_horn_command_310 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAds_light_horn_command_310}, {}};

static void InitDefaultsAds_brake_command_46() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_brake_command_46_default_instance_;
    new (ptr) ::apollo::canbus::Ads_brake_command_46();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_brake_command_46::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ads_brake_command_46 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAds_brake_command_46}, {}};

static void InitDefaultsVcu_brake_report_47() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_brake_report_47_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_brake_report_47();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_brake_report_47::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_brake_report_47 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_brake_report_47}, {}};

static void InitDefaultsVcu_eps_report_57() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_eps_report_57_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_eps_report_57();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_eps_report_57::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_eps_report_57 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_eps_report_57}, {}};

static void InitDefaultsAds_eps_command_56() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_eps_command_56_default_instance_;
    new (ptr) ::apollo::canbus::Ads_eps_command_56();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_eps_command_56::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ads_eps_command_56 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAds_eps_command_56}, {}};

static void InitDefaultsAds_drive_command_50() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_drive_command_50_default_instance_;
    new (ptr) ::apollo::canbus::Ads_drive_command_50();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_drive_command_50::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ads_drive_command_50 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAds_drive_command_50}, {}};

static void InitDefaultsVcu_drive_report_52() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_drive_report_52_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_drive_report_52();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_drive_report_52::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_drive_report_52 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_drive_report_52}, {}};

static void InitDefaultsAds_diagnosis_628() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_diagnosis_628_default_instance_;
    new (ptr) ::apollo::canbus::Ads_diagnosis_628();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_diagnosis_628::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ads_diagnosis_628 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAds_diagnosis_628}, {}};

static void InitDefaultsVcu_nm_401() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_nm_401_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_nm_401();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_nm_401::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_nm_401 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_nm_401}, {}};

static void InitDefaultsVcu_vehicle_status_report_101() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_vehicle_status_report_101_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_vehicle_status_report_101();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_vehicle_status_report_101::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_vehicle_status_report_101 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_vehicle_status_report_101}, {}};

static void InitDefaultsVcu_vehicle_info_response_502() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcu_vehicle_info_response_502_default_instance_;
    new (ptr) ::apollo::canbus::Vcu_vehicle_info_response_502();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vcu_vehicle_info_response_502::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vcu_vehicle_info_response_502 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVcu_vehicle_info_response_502}, {}};

static void InitDefaultsAeb_diagnosis1_626() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aeb_diagnosis1_626_default_instance_;
    new (ptr) ::apollo::canbus::Aeb_diagnosis1_626();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Aeb_diagnosis1_626::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_diagnosis1_626 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAeb_diagnosis1_626}, {}};

static void InitDefaultsAeb_diagresp_718() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aeb_diagresp_718_default_instance_;
    new (ptr) ::apollo::canbus::Aeb_diagresp_718();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Aeb_diagresp_718::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_diagresp_718 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAeb_diagresp_718}, {}};

static void InitDefaultsPas_1st_data_311() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Pas_1st_data_311_default_instance_;
    new (ptr) ::apollo::canbus::Pas_1st_data_311();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Pas_1st_data_311::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pas_1st_data_311 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPas_1st_data_311}, {}};

static void InitDefaultsPas_2nd_data_312() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Pas_2nd_data_312_default_instance_;
    new (ptr) ::apollo::canbus::Pas_2nd_data_312();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Pas_2nd_data_312::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pas_2nd_data_312 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPas_2nd_data_312}, {}};

static void InitDefaultsAeb_wheelimpulse_355() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aeb_wheelimpulse_355_default_instance_;
    new (ptr) ::apollo::canbus::Aeb_wheelimpulse_355();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Aeb_wheelimpulse_355::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_wheelimpulse_355 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAeb_wheelimpulse_355}, {}};

static void InitDefaultsAeb_rearwheelspeed_354() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aeb_rearwheelspeed_354_default_instance_;
    new (ptr) ::apollo::canbus::Aeb_rearwheelspeed_354();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Aeb_rearwheelspeed_354::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_rearwheelspeed_354 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAeb_rearwheelspeed_354}, {}};

static void InitDefaultsAeb_frontwheelspeed_353() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aeb_frontwheelspeed_353_default_instance_;
    new (ptr) ::apollo::canbus::Aeb_frontwheelspeed_353();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Aeb_frontwheelspeed_353::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Aeb_frontwheelspeed_353 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAeb_frontwheelspeed_353}, {}};

static void InitDefaultsNeolix_edu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Neolix_edu_default_instance_;
    new (ptr) ::apollo::canbus::Neolix_edu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Neolix_edu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<21> scc_info_Neolix_edu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 21, InitDefaultsNeolix_edu}, {
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_systemstate_11.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_fault_response_201.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_powerstatus_214.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_light_horn_command_310.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_brake_command_46.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_brake_report_47.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_eps_report_57.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_eps_command_56.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_drive_command_50.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_drive_report_52.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_diagnosis_628.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_nm_401.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_status_report_101.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_info_response_502.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_diagnosis1_626.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_diagresp_718.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Pas_1st_data_311.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Pas_2nd_data_312.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_wheelimpulse_355.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_rearwheelspeed_354.base,
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_frontwheelspeed_353.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Aeb_systemstate_11.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_vehicle_fault_response_201.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_powerstatus_214.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ads_light_horn_command_310.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ads_brake_command_46.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_brake_report_47.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_eps_report_57.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ads_eps_command_56.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ads_drive_command_50.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_drive_report_52.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ads_diagnosis_628.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_nm_401.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_vehicle_status_report_101.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vcu_vehicle_info_response_502.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Aeb_diagnosis1_626.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Aeb_diagresp_718.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pas_1st_data_311.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pas_2nd_data_312.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Aeb_wheelimpulse_355.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Aeb_rearwheelspeed_354.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Aeb_frontwheelspeed_353.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Neolix_edu.base);
}

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, aeb_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, aeb_brakestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, faultrank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, currenttemperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_f1_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_f2_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_f3_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_f4_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_b1_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_b2_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_b3_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, pas_b4_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, aeb_livecounter_rear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_systemstate_11, aeb_cheksum_),
  0,
  3,
  1,
  2,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, vehicle_error_indicationsvcu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, brake_system_errorehb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, eps_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, motor_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, epb_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, high_voltage_battery_errorbcu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_losscommuni_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_reqsignalno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_low_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_highvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_vehicle_flt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_press_emerg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_press_remot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, automode_exit_reason_pdu_control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, vcu_faultrept_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_fault_response_201, vcu_faultrept_checksum_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, vcu_powermode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, vcu_powermodevalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, replacebatterystateindication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, forbidden_aeb_signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, bcu_chargedischargecurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, bcu_batt_internalvoltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, vcu_driverinfo_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_powerstatus_214, vcu_driverinfo_checksum_),
  0,
  1,
  2,
  3,
  5,
  6,
  4,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, turn_right_light_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, turn_left_light_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, horn_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, beam_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, auto_drivercmd_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_light_horn_command_310, auto_drivercmd_checksum_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, drive_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, auto_brake_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, auto_parking_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, epb_rampauxiliarycommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, auto_drivercmd_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_brake_command_46, auto_drivercmd_checksum_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, brake_enable_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, control_mode_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vcu_real_brake_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vcu_real_brake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vcu_real_parking_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vcu_real_parking_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, rampauxiliaryindication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vehicleslope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vcu_brakerept_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_brake_report_47, vcu_brakerept_checksum_),
  2,
  0,
  3,
  1,
  6,
  4,
  5,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, drive_enable_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, control_mode_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_eps_report_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_real_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_real_angle_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_target_angle_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_target_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_eps_rept_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_eps_report_57, vcu_eps_rept_checksum_),
  1,
  0,
  2,
  5,
  3,
  4,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_eps_command_56, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_eps_command_56, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_eps_command_56, drive_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_eps_command_56, auto_target_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_eps_command_56, auto_drivercmd_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_eps_command_56, auto_drivercmd_checksum_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, drive_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, auto_shift_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, auto_drive_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, auto_drivercmd_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_drive_command_50, auto_drivercmd_checksum_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, drive_enable_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, control_mode_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_real_shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_real_shift_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_real_torque_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_real_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_limitedtorquemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_driverept_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_drive_report_52, vcu_driverept_checksum_),
  2,
  0,
  1,
  3,
  4,
  7,
  5,
  6,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_diagnosis_628, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_diagnosis_628, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_diagnosis_628, faultrank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_diagnosis_628, adas_fault_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_diagnosis_628, adas_softwareversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ads_diagnosis_628, adas_hardwareversion_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_nm_401, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_nm_401, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_nm_401, vcu_sleepcommand_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, drive_enable_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_highvoltagecircuitstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_dcdc_enabledstates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, control_mode_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_vehicle_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_lowbatterychargingfunctionst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_display_soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_motor_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_motor_direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_motor_speed_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_statusrept_alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_status_report_101, vcu_statusrept_checksum_),
  1,
  2,
  3,
  0,
  5,
  6,
  7,
  8,
  9,
  4,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, vehicle_softwareversion_indicati_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, project_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Vcu_vehicle_info_response_502, vehicle_serial_number_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagnosis1_626, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagnosis1_626, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagnosis1_626, aeb_softwareversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagnosis1_626, aeb_hardwareversion_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagresp_718, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagresp_718, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_diagresp_718, aeb_diagresp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pasdistance4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pasdistance3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pas_f1_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pas_f2_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pas_f3_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pas_f4_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pasdistance2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_1st_data_311, pasdistance1_),
  0,
  1,
  4,
  5,
  6,
  7,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pas_b1_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pas_b2_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pas_b3_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pas_b4_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pasdistance1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pasdistance2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pasdistance3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Pas_2nd_data_312, pasdistance4_),
  4,
  5,
  6,
  7,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, flimpulse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, flimpulsevalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, frimpulse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, frimpulsevalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, rlimpulse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, rlimpulsevalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, rrimpulse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, rrimpulsevalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, alivecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_wheelimpulse_355, checksum_),
  0,
  6,
  1,
  7,
  2,
  8,
  3,
  9,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, wheelspeed_rl_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, wheelspeed_rl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, wheelspeed_rr_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, wheelspeed_rr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, wheelspeed_rl_direct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, wheelspeed_rr_direct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, alivecounter_rear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_rearwheelspeed_354, checksum_rear_),
  6,
  0,
  7,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, vehiclespeedvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, vehiclespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, vehiclerealdirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, wheelspeed_fl_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, wheelspeed_fl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, wheelspeed_fr_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, wheelspeed_fr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, wheelspeed_fl_direct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, wheelspeed_fr_direct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, alivecounter_front_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Aeb_frontwheelspeed_353, checksum_front_),
  8,
  0,
  1,
  9,
  2,
  10,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, aeb_systemstate_11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_vehicle_fault_response_201_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_powerstatus_214_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, ads_light_horn_command_310_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, ads_brake_command_46_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_brake_report_47_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_eps_report_57_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, ads_eps_command_56_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, ads_drive_command_50_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_drive_report_52_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, ads_diagnosis_628_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_nm_401_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_vehicle_status_report_101_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, vcu_vehicle_info_response_502_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, aeb_diagnosis1_626_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, aeb_diagresp_718_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, pas_1st_data_311_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, pas_2nd_data_312_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, aeb_wheelimpulse_355_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, aeb_rearwheelspeed_354_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Neolix_edu, aeb_frontwheelspeed_353_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(::apollo::canbus::Aeb_systemstate_11)},
  { 33, 54, sizeof(::apollo::canbus::Vcu_vehicle_fault_response_201)},
  { 70, 83, sizeof(::apollo::canbus::Vcu_powerstatus_214)},
  { 91, 102, sizeof(::apollo::canbus::Ads_light_horn_command_310)},
  { 108, 119, sizeof(::apollo::canbus::Ads_brake_command_46)},
  { 125, 140, sizeof(::apollo::canbus::Vcu_brake_report_47)},
  { 150, 164, sizeof(::apollo::canbus::Vcu_eps_report_57)},
  { 173, 182, sizeof(::apollo::canbus::Ads_eps_command_56)},
  { 186, 196, sizeof(::apollo::canbus::Ads_drive_command_50)},
  { 201, 215, sizeof(::apollo::canbus::Vcu_drive_report_52)},
  { 224, 233, sizeof(::apollo::canbus::Ads_diagnosis_628)},
  { 237, 243, sizeof(::apollo::canbus::Vcu_nm_401)},
  { 244, 261, sizeof(::apollo::canbus::Vcu_vehicle_status_report_101)},
  { 273, 285, sizeof(::apollo::canbus::Vcu_vehicle_info_response_502)},
  { 292, 299, sizeof(::apollo::canbus::Aeb_diagnosis1_626)},
  { 301, 307, sizeof(::apollo::canbus::Aeb_diagresp_718)},
  { 308, 321, sizeof(::apollo::canbus::Pas_1st_data_311)},
  { 329, 342, sizeof(::apollo::canbus::Pas_2nd_data_312)},
  { 350, 365, sizeof(::apollo::canbus::Aeb_wheelimpulse_355)},
  { 375, 388, sizeof(::apollo::canbus::Aeb_rearwheelspeed_354)},
  { 396, 412, sizeof(::apollo::canbus::Aeb_frontwheelspeed_353)},
  { 423, 449, sizeof(::apollo::canbus::Neolix_edu)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Aeb_systemstate_11_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_vehicle_fault_response_201_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_powerstatus_214_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ads_light_horn_command_310_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ads_brake_command_46_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_brake_report_47_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_eps_report_57_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ads_eps_command_56_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ads_drive_command_50_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_drive_report_52_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ads_diagnosis_628_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_nm_401_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_vehicle_status_report_101_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Vcu_vehicle_info_response_502_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Aeb_diagnosis1_626_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Aeb_diagresp_718_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Pas_1st_data_311_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Pas_2nd_data_312_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Aeb_wheelimpulse_355_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Aeb_rearwheelspeed_354_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Aeb_frontwheelspeed_353_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Neolix_edu_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/canbus/proto/neolix_edu.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%modules/canbus/proto/neolix_edu.proto\022"
      "\rapollo.canbus\"\311\002\n\022Aeb_systemstate_11\022\021\n"
      "\taeb_state\030\001 \001(\005\022\026\n\016aeb_brakestate\030\002 \001(\010"
      "\022\021\n\tfaultrank\030\003 \001(\005\022\032\n\022currenttemperatur"
      "e\030\004 \001(\005\022\023\n\013pas_f1_stop\030\005 \001(\010\022\023\n\013pas_f2_s"
      "top\030\006 \001(\010\022\023\n\013pas_f3_stop\030\007 \001(\010\022\023\n\013pas_f4"
      "_stop\030\010 \001(\010\022\023\n\013pas_b1_stop\030\t \001(\010\022\023\n\013pas_"
      "b2_stop\030\n \001(\010\022\023\n\013pas_b3_stop\030\013 \001(\010\022\023\n\013pa"
      "s_b4_stop\030\014 \001(\010\022\034\n\024aeb_livecounter_rear\030"
      "\r \001(\005\022\023\n\013aeb_cheksum\030\016 \001(\005\"\326\004\n\036Vcu_vehic"
      "le_fault_response_201\022$\n\034vehicle_error_i"
      "ndicationsvcu\030\001 \001(\005\022\035\n\025brake_system_erro"
      "rehb\030\002 \001(\005\022\021\n\teps_error\030\003 \001(\005\022\023\n\013motor_e"
      "rror\030\004 \001(\005\022\021\n\tepb_error\030\005 \001(\005\022%\n\035high_vo"
      "ltage_battery_errorbcu\030\006 \001(\005\022(\n automode"
      "_exit_reason_losscommuni\030\007 \001(\010\022(\n automo"
      "de_exit_reason_reqsignalno\030\010 \001(\010\022&\n\036auto"
      "mode_exit_reason_low_power\030\t \001(\010\022%\n\035auto"
      "mode_exit_reason_highvolt\030\n \001(\010\022(\n autom"
      "ode_exit_reason_vehicle_flt\030\013 \001(\010\022(\n aut"
      "omode_exit_reason_press_emerg\030\014 \001(\010\022(\n a"
      "utomode_exit_reason_press_remot\030\r \001(\010\022(\n"
      " automode_exit_reason_pdu_control\030\016 \001(\010\022"
      "\"\n\032vcu_faultrept_alivecounter\030\017 \001(\005\022\036\n\026v"
      "cu_faultrept_checksum\030\020 \001(\005\"\231\002\n\023Vcu_powe"
      "rstatus_214\022\025\n\rvcu_powermode\030\001 \001(\005\022\032\n\022vc"
      "u_powermodevalid\030\002 \001(\005\022%\n\035replacebattery"
      "stateindication\030\003 \001(\010\022\034\n\024forbidden_aeb_s"
      "ignal\030\004 \001(\010\022\"\n\032bcu_chargedischargecurren"
      "t\030\005 \001(\001\022 \n\030bcu_batt_internalvoltage\030\006 \001("
      "\001\022#\n\033vcu_driverinfo_alivecounter\030\007 \001(\005\022\037"
      "\n\027vcu_driverinfo_checksum\030\010 \001(\005\"\321\001\n\032Ads_"
      "light_horn_command_310\022 \n\030turn_right_lig"
      "ht_command\030\001 \001(\010\022\037\n\027turn_left_light_comm"
      "and\030\002 \001(\010\022\024\n\014horn_command\030\003 \001(\010\022\024\n\014beam_"
      "command\030\004 \001(\005\022#\n\033auto_drivercmd_alivecou"
      "nter\030\005 \001(\005\022\037\n\027auto_drivercmd_checksum\030\006 "
      "\001(\005\"\316\001\n\024Ads_brake_command_46\022\024\n\014drive_en"
      "able\030\001 \001(\010\022\032\n\022auto_brake_command\030\002 \001(\005\022\034"
      "\n\024auto_parking_command\030\003 \001(\010\022 \n\030epb_ramp"
      "auxiliarycommand\030\004 \001(\010\022#\n\033auto_drivercmd"
      "_alivecounter\030\005 \001(\005\022\037\n\027auto_drivercmd_ch"
      "ecksum\030\006 \001(\005\"\300\004\n\023Vcu_brake_report_47\022\031\n\021"
      "brake_enable_resp\030\001 \001(\010\022S\n\021control_mode_"
      "resp\030\002 \001(\01628.apollo.canbus.Vcu_brake_rep"
      "ort_47.Control_mode_respType\022\034\n\024vcu_real"
      "_brake_valid\030\003 \001(\010\022\026\n\016vcu_real_brake\030\004 \001"
      "(\005\022\037\n\027vcu_real_parking_status\030\005 \001(\005\022\036\n\026v"
      "cu_real_parking_valid\030\006 \001(\010\022\037\n\027rampauxil"
      "iaryindication\030\007 \001(\010\022\024\n\014vehicleslope\030\010 \001"
      "(\001\022\"\n\032vcu_brakerept_alivecounter\030\t \001(\005\022\036"
      "\n\026vcu_brakerept_checksum\030\n \001(\005\"\306\001\n\025Contr"
      "ol_mode_respType\022\035\n\031CONTROL_MODE_RESP_ST"
      "ANDBY\020\000\022 \n\034CONTROL_MODE_RESP_AUTO_DRIVE\020"
      "\001\022\037\n\033CONTROL_MODE_RESP_NET_DRIVE\020\002\022$\n CO"
      "NTROL_MODE_RESP_REMOTE_CONTROL\020\003\022%\n!CONT"
      "ROL_MODE_RESP_EMERGENCY_BRAKE\020\004\"\224\004\n\021Vcu_"
      "eps_report_57\022\031\n\021drive_enable_resp\030\001 \001(\010"
      "\022Q\n\021control_mode_resp\030\002 \001(\01626.apollo.can"
      "bus.Vcu_eps_report_57.Control_mode_respT"
      "ype\022\026\n\016vcu_eps_report\030\003 \001(\010\022\026\n\016vcu_real_"
      "angle\030\004 \001(\001\022\034\n\024vcu_real_angle_valid\030\005 \001("
      "\010\022\036\n\026vcu_target_angle_valid\030\006 \001(\010\022\030\n\020vcu"
      "_target_angle\030\007 \001(\001\022!\n\031vcu_eps_rept_aliv"
      "ecounter\030\010 \001(\005\022\035\n\025vcu_eps_rept_checksum\030"
      "\t \001(\005\"\306\001\n\025Control_mode_respType\022\035\n\031CONTR"
      "OL_MODE_RESP_STANDBY\020\000\022 \n\034CONTROL_MODE_R"
      "ESP_AUTO_DRIVE\020\001\022\037\n\033CONTROL_MODE_RESP_NE"
      "T_DRIVE\020\002\022$\n CONTROL_MODE_RESP_REMOTE_CO"
      "NTROL\020\003\022%\n!CONTROL_MODE_RESP_EMERGENCY_B"
      "RAKE\020\004\"\213\001\n\022Ads_eps_command_56\022\024\n\014drive_e"
      "nable\030\001 \001(\010\022\031\n\021auto_target_angle\030\002 \001(\001\022#"
      "\n\033auto_drivercmd_alivecounter\030\003 \001(\005\022\037\n\027a"
      "uto_drivercmd_checksum\030\004 \001(\005\"\357\002\n\024Ads_dri"
      "ve_command_50\022\024\n\014drive_enable\030\001 \001(\010\022V\n\022a"
      "uto_shift_command\030\002 \001(\0162:.apollo.canbus."
      "Ads_drive_command_50.Auto_shift_commandT"
      "ype\022\031\n\021auto_drive_torque\030\003 \001(\001\022#\n\033auto_d"
      "rivercmd_alivecounter\030\004 \001(\005\022\037\n\027auto_driv"
      "ercmd_checksum\030\005 \001(\005\"\207\001\n\026Auto_shift_comm"
      "andType\022\030\n\024AUTO_SHIFT_COMMAND_N\020\000\022\030\n\024AUT"
      "O_SHIFT_COMMAND_D\020\001\022\030\n\024AUTO_SHIFT_COMMAN"
      "D_R\020\002\022\037\n\033AUTO_SHIFT_COMMAND_RESERVED\020\003\"\313"
      "\005\n\023Vcu_drive_report_52\022\031\n\021drive_enable_r"
      "esp\030\001 \001(\010\022S\n\021control_mode_resp\030\002 \001(\01628.a"
      "pollo.canbus.Vcu_drive_report_52.Control"
      "_mode_respType\022M\n\016vcu_real_shift\030\003 \001(\01625"
      ".apollo.canbus.Vcu_drive_report_52.Vcu_r"
      "eal_shiftType\022\034\n\024vcu_real_shift_valid\030\004 "
      "\001(\010\022\035\n\025vcu_real_torque_valid\030\005 \001(\010\022\027\n\017vc"
      "u_real_torque\030\006 \001(\001\022\035\n\025vcu_limitedtorque"
      "mode\030\007 \001(\010\022\"\n\032vcu_driverept_alivecounter"
      "\030\010 \001(\005\022\036\n\026vcu_driverept_checksum\030\t \001(\005\"\306"
      "\001\n\025Control_mode_respType\022\035\n\031CONTROL_MODE"
      "_RESP_STANDBY\020\000\022 \n\034CONTROL_MODE_RESP_AUT"
      "O_DRIVE\020\001\022\037\n\033CONTROL_MODE_RESP_NET_DRIVE"
      "\020\002\022$\n CONTROL_MODE_RESP_REMOTE_CONTROL\020\003"
      "\022%\n!CONTROL_MODE_RESP_EMERGENCY_BRAKE\020\004\""
      "s\n\022Vcu_real_shiftType\022\024\n\020VCU_REAL_SHIFT_"
      "N\020\000\022\024\n\020VCU_REAL_SHIFT_D\020\001\022\024\n\020VCU_REAL_SH"
      "IFT_R\020\002\022\033\n\027VCU_REAL_SHIFT_RESERVED\020\003\"{\n\021"
      "Ads_diagnosis_628\022\021\n\tfaultrank\030\001 \001(\005\022\027\n\017"
      "adas_fault_code\030\002 \001(\005\022\034\n\024adas_softwareve"
      "rsion\030\003 \001(\005\022\034\n\024adas_hardwareversion\030\004 \001("
      "\005\"&\n\nVcu_nm_401\022\030\n\020vcu_sleepcommand\030\001 \001("
      "\010\"\240\005\n\035Vcu_vehicle_status_report_101\022\031\n\021d"
      "rive_enable_resp\030\001 \001(\010\022#\n\033vcu_highvoltag"
      "ecircuitstate\030\002 \001(\010\022\036\n\026vcu_dcdc_enableds"
      "tates\030\003 \001(\010\022]\n\021control_mode_resp\030\004 \001(\0162B"
      ".apollo.canbus.Vcu_vehicle_status_report"
      "_101.Control_mode_respType\022\031\n\021vcu_vehicl"
      "e_speed\030\005 \001(\001\022(\n vcu_lowbatterychargingf"
      "unctionst\030\006 \001(\005\022\027\n\017vcu_display_soc\030\007 \001(\005"
      "\022\027\n\017vcu_motor_speed\030\010 \001(\001\022\033\n\023vcu_motor_d"
      "irection\030\t \001(\005\022\035\n\025vcu_motor_speed_valid\030"
      "\n \001(\010\022#\n\033vcu_statusrept_alivecounter\030\013 \001"
      "(\005\022\037\n\027vcu_statusrept_checksum\030\014 \001(\005\"\306\001\n\025"
      "Control_mode_respType\022\035\n\031CONTROL_MODE_RE"
      "SP_STANDBY\020\000\022 \n\034CONTROL_MODE_RESP_AUTO_D"
      "RIVE\020\001\022\037\n\033CONTROL_MODE_RESP_NET_DRIVE\020\002\022"
      "$\n CONTROL_MODE_RESP_REMOTE_CONTROL\020\003\022%\n"
      "!CONTROL_MODE_RESP_EMERGENCY_BRAKE\020\004\"\271\001\n"
      "\035Vcu_vehicle_info_response_502\022(\n vehicl"
      "e_softwareversion_indicati\030\001 \001(\005\022\017\n\007proj"
      "ect\030\002 \001(\005\022\024\n\014manufacturer\030\003 \001(\005\022\014\n\004year\030"
      "\004 \001(\005\022\r\n\005month\030\005 \001(\005\022\013\n\003day\030\006 \001(\005\022\035\n\025veh"
      "icle_serial_number\030\007 \001(\005\"N\n\022Aeb_diagnosi"
      "s1_626\022\033\n\023aeb_softwareversion\030\001 \001(\001\022\033\n\023a"
      "eb_hardwareversion\030\002 \001(\001\"(\n\020Aeb_diagresp"
      "_718\022\024\n\014aeb_diagresp\030\001 \001(\010\"\306\001\n\020Pas_1st_d"
      "ata_311\022\024\n\014pasdistance4\030\001 \001(\001\022\024\n\014pasdist"
      "ance3\030\002 \001(\001\022\025\n\rpas_f1_status\030\003 \001(\010\022\025\n\rpa"
      "s_f2_status\030\004 \001(\010\022\025\n\rpas_f3_status\030\005 \001(\010"
      "\022\025\n\rpas_f4_status\030\006 \001(\010\022\024\n\014pasdistance2\030"
      "\007 \001(\001\022\024\n\014pasdistance1\030\010 \001(\001\"\306\001\n\020Pas_2nd_"
      "data_312\022\025\n\rpas_b1_status\030\001 \001(\010\022\025\n\rpas_b"
      "2_status\030\002 \001(\010\022\025\n\rpas_b3_status\030\003 \001(\010\022\025\n"
      "\rpas_b4_status\030\004 \001(\010\022\024\n\014pasdistance1\030\005 \001"
      "(\001\022\024\n\014pasdistance2\030\006 \001(\001\022\024\n\014pasdistance3"
      "\030\007 \001(\001\022\024\n\014pasdistance4\030\010 \001(\001\"\352\001\n\024Aeb_whe"
      "elimpulse_355\022\021\n\tflimpulse\030\001 \001(\001\022\026\n\016flim"
      "pulsevalid\030\002 \001(\010\022\021\n\tfrimpulse\030\003 \001(\001\022\026\n\016f"
      "rimpulsevalid\030\004 \001(\010\022\021\n\trlimpulse\030\005 \001(\001\022\026"
      "\n\016rlimpulsevalid\030\006 \001(\010\022\021\n\trrimpulse\030\007 \001("
      "\001\022\026\n\016rrimpulsevalid\030\010 \001(\010\022\024\n\014alivecounte"
      "r\030\t \001(\001\022\020\n\010checksum\030\n \001(\001\"\356\001\n\026Aeb_rearwh"
      "eelspeed_354\022\033\n\023wheelspeed_rl_valid\030\001 \001("
      "\010\022\025\n\rwheelspeed_rl\030\002 \001(\001\022\033\n\023wheelspeed_r"
      "r_valid\030\003 \001(\010\022\025\n\rwheelspeed_rr\030\004 \001(\001\022\034\n\024"
      "wheelspeed_rl_direct\030\005 \001(\001\022\034\n\024wheelspeed"
      "_rr_direct\030\006 \001(\001\022\031\n\021alivecounter_rear\030\007 "
      "\001(\001\022\025\n\rchecksum_rear\030\010 \001(\001\"\275\002\n\027Aeb_front"
      "wheelspeed_353\022\031\n\021vehiclespeedvalid\030\001 \001("
      "\010\022\024\n\014vehiclespeed\030\002 \001(\001\022\031\n\021vehiclerealdi"
      "rect\030\003 \001(\001\022\033\n\023wheelspeed_fl_valid\030\004 \001(\010\022"
      "\025\n\rwheelspeed_fl\030\005 \001(\001\022\033\n\023wheelspeed_fr_"
      "valid\030\006 \001(\010\022\025\n\rwheelspeed_fr\030\007 \001(\001\022\034\n\024wh"
      "eelspeed_fl_direct\030\010 \001(\001\022\034\n\024wheelspeed_f"
      "r_direct\030\t \001(\001\022\032\n\022alivecounter_front\030\n \001"
      "(\001\022\026\n\016checksum_front\030\013 \001(\001\"\217\013\n\nNeolix_ed"
      "u\022=\n\022aeb_systemstate_11\030\001 \001(\0132!.apollo.c"
      "anbus.Aeb_systemstate_11\022U\n\036vcu_vehicle_"
      "fault_response_201\030\002 \001(\0132-.apollo.canbus"
      ".Vcu_vehicle_fault_response_201\022\?\n\023vcu_p"
      "owerstatus_214\030\003 \001(\0132\".apollo.canbus.Vcu"
      "_powerstatus_214\022M\n\032ads_light_horn_comma"
      "nd_310\030\004 \001(\0132).apollo.canbus.Ads_light_h"
      "orn_command_310\022A\n\024ads_brake_command_46\030"
      "\005 \001(\0132#.apollo.canbus.Ads_brake_command_"
      "46\022\?\n\023vcu_brake_report_47\030\006 \001(\0132\".apollo"
      ".canbus.Vcu_brake_report_47\022;\n\021vcu_eps_r"
      "eport_57\030\007 \001(\0132 .apollo.canbus.Vcu_eps_r"
      "eport_57\022=\n\022ads_eps_command_56\030\010 \001(\0132!.a"
      "pollo.canbus.Ads_eps_command_56\022A\n\024ads_d"
      "rive_command_50\030\t \001(\0132#.apollo.canbus.Ad"
      "s_drive_command_50\022\?\n\023vcu_drive_report_5"
      "2\030\n \001(\0132\".apollo.canbus.Vcu_drive_report"
      "_52\022;\n\021ads_diagnosis_628\030\013 \001(\0132 .apollo."
      "canbus.Ads_diagnosis_628\022-\n\nvcu_nm_401\030\014"
      " \001(\0132\031.apollo.canbus.Vcu_nm_401\022S\n\035vcu_v"
      "ehicle_status_report_101\030\r \001(\0132,.apollo."
      "canbus.Vcu_vehicle_status_report_101\022S\n\035"
      "vcu_vehicle_info_response_502\030\016 \001(\0132,.ap"
      "ollo.canbus.Vcu_vehicle_info_response_50"
      "2\022=\n\022aeb_diagnosis1_626\030\017 \001(\0132!.apollo.c"
      "anbus.Aeb_diagnosis1_626\0229\n\020aeb_diagresp"
      "_718\030\020 \001(\0132\037.apollo.canbus.Aeb_diagresp_"
      "718\0229\n\020pas_1st_data_311\030\021 \001(\0132\037.apollo.c"
      "anbus.Pas_1st_data_311\0229\n\020pas_2nd_data_3"
      "12\030\022 \001(\0132\037.apollo.canbus.Pas_2nd_data_31"
      "2\022A\n\024aeb_wheelimpulse_355\030\023 \001(\0132#.apollo"
      ".canbus.Aeb_wheelimpulse_355\022E\n\026aeb_rear"
      "wheelspeed_354\030\024 \001(\0132%.apollo.canbus.Aeb"
      "_rearwheelspeed_354\022G\n\027aeb_frontwheelspe"
      "ed_353\030\025 \001(\0132&.apollo.canbus.Aeb_frontwh"
      "eelspeed_353"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7812);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/canbus/proto/neolix_edu.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto
namespace apollo {
namespace canbus {
const ::google::protobuf::EnumDescriptor* Vcu_brake_report_47_Control_mode_respType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_enum_descriptors[0];
}
bool Vcu_brake_report_47_Control_mode_respType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::CONTROL_MODE_RESP_STANDBY;
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::CONTROL_MODE_RESP_AUTO_DRIVE;
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::CONTROL_MODE_RESP_NET_DRIVE;
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::CONTROL_MODE_RESP_REMOTE_CONTROL;
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::CONTROL_MODE_RESP_EMERGENCY_BRAKE;
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::Control_mode_respType_MIN;
const Vcu_brake_report_47_Control_mode_respType Vcu_brake_report_47::Control_mode_respType_MAX;
const int Vcu_brake_report_47::Control_mode_respType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Vcu_eps_report_57_Control_mode_respType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_enum_descriptors[1];
}
bool Vcu_eps_report_57_Control_mode_respType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::CONTROL_MODE_RESP_STANDBY;
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::CONTROL_MODE_RESP_AUTO_DRIVE;
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::CONTROL_MODE_RESP_NET_DRIVE;
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::CONTROL_MODE_RESP_REMOTE_CONTROL;
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::CONTROL_MODE_RESP_EMERGENCY_BRAKE;
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::Control_mode_respType_MIN;
const Vcu_eps_report_57_Control_mode_respType Vcu_eps_report_57::Control_mode_respType_MAX;
const int Vcu_eps_report_57::Control_mode_respType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ads_drive_command_50_Auto_shift_commandType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_enum_descriptors[2];
}
bool Ads_drive_command_50_Auto_shift_commandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ads_drive_command_50_Auto_shift_commandType Ads_drive_command_50::AUTO_SHIFT_COMMAND_N;
const Ads_drive_command_50_Auto_shift_commandType Ads_drive_command_50::AUTO_SHIFT_COMMAND_D;
const Ads_drive_command_50_Auto_shift_commandType Ads_drive_command_50::AUTO_SHIFT_COMMAND_R;
const Ads_drive_command_50_Auto_shift_commandType Ads_drive_command_50::AUTO_SHIFT_COMMAND_RESERVED;
const Ads_drive_command_50_Auto_shift_commandType Ads_drive_command_50::Auto_shift_commandType_MIN;
const Ads_drive_command_50_Auto_shift_commandType Ads_drive_command_50::Auto_shift_commandType_MAX;
const int Ads_drive_command_50::Auto_shift_commandType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Vcu_drive_report_52_Control_mode_respType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_enum_descriptors[3];
}
bool Vcu_drive_report_52_Control_mode_respType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::CONTROL_MODE_RESP_STANDBY;
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::CONTROL_MODE_RESP_AUTO_DRIVE;
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::CONTROL_MODE_RESP_NET_DRIVE;
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::CONTROL_MODE_RESP_REMOTE_CONTROL;
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::CONTROL_MODE_RESP_EMERGENCY_BRAKE;
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::Control_mode_respType_MIN;
const Vcu_drive_report_52_Control_mode_respType Vcu_drive_report_52::Control_mode_respType_MAX;
const int Vcu_drive_report_52::Control_mode_respType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Vcu_drive_report_52_Vcu_real_shiftType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_enum_descriptors[4];
}
bool Vcu_drive_report_52_Vcu_real_shiftType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcu_drive_report_52_Vcu_real_shiftType Vcu_drive_report_52::VCU_REAL_SHIFT_N;
const Vcu_drive_report_52_Vcu_real_shiftType Vcu_drive_report_52::VCU_REAL_SHIFT_D;
const Vcu_drive_report_52_Vcu_real_shiftType Vcu_drive_report_52::VCU_REAL_SHIFT_R;
const Vcu_drive_report_52_Vcu_real_shiftType Vcu_drive_report_52::VCU_REAL_SHIFT_RESERVED;
const Vcu_drive_report_52_Vcu_real_shiftType Vcu_drive_report_52::Vcu_real_shiftType_MIN;
const Vcu_drive_report_52_Vcu_real_shiftType Vcu_drive_report_52::Vcu_real_shiftType_MAX;
const int Vcu_drive_report_52::Vcu_real_shiftType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Vcu_vehicle_status_report_101_Control_mode_respType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_enum_descriptors[5];
}
bool Vcu_vehicle_status_report_101_Control_mode_respType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::CONTROL_MODE_RESP_STANDBY;
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::CONTROL_MODE_RESP_AUTO_DRIVE;
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::CONTROL_MODE_RESP_NET_DRIVE;
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::CONTROL_MODE_RESP_REMOTE_CONTROL;
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::CONTROL_MODE_RESP_EMERGENCY_BRAKE;
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::Control_mode_respType_MIN;
const Vcu_vehicle_status_report_101_Control_mode_respType Vcu_vehicle_status_report_101::Control_mode_respType_MAX;
const int Vcu_vehicle_status_report_101::Control_mode_respType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Aeb_systemstate_11::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aeb_systemstate_11::kAebStateFieldNumber;
const int Aeb_systemstate_11::kAebBrakestateFieldNumber;
const int Aeb_systemstate_11::kFaultrankFieldNumber;
const int Aeb_systemstate_11::kCurrenttemperatureFieldNumber;
const int Aeb_systemstate_11::kPasF1StopFieldNumber;
const int Aeb_systemstate_11::kPasF2StopFieldNumber;
const int Aeb_systemstate_11::kPasF3StopFieldNumber;
const int Aeb_systemstate_11::kPasF4StopFieldNumber;
const int Aeb_systemstate_11::kPasB1StopFieldNumber;
const int Aeb_systemstate_11::kPasB2StopFieldNumber;
const int Aeb_systemstate_11::kPasB3StopFieldNumber;
const int Aeb_systemstate_11::kPasB4StopFieldNumber;
const int Aeb_systemstate_11::kAebLivecounterRearFieldNumber;
const int Aeb_systemstate_11::kAebCheksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aeb_systemstate_11::Aeb_systemstate_11()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_systemstate_11.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Aeb_systemstate_11)
}
Aeb_systemstate_11::Aeb_systemstate_11(const Aeb_systemstate_11& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&aeb_state_, &from.aeb_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&aeb_cheksum_) -
    reinterpret_cast<char*>(&aeb_state_)) + sizeof(aeb_cheksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aeb_systemstate_11)
}

void Aeb_systemstate_11::SharedCtor() {
  ::memset(&aeb_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aeb_cheksum_) -
      reinterpret_cast<char*>(&aeb_state_)) + sizeof(aeb_cheksum_));
}

Aeb_systemstate_11::~Aeb_systemstate_11() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aeb_systemstate_11)
  SharedDtor();
}

void Aeb_systemstate_11::SharedDtor() {
}

void Aeb_systemstate_11::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Aeb_systemstate_11::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aeb_systemstate_11& Aeb_systemstate_11::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_systemstate_11.base);
  return *internal_default_instance();
}


void Aeb_systemstate_11::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aeb_systemstate_11)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&aeb_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pas_f4_stop_) -
        reinterpret_cast<char*>(&aeb_state_)) + sizeof(pas_f4_stop_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&pas_b1_stop_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&aeb_cheksum_) -
        reinterpret_cast<char*>(&pas_b1_stop_)) + sizeof(aeb_cheksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Aeb_systemstate_11::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Aeb_systemstate_11)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 aeb_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_aeb_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aeb_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool aeb_brakestate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_aeb_brakestate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &aeb_brakestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 faultrank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_faultrank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &faultrank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 currenttemperature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_currenttemperature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currenttemperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f1_stop = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pas_f1_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f1_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f2_stop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pas_f2_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f2_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f3_stop = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_pas_f3_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f3_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f4_stop = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pas_f4_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f4_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b1_stop = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_pas_b1_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b1_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b2_stop = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_pas_b2_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b2_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b3_stop = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_pas_b3_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b3_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b4_stop = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_pas_b4_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b4_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 aeb_livecounter_rear = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_aeb_livecounter_rear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aeb_livecounter_rear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 aeb_cheksum = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_aeb_cheksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aeb_cheksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Aeb_systemstate_11)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Aeb_systemstate_11)
  return false;
#undef DO_
}

void Aeb_systemstate_11::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Aeb_systemstate_11)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 aeb_state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->aeb_state(), output);
  }

  // optional bool aeb_brakestate = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->aeb_brakestate(), output);
  }

  // optional int32 faultrank = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->faultrank(), output);
  }

  // optional int32 currenttemperature = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->currenttemperature(), output);
  }

  // optional bool pas_f1_stop = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->pas_f1_stop(), output);
  }

  // optional bool pas_f2_stop = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->pas_f2_stop(), output);
  }

  // optional bool pas_f3_stop = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->pas_f3_stop(), output);
  }

  // optional bool pas_f4_stop = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->pas_f4_stop(), output);
  }

  // optional bool pas_b1_stop = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->pas_b1_stop(), output);
  }

  // optional bool pas_b2_stop = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->pas_b2_stop(), output);
  }

  // optional bool pas_b3_stop = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->pas_b3_stop(), output);
  }

  // optional bool pas_b4_stop = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->pas_b4_stop(), output);
  }

  // optional int32 aeb_livecounter_rear = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->aeb_livecounter_rear(), output);
  }

  // optional int32 aeb_cheksum = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->aeb_cheksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Aeb_systemstate_11)
}

::google::protobuf::uint8* Aeb_systemstate_11::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aeb_systemstate_11)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 aeb_state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->aeb_state(), target);
  }

  // optional bool aeb_brakestate = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->aeb_brakestate(), target);
  }

  // optional int32 faultrank = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->faultrank(), target);
  }

  // optional int32 currenttemperature = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->currenttemperature(), target);
  }

  // optional bool pas_f1_stop = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->pas_f1_stop(), target);
  }

  // optional bool pas_f2_stop = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->pas_f2_stop(), target);
  }

  // optional bool pas_f3_stop = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->pas_f3_stop(), target);
  }

  // optional bool pas_f4_stop = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->pas_f4_stop(), target);
  }

  // optional bool pas_b1_stop = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->pas_b1_stop(), target);
  }

  // optional bool pas_b2_stop = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->pas_b2_stop(), target);
  }

  // optional bool pas_b3_stop = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->pas_b3_stop(), target);
  }

  // optional bool pas_b4_stop = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->pas_b4_stop(), target);
  }

  // optional int32 aeb_livecounter_rear = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->aeb_livecounter_rear(), target);
  }

  // optional int32 aeb_cheksum = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->aeb_cheksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aeb_systemstate_11)
  return target;
}

size_t Aeb_systemstate_11::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aeb_systemstate_11)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 aeb_state = 1;
    if (has_aeb_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->aeb_state());
    }

    // optional int32 faultrank = 3;
    if (has_faultrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->faultrank());
    }

    // optional int32 currenttemperature = 4;
    if (has_currenttemperature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currenttemperature());
    }

    // optional bool aeb_brakestate = 2;
    if (has_aeb_brakestate()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f1_stop = 5;
    if (has_pas_f1_stop()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f2_stop = 6;
    if (has_pas_f2_stop()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f3_stop = 7;
    if (has_pas_f3_stop()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f4_stop = 8;
    if (has_pas_f4_stop()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool pas_b1_stop = 9;
    if (has_pas_b1_stop()) {
      total_size += 1 + 1;
    }

    // optional bool pas_b2_stop = 10;
    if (has_pas_b2_stop()) {
      total_size += 1 + 1;
    }

    // optional bool pas_b3_stop = 11;
    if (has_pas_b3_stop()) {
      total_size += 1 + 1;
    }

    // optional bool pas_b4_stop = 12;
    if (has_pas_b4_stop()) {
      total_size += 1 + 1;
    }

    // optional int32 aeb_livecounter_rear = 13;
    if (has_aeb_livecounter_rear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->aeb_livecounter_rear());
    }

    // optional int32 aeb_cheksum = 14;
    if (has_aeb_cheksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->aeb_cheksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aeb_systemstate_11::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aeb_systemstate_11)
  GOOGLE_DCHECK_NE(&from, this);
  const Aeb_systemstate_11* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aeb_systemstate_11>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aeb_systemstate_11)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aeb_systemstate_11)
    MergeFrom(*source);
  }
}

void Aeb_systemstate_11::MergeFrom(const Aeb_systemstate_11& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aeb_systemstate_11)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      aeb_state_ = from.aeb_state_;
    }
    if (cached_has_bits & 0x00000002u) {
      faultrank_ = from.faultrank_;
    }
    if (cached_has_bits & 0x00000004u) {
      currenttemperature_ = from.currenttemperature_;
    }
    if (cached_has_bits & 0x00000008u) {
      aeb_brakestate_ = from.aeb_brakestate_;
    }
    if (cached_has_bits & 0x00000010u) {
      pas_f1_stop_ = from.pas_f1_stop_;
    }
    if (cached_has_bits & 0x00000020u) {
      pas_f2_stop_ = from.pas_f2_stop_;
    }
    if (cached_has_bits & 0x00000040u) {
      pas_f3_stop_ = from.pas_f3_stop_;
    }
    if (cached_has_bits & 0x00000080u) {
      pas_f4_stop_ = from.pas_f4_stop_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      pas_b1_stop_ = from.pas_b1_stop_;
    }
    if (cached_has_bits & 0x00000200u) {
      pas_b2_stop_ = from.pas_b2_stop_;
    }
    if (cached_has_bits & 0x00000400u) {
      pas_b3_stop_ = from.pas_b3_stop_;
    }
    if (cached_has_bits & 0x00000800u) {
      pas_b4_stop_ = from.pas_b4_stop_;
    }
    if (cached_has_bits & 0x00001000u) {
      aeb_livecounter_rear_ = from.aeb_livecounter_rear_;
    }
    if (cached_has_bits & 0x00002000u) {
      aeb_cheksum_ = from.aeb_cheksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Aeb_systemstate_11::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aeb_systemstate_11)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aeb_systemstate_11::CopyFrom(const Aeb_systemstate_11& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aeb_systemstate_11)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aeb_systemstate_11::IsInitialized() const {
  return true;
}

void Aeb_systemstate_11::Swap(Aeb_systemstate_11* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aeb_systemstate_11::InternalSwap(Aeb_systemstate_11* other) {
  using std::swap;
  swap(aeb_state_, other->aeb_state_);
  swap(faultrank_, other->faultrank_);
  swap(currenttemperature_, other->currenttemperature_);
  swap(aeb_brakestate_, other->aeb_brakestate_);
  swap(pas_f1_stop_, other->pas_f1_stop_);
  swap(pas_f2_stop_, other->pas_f2_stop_);
  swap(pas_f3_stop_, other->pas_f3_stop_);
  swap(pas_f4_stop_, other->pas_f4_stop_);
  swap(pas_b1_stop_, other->pas_b1_stop_);
  swap(pas_b2_stop_, other->pas_b2_stop_);
  swap(pas_b3_stop_, other->pas_b3_stop_);
  swap(pas_b4_stop_, other->pas_b4_stop_);
  swap(aeb_livecounter_rear_, other->aeb_livecounter_rear_);
  swap(aeb_cheksum_, other->aeb_cheksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Aeb_systemstate_11::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_vehicle_fault_response_201::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_vehicle_fault_response_201::kVehicleErrorIndicationsvcuFieldNumber;
const int Vcu_vehicle_fault_response_201::kBrakeSystemErrorehbFieldNumber;
const int Vcu_vehicle_fault_response_201::kEpsErrorFieldNumber;
const int Vcu_vehicle_fault_response_201::kMotorErrorFieldNumber;
const int Vcu_vehicle_fault_response_201::kEpbErrorFieldNumber;
const int Vcu_vehicle_fault_response_201::kHighVoltageBatteryErrorbcuFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonLosscommuniFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonReqsignalnoFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonLowPowerFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonHighvoltFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonVehicleFltFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonPressEmergFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonPressRemotFieldNumber;
const int Vcu_vehicle_fault_response_201::kAutomodeExitReasonPduControlFieldNumber;
const int Vcu_vehicle_fault_response_201::kVcuFaultreptAlivecounterFieldNumber;
const int Vcu_vehicle_fault_response_201::kVcuFaultreptChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_vehicle_fault_response_201::Vcu_vehicle_fault_response_201()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_fault_response_201.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_vehicle_fault_response_201)
}
Vcu_vehicle_fault_response_201::Vcu_vehicle_fault_response_201(const Vcu_vehicle_fault_response_201& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicle_error_indicationsvcu_, &from.vehicle_error_indicationsvcu_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu_faultrept_checksum_) -
    reinterpret_cast<char*>(&vehicle_error_indicationsvcu_)) + sizeof(vcu_faultrept_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_vehicle_fault_response_201)
}

void Vcu_vehicle_fault_response_201::SharedCtor() {
  ::memset(&vehicle_error_indicationsvcu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcu_faultrept_checksum_) -
      reinterpret_cast<char*>(&vehicle_error_indicationsvcu_)) + sizeof(vcu_faultrept_checksum_));
}

Vcu_vehicle_fault_response_201::~Vcu_vehicle_fault_response_201() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_vehicle_fault_response_201)
  SharedDtor();
}

void Vcu_vehicle_fault_response_201::SharedDtor() {
}

void Vcu_vehicle_fault_response_201::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_vehicle_fault_response_201::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_vehicle_fault_response_201& Vcu_vehicle_fault_response_201::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_fault_response_201.base);
  return *internal_default_instance();
}


void Vcu_vehicle_fault_response_201::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&vehicle_error_indicationsvcu_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&automode_exit_reason_reqsignalno_) -
        reinterpret_cast<char*>(&vehicle_error_indicationsvcu_)) + sizeof(automode_exit_reason_reqsignalno_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&automode_exit_reason_low_power_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_faultrept_checksum_) -
        reinterpret_cast<char*>(&automode_exit_reason_low_power_)) + sizeof(vcu_faultrept_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_vehicle_fault_response_201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vehicle_error_indicationsvcu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_vehicle_error_indicationsvcu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehicle_error_indicationsvcu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brake_system_errorehb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_brake_system_errorehb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brake_system_errorehb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eps_error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eps_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eps_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 motor_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_motor_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &motor_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 epb_error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_epb_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epb_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 high_voltage_battery_errorbcu = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_high_voltage_battery_errorbcu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_voltage_battery_errorbcu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_losscommuni = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_automode_exit_reason_losscommuni();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_losscommuni_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_reqsignalno = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_automode_exit_reason_reqsignalno();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_reqsignalno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_low_power = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_automode_exit_reason_low_power();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_low_power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_highvolt = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_automode_exit_reason_highvolt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_highvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_vehicle_flt = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_automode_exit_reason_vehicle_flt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_vehicle_flt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_press_emerg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_automode_exit_reason_press_emerg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_press_emerg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_press_remot = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_automode_exit_reason_press_remot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_press_remot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool automode_exit_reason_pdu_control = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_automode_exit_reason_pdu_control();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automode_exit_reason_pdu_control_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_faultrept_alivecounter = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_vcu_faultrept_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_faultrept_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_faultrept_checksum = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_vcu_faultrept_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_faultrept_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_vehicle_fault_response_201)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_vehicle_fault_response_201)
  return false;
#undef DO_
}

void Vcu_vehicle_fault_response_201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vehicle_error_indicationsvcu = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vehicle_error_indicationsvcu(), output);
  }

  // optional int32 brake_system_errorehb = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->brake_system_errorehb(), output);
  }

  // optional int32 eps_error = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eps_error(), output);
  }

  // optional int32 motor_error = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->motor_error(), output);
  }

  // optional int32 epb_error = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->epb_error(), output);
  }

  // optional int32 high_voltage_battery_errorbcu = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->high_voltage_battery_errorbcu(), output);
  }

  // optional bool automode_exit_reason_losscommuni = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->automode_exit_reason_losscommuni(), output);
  }

  // optional bool automode_exit_reason_reqsignalno = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->automode_exit_reason_reqsignalno(), output);
  }

  // optional bool automode_exit_reason_low_power = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->automode_exit_reason_low_power(), output);
  }

  // optional bool automode_exit_reason_highvolt = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->automode_exit_reason_highvolt(), output);
  }

  // optional bool automode_exit_reason_vehicle_flt = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->automode_exit_reason_vehicle_flt(), output);
  }

  // optional bool automode_exit_reason_press_emerg = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->automode_exit_reason_press_emerg(), output);
  }

  // optional bool automode_exit_reason_press_remot = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->automode_exit_reason_press_remot(), output);
  }

  // optional bool automode_exit_reason_pdu_control = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->automode_exit_reason_pdu_control(), output);
  }

  // optional int32 vcu_faultrept_alivecounter = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->vcu_faultrept_alivecounter(), output);
  }

  // optional int32 vcu_faultrept_checksum = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->vcu_faultrept_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_vehicle_fault_response_201)
}

::google::protobuf::uint8* Vcu_vehicle_fault_response_201::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vehicle_error_indicationsvcu = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vehicle_error_indicationsvcu(), target);
  }

  // optional int32 brake_system_errorehb = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->brake_system_errorehb(), target);
  }

  // optional int32 eps_error = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eps_error(), target);
  }

  // optional int32 motor_error = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->motor_error(), target);
  }

  // optional int32 epb_error = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->epb_error(), target);
  }

  // optional int32 high_voltage_battery_errorbcu = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->high_voltage_battery_errorbcu(), target);
  }

  // optional bool automode_exit_reason_losscommuni = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->automode_exit_reason_losscommuni(), target);
  }

  // optional bool automode_exit_reason_reqsignalno = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->automode_exit_reason_reqsignalno(), target);
  }

  // optional bool automode_exit_reason_low_power = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->automode_exit_reason_low_power(), target);
  }

  // optional bool automode_exit_reason_highvolt = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->automode_exit_reason_highvolt(), target);
  }

  // optional bool automode_exit_reason_vehicle_flt = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->automode_exit_reason_vehicle_flt(), target);
  }

  // optional bool automode_exit_reason_press_emerg = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->automode_exit_reason_press_emerg(), target);
  }

  // optional bool automode_exit_reason_press_remot = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->automode_exit_reason_press_remot(), target);
  }

  // optional bool automode_exit_reason_pdu_control = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->automode_exit_reason_pdu_control(), target);
  }

  // optional int32 vcu_faultrept_alivecounter = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->vcu_faultrept_alivecounter(), target);
  }

  // optional int32 vcu_faultrept_checksum = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->vcu_faultrept_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_vehicle_fault_response_201)
  return target;
}

size_t Vcu_vehicle_fault_response_201::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 vehicle_error_indicationsvcu = 1;
    if (has_vehicle_error_indicationsvcu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehicle_error_indicationsvcu());
    }

    // optional int32 brake_system_errorehb = 2;
    if (has_brake_system_errorehb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brake_system_errorehb());
    }

    // optional int32 eps_error = 3;
    if (has_eps_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eps_error());
    }

    // optional int32 motor_error = 4;
    if (has_motor_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->motor_error());
    }

    // optional int32 epb_error = 5;
    if (has_epb_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->epb_error());
    }

    // optional int32 high_voltage_battery_errorbcu = 6;
    if (has_high_voltage_battery_errorbcu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->high_voltage_battery_errorbcu());
    }

    // optional bool automode_exit_reason_losscommuni = 7;
    if (has_automode_exit_reason_losscommuni()) {
      total_size += 1 + 1;
    }

    // optional bool automode_exit_reason_reqsignalno = 8;
    if (has_automode_exit_reason_reqsignalno()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool automode_exit_reason_low_power = 9;
    if (has_automode_exit_reason_low_power()) {
      total_size += 1 + 1;
    }

    // optional bool automode_exit_reason_highvolt = 10;
    if (has_automode_exit_reason_highvolt()) {
      total_size += 1 + 1;
    }

    // optional bool automode_exit_reason_vehicle_flt = 11;
    if (has_automode_exit_reason_vehicle_flt()) {
      total_size += 1 + 1;
    }

    // optional bool automode_exit_reason_press_emerg = 12;
    if (has_automode_exit_reason_press_emerg()) {
      total_size += 1 + 1;
    }

    // optional bool automode_exit_reason_press_remot = 13;
    if (has_automode_exit_reason_press_remot()) {
      total_size += 1 + 1;
    }

    // optional bool automode_exit_reason_pdu_control = 14;
    if (has_automode_exit_reason_pdu_control()) {
      total_size += 1 + 1;
    }

    // optional int32 vcu_faultrept_alivecounter = 15;
    if (has_vcu_faultrept_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_faultrept_alivecounter());
    }

    // optional int32 vcu_faultrept_checksum = 16;
    if (has_vcu_faultrept_checksum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_faultrept_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_vehicle_fault_response_201::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_vehicle_fault_response_201* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_vehicle_fault_response_201>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_vehicle_fault_response_201)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_vehicle_fault_response_201)
    MergeFrom(*source);
  }
}

void Vcu_vehicle_fault_response_201::MergeFrom(const Vcu_vehicle_fault_response_201& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      vehicle_error_indicationsvcu_ = from.vehicle_error_indicationsvcu_;
    }
    if (cached_has_bits & 0x00000002u) {
      brake_system_errorehb_ = from.brake_system_errorehb_;
    }
    if (cached_has_bits & 0x00000004u) {
      eps_error_ = from.eps_error_;
    }
    if (cached_has_bits & 0x00000008u) {
      motor_error_ = from.motor_error_;
    }
    if (cached_has_bits & 0x00000010u) {
      epb_error_ = from.epb_error_;
    }
    if (cached_has_bits & 0x00000020u) {
      high_voltage_battery_errorbcu_ = from.high_voltage_battery_errorbcu_;
    }
    if (cached_has_bits & 0x00000040u) {
      automode_exit_reason_losscommuni_ = from.automode_exit_reason_losscommuni_;
    }
    if (cached_has_bits & 0x00000080u) {
      automode_exit_reason_reqsignalno_ = from.automode_exit_reason_reqsignalno_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      automode_exit_reason_low_power_ = from.automode_exit_reason_low_power_;
    }
    if (cached_has_bits & 0x00000200u) {
      automode_exit_reason_highvolt_ = from.automode_exit_reason_highvolt_;
    }
    if (cached_has_bits & 0x00000400u) {
      automode_exit_reason_vehicle_flt_ = from.automode_exit_reason_vehicle_flt_;
    }
    if (cached_has_bits & 0x00000800u) {
      automode_exit_reason_press_emerg_ = from.automode_exit_reason_press_emerg_;
    }
    if (cached_has_bits & 0x00001000u) {
      automode_exit_reason_press_remot_ = from.automode_exit_reason_press_remot_;
    }
    if (cached_has_bits & 0x00002000u) {
      automode_exit_reason_pdu_control_ = from.automode_exit_reason_pdu_control_;
    }
    if (cached_has_bits & 0x00004000u) {
      vcu_faultrept_alivecounter_ = from.vcu_faultrept_alivecounter_;
    }
    if (cached_has_bits & 0x00008000u) {
      vcu_faultrept_checksum_ = from.vcu_faultrept_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcu_vehicle_fault_response_201::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_vehicle_fault_response_201::CopyFrom(const Vcu_vehicle_fault_response_201& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_vehicle_fault_response_201)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_vehicle_fault_response_201::IsInitialized() const {
  return true;
}

void Vcu_vehicle_fault_response_201::Swap(Vcu_vehicle_fault_response_201* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_vehicle_fault_response_201::InternalSwap(Vcu_vehicle_fault_response_201* other) {
  using std::swap;
  swap(vehicle_error_indicationsvcu_, other->vehicle_error_indicationsvcu_);
  swap(brake_system_errorehb_, other->brake_system_errorehb_);
  swap(eps_error_, other->eps_error_);
  swap(motor_error_, other->motor_error_);
  swap(epb_error_, other->epb_error_);
  swap(high_voltage_battery_errorbcu_, other->high_voltage_battery_errorbcu_);
  swap(automode_exit_reason_losscommuni_, other->automode_exit_reason_losscommuni_);
  swap(automode_exit_reason_reqsignalno_, other->automode_exit_reason_reqsignalno_);
  swap(automode_exit_reason_low_power_, other->automode_exit_reason_low_power_);
  swap(automode_exit_reason_highvolt_, other->automode_exit_reason_highvolt_);
  swap(automode_exit_reason_vehicle_flt_, other->automode_exit_reason_vehicle_flt_);
  swap(automode_exit_reason_press_emerg_, other->automode_exit_reason_press_emerg_);
  swap(automode_exit_reason_press_remot_, other->automode_exit_reason_press_remot_);
  swap(automode_exit_reason_pdu_control_, other->automode_exit_reason_pdu_control_);
  swap(vcu_faultrept_alivecounter_, other->vcu_faultrept_alivecounter_);
  swap(vcu_faultrept_checksum_, other->vcu_faultrept_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_vehicle_fault_response_201::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_powerstatus_214::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_powerstatus_214::kVcuPowermodeFieldNumber;
const int Vcu_powerstatus_214::kVcuPowermodevalidFieldNumber;
const int Vcu_powerstatus_214::kReplacebatterystateindicationFieldNumber;
const int Vcu_powerstatus_214::kForbiddenAebSignalFieldNumber;
const int Vcu_powerstatus_214::kBcuChargedischargecurrentFieldNumber;
const int Vcu_powerstatus_214::kBcuBattInternalvoltageFieldNumber;
const int Vcu_powerstatus_214::kVcuDriverinfoAlivecounterFieldNumber;
const int Vcu_powerstatus_214::kVcuDriverinfoChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_powerstatus_214::Vcu_powerstatus_214()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_powerstatus_214.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_powerstatus_214)
}
Vcu_powerstatus_214::Vcu_powerstatus_214(const Vcu_powerstatus_214& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vcu_powermode_, &from.vcu_powermode_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu_driverinfo_checksum_) -
    reinterpret_cast<char*>(&vcu_powermode_)) + sizeof(vcu_driverinfo_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_powerstatus_214)
}

void Vcu_powerstatus_214::SharedCtor() {
  ::memset(&vcu_powermode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcu_driverinfo_checksum_) -
      reinterpret_cast<char*>(&vcu_powermode_)) + sizeof(vcu_driverinfo_checksum_));
}

Vcu_powerstatus_214::~Vcu_powerstatus_214() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_powerstatus_214)
  SharedDtor();
}

void Vcu_powerstatus_214::SharedDtor() {
}

void Vcu_powerstatus_214::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_powerstatus_214::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_powerstatus_214& Vcu_powerstatus_214::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_powerstatus_214.base);
  return *internal_default_instance();
}


void Vcu_powerstatus_214::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_powerstatus_214)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&vcu_powermode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_driverinfo_checksum_) -
        reinterpret_cast<char*>(&vcu_powermode_)) + sizeof(vcu_driverinfo_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_powerstatus_214::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_powerstatus_214)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vcu_powermode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_vcu_powermode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_powermode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_powermodevalid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_vcu_powermodevalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_powermodevalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool replacebatterystateindication = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_replacebatterystateindication();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &replacebatterystateindication_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool forbidden_aeb_signal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_forbidden_aeb_signal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forbidden_aeb_signal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bcu_chargedischargecurrent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_bcu_chargedischargecurrent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bcu_chargedischargecurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bcu_batt_internalvoltage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_bcu_batt_internalvoltage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bcu_batt_internalvoltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_driverinfo_alivecounter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_vcu_driverinfo_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_driverinfo_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_driverinfo_checksum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_vcu_driverinfo_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_driverinfo_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_powerstatus_214)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_powerstatus_214)
  return false;
#undef DO_
}

void Vcu_powerstatus_214::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_powerstatus_214)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vcu_powermode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vcu_powermode(), output);
  }

  // optional int32 vcu_powermodevalid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcu_powermodevalid(), output);
  }

  // optional bool replacebatterystateindication = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->replacebatterystateindication(), output);
  }

  // optional bool forbidden_aeb_signal = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->forbidden_aeb_signal(), output);
  }

  // optional double bcu_chargedischargecurrent = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bcu_chargedischargecurrent(), output);
  }

  // optional double bcu_batt_internalvoltage = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bcu_batt_internalvoltage(), output);
  }

  // optional int32 vcu_driverinfo_alivecounter = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->vcu_driverinfo_alivecounter(), output);
  }

  // optional int32 vcu_driverinfo_checksum = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vcu_driverinfo_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_powerstatus_214)
}

::google::protobuf::uint8* Vcu_powerstatus_214::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_powerstatus_214)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vcu_powermode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vcu_powermode(), target);
  }

  // optional int32 vcu_powermodevalid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vcu_powermodevalid(), target);
  }

  // optional bool replacebatterystateindication = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->replacebatterystateindication(), target);
  }

  // optional bool forbidden_aeb_signal = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->forbidden_aeb_signal(), target);
  }

  // optional double bcu_chargedischargecurrent = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bcu_chargedischargecurrent(), target);
  }

  // optional double bcu_batt_internalvoltage = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bcu_batt_internalvoltage(), target);
  }

  // optional int32 vcu_driverinfo_alivecounter = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->vcu_driverinfo_alivecounter(), target);
  }

  // optional int32 vcu_driverinfo_checksum = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vcu_driverinfo_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_powerstatus_214)
  return target;
}

size_t Vcu_powerstatus_214::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_powerstatus_214)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 vcu_powermode = 1;
    if (has_vcu_powermode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_powermode());
    }

    // optional int32 vcu_powermodevalid = 2;
    if (has_vcu_powermodevalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_powermodevalid());
    }

    // optional bool replacebatterystateindication = 3;
    if (has_replacebatterystateindication()) {
      total_size += 1 + 1;
    }

    // optional bool forbidden_aeb_signal = 4;
    if (has_forbidden_aeb_signal()) {
      total_size += 1 + 1;
    }

    // optional int32 vcu_driverinfo_alivecounter = 7;
    if (has_vcu_driverinfo_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_driverinfo_alivecounter());
    }

    // optional double bcu_chargedischargecurrent = 5;
    if (has_bcu_chargedischargecurrent()) {
      total_size += 1 + 8;
    }

    // optional double bcu_batt_internalvoltage = 6;
    if (has_bcu_batt_internalvoltage()) {
      total_size += 1 + 8;
    }

    // optional int32 vcu_driverinfo_checksum = 8;
    if (has_vcu_driverinfo_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_driverinfo_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_powerstatus_214::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_powerstatus_214)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_powerstatus_214* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_powerstatus_214>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_powerstatus_214)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_powerstatus_214)
    MergeFrom(*source);
  }
}

void Vcu_powerstatus_214::MergeFrom(const Vcu_powerstatus_214& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_powerstatus_214)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      vcu_powermode_ = from.vcu_powermode_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcu_powermodevalid_ = from.vcu_powermodevalid_;
    }
    if (cached_has_bits & 0x00000004u) {
      replacebatterystateindication_ = from.replacebatterystateindication_;
    }
    if (cached_has_bits & 0x00000008u) {
      forbidden_aeb_signal_ = from.forbidden_aeb_signal_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_driverinfo_alivecounter_ = from.vcu_driverinfo_alivecounter_;
    }
    if (cached_has_bits & 0x00000020u) {
      bcu_chargedischargecurrent_ = from.bcu_chargedischargecurrent_;
    }
    if (cached_has_bits & 0x00000040u) {
      bcu_batt_internalvoltage_ = from.bcu_batt_internalvoltage_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_driverinfo_checksum_ = from.vcu_driverinfo_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcu_powerstatus_214::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_powerstatus_214)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_powerstatus_214::CopyFrom(const Vcu_powerstatus_214& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_powerstatus_214)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_powerstatus_214::IsInitialized() const {
  return true;
}

void Vcu_powerstatus_214::Swap(Vcu_powerstatus_214* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_powerstatus_214::InternalSwap(Vcu_powerstatus_214* other) {
  using std::swap;
  swap(vcu_powermode_, other->vcu_powermode_);
  swap(vcu_powermodevalid_, other->vcu_powermodevalid_);
  swap(replacebatterystateindication_, other->replacebatterystateindication_);
  swap(forbidden_aeb_signal_, other->forbidden_aeb_signal_);
  swap(vcu_driverinfo_alivecounter_, other->vcu_driverinfo_alivecounter_);
  swap(bcu_chargedischargecurrent_, other->bcu_chargedischargecurrent_);
  swap(bcu_batt_internalvoltage_, other->bcu_batt_internalvoltage_);
  swap(vcu_driverinfo_checksum_, other->vcu_driverinfo_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_powerstatus_214::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ads_light_horn_command_310::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ads_light_horn_command_310::kTurnRightLightCommandFieldNumber;
const int Ads_light_horn_command_310::kTurnLeftLightCommandFieldNumber;
const int Ads_light_horn_command_310::kHornCommandFieldNumber;
const int Ads_light_horn_command_310::kBeamCommandFieldNumber;
const int Ads_light_horn_command_310::kAutoDrivercmdAlivecounterFieldNumber;
const int Ads_light_horn_command_310::kAutoDrivercmdChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ads_light_horn_command_310::Ads_light_horn_command_310()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_light_horn_command_310.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_light_horn_command_310)
}
Ads_light_horn_command_310::Ads_light_horn_command_310(const Ads_light_horn_command_310& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&turn_right_light_command_, &from.turn_right_light_command_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
    reinterpret_cast<char*>(&turn_right_light_command_)) + sizeof(auto_drivercmd_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_light_horn_command_310)
}

void Ads_light_horn_command_310::SharedCtor() {
  ::memset(&turn_right_light_command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
      reinterpret_cast<char*>(&turn_right_light_command_)) + sizeof(auto_drivercmd_checksum_));
}

Ads_light_horn_command_310::~Ads_light_horn_command_310() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_light_horn_command_310)
  SharedDtor();
}

void Ads_light_horn_command_310::SharedDtor() {
}

void Ads_light_horn_command_310::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ads_light_horn_command_310::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ads_light_horn_command_310& Ads_light_horn_command_310::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_light_horn_command_310.base);
  return *internal_default_instance();
}


void Ads_light_horn_command_310::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_light_horn_command_310)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&turn_right_light_command_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
        reinterpret_cast<char*>(&turn_right_light_command_)) + sizeof(auto_drivercmd_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ads_light_horn_command_310::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ads_light_horn_command_310)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool turn_right_light_command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_turn_right_light_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &turn_right_light_command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool turn_left_light_command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_turn_left_light_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &turn_left_light_command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool horn_command = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_horn_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &horn_command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 beam_command = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_beam_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beam_command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_alivecounter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_auto_drivercmd_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_checksum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_auto_drivercmd_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ads_light_horn_command_310)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ads_light_horn_command_310)
  return false;
#undef DO_
}

void Ads_light_horn_command_310::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ads_light_horn_command_310)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool turn_right_light_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->turn_right_light_command(), output);
  }

  // optional bool turn_left_light_command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->turn_left_light_command(), output);
  }

  // optional bool horn_command = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->horn_command(), output);
  }

  // optional int32 beam_command = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->beam_command(), output);
  }

  // optional int32 auto_drivercmd_alivecounter = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->auto_drivercmd_alivecounter(), output);
  }

  // optional int32 auto_drivercmd_checksum = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->auto_drivercmd_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ads_light_horn_command_310)
}

::google::protobuf::uint8* Ads_light_horn_command_310::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_light_horn_command_310)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool turn_right_light_command = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->turn_right_light_command(), target);
  }

  // optional bool turn_left_light_command = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->turn_left_light_command(), target);
  }

  // optional bool horn_command = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->horn_command(), target);
  }

  // optional int32 beam_command = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->beam_command(), target);
  }

  // optional int32 auto_drivercmd_alivecounter = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->auto_drivercmd_alivecounter(), target);
  }

  // optional int32 auto_drivercmd_checksum = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->auto_drivercmd_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_light_horn_command_310)
  return target;
}

size_t Ads_light_horn_command_310::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_light_horn_command_310)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bool turn_right_light_command = 1;
    if (has_turn_right_light_command()) {
      total_size += 1 + 1;
    }

    // optional bool turn_left_light_command = 2;
    if (has_turn_left_light_command()) {
      total_size += 1 + 1;
    }

    // optional bool horn_command = 3;
    if (has_horn_command()) {
      total_size += 1 + 1;
    }

    // optional int32 beam_command = 4;
    if (has_beam_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beam_command());
    }

    // optional int32 auto_drivercmd_alivecounter = 5;
    if (has_auto_drivercmd_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_alivecounter());
    }

    // optional int32 auto_drivercmd_checksum = 6;
    if (has_auto_drivercmd_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_light_horn_command_310::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_light_horn_command_310)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_light_horn_command_310* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ads_light_horn_command_310>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_light_horn_command_310)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_light_horn_command_310)
    MergeFrom(*source);
  }
}

void Ads_light_horn_command_310::MergeFrom(const Ads_light_horn_command_310& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_light_horn_command_310)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      turn_right_light_command_ = from.turn_right_light_command_;
    }
    if (cached_has_bits & 0x00000002u) {
      turn_left_light_command_ = from.turn_left_light_command_;
    }
    if (cached_has_bits & 0x00000004u) {
      horn_command_ = from.horn_command_;
    }
    if (cached_has_bits & 0x00000008u) {
      beam_command_ = from.beam_command_;
    }
    if (cached_has_bits & 0x00000010u) {
      auto_drivercmd_alivecounter_ = from.auto_drivercmd_alivecounter_;
    }
    if (cached_has_bits & 0x00000020u) {
      auto_drivercmd_checksum_ = from.auto_drivercmd_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_light_horn_command_310::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_light_horn_command_310)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_light_horn_command_310::CopyFrom(const Ads_light_horn_command_310& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_light_horn_command_310)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_light_horn_command_310::IsInitialized() const {
  return true;
}

void Ads_light_horn_command_310::Swap(Ads_light_horn_command_310* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ads_light_horn_command_310::InternalSwap(Ads_light_horn_command_310* other) {
  using std::swap;
  swap(turn_right_light_command_, other->turn_right_light_command_);
  swap(turn_left_light_command_, other->turn_left_light_command_);
  swap(horn_command_, other->horn_command_);
  swap(beam_command_, other->beam_command_);
  swap(auto_drivercmd_alivecounter_, other->auto_drivercmd_alivecounter_);
  swap(auto_drivercmd_checksum_, other->auto_drivercmd_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ads_light_horn_command_310::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ads_brake_command_46::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ads_brake_command_46::kDriveEnableFieldNumber;
const int Ads_brake_command_46::kAutoBrakeCommandFieldNumber;
const int Ads_brake_command_46::kAutoParkingCommandFieldNumber;
const int Ads_brake_command_46::kEpbRampauxiliarycommandFieldNumber;
const int Ads_brake_command_46::kAutoDrivercmdAlivecounterFieldNumber;
const int Ads_brake_command_46::kAutoDrivercmdChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ads_brake_command_46::Ads_brake_command_46()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_brake_command_46.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_brake_command_46)
}
Ads_brake_command_46::Ads_brake_command_46(const Ads_brake_command_46& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&auto_brake_command_, &from.auto_brake_command_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
    reinterpret_cast<char*>(&auto_brake_command_)) + sizeof(auto_drivercmd_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_brake_command_46)
}

void Ads_brake_command_46::SharedCtor() {
  ::memset(&auto_brake_command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
      reinterpret_cast<char*>(&auto_brake_command_)) + sizeof(auto_drivercmd_checksum_));
}

Ads_brake_command_46::~Ads_brake_command_46() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_brake_command_46)
  SharedDtor();
}

void Ads_brake_command_46::SharedDtor() {
}

void Ads_brake_command_46::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ads_brake_command_46::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ads_brake_command_46& Ads_brake_command_46::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_brake_command_46.base);
  return *internal_default_instance();
}


void Ads_brake_command_46::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_brake_command_46)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&auto_brake_command_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
        reinterpret_cast<char*>(&auto_brake_command_)) + sizeof(auto_drivercmd_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ads_brake_command_46::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ads_brake_command_46)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool drive_enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drive_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drive_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_brake_command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_auto_brake_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_brake_command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool auto_parking_command = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_auto_parking_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_parking_command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool epb_rampauxiliarycommand = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_epb_rampauxiliarycommand();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &epb_rampauxiliarycommand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_alivecounter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_auto_drivercmd_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_checksum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_auto_drivercmd_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ads_brake_command_46)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ads_brake_command_46)
  return false;
#undef DO_
}

void Ads_brake_command_46::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ads_brake_command_46)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->drive_enable(), output);
  }

  // optional int32 auto_brake_command = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->auto_brake_command(), output);
  }

  // optional bool auto_parking_command = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->auto_parking_command(), output);
  }

  // optional bool epb_rampauxiliarycommand = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->epb_rampauxiliarycommand(), output);
  }

  // optional int32 auto_drivercmd_alivecounter = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->auto_drivercmd_alivecounter(), output);
  }

  // optional int32 auto_drivercmd_checksum = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->auto_drivercmd_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ads_brake_command_46)
}

::google::protobuf::uint8* Ads_brake_command_46::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_brake_command_46)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->drive_enable(), target);
  }

  // optional int32 auto_brake_command = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->auto_brake_command(), target);
  }

  // optional bool auto_parking_command = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->auto_parking_command(), target);
  }

  // optional bool epb_rampauxiliarycommand = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->epb_rampauxiliarycommand(), target);
  }

  // optional int32 auto_drivercmd_alivecounter = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->auto_drivercmd_alivecounter(), target);
  }

  // optional int32 auto_drivercmd_checksum = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->auto_drivercmd_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_brake_command_46)
  return target;
}

size_t Ads_brake_command_46::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_brake_command_46)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 auto_brake_command = 2;
    if (has_auto_brake_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_brake_command());
    }

    // optional bool drive_enable = 1;
    if (has_drive_enable()) {
      total_size += 1 + 1;
    }

    // optional bool auto_parking_command = 3;
    if (has_auto_parking_command()) {
      total_size += 1 + 1;
    }

    // optional bool epb_rampauxiliarycommand = 4;
    if (has_epb_rampauxiliarycommand()) {
      total_size += 1 + 1;
    }

    // optional int32 auto_drivercmd_alivecounter = 5;
    if (has_auto_drivercmd_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_alivecounter());
    }

    // optional int32 auto_drivercmd_checksum = 6;
    if (has_auto_drivercmd_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_brake_command_46::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_brake_command_46)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_brake_command_46* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ads_brake_command_46>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_brake_command_46)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_brake_command_46)
    MergeFrom(*source);
  }
}

void Ads_brake_command_46::MergeFrom(const Ads_brake_command_46& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_brake_command_46)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      auto_brake_command_ = from.auto_brake_command_;
    }
    if (cached_has_bits & 0x00000002u) {
      drive_enable_ = from.drive_enable_;
    }
    if (cached_has_bits & 0x00000004u) {
      auto_parking_command_ = from.auto_parking_command_;
    }
    if (cached_has_bits & 0x00000008u) {
      epb_rampauxiliarycommand_ = from.epb_rampauxiliarycommand_;
    }
    if (cached_has_bits & 0x00000010u) {
      auto_drivercmd_alivecounter_ = from.auto_drivercmd_alivecounter_;
    }
    if (cached_has_bits & 0x00000020u) {
      auto_drivercmd_checksum_ = from.auto_drivercmd_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_brake_command_46::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_brake_command_46)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_brake_command_46::CopyFrom(const Ads_brake_command_46& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_brake_command_46)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_brake_command_46::IsInitialized() const {
  return true;
}

void Ads_brake_command_46::Swap(Ads_brake_command_46* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ads_brake_command_46::InternalSwap(Ads_brake_command_46* other) {
  using std::swap;
  swap(auto_brake_command_, other->auto_brake_command_);
  swap(drive_enable_, other->drive_enable_);
  swap(auto_parking_command_, other->auto_parking_command_);
  swap(epb_rampauxiliarycommand_, other->epb_rampauxiliarycommand_);
  swap(auto_drivercmd_alivecounter_, other->auto_drivercmd_alivecounter_);
  swap(auto_drivercmd_checksum_, other->auto_drivercmd_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ads_brake_command_46::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_brake_report_47::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_brake_report_47::kBrakeEnableRespFieldNumber;
const int Vcu_brake_report_47::kControlModeRespFieldNumber;
const int Vcu_brake_report_47::kVcuRealBrakeValidFieldNumber;
const int Vcu_brake_report_47::kVcuRealBrakeFieldNumber;
const int Vcu_brake_report_47::kVcuRealParkingStatusFieldNumber;
const int Vcu_brake_report_47::kVcuRealParkingValidFieldNumber;
const int Vcu_brake_report_47::kRampauxiliaryindicationFieldNumber;
const int Vcu_brake_report_47::kVehicleslopeFieldNumber;
const int Vcu_brake_report_47::kVcuBrakereptAlivecounterFieldNumber;
const int Vcu_brake_report_47::kVcuBrakereptChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_brake_report_47::Vcu_brake_report_47()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_brake_report_47.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_brake_report_47)
}
Vcu_brake_report_47::Vcu_brake_report_47(const Vcu_brake_report_47& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&control_mode_resp_, &from.control_mode_resp_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu_brakerept_checksum_) -
    reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_brakerept_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_brake_report_47)
}

void Vcu_brake_report_47::SharedCtor() {
  ::memset(&control_mode_resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcu_brakerept_checksum_) -
      reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_brakerept_checksum_));
}

Vcu_brake_report_47::~Vcu_brake_report_47() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_brake_report_47)
  SharedDtor();
}

void Vcu_brake_report_47::SharedDtor() {
}

void Vcu_brake_report_47::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_brake_report_47::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_brake_report_47& Vcu_brake_report_47::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_brake_report_47.base);
  return *internal_default_instance();
}


void Vcu_brake_report_47::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_brake_report_47)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&control_mode_resp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vehicleslope_) -
        reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vehicleslope_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&vcu_brakerept_alivecounter_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_brakerept_checksum_) -
        reinterpret_cast<char*>(&vcu_brakerept_alivecounter_)) + sizeof(vcu_brakerept_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_brake_report_47::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_brake_report_47)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool brake_enable_resp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_brake_enable_resp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &brake_enable_resp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_brake_report_47.Control_mode_respType control_mode_resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Vcu_brake_report_47_Control_mode_respType_IsValid(value)) {
            set_control_mode_resp(static_cast< ::apollo::canbus::Vcu_brake_report_47_Control_mode_respType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_real_brake_valid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_vcu_real_brake_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_real_brake_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_real_brake = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_vcu_real_brake();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_real_brake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_real_parking_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_vcu_real_parking_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_real_parking_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_real_parking_valid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_vcu_real_parking_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_real_parking_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rampauxiliaryindication = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_rampauxiliaryindication();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rampauxiliaryindication_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehicleslope = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_vehicleslope();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehicleslope_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_brakerept_alivecounter = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_vcu_brakerept_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_brakerept_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_brakerept_checksum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_vcu_brakerept_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_brakerept_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_brake_report_47)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_brake_report_47)
  return false;
#undef DO_
}

void Vcu_brake_report_47::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_brake_report_47)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool brake_enable_resp = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->brake_enable_resp(), output);
  }

  // optional .apollo.canbus.Vcu_brake_report_47.Control_mode_respType control_mode_resp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->control_mode_resp(), output);
  }

  // optional bool vcu_real_brake_valid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->vcu_real_brake_valid(), output);
  }

  // optional int32 vcu_real_brake = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vcu_real_brake(), output);
  }

  // optional int32 vcu_real_parking_status = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vcu_real_parking_status(), output);
  }

  // optional bool vcu_real_parking_valid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->vcu_real_parking_valid(), output);
  }

  // optional bool rampauxiliaryindication = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->rampauxiliaryindication(), output);
  }

  // optional double vehicleslope = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vehicleslope(), output);
  }

  // optional int32 vcu_brakerept_alivecounter = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vcu_brakerept_alivecounter(), output);
  }

  // optional int32 vcu_brakerept_checksum = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->vcu_brakerept_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_brake_report_47)
}

::google::protobuf::uint8* Vcu_brake_report_47::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_brake_report_47)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool brake_enable_resp = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->brake_enable_resp(), target);
  }

  // optional .apollo.canbus.Vcu_brake_report_47.Control_mode_respType control_mode_resp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->control_mode_resp(), target);
  }

  // optional bool vcu_real_brake_valid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->vcu_real_brake_valid(), target);
  }

  // optional int32 vcu_real_brake = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vcu_real_brake(), target);
  }

  // optional int32 vcu_real_parking_status = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vcu_real_parking_status(), target);
  }

  // optional bool vcu_real_parking_valid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->vcu_real_parking_valid(), target);
  }

  // optional bool rampauxiliaryindication = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->rampauxiliaryindication(), target);
  }

  // optional double vehicleslope = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vehicleslope(), target);
  }

  // optional int32 vcu_brakerept_alivecounter = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vcu_brakerept_alivecounter(), target);
  }

  // optional int32 vcu_brakerept_checksum = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->vcu_brakerept_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_brake_report_47)
  return target;
}

size_t Vcu_brake_report_47::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_brake_report_47)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Vcu_brake_report_47.Control_mode_respType control_mode_resp = 2;
    if (has_control_mode_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode_resp());
    }

    // optional int32 vcu_real_brake = 4;
    if (has_vcu_real_brake()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_real_brake());
    }

    // optional bool brake_enable_resp = 1;
    if (has_brake_enable_resp()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_real_brake_valid = 3;
    if (has_vcu_real_brake_valid()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_real_parking_valid = 6;
    if (has_vcu_real_parking_valid()) {
      total_size += 1 + 1;
    }

    // optional bool rampauxiliaryindication = 7;
    if (has_rampauxiliaryindication()) {
      total_size += 1 + 1;
    }

    // optional int32 vcu_real_parking_status = 5;
    if (has_vcu_real_parking_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_real_parking_status());
    }

    // optional double vehicleslope = 8;
    if (has_vehicleslope()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 vcu_brakerept_alivecounter = 9;
    if (has_vcu_brakerept_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_brakerept_alivecounter());
    }

    // optional int32 vcu_brakerept_checksum = 10;
    if (has_vcu_brakerept_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_brakerept_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_brake_report_47::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_brake_report_47)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_brake_report_47* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_brake_report_47>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_brake_report_47)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_brake_report_47)
    MergeFrom(*source);
  }
}

void Vcu_brake_report_47::MergeFrom(const Vcu_brake_report_47& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_brake_report_47)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      control_mode_resp_ = from.control_mode_resp_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcu_real_brake_ = from.vcu_real_brake_;
    }
    if (cached_has_bits & 0x00000004u) {
      brake_enable_resp_ = from.brake_enable_resp_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_real_brake_valid_ = from.vcu_real_brake_valid_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_real_parking_valid_ = from.vcu_real_parking_valid_;
    }
    if (cached_has_bits & 0x00000020u) {
      rampauxiliaryindication_ = from.rampauxiliaryindication_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_real_parking_status_ = from.vcu_real_parking_status_;
    }
    if (cached_has_bits & 0x00000080u) {
      vehicleslope_ = from.vehicleslope_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      vcu_brakerept_alivecounter_ = from.vcu_brakerept_alivecounter_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcu_brakerept_checksum_ = from.vcu_brakerept_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcu_brake_report_47::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_brake_report_47)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_brake_report_47::CopyFrom(const Vcu_brake_report_47& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_brake_report_47)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_brake_report_47::IsInitialized() const {
  return true;
}

void Vcu_brake_report_47::Swap(Vcu_brake_report_47* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_brake_report_47::InternalSwap(Vcu_brake_report_47* other) {
  using std::swap;
  swap(control_mode_resp_, other->control_mode_resp_);
  swap(vcu_real_brake_, other->vcu_real_brake_);
  swap(brake_enable_resp_, other->brake_enable_resp_);
  swap(vcu_real_brake_valid_, other->vcu_real_brake_valid_);
  swap(vcu_real_parking_valid_, other->vcu_real_parking_valid_);
  swap(rampauxiliaryindication_, other->rampauxiliaryindication_);
  swap(vcu_real_parking_status_, other->vcu_real_parking_status_);
  swap(vehicleslope_, other->vehicleslope_);
  swap(vcu_brakerept_alivecounter_, other->vcu_brakerept_alivecounter_);
  swap(vcu_brakerept_checksum_, other->vcu_brakerept_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_brake_report_47::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_eps_report_57::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_eps_report_57::kDriveEnableRespFieldNumber;
const int Vcu_eps_report_57::kControlModeRespFieldNumber;
const int Vcu_eps_report_57::kVcuEpsReportFieldNumber;
const int Vcu_eps_report_57::kVcuRealAngleFieldNumber;
const int Vcu_eps_report_57::kVcuRealAngleValidFieldNumber;
const int Vcu_eps_report_57::kVcuTargetAngleValidFieldNumber;
const int Vcu_eps_report_57::kVcuTargetAngleFieldNumber;
const int Vcu_eps_report_57::kVcuEpsReptAlivecounterFieldNumber;
const int Vcu_eps_report_57::kVcuEpsReptChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_eps_report_57::Vcu_eps_report_57()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_eps_report_57.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_eps_report_57)
}
Vcu_eps_report_57::Vcu_eps_report_57(const Vcu_eps_report_57& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&control_mode_resp_, &from.control_mode_resp_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu_eps_rept_checksum_) -
    reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_eps_rept_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_eps_report_57)
}

void Vcu_eps_report_57::SharedCtor() {
  ::memset(&control_mode_resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcu_eps_rept_checksum_) -
      reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_eps_rept_checksum_));
}

Vcu_eps_report_57::~Vcu_eps_report_57() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_eps_report_57)
  SharedDtor();
}

void Vcu_eps_report_57::SharedDtor() {
}

void Vcu_eps_report_57::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_eps_report_57::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_eps_report_57& Vcu_eps_report_57::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_eps_report_57.base);
  return *internal_default_instance();
}


void Vcu_eps_report_57::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_eps_report_57)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&control_mode_resp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_eps_rept_alivecounter_) -
        reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_eps_rept_alivecounter_));
  }
  vcu_eps_rept_checksum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_eps_report_57::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_eps_report_57)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool drive_enable_resp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drive_enable_resp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drive_enable_resp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_eps_report_57.Control_mode_respType control_mode_resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Vcu_eps_report_57_Control_mode_respType_IsValid(value)) {
            set_control_mode_resp(static_cast< ::apollo::canbus::Vcu_eps_report_57_Control_mode_respType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_eps_report = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_vcu_eps_report();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_eps_report_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_real_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_vcu_real_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_real_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_real_angle_valid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_vcu_real_angle_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_real_angle_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_target_angle_valid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_vcu_target_angle_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_target_angle_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_target_angle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_vcu_target_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_target_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_eps_rept_alivecounter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_vcu_eps_rept_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_eps_rept_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_eps_rept_checksum = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_vcu_eps_rept_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_eps_rept_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_eps_report_57)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_eps_report_57)
  return false;
#undef DO_
}

void Vcu_eps_report_57::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_eps_report_57)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable_resp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->drive_enable_resp(), output);
  }

  // optional .apollo.canbus.Vcu_eps_report_57.Control_mode_respType control_mode_resp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->control_mode_resp(), output);
  }

  // optional bool vcu_eps_report = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->vcu_eps_report(), output);
  }

  // optional double vcu_real_angle = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vcu_real_angle(), output);
  }

  // optional bool vcu_real_angle_valid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->vcu_real_angle_valid(), output);
  }

  // optional bool vcu_target_angle_valid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->vcu_target_angle_valid(), output);
  }

  // optional double vcu_target_angle = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->vcu_target_angle(), output);
  }

  // optional int32 vcu_eps_rept_alivecounter = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vcu_eps_rept_alivecounter(), output);
  }

  // optional int32 vcu_eps_rept_checksum = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vcu_eps_rept_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_eps_report_57)
}

::google::protobuf::uint8* Vcu_eps_report_57::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_eps_report_57)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable_resp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->drive_enable_resp(), target);
  }

  // optional .apollo.canbus.Vcu_eps_report_57.Control_mode_respType control_mode_resp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->control_mode_resp(), target);
  }

  // optional bool vcu_eps_report = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->vcu_eps_report(), target);
  }

  // optional double vcu_real_angle = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vcu_real_angle(), target);
  }

  // optional bool vcu_real_angle_valid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->vcu_real_angle_valid(), target);
  }

  // optional bool vcu_target_angle_valid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->vcu_target_angle_valid(), target);
  }

  // optional double vcu_target_angle = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->vcu_target_angle(), target);
  }

  // optional int32 vcu_eps_rept_alivecounter = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vcu_eps_rept_alivecounter(), target);
  }

  // optional int32 vcu_eps_rept_checksum = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vcu_eps_rept_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_eps_report_57)
  return target;
}

size_t Vcu_eps_report_57::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_eps_report_57)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Vcu_eps_report_57.Control_mode_respType control_mode_resp = 2;
    if (has_control_mode_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode_resp());
    }

    // optional bool drive_enable_resp = 1;
    if (has_drive_enable_resp()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_eps_report = 3;
    if (has_vcu_eps_report()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_real_angle_valid = 5;
    if (has_vcu_real_angle_valid()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_target_angle_valid = 6;
    if (has_vcu_target_angle_valid()) {
      total_size += 1 + 1;
    }

    // optional double vcu_real_angle = 4;
    if (has_vcu_real_angle()) {
      total_size += 1 + 8;
    }

    // optional double vcu_target_angle = 7;
    if (has_vcu_target_angle()) {
      total_size += 1 + 8;
    }

    // optional int32 vcu_eps_rept_alivecounter = 8;
    if (has_vcu_eps_rept_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_eps_rept_alivecounter());
    }

  }
  // optional int32 vcu_eps_rept_checksum = 9;
  if (has_vcu_eps_rept_checksum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcu_eps_rept_checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_eps_report_57::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_eps_report_57)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_eps_report_57* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_eps_report_57>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_eps_report_57)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_eps_report_57)
    MergeFrom(*source);
  }
}

void Vcu_eps_report_57::MergeFrom(const Vcu_eps_report_57& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_eps_report_57)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      control_mode_resp_ = from.control_mode_resp_;
    }
    if (cached_has_bits & 0x00000002u) {
      drive_enable_resp_ = from.drive_enable_resp_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_eps_report_ = from.vcu_eps_report_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_real_angle_valid_ = from.vcu_real_angle_valid_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_target_angle_valid_ = from.vcu_target_angle_valid_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_real_angle_ = from.vcu_real_angle_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_target_angle_ = from.vcu_target_angle_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_eps_rept_alivecounter_ = from.vcu_eps_rept_alivecounter_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_vcu_eps_rept_checksum(from.vcu_eps_rept_checksum());
  }
}

void Vcu_eps_report_57::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_eps_report_57)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_eps_report_57::CopyFrom(const Vcu_eps_report_57& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_eps_report_57)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_eps_report_57::IsInitialized() const {
  return true;
}

void Vcu_eps_report_57::Swap(Vcu_eps_report_57* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_eps_report_57::InternalSwap(Vcu_eps_report_57* other) {
  using std::swap;
  swap(control_mode_resp_, other->control_mode_resp_);
  swap(drive_enable_resp_, other->drive_enable_resp_);
  swap(vcu_eps_report_, other->vcu_eps_report_);
  swap(vcu_real_angle_valid_, other->vcu_real_angle_valid_);
  swap(vcu_target_angle_valid_, other->vcu_target_angle_valid_);
  swap(vcu_real_angle_, other->vcu_real_angle_);
  swap(vcu_target_angle_, other->vcu_target_angle_);
  swap(vcu_eps_rept_alivecounter_, other->vcu_eps_rept_alivecounter_);
  swap(vcu_eps_rept_checksum_, other->vcu_eps_rept_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_eps_report_57::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ads_eps_command_56::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ads_eps_command_56::kDriveEnableFieldNumber;
const int Ads_eps_command_56::kAutoTargetAngleFieldNumber;
const int Ads_eps_command_56::kAutoDrivercmdAlivecounterFieldNumber;
const int Ads_eps_command_56::kAutoDrivercmdChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ads_eps_command_56::Ads_eps_command_56()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_eps_command_56.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_eps_command_56)
}
Ads_eps_command_56::Ads_eps_command_56(const Ads_eps_command_56& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&auto_target_angle_, &from.auto_target_angle_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
    reinterpret_cast<char*>(&auto_target_angle_)) + sizeof(auto_drivercmd_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_eps_command_56)
}

void Ads_eps_command_56::SharedCtor() {
  ::memset(&auto_target_angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
      reinterpret_cast<char*>(&auto_target_angle_)) + sizeof(auto_drivercmd_checksum_));
}

Ads_eps_command_56::~Ads_eps_command_56() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_eps_command_56)
  SharedDtor();
}

void Ads_eps_command_56::SharedDtor() {
}

void Ads_eps_command_56::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ads_eps_command_56::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ads_eps_command_56& Ads_eps_command_56::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_eps_command_56.base);
  return *internal_default_instance();
}


void Ads_eps_command_56::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_eps_command_56)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&auto_target_angle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
        reinterpret_cast<char*>(&auto_target_angle_)) + sizeof(auto_drivercmd_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ads_eps_command_56::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ads_eps_command_56)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool drive_enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drive_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drive_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double auto_target_angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_auto_target_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &auto_target_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_alivecounter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_auto_drivercmd_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_checksum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_auto_drivercmd_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ads_eps_command_56)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ads_eps_command_56)
  return false;
#undef DO_
}

void Ads_eps_command_56::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ads_eps_command_56)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->drive_enable(), output);
  }

  // optional double auto_target_angle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->auto_target_angle(), output);
  }

  // optional int32 auto_drivercmd_alivecounter = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->auto_drivercmd_alivecounter(), output);
  }

  // optional int32 auto_drivercmd_checksum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_drivercmd_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ads_eps_command_56)
}

::google::protobuf::uint8* Ads_eps_command_56::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_eps_command_56)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->drive_enable(), target);
  }

  // optional double auto_target_angle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->auto_target_angle(), target);
  }

  // optional int32 auto_drivercmd_alivecounter = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->auto_drivercmd_alivecounter(), target);
  }

  // optional int32 auto_drivercmd_checksum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_drivercmd_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_eps_command_56)
  return target;
}

size_t Ads_eps_command_56::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_eps_command_56)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double auto_target_angle = 2;
    if (has_auto_target_angle()) {
      total_size += 1 + 8;
    }

    // optional bool drive_enable = 1;
    if (has_drive_enable()) {
      total_size += 1 + 1;
    }

    // optional int32 auto_drivercmd_alivecounter = 3;
    if (has_auto_drivercmd_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_alivecounter());
    }

    // optional int32 auto_drivercmd_checksum = 4;
    if (has_auto_drivercmd_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_eps_command_56::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_eps_command_56)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_eps_command_56* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ads_eps_command_56>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_eps_command_56)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_eps_command_56)
    MergeFrom(*source);
  }
}

void Ads_eps_command_56::MergeFrom(const Ads_eps_command_56& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_eps_command_56)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      auto_target_angle_ = from.auto_target_angle_;
    }
    if (cached_has_bits & 0x00000002u) {
      drive_enable_ = from.drive_enable_;
    }
    if (cached_has_bits & 0x00000004u) {
      auto_drivercmd_alivecounter_ = from.auto_drivercmd_alivecounter_;
    }
    if (cached_has_bits & 0x00000008u) {
      auto_drivercmd_checksum_ = from.auto_drivercmd_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_eps_command_56::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_eps_command_56)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_eps_command_56::CopyFrom(const Ads_eps_command_56& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_eps_command_56)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_eps_command_56::IsInitialized() const {
  return true;
}

void Ads_eps_command_56::Swap(Ads_eps_command_56* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ads_eps_command_56::InternalSwap(Ads_eps_command_56* other) {
  using std::swap;
  swap(auto_target_angle_, other->auto_target_angle_);
  swap(drive_enable_, other->drive_enable_);
  swap(auto_drivercmd_alivecounter_, other->auto_drivercmd_alivecounter_);
  swap(auto_drivercmd_checksum_, other->auto_drivercmd_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ads_eps_command_56::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ads_drive_command_50::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ads_drive_command_50::kDriveEnableFieldNumber;
const int Ads_drive_command_50::kAutoShiftCommandFieldNumber;
const int Ads_drive_command_50::kAutoDriveTorqueFieldNumber;
const int Ads_drive_command_50::kAutoDrivercmdAlivecounterFieldNumber;
const int Ads_drive_command_50::kAutoDrivercmdChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ads_drive_command_50::Ads_drive_command_50()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_drive_command_50.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_drive_command_50)
}
Ads_drive_command_50::Ads_drive_command_50(const Ads_drive_command_50& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&drive_enable_, &from.drive_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
    reinterpret_cast<char*>(&drive_enable_)) + sizeof(auto_drivercmd_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_drive_command_50)
}

void Ads_drive_command_50::SharedCtor() {
  ::memset(&drive_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
      reinterpret_cast<char*>(&drive_enable_)) + sizeof(auto_drivercmd_checksum_));
}

Ads_drive_command_50::~Ads_drive_command_50() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_drive_command_50)
  SharedDtor();
}

void Ads_drive_command_50::SharedDtor() {
}

void Ads_drive_command_50::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ads_drive_command_50::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ads_drive_command_50& Ads_drive_command_50::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_drive_command_50.base);
  return *internal_default_instance();
}


void Ads_drive_command_50::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_drive_command_50)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&drive_enable_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auto_drivercmd_checksum_) -
        reinterpret_cast<char*>(&drive_enable_)) + sizeof(auto_drivercmd_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ads_drive_command_50::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ads_drive_command_50)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool drive_enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drive_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drive_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ads_drive_command_50.Auto_shift_commandType auto_shift_command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Ads_drive_command_50_Auto_shift_commandType_IsValid(value)) {
            set_auto_shift_command(static_cast< ::apollo::canbus::Ads_drive_command_50_Auto_shift_commandType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double auto_drive_torque = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_auto_drive_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &auto_drive_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_alivecounter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_auto_drivercmd_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 auto_drivercmd_checksum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_auto_drivercmd_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_drivercmd_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ads_drive_command_50)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ads_drive_command_50)
  return false;
#undef DO_
}

void Ads_drive_command_50::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ads_drive_command_50)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->drive_enable(), output);
  }

  // optional .apollo.canbus.Ads_drive_command_50.Auto_shift_commandType auto_shift_command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->auto_shift_command(), output);
  }

  // optional double auto_drive_torque = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->auto_drive_torque(), output);
  }

  // optional int32 auto_drivercmd_alivecounter = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_drivercmd_alivecounter(), output);
  }

  // optional int32 auto_drivercmd_checksum = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->auto_drivercmd_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ads_drive_command_50)
}

::google::protobuf::uint8* Ads_drive_command_50::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_drive_command_50)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->drive_enable(), target);
  }

  // optional .apollo.canbus.Ads_drive_command_50.Auto_shift_commandType auto_shift_command = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->auto_shift_command(), target);
  }

  // optional double auto_drive_torque = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->auto_drive_torque(), target);
  }

  // optional int32 auto_drivercmd_alivecounter = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_drivercmd_alivecounter(), target);
  }

  // optional int32 auto_drivercmd_checksum = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->auto_drivercmd_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_drive_command_50)
  return target;
}

size_t Ads_drive_command_50::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_drive_command_50)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bool drive_enable = 1;
    if (has_drive_enable()) {
      total_size += 1 + 1;
    }

    // optional .apollo.canbus.Ads_drive_command_50.Auto_shift_commandType auto_shift_command = 2;
    if (has_auto_shift_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->auto_shift_command());
    }

    // optional double auto_drive_torque = 3;
    if (has_auto_drive_torque()) {
      total_size += 1 + 8;
    }

    // optional int32 auto_drivercmd_alivecounter = 4;
    if (has_auto_drivercmd_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_alivecounter());
    }

    // optional int32 auto_drivercmd_checksum = 5;
    if (has_auto_drivercmd_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_drivercmd_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_drive_command_50::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_drive_command_50)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_drive_command_50* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ads_drive_command_50>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_drive_command_50)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_drive_command_50)
    MergeFrom(*source);
  }
}

void Ads_drive_command_50::MergeFrom(const Ads_drive_command_50& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_drive_command_50)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      drive_enable_ = from.drive_enable_;
    }
    if (cached_has_bits & 0x00000002u) {
      auto_shift_command_ = from.auto_shift_command_;
    }
    if (cached_has_bits & 0x00000004u) {
      auto_drive_torque_ = from.auto_drive_torque_;
    }
    if (cached_has_bits & 0x00000008u) {
      auto_drivercmd_alivecounter_ = from.auto_drivercmd_alivecounter_;
    }
    if (cached_has_bits & 0x00000010u) {
      auto_drivercmd_checksum_ = from.auto_drivercmd_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_drive_command_50::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_drive_command_50)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_drive_command_50::CopyFrom(const Ads_drive_command_50& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_drive_command_50)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_drive_command_50::IsInitialized() const {
  return true;
}

void Ads_drive_command_50::Swap(Ads_drive_command_50* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ads_drive_command_50::InternalSwap(Ads_drive_command_50* other) {
  using std::swap;
  swap(drive_enable_, other->drive_enable_);
  swap(auto_shift_command_, other->auto_shift_command_);
  swap(auto_drive_torque_, other->auto_drive_torque_);
  swap(auto_drivercmd_alivecounter_, other->auto_drivercmd_alivecounter_);
  swap(auto_drivercmd_checksum_, other->auto_drivercmd_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ads_drive_command_50::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_drive_report_52::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_drive_report_52::kDriveEnableRespFieldNumber;
const int Vcu_drive_report_52::kControlModeRespFieldNumber;
const int Vcu_drive_report_52::kVcuRealShiftFieldNumber;
const int Vcu_drive_report_52::kVcuRealShiftValidFieldNumber;
const int Vcu_drive_report_52::kVcuRealTorqueValidFieldNumber;
const int Vcu_drive_report_52::kVcuRealTorqueFieldNumber;
const int Vcu_drive_report_52::kVcuLimitedtorquemodeFieldNumber;
const int Vcu_drive_report_52::kVcuDrivereptAlivecounterFieldNumber;
const int Vcu_drive_report_52::kVcuDrivereptChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_drive_report_52::Vcu_drive_report_52()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_drive_report_52.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_drive_report_52)
}
Vcu_drive_report_52::Vcu_drive_report_52(const Vcu_drive_report_52& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&control_mode_resp_, &from.control_mode_resp_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu_driverept_checksum_) -
    reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_driverept_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_drive_report_52)
}

void Vcu_drive_report_52::SharedCtor() {
  ::memset(&control_mode_resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcu_driverept_checksum_) -
      reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_driverept_checksum_));
}

Vcu_drive_report_52::~Vcu_drive_report_52() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_drive_report_52)
  SharedDtor();
}

void Vcu_drive_report_52::SharedDtor() {
}

void Vcu_drive_report_52::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_drive_report_52::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_drive_report_52& Vcu_drive_report_52::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_drive_report_52.base);
  return *internal_default_instance();
}


void Vcu_drive_report_52::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_drive_report_52)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&control_mode_resp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_real_torque_) -
        reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_real_torque_));
  }
  vcu_driverept_checksum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_drive_report_52::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_drive_report_52)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool drive_enable_resp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drive_enable_resp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drive_enable_resp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_drive_report_52.Control_mode_respType control_mode_resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Vcu_drive_report_52_Control_mode_respType_IsValid(value)) {
            set_control_mode_resp(static_cast< ::apollo::canbus::Vcu_drive_report_52_Control_mode_respType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_drive_report_52.Vcu_real_shiftType vcu_real_shift = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Vcu_drive_report_52_Vcu_real_shiftType_IsValid(value)) {
            set_vcu_real_shift(static_cast< ::apollo::canbus::Vcu_drive_report_52_Vcu_real_shiftType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_real_shift_valid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_vcu_real_shift_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_real_shift_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_real_torque_valid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_vcu_real_torque_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_real_torque_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_real_torque = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_vcu_real_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_real_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_limitedtorquemode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_vcu_limitedtorquemode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_limitedtorquemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_driverept_alivecounter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_vcu_driverept_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_driverept_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_driverept_checksum = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_vcu_driverept_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_driverept_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_drive_report_52)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_drive_report_52)
  return false;
#undef DO_
}

void Vcu_drive_report_52::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_drive_report_52)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable_resp = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->drive_enable_resp(), output);
  }

  // optional .apollo.canbus.Vcu_drive_report_52.Control_mode_respType control_mode_resp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->control_mode_resp(), output);
  }

  // optional .apollo.canbus.Vcu_drive_report_52.Vcu_real_shiftType vcu_real_shift = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vcu_real_shift(), output);
  }

  // optional bool vcu_real_shift_valid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->vcu_real_shift_valid(), output);
  }

  // optional bool vcu_real_torque_valid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->vcu_real_torque_valid(), output);
  }

  // optional double vcu_real_torque = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vcu_real_torque(), output);
  }

  // optional bool vcu_limitedtorquemode = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->vcu_limitedtorquemode(), output);
  }

  // optional int32 vcu_driverept_alivecounter = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vcu_driverept_alivecounter(), output);
  }

  // optional int32 vcu_driverept_checksum = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vcu_driverept_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_drive_report_52)
}

::google::protobuf::uint8* Vcu_drive_report_52::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_drive_report_52)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable_resp = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->drive_enable_resp(), target);
  }

  // optional .apollo.canbus.Vcu_drive_report_52.Control_mode_respType control_mode_resp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->control_mode_resp(), target);
  }

  // optional .apollo.canbus.Vcu_drive_report_52.Vcu_real_shiftType vcu_real_shift = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vcu_real_shift(), target);
  }

  // optional bool vcu_real_shift_valid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->vcu_real_shift_valid(), target);
  }

  // optional bool vcu_real_torque_valid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->vcu_real_torque_valid(), target);
  }

  // optional double vcu_real_torque = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->vcu_real_torque(), target);
  }

  // optional bool vcu_limitedtorquemode = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->vcu_limitedtorquemode(), target);
  }

  // optional int32 vcu_driverept_alivecounter = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vcu_driverept_alivecounter(), target);
  }

  // optional int32 vcu_driverept_checksum = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vcu_driverept_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_drive_report_52)
  return target;
}

size_t Vcu_drive_report_52::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_drive_report_52)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Vcu_drive_report_52.Control_mode_respType control_mode_resp = 2;
    if (has_control_mode_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode_resp());
    }

    // optional .apollo.canbus.Vcu_drive_report_52.Vcu_real_shiftType vcu_real_shift = 3;
    if (has_vcu_real_shift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_real_shift());
    }

    // optional bool drive_enable_resp = 1;
    if (has_drive_enable_resp()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_real_shift_valid = 4;
    if (has_vcu_real_shift_valid()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_real_torque_valid = 5;
    if (has_vcu_real_torque_valid()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_limitedtorquemode = 7;
    if (has_vcu_limitedtorquemode()) {
      total_size += 1 + 1;
    }

    // optional int32 vcu_driverept_alivecounter = 8;
    if (has_vcu_driverept_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_driverept_alivecounter());
    }

    // optional double vcu_real_torque = 6;
    if (has_vcu_real_torque()) {
      total_size += 1 + 8;
    }

  }
  // optional int32 vcu_driverept_checksum = 9;
  if (has_vcu_driverept_checksum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcu_driverept_checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_drive_report_52::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_drive_report_52)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_drive_report_52* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_drive_report_52>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_drive_report_52)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_drive_report_52)
    MergeFrom(*source);
  }
}

void Vcu_drive_report_52::MergeFrom(const Vcu_drive_report_52& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_drive_report_52)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      control_mode_resp_ = from.control_mode_resp_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcu_real_shift_ = from.vcu_real_shift_;
    }
    if (cached_has_bits & 0x00000004u) {
      drive_enable_resp_ = from.drive_enable_resp_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_real_shift_valid_ = from.vcu_real_shift_valid_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_real_torque_valid_ = from.vcu_real_torque_valid_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_limitedtorquemode_ = from.vcu_limitedtorquemode_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_driverept_alivecounter_ = from.vcu_driverept_alivecounter_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_real_torque_ = from.vcu_real_torque_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_vcu_driverept_checksum(from.vcu_driverept_checksum());
  }
}

void Vcu_drive_report_52::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_drive_report_52)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_drive_report_52::CopyFrom(const Vcu_drive_report_52& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_drive_report_52)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_drive_report_52::IsInitialized() const {
  return true;
}

void Vcu_drive_report_52::Swap(Vcu_drive_report_52* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_drive_report_52::InternalSwap(Vcu_drive_report_52* other) {
  using std::swap;
  swap(control_mode_resp_, other->control_mode_resp_);
  swap(vcu_real_shift_, other->vcu_real_shift_);
  swap(drive_enable_resp_, other->drive_enable_resp_);
  swap(vcu_real_shift_valid_, other->vcu_real_shift_valid_);
  swap(vcu_real_torque_valid_, other->vcu_real_torque_valid_);
  swap(vcu_limitedtorquemode_, other->vcu_limitedtorquemode_);
  swap(vcu_driverept_alivecounter_, other->vcu_driverept_alivecounter_);
  swap(vcu_real_torque_, other->vcu_real_torque_);
  swap(vcu_driverept_checksum_, other->vcu_driverept_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_drive_report_52::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ads_diagnosis_628::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ads_diagnosis_628::kFaultrankFieldNumber;
const int Ads_diagnosis_628::kAdasFaultCodeFieldNumber;
const int Ads_diagnosis_628::kAdasSoftwareversionFieldNumber;
const int Ads_diagnosis_628::kAdasHardwareversionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ads_diagnosis_628::Ads_diagnosis_628()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_diagnosis_628.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_diagnosis_628)
}
Ads_diagnosis_628::Ads_diagnosis_628(const Ads_diagnosis_628& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&faultrank_, &from.faultrank_,
    static_cast<size_t>(reinterpret_cast<char*>(&adas_hardwareversion_) -
    reinterpret_cast<char*>(&faultrank_)) + sizeof(adas_hardwareversion_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_diagnosis_628)
}

void Ads_diagnosis_628::SharedCtor() {
  ::memset(&faultrank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adas_hardwareversion_) -
      reinterpret_cast<char*>(&faultrank_)) + sizeof(adas_hardwareversion_));
}

Ads_diagnosis_628::~Ads_diagnosis_628() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_diagnosis_628)
  SharedDtor();
}

void Ads_diagnosis_628::SharedDtor() {
}

void Ads_diagnosis_628::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ads_diagnosis_628::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ads_diagnosis_628& Ads_diagnosis_628::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Ads_diagnosis_628.base);
  return *internal_default_instance();
}


void Ads_diagnosis_628::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_diagnosis_628)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&faultrank_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adas_hardwareversion_) -
        reinterpret_cast<char*>(&faultrank_)) + sizeof(adas_hardwareversion_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ads_diagnosis_628::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ads_diagnosis_628)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 faultrank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_faultrank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &faultrank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adas_fault_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_adas_fault_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adas_fault_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adas_softwareversion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_adas_softwareversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adas_softwareversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adas_hardwareversion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_adas_hardwareversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adas_hardwareversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ads_diagnosis_628)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ads_diagnosis_628)
  return false;
#undef DO_
}

void Ads_diagnosis_628::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ads_diagnosis_628)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 faultrank = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->faultrank(), output);
  }

  // optional int32 adas_fault_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->adas_fault_code(), output);
  }

  // optional int32 adas_softwareversion = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->adas_softwareversion(), output);
  }

  // optional int32 adas_hardwareversion = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->adas_hardwareversion(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ads_diagnosis_628)
}

::google::protobuf::uint8* Ads_diagnosis_628::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_diagnosis_628)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 faultrank = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->faultrank(), target);
  }

  // optional int32 adas_fault_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->adas_fault_code(), target);
  }

  // optional int32 adas_softwareversion = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->adas_softwareversion(), target);
  }

  // optional int32 adas_hardwareversion = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->adas_hardwareversion(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_diagnosis_628)
  return target;
}

size_t Ads_diagnosis_628::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_diagnosis_628)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 faultrank = 1;
    if (has_faultrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->faultrank());
    }

    // optional int32 adas_fault_code = 2;
    if (has_adas_fault_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adas_fault_code());
    }

    // optional int32 adas_softwareversion = 3;
    if (has_adas_softwareversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adas_softwareversion());
    }

    // optional int32 adas_hardwareversion = 4;
    if (has_adas_hardwareversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adas_hardwareversion());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_diagnosis_628::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_diagnosis_628)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_diagnosis_628* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ads_diagnosis_628>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_diagnosis_628)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_diagnosis_628)
    MergeFrom(*source);
  }
}

void Ads_diagnosis_628::MergeFrom(const Ads_diagnosis_628& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_diagnosis_628)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      faultrank_ = from.faultrank_;
    }
    if (cached_has_bits & 0x00000002u) {
      adas_fault_code_ = from.adas_fault_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      adas_softwareversion_ = from.adas_softwareversion_;
    }
    if (cached_has_bits & 0x00000008u) {
      adas_hardwareversion_ = from.adas_hardwareversion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_diagnosis_628::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_diagnosis_628)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_diagnosis_628::CopyFrom(const Ads_diagnosis_628& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_diagnosis_628)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_diagnosis_628::IsInitialized() const {
  return true;
}

void Ads_diagnosis_628::Swap(Ads_diagnosis_628* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ads_diagnosis_628::InternalSwap(Ads_diagnosis_628* other) {
  using std::swap;
  swap(faultrank_, other->faultrank_);
  swap(adas_fault_code_, other->adas_fault_code_);
  swap(adas_softwareversion_, other->adas_softwareversion_);
  swap(adas_hardwareversion_, other->adas_hardwareversion_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ads_diagnosis_628::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_nm_401::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_nm_401::kVcuSleepcommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_nm_401::Vcu_nm_401()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_nm_401.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_nm_401)
}
Vcu_nm_401::Vcu_nm_401(const Vcu_nm_401& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vcu_sleepcommand_ = from.vcu_sleepcommand_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_nm_401)
}

void Vcu_nm_401::SharedCtor() {
  vcu_sleepcommand_ = false;
}

Vcu_nm_401::~Vcu_nm_401() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_nm_401)
  SharedDtor();
}

void Vcu_nm_401::SharedDtor() {
}

void Vcu_nm_401::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_nm_401::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_nm_401& Vcu_nm_401::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_nm_401.base);
  return *internal_default_instance();
}


void Vcu_nm_401::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_nm_401)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vcu_sleepcommand_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_nm_401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_nm_401)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool vcu_sleepcommand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_vcu_sleepcommand();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_sleepcommand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_nm_401)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_nm_401)
  return false;
#undef DO_
}

void Vcu_nm_401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_nm_401)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool vcu_sleepcommand = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vcu_sleepcommand(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_nm_401)
}

::google::protobuf::uint8* Vcu_nm_401::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_nm_401)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool vcu_sleepcommand = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vcu_sleepcommand(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_nm_401)
  return target;
}

size_t Vcu_nm_401::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_nm_401)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool vcu_sleepcommand = 1;
  if (has_vcu_sleepcommand()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_nm_401::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_nm_401)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_nm_401* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_nm_401>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_nm_401)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_nm_401)
    MergeFrom(*source);
  }
}

void Vcu_nm_401::MergeFrom(const Vcu_nm_401& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_nm_401)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vcu_sleepcommand()) {
    set_vcu_sleepcommand(from.vcu_sleepcommand());
  }
}

void Vcu_nm_401::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_nm_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_nm_401::CopyFrom(const Vcu_nm_401& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_nm_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_nm_401::IsInitialized() const {
  return true;
}

void Vcu_nm_401::Swap(Vcu_nm_401* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_nm_401::InternalSwap(Vcu_nm_401* other) {
  using std::swap;
  swap(vcu_sleepcommand_, other->vcu_sleepcommand_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_nm_401::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_vehicle_status_report_101::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_vehicle_status_report_101::kDriveEnableRespFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuHighvoltagecircuitstateFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuDcdcEnabledstatesFieldNumber;
const int Vcu_vehicle_status_report_101::kControlModeRespFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuVehicleSpeedFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuLowbatterychargingfunctionstFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuDisplaySocFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuMotorSpeedFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuMotorDirectionFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuMotorSpeedValidFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuStatusreptAlivecounterFieldNumber;
const int Vcu_vehicle_status_report_101::kVcuStatusreptChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_vehicle_status_report_101::Vcu_vehicle_status_report_101()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_status_report_101.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_vehicle_status_report_101)
}
Vcu_vehicle_status_report_101::Vcu_vehicle_status_report_101(const Vcu_vehicle_status_report_101& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&control_mode_resp_, &from.control_mode_resp_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu_statusrept_checksum_) -
    reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_statusrept_checksum_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_vehicle_status_report_101)
}

void Vcu_vehicle_status_report_101::SharedCtor() {
  ::memset(&control_mode_resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcu_statusrept_checksum_) -
      reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_statusrept_checksum_));
}

Vcu_vehicle_status_report_101::~Vcu_vehicle_status_report_101() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_vehicle_status_report_101)
  SharedDtor();
}

void Vcu_vehicle_status_report_101::SharedDtor() {
}

void Vcu_vehicle_status_report_101::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_vehicle_status_report_101::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_vehicle_status_report_101& Vcu_vehicle_status_report_101::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_status_report_101.base);
  return *internal_default_instance();
}


void Vcu_vehicle_status_report_101::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_vehicle_status_report_101)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&control_mode_resp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_display_soc_) -
        reinterpret_cast<char*>(&control_mode_resp_)) + sizeof(vcu_display_soc_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&vcu_motor_speed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu_statusrept_checksum_) -
        reinterpret_cast<char*>(&vcu_motor_speed_)) + sizeof(vcu_statusrept_checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_vehicle_status_report_101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_vehicle_status_report_101)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool drive_enable_resp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drive_enable_resp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drive_enable_resp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_highvoltagecircuitstate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_vcu_highvoltagecircuitstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_highvoltagecircuitstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_dcdc_enabledstates = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_vcu_dcdc_enabledstates();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_dcdc_enabledstates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_vehicle_status_report_101.Control_mode_respType control_mode_resp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Vcu_vehicle_status_report_101_Control_mode_respType_IsValid(value)) {
            set_control_mode_resp(static_cast< ::apollo::canbus::Vcu_vehicle_status_report_101_Control_mode_respType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_vehicle_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_vcu_vehicle_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_vehicle_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_lowbatterychargingfunctionst = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_vcu_lowbatterychargingfunctionst();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_lowbatterychargingfunctionst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_display_soc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_vcu_display_soc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_display_soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_motor_speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_vcu_motor_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_motor_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_motor_direction = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_vcu_motor_direction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_motor_direction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vcu_motor_speed_valid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_vcu_motor_speed_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcu_motor_speed_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_statusrept_alivecounter = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_vcu_statusrept_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_statusrept_alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_statusrept_checksum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_vcu_statusrept_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_statusrept_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_vehicle_status_report_101)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_vehicle_status_report_101)
  return false;
#undef DO_
}

void Vcu_vehicle_status_report_101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_vehicle_status_report_101)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable_resp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->drive_enable_resp(), output);
  }

  // optional bool vcu_highvoltagecircuitstate = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vcu_highvoltagecircuitstate(), output);
  }

  // optional bool vcu_dcdc_enabledstates = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->vcu_dcdc_enabledstates(), output);
  }

  // optional .apollo.canbus.Vcu_vehicle_status_report_101.Control_mode_respType control_mode_resp = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->control_mode_resp(), output);
  }

  // optional double vcu_vehicle_speed = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->vcu_vehicle_speed(), output);
  }

  // optional int32 vcu_lowbatterychargingfunctionst = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vcu_lowbatterychargingfunctionst(), output);
  }

  // optional int32 vcu_display_soc = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->vcu_display_soc(), output);
  }

  // optional double vcu_motor_speed = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vcu_motor_speed(), output);
  }

  // optional int32 vcu_motor_direction = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vcu_motor_direction(), output);
  }

  // optional bool vcu_motor_speed_valid = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->vcu_motor_speed_valid(), output);
  }

  // optional int32 vcu_statusrept_alivecounter = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->vcu_statusrept_alivecounter(), output);
  }

  // optional int32 vcu_statusrept_checksum = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->vcu_statusrept_checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_vehicle_status_report_101)
}

::google::protobuf::uint8* Vcu_vehicle_status_report_101::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_vehicle_status_report_101)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool drive_enable_resp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->drive_enable_resp(), target);
  }

  // optional bool vcu_highvoltagecircuitstate = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vcu_highvoltagecircuitstate(), target);
  }

  // optional bool vcu_dcdc_enabledstates = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->vcu_dcdc_enabledstates(), target);
  }

  // optional .apollo.canbus.Vcu_vehicle_status_report_101.Control_mode_respType control_mode_resp = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->control_mode_resp(), target);
  }

  // optional double vcu_vehicle_speed = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->vcu_vehicle_speed(), target);
  }

  // optional int32 vcu_lowbatterychargingfunctionst = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vcu_lowbatterychargingfunctionst(), target);
  }

  // optional int32 vcu_display_soc = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->vcu_display_soc(), target);
  }

  // optional double vcu_motor_speed = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vcu_motor_speed(), target);
  }

  // optional int32 vcu_motor_direction = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vcu_motor_direction(), target);
  }

  // optional bool vcu_motor_speed_valid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->vcu_motor_speed_valid(), target);
  }

  // optional int32 vcu_statusrept_alivecounter = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->vcu_statusrept_alivecounter(), target);
  }

  // optional int32 vcu_statusrept_checksum = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->vcu_statusrept_checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_vehicle_status_report_101)
  return target;
}

size_t Vcu_vehicle_status_report_101::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_vehicle_status_report_101)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Vcu_vehicle_status_report_101.Control_mode_respType control_mode_resp = 4;
    if (has_control_mode_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode_resp());
    }

    // optional bool drive_enable_resp = 1;
    if (has_drive_enable_resp()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_highvoltagecircuitstate = 2;
    if (has_vcu_highvoltagecircuitstate()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_dcdc_enabledstates = 3;
    if (has_vcu_dcdc_enabledstates()) {
      total_size += 1 + 1;
    }

    // optional bool vcu_motor_speed_valid = 10;
    if (has_vcu_motor_speed_valid()) {
      total_size += 1 + 1;
    }

    // optional double vcu_vehicle_speed = 5;
    if (has_vcu_vehicle_speed()) {
      total_size += 1 + 8;
    }

    // optional int32 vcu_lowbatterychargingfunctionst = 6;
    if (has_vcu_lowbatterychargingfunctionst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_lowbatterychargingfunctionst());
    }

    // optional int32 vcu_display_soc = 7;
    if (has_vcu_display_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_display_soc());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional double vcu_motor_speed = 8;
    if (has_vcu_motor_speed()) {
      total_size += 1 + 8;
    }

    // optional int32 vcu_motor_direction = 9;
    if (has_vcu_motor_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_motor_direction());
    }

    // optional int32 vcu_statusrept_alivecounter = 11;
    if (has_vcu_statusrept_alivecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_statusrept_alivecounter());
    }

    // optional int32 vcu_statusrept_checksum = 12;
    if (has_vcu_statusrept_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_statusrept_checksum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_vehicle_status_report_101::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_vehicle_status_report_101)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_vehicle_status_report_101* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_vehicle_status_report_101>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_vehicle_status_report_101)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_vehicle_status_report_101)
    MergeFrom(*source);
  }
}

void Vcu_vehicle_status_report_101::MergeFrom(const Vcu_vehicle_status_report_101& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_vehicle_status_report_101)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      control_mode_resp_ = from.control_mode_resp_;
    }
    if (cached_has_bits & 0x00000002u) {
      drive_enable_resp_ = from.drive_enable_resp_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_highvoltagecircuitstate_ = from.vcu_highvoltagecircuitstate_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_dcdc_enabledstates_ = from.vcu_dcdc_enabledstates_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_motor_speed_valid_ = from.vcu_motor_speed_valid_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_vehicle_speed_ = from.vcu_vehicle_speed_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_lowbatterychargingfunctionst_ = from.vcu_lowbatterychargingfunctionst_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_display_soc_ = from.vcu_display_soc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      vcu_motor_speed_ = from.vcu_motor_speed_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcu_motor_direction_ = from.vcu_motor_direction_;
    }
    if (cached_has_bits & 0x00000400u) {
      vcu_statusrept_alivecounter_ = from.vcu_statusrept_alivecounter_;
    }
    if (cached_has_bits & 0x00000800u) {
      vcu_statusrept_checksum_ = from.vcu_statusrept_checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcu_vehicle_status_report_101::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_vehicle_status_report_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_vehicle_status_report_101::CopyFrom(const Vcu_vehicle_status_report_101& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_vehicle_status_report_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_vehicle_status_report_101::IsInitialized() const {
  return true;
}

void Vcu_vehicle_status_report_101::Swap(Vcu_vehicle_status_report_101* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_vehicle_status_report_101::InternalSwap(Vcu_vehicle_status_report_101* other) {
  using std::swap;
  swap(control_mode_resp_, other->control_mode_resp_);
  swap(drive_enable_resp_, other->drive_enable_resp_);
  swap(vcu_highvoltagecircuitstate_, other->vcu_highvoltagecircuitstate_);
  swap(vcu_dcdc_enabledstates_, other->vcu_dcdc_enabledstates_);
  swap(vcu_motor_speed_valid_, other->vcu_motor_speed_valid_);
  swap(vcu_vehicle_speed_, other->vcu_vehicle_speed_);
  swap(vcu_lowbatterychargingfunctionst_, other->vcu_lowbatterychargingfunctionst_);
  swap(vcu_display_soc_, other->vcu_display_soc_);
  swap(vcu_motor_speed_, other->vcu_motor_speed_);
  swap(vcu_motor_direction_, other->vcu_motor_direction_);
  swap(vcu_statusrept_alivecounter_, other->vcu_statusrept_alivecounter_);
  swap(vcu_statusrept_checksum_, other->vcu_statusrept_checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_vehicle_status_report_101::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vcu_vehicle_info_response_502::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcu_vehicle_info_response_502::kVehicleSoftwareversionIndicatiFieldNumber;
const int Vcu_vehicle_info_response_502::kProjectFieldNumber;
const int Vcu_vehicle_info_response_502::kManufacturerFieldNumber;
const int Vcu_vehicle_info_response_502::kYearFieldNumber;
const int Vcu_vehicle_info_response_502::kMonthFieldNumber;
const int Vcu_vehicle_info_response_502::kDayFieldNumber;
const int Vcu_vehicle_info_response_502::kVehicleSerialNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcu_vehicle_info_response_502::Vcu_vehicle_info_response_502()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_info_response_502.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vcu_vehicle_info_response_502)
}
Vcu_vehicle_info_response_502::Vcu_vehicle_info_response_502(const Vcu_vehicle_info_response_502& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicle_softwareversion_indicati_, &from.vehicle_softwareversion_indicati_,
    static_cast<size_t>(reinterpret_cast<char*>(&vehicle_serial_number_) -
    reinterpret_cast<char*>(&vehicle_softwareversion_indicati_)) + sizeof(vehicle_serial_number_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_vehicle_info_response_502)
}

void Vcu_vehicle_info_response_502::SharedCtor() {
  ::memset(&vehicle_softwareversion_indicati_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehicle_serial_number_) -
      reinterpret_cast<char*>(&vehicle_softwareversion_indicati_)) + sizeof(vehicle_serial_number_));
}

Vcu_vehicle_info_response_502::~Vcu_vehicle_info_response_502() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_vehicle_info_response_502)
  SharedDtor();
}

void Vcu_vehicle_info_response_502::SharedDtor() {
}

void Vcu_vehicle_info_response_502::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vcu_vehicle_info_response_502::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vcu_vehicle_info_response_502& Vcu_vehicle_info_response_502::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Vcu_vehicle_info_response_502.base);
  return *internal_default_instance();
}


void Vcu_vehicle_info_response_502::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_vehicle_info_response_502)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&vehicle_softwareversion_indicati_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vehicle_serial_number_) -
        reinterpret_cast<char*>(&vehicle_softwareversion_indicati_)) + sizeof(vehicle_serial_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcu_vehicle_info_response_502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Vcu_vehicle_info_response_502)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vehicle_softwareversion_indicati = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_vehicle_softwareversion_indicati();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehicle_softwareversion_indicati_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 project = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_project();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &project_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 manufacturer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_manufacturer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &manufacturer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 year = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_year();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 month = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_month();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 day = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vehicle_serial_number = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_vehicle_serial_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehicle_serial_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Vcu_vehicle_info_response_502)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Vcu_vehicle_info_response_502)
  return false;
#undef DO_
}

void Vcu_vehicle_info_response_502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Vcu_vehicle_info_response_502)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vehicle_softwareversion_indicati = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vehicle_softwareversion_indicati(), output);
  }

  // optional int32 project = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->project(), output);
  }

  // optional int32 manufacturer = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->manufacturer(), output);
  }

  // optional int32 year = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->year(), output);
  }

  // optional int32 month = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->month(), output);
  }

  // optional int32 day = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->day(), output);
  }

  // optional int32 vehicle_serial_number = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->vehicle_serial_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Vcu_vehicle_info_response_502)
}

::google::protobuf::uint8* Vcu_vehicle_info_response_502::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_vehicle_info_response_502)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vehicle_softwareversion_indicati = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vehicle_softwareversion_indicati(), target);
  }

  // optional int32 project = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->project(), target);
  }

  // optional int32 manufacturer = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->manufacturer(), target);
  }

  // optional int32 year = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->year(), target);
  }

  // optional int32 month = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->month(), target);
  }

  // optional int32 day = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->day(), target);
  }

  // optional int32 vehicle_serial_number = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->vehicle_serial_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_vehicle_info_response_502)
  return target;
}

size_t Vcu_vehicle_info_response_502::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_vehicle_info_response_502)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 vehicle_softwareversion_indicati = 1;
    if (has_vehicle_softwareversion_indicati()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehicle_softwareversion_indicati());
    }

    // optional int32 project = 2;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->project());
    }

    // optional int32 manufacturer = 3;
    if (has_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->manufacturer());
    }

    // optional int32 year = 4;
    if (has_year()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->year());
    }

    // optional int32 month = 5;
    if (has_month()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->month());
    }

    // optional int32 day = 6;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day());
    }

    // optional int32 vehicle_serial_number = 7;
    if (has_vehicle_serial_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehicle_serial_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcu_vehicle_info_response_502::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcu_vehicle_info_response_502)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcu_vehicle_info_response_502* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vcu_vehicle_info_response_502>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcu_vehicle_info_response_502)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcu_vehicle_info_response_502)
    MergeFrom(*source);
  }
}

void Vcu_vehicle_info_response_502::MergeFrom(const Vcu_vehicle_info_response_502& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_vehicle_info_response_502)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      vehicle_softwareversion_indicati_ = from.vehicle_softwareversion_indicati_;
    }
    if (cached_has_bits & 0x00000002u) {
      project_ = from.project_;
    }
    if (cached_has_bits & 0x00000004u) {
      manufacturer_ = from.manufacturer_;
    }
    if (cached_has_bits & 0x00000008u) {
      year_ = from.year_;
    }
    if (cached_has_bits & 0x00000010u) {
      month_ = from.month_;
    }
    if (cached_has_bits & 0x00000020u) {
      day_ = from.day_;
    }
    if (cached_has_bits & 0x00000040u) {
      vehicle_serial_number_ = from.vehicle_serial_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcu_vehicle_info_response_502::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcu_vehicle_info_response_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcu_vehicle_info_response_502::CopyFrom(const Vcu_vehicle_info_response_502& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_vehicle_info_response_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_vehicle_info_response_502::IsInitialized() const {
  return true;
}

void Vcu_vehicle_info_response_502::Swap(Vcu_vehicle_info_response_502* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcu_vehicle_info_response_502::InternalSwap(Vcu_vehicle_info_response_502* other) {
  using std::swap;
  swap(vehicle_softwareversion_indicati_, other->vehicle_softwareversion_indicati_);
  swap(project_, other->project_);
  swap(manufacturer_, other->manufacturer_);
  swap(year_, other->year_);
  swap(month_, other->month_);
  swap(day_, other->day_);
  swap(vehicle_serial_number_, other->vehicle_serial_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vcu_vehicle_info_response_502::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Aeb_diagnosis1_626::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aeb_diagnosis1_626::kAebSoftwareversionFieldNumber;
const int Aeb_diagnosis1_626::kAebHardwareversionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aeb_diagnosis1_626::Aeb_diagnosis1_626()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_diagnosis1_626.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Aeb_diagnosis1_626)
}
Aeb_diagnosis1_626::Aeb_diagnosis1_626(const Aeb_diagnosis1_626& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&aeb_softwareversion_, &from.aeb_softwareversion_,
    static_cast<size_t>(reinterpret_cast<char*>(&aeb_hardwareversion_) -
    reinterpret_cast<char*>(&aeb_softwareversion_)) + sizeof(aeb_hardwareversion_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aeb_diagnosis1_626)
}

void Aeb_diagnosis1_626::SharedCtor() {
  ::memset(&aeb_softwareversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aeb_hardwareversion_) -
      reinterpret_cast<char*>(&aeb_softwareversion_)) + sizeof(aeb_hardwareversion_));
}

Aeb_diagnosis1_626::~Aeb_diagnosis1_626() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aeb_diagnosis1_626)
  SharedDtor();
}

void Aeb_diagnosis1_626::SharedDtor() {
}

void Aeb_diagnosis1_626::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Aeb_diagnosis1_626::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aeb_diagnosis1_626& Aeb_diagnosis1_626::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_diagnosis1_626.base);
  return *internal_default_instance();
}


void Aeb_diagnosis1_626::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aeb_diagnosis1_626)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&aeb_softwareversion_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&aeb_hardwareversion_) -
        reinterpret_cast<char*>(&aeb_softwareversion_)) + sizeof(aeb_hardwareversion_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Aeb_diagnosis1_626::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Aeb_diagnosis1_626)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double aeb_softwareversion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_aeb_softwareversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &aeb_softwareversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double aeb_hardwareversion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_aeb_hardwareversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &aeb_hardwareversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Aeb_diagnosis1_626)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Aeb_diagnosis1_626)
  return false;
#undef DO_
}

void Aeb_diagnosis1_626::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Aeb_diagnosis1_626)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double aeb_softwareversion = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->aeb_softwareversion(), output);
  }

  // optional double aeb_hardwareversion = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->aeb_hardwareversion(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Aeb_diagnosis1_626)
}

::google::protobuf::uint8* Aeb_diagnosis1_626::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aeb_diagnosis1_626)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double aeb_softwareversion = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->aeb_softwareversion(), target);
  }

  // optional double aeb_hardwareversion = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->aeb_hardwareversion(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aeb_diagnosis1_626)
  return target;
}

size_t Aeb_diagnosis1_626::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aeb_diagnosis1_626)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double aeb_softwareversion = 1;
    if (has_aeb_softwareversion()) {
      total_size += 1 + 8;
    }

    // optional double aeb_hardwareversion = 2;
    if (has_aeb_hardwareversion()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aeb_diagnosis1_626::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aeb_diagnosis1_626)
  GOOGLE_DCHECK_NE(&from, this);
  const Aeb_diagnosis1_626* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aeb_diagnosis1_626>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aeb_diagnosis1_626)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aeb_diagnosis1_626)
    MergeFrom(*source);
  }
}

void Aeb_diagnosis1_626::MergeFrom(const Aeb_diagnosis1_626& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aeb_diagnosis1_626)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      aeb_softwareversion_ = from.aeb_softwareversion_;
    }
    if (cached_has_bits & 0x00000002u) {
      aeb_hardwareversion_ = from.aeb_hardwareversion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Aeb_diagnosis1_626::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aeb_diagnosis1_626)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aeb_diagnosis1_626::CopyFrom(const Aeb_diagnosis1_626& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aeb_diagnosis1_626)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aeb_diagnosis1_626::IsInitialized() const {
  return true;
}

void Aeb_diagnosis1_626::Swap(Aeb_diagnosis1_626* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aeb_diagnosis1_626::InternalSwap(Aeb_diagnosis1_626* other) {
  using std::swap;
  swap(aeb_softwareversion_, other->aeb_softwareversion_);
  swap(aeb_hardwareversion_, other->aeb_hardwareversion_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Aeb_diagnosis1_626::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Aeb_diagresp_718::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aeb_diagresp_718::kAebDiagrespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aeb_diagresp_718::Aeb_diagresp_718()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_diagresp_718.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Aeb_diagresp_718)
}
Aeb_diagresp_718::Aeb_diagresp_718(const Aeb_diagresp_718& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  aeb_diagresp_ = from.aeb_diagresp_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aeb_diagresp_718)
}

void Aeb_diagresp_718::SharedCtor() {
  aeb_diagresp_ = false;
}

Aeb_diagresp_718::~Aeb_diagresp_718() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aeb_diagresp_718)
  SharedDtor();
}

void Aeb_diagresp_718::SharedDtor() {
}

void Aeb_diagresp_718::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Aeb_diagresp_718::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aeb_diagresp_718& Aeb_diagresp_718::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_diagresp_718.base);
  return *internal_default_instance();
}


void Aeb_diagresp_718::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aeb_diagresp_718)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aeb_diagresp_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Aeb_diagresp_718::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Aeb_diagresp_718)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool aeb_diagresp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_aeb_diagresp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &aeb_diagresp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Aeb_diagresp_718)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Aeb_diagresp_718)
  return false;
#undef DO_
}

void Aeb_diagresp_718::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Aeb_diagresp_718)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool aeb_diagresp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->aeb_diagresp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Aeb_diagresp_718)
}

::google::protobuf::uint8* Aeb_diagresp_718::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aeb_diagresp_718)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool aeb_diagresp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->aeb_diagresp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aeb_diagresp_718)
  return target;
}

size_t Aeb_diagresp_718::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aeb_diagresp_718)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool aeb_diagresp = 1;
  if (has_aeb_diagresp()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aeb_diagresp_718::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aeb_diagresp_718)
  GOOGLE_DCHECK_NE(&from, this);
  const Aeb_diagresp_718* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aeb_diagresp_718>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aeb_diagresp_718)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aeb_diagresp_718)
    MergeFrom(*source);
  }
}

void Aeb_diagresp_718::MergeFrom(const Aeb_diagresp_718& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aeb_diagresp_718)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_aeb_diagresp()) {
    set_aeb_diagresp(from.aeb_diagresp());
  }
}

void Aeb_diagresp_718::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aeb_diagresp_718)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aeb_diagresp_718::CopyFrom(const Aeb_diagresp_718& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aeb_diagresp_718)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aeb_diagresp_718::IsInitialized() const {
  return true;
}

void Aeb_diagresp_718::Swap(Aeb_diagresp_718* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aeb_diagresp_718::InternalSwap(Aeb_diagresp_718* other) {
  using std::swap;
  swap(aeb_diagresp_, other->aeb_diagresp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Aeb_diagresp_718::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pas_1st_data_311::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pas_1st_data_311::kPasdistance4FieldNumber;
const int Pas_1st_data_311::kPasdistance3FieldNumber;
const int Pas_1st_data_311::kPasF1StatusFieldNumber;
const int Pas_1st_data_311::kPasF2StatusFieldNumber;
const int Pas_1st_data_311::kPasF3StatusFieldNumber;
const int Pas_1st_data_311::kPasF4StatusFieldNumber;
const int Pas_1st_data_311::kPasdistance2FieldNumber;
const int Pas_1st_data_311::kPasdistance1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pas_1st_data_311::Pas_1st_data_311()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Pas_1st_data_311.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Pas_1st_data_311)
}
Pas_1st_data_311::Pas_1st_data_311(const Pas_1st_data_311& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pasdistance4_, &from.pasdistance4_,
    static_cast<size_t>(reinterpret_cast<char*>(&pas_f4_status_) -
    reinterpret_cast<char*>(&pasdistance4_)) + sizeof(pas_f4_status_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Pas_1st_data_311)
}

void Pas_1st_data_311::SharedCtor() {
  ::memset(&pasdistance4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pas_f4_status_) -
      reinterpret_cast<char*>(&pasdistance4_)) + sizeof(pas_f4_status_));
}

Pas_1st_data_311::~Pas_1st_data_311() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Pas_1st_data_311)
  SharedDtor();
}

void Pas_1st_data_311::SharedDtor() {
}

void Pas_1st_data_311::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pas_1st_data_311::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pas_1st_data_311& Pas_1st_data_311::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Pas_1st_data_311.base);
  return *internal_default_instance();
}


void Pas_1st_data_311::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Pas_1st_data_311)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&pasdistance4_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pas_f4_status_) -
        reinterpret_cast<char*>(&pasdistance4_)) + sizeof(pas_f4_status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pas_1st_data_311::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Pas_1st_data_311)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double pasdistance4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_pasdistance4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance3 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_pasdistance3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f1_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pas_f1_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f1_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f2_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pas_f2_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f2_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f3_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pas_f3_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f3_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_f4_status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pas_f4_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_f4_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_pasdistance2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance1 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_pasdistance1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Pas_1st_data_311)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Pas_1st_data_311)
  return false;
#undef DO_
}

void Pas_1st_data_311::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Pas_1st_data_311)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double pasdistance4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pasdistance4(), output);
  }

  // optional double pasdistance3 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->pasdistance3(), output);
  }

  // optional bool pas_f1_status = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->pas_f1_status(), output);
  }

  // optional bool pas_f2_status = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->pas_f2_status(), output);
  }

  // optional bool pas_f3_status = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->pas_f3_status(), output);
  }

  // optional bool pas_f4_status = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->pas_f4_status(), output);
  }

  // optional double pasdistance2 = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pasdistance2(), output);
  }

  // optional double pasdistance1 = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->pasdistance1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Pas_1st_data_311)
}

::google::protobuf::uint8* Pas_1st_data_311::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Pas_1st_data_311)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double pasdistance4 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pasdistance4(), target);
  }

  // optional double pasdistance3 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->pasdistance3(), target);
  }

  // optional bool pas_f1_status = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->pas_f1_status(), target);
  }

  // optional bool pas_f2_status = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->pas_f2_status(), target);
  }

  // optional bool pas_f3_status = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->pas_f3_status(), target);
  }

  // optional bool pas_f4_status = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->pas_f4_status(), target);
  }

  // optional double pasdistance2 = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->pasdistance2(), target);
  }

  // optional double pasdistance1 = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->pasdistance1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Pas_1st_data_311)
  return target;
}

size_t Pas_1st_data_311::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Pas_1st_data_311)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double pasdistance4 = 1;
    if (has_pasdistance4()) {
      total_size += 1 + 8;
    }

    // optional double pasdistance3 = 2;
    if (has_pasdistance3()) {
      total_size += 1 + 8;
    }

    // optional double pasdistance2 = 7;
    if (has_pasdistance2()) {
      total_size += 1 + 8;
    }

    // optional double pasdistance1 = 8;
    if (has_pasdistance1()) {
      total_size += 1 + 8;
    }

    // optional bool pas_f1_status = 3;
    if (has_pas_f1_status()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f2_status = 4;
    if (has_pas_f2_status()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f3_status = 5;
    if (has_pas_f3_status()) {
      total_size += 1 + 1;
    }

    // optional bool pas_f4_status = 6;
    if (has_pas_f4_status()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pas_1st_data_311::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Pas_1st_data_311)
  GOOGLE_DCHECK_NE(&from, this);
  const Pas_1st_data_311* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pas_1st_data_311>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Pas_1st_data_311)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Pas_1st_data_311)
    MergeFrom(*source);
  }
}

void Pas_1st_data_311::MergeFrom(const Pas_1st_data_311& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Pas_1st_data_311)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      pasdistance4_ = from.pasdistance4_;
    }
    if (cached_has_bits & 0x00000002u) {
      pasdistance3_ = from.pasdistance3_;
    }
    if (cached_has_bits & 0x00000004u) {
      pasdistance2_ = from.pasdistance2_;
    }
    if (cached_has_bits & 0x00000008u) {
      pasdistance1_ = from.pasdistance1_;
    }
    if (cached_has_bits & 0x00000010u) {
      pas_f1_status_ = from.pas_f1_status_;
    }
    if (cached_has_bits & 0x00000020u) {
      pas_f2_status_ = from.pas_f2_status_;
    }
    if (cached_has_bits & 0x00000040u) {
      pas_f3_status_ = from.pas_f3_status_;
    }
    if (cached_has_bits & 0x00000080u) {
      pas_f4_status_ = from.pas_f4_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pas_1st_data_311::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Pas_1st_data_311)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pas_1st_data_311::CopyFrom(const Pas_1st_data_311& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Pas_1st_data_311)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pas_1st_data_311::IsInitialized() const {
  return true;
}

void Pas_1st_data_311::Swap(Pas_1st_data_311* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pas_1st_data_311::InternalSwap(Pas_1st_data_311* other) {
  using std::swap;
  swap(pasdistance4_, other->pasdistance4_);
  swap(pasdistance3_, other->pasdistance3_);
  swap(pasdistance2_, other->pasdistance2_);
  swap(pasdistance1_, other->pasdistance1_);
  swap(pas_f1_status_, other->pas_f1_status_);
  swap(pas_f2_status_, other->pas_f2_status_);
  swap(pas_f3_status_, other->pas_f3_status_);
  swap(pas_f4_status_, other->pas_f4_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pas_1st_data_311::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pas_2nd_data_312::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pas_2nd_data_312::kPasB1StatusFieldNumber;
const int Pas_2nd_data_312::kPasB2StatusFieldNumber;
const int Pas_2nd_data_312::kPasB3StatusFieldNumber;
const int Pas_2nd_data_312::kPasB4StatusFieldNumber;
const int Pas_2nd_data_312::kPasdistance1FieldNumber;
const int Pas_2nd_data_312::kPasdistance2FieldNumber;
const int Pas_2nd_data_312::kPasdistance3FieldNumber;
const int Pas_2nd_data_312::kPasdistance4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pas_2nd_data_312::Pas_2nd_data_312()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Pas_2nd_data_312.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Pas_2nd_data_312)
}
Pas_2nd_data_312::Pas_2nd_data_312(const Pas_2nd_data_312& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pasdistance1_, &from.pasdistance1_,
    static_cast<size_t>(reinterpret_cast<char*>(&pas_b4_status_) -
    reinterpret_cast<char*>(&pasdistance1_)) + sizeof(pas_b4_status_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Pas_2nd_data_312)
}

void Pas_2nd_data_312::SharedCtor() {
  ::memset(&pasdistance1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pas_b4_status_) -
      reinterpret_cast<char*>(&pasdistance1_)) + sizeof(pas_b4_status_));
}

Pas_2nd_data_312::~Pas_2nd_data_312() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Pas_2nd_data_312)
  SharedDtor();
}

void Pas_2nd_data_312::SharedDtor() {
}

void Pas_2nd_data_312::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pas_2nd_data_312::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pas_2nd_data_312& Pas_2nd_data_312::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Pas_2nd_data_312.base);
  return *internal_default_instance();
}


void Pas_2nd_data_312::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Pas_2nd_data_312)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&pasdistance1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pas_b4_status_) -
        reinterpret_cast<char*>(&pasdistance1_)) + sizeof(pas_b4_status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pas_2nd_data_312::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Pas_2nd_data_312)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool pas_b1_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pas_b1_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b1_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b2_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pas_b2_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b2_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b3_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pas_b3_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b3_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pas_b4_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pas_b4_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pas_b4_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_pasdistance1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_pasdistance2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_pasdistance3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pasdistance4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_pasdistance4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pasdistance4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Pas_2nd_data_312)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Pas_2nd_data_312)
  return false;
#undef DO_
}

void Pas_2nd_data_312::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Pas_2nd_data_312)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool pas_b1_status = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->pas_b1_status(), output);
  }

  // optional bool pas_b2_status = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->pas_b2_status(), output);
  }

  // optional bool pas_b3_status = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->pas_b3_status(), output);
  }

  // optional bool pas_b4_status = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->pas_b4_status(), output);
  }

  // optional double pasdistance1 = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pasdistance1(), output);
  }

  // optional double pasdistance2 = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pasdistance2(), output);
  }

  // optional double pasdistance3 = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pasdistance3(), output);
  }

  // optional double pasdistance4 = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->pasdistance4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Pas_2nd_data_312)
}

::google::protobuf::uint8* Pas_2nd_data_312::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Pas_2nd_data_312)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool pas_b1_status = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->pas_b1_status(), target);
  }

  // optional bool pas_b2_status = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->pas_b2_status(), target);
  }

  // optional bool pas_b3_status = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->pas_b3_status(), target);
  }

  // optional bool pas_b4_status = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->pas_b4_status(), target);
  }

  // optional double pasdistance1 = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->pasdistance1(), target);
  }

  // optional double pasdistance2 = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->pasdistance2(), target);
  }

  // optional double pasdistance3 = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->pasdistance3(), target);
  }

  // optional double pasdistance4 = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->pasdistance4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Pas_2nd_data_312)
  return target;
}

size_t Pas_2nd_data_312::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Pas_2nd_data_312)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double pasdistance1 = 5;
    if (has_pasdistance1()) {
      total_size += 1 + 8;
    }

    // optional double pasdistance2 = 6;
    if (has_pasdistance2()) {
      total_size += 1 + 8;
    }

    // optional double pasdistance3 = 7;
    if (has_pasdistance3()) {
      total_size += 1 + 8;
    }

    // optional double pasdistance4 = 8;
    if (has_pasdistance4()) {
      total_size += 1 + 8;
    }

    // optional bool pas_b1_status = 1;
    if (has_pas_b1_status()) {
      total_size += 1 + 1;
    }

    // optional bool pas_b2_status = 2;
    if (has_pas_b2_status()) {
      total_size += 1 + 1;
    }

    // optional bool pas_b3_status = 3;
    if (has_pas_b3_status()) {
      total_size += 1 + 1;
    }

    // optional bool pas_b4_status = 4;
    if (has_pas_b4_status()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pas_2nd_data_312::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Pas_2nd_data_312)
  GOOGLE_DCHECK_NE(&from, this);
  const Pas_2nd_data_312* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pas_2nd_data_312>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Pas_2nd_data_312)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Pas_2nd_data_312)
    MergeFrom(*source);
  }
}

void Pas_2nd_data_312::MergeFrom(const Pas_2nd_data_312& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Pas_2nd_data_312)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      pasdistance1_ = from.pasdistance1_;
    }
    if (cached_has_bits & 0x00000002u) {
      pasdistance2_ = from.pasdistance2_;
    }
    if (cached_has_bits & 0x00000004u) {
      pasdistance3_ = from.pasdistance3_;
    }
    if (cached_has_bits & 0x00000008u) {
      pasdistance4_ = from.pasdistance4_;
    }
    if (cached_has_bits & 0x00000010u) {
      pas_b1_status_ = from.pas_b1_status_;
    }
    if (cached_has_bits & 0x00000020u) {
      pas_b2_status_ = from.pas_b2_status_;
    }
    if (cached_has_bits & 0x00000040u) {
      pas_b3_status_ = from.pas_b3_status_;
    }
    if (cached_has_bits & 0x00000080u) {
      pas_b4_status_ = from.pas_b4_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pas_2nd_data_312::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Pas_2nd_data_312)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pas_2nd_data_312::CopyFrom(const Pas_2nd_data_312& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Pas_2nd_data_312)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pas_2nd_data_312::IsInitialized() const {
  return true;
}

void Pas_2nd_data_312::Swap(Pas_2nd_data_312* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pas_2nd_data_312::InternalSwap(Pas_2nd_data_312* other) {
  using std::swap;
  swap(pasdistance1_, other->pasdistance1_);
  swap(pasdistance2_, other->pasdistance2_);
  swap(pasdistance3_, other->pasdistance3_);
  swap(pasdistance4_, other->pasdistance4_);
  swap(pas_b1_status_, other->pas_b1_status_);
  swap(pas_b2_status_, other->pas_b2_status_);
  swap(pas_b3_status_, other->pas_b3_status_);
  swap(pas_b4_status_, other->pas_b4_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pas_2nd_data_312::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Aeb_wheelimpulse_355::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aeb_wheelimpulse_355::kFlimpulseFieldNumber;
const int Aeb_wheelimpulse_355::kFlimpulsevalidFieldNumber;
const int Aeb_wheelimpulse_355::kFrimpulseFieldNumber;
const int Aeb_wheelimpulse_355::kFrimpulsevalidFieldNumber;
const int Aeb_wheelimpulse_355::kRlimpulseFieldNumber;
const int Aeb_wheelimpulse_355::kRlimpulsevalidFieldNumber;
const int Aeb_wheelimpulse_355::kRrimpulseFieldNumber;
const int Aeb_wheelimpulse_355::kRrimpulsevalidFieldNumber;
const int Aeb_wheelimpulse_355::kAlivecounterFieldNumber;
const int Aeb_wheelimpulse_355::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aeb_wheelimpulse_355::Aeb_wheelimpulse_355()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_wheelimpulse_355.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Aeb_wheelimpulse_355)
}
Aeb_wheelimpulse_355::Aeb_wheelimpulse_355(const Aeb_wheelimpulse_355& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flimpulse_, &from.flimpulse_,
    static_cast<size_t>(reinterpret_cast<char*>(&rrimpulsevalid_) -
    reinterpret_cast<char*>(&flimpulse_)) + sizeof(rrimpulsevalid_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aeb_wheelimpulse_355)
}

void Aeb_wheelimpulse_355::SharedCtor() {
  ::memset(&flimpulse_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rrimpulsevalid_) -
      reinterpret_cast<char*>(&flimpulse_)) + sizeof(rrimpulsevalid_));
}

Aeb_wheelimpulse_355::~Aeb_wheelimpulse_355() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aeb_wheelimpulse_355)
  SharedDtor();
}

void Aeb_wheelimpulse_355::SharedDtor() {
}

void Aeb_wheelimpulse_355::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Aeb_wheelimpulse_355::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aeb_wheelimpulse_355& Aeb_wheelimpulse_355::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_wheelimpulse_355.base);
  return *internal_default_instance();
}


void Aeb_wheelimpulse_355::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aeb_wheelimpulse_355)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&flimpulse_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frimpulsevalid_) -
        reinterpret_cast<char*>(&flimpulse_)) + sizeof(frimpulsevalid_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&rlimpulsevalid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rrimpulsevalid_) -
        reinterpret_cast<char*>(&rlimpulsevalid_)) + sizeof(rrimpulsevalid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Aeb_wheelimpulse_355::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Aeb_wheelimpulse_355)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double flimpulse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_flimpulse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &flimpulse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool flimpulsevalid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_flimpulsevalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flimpulsevalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double frimpulse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_frimpulse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frimpulse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool frimpulsevalid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_frimpulsevalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &frimpulsevalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rlimpulse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_rlimpulse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rlimpulse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rlimpulsevalid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_rlimpulsevalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rlimpulsevalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rrimpulse = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_rrimpulse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rrimpulse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rrimpulsevalid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_rrimpulsevalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rrimpulsevalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double alivecounter = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_alivecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alivecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double checksum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Aeb_wheelimpulse_355)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Aeb_wheelimpulse_355)
  return false;
#undef DO_
}

void Aeb_wheelimpulse_355::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Aeb_wheelimpulse_355)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double flimpulse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->flimpulse(), output);
  }

  // optional bool flimpulsevalid = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->flimpulsevalid(), output);
  }

  // optional double frimpulse = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->frimpulse(), output);
  }

  // optional bool frimpulsevalid = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->frimpulsevalid(), output);
  }

  // optional double rlimpulse = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->rlimpulse(), output);
  }

  // optional bool rlimpulsevalid = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->rlimpulsevalid(), output);
  }

  // optional double rrimpulse = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->rrimpulse(), output);
  }

  // optional bool rrimpulsevalid = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->rrimpulsevalid(), output);
  }

  // optional double alivecounter = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->alivecounter(), output);
  }

  // optional double checksum = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Aeb_wheelimpulse_355)
}

::google::protobuf::uint8* Aeb_wheelimpulse_355::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aeb_wheelimpulse_355)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double flimpulse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->flimpulse(), target);
  }

  // optional bool flimpulsevalid = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->flimpulsevalid(), target);
  }

  // optional double frimpulse = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->frimpulse(), target);
  }

  // optional bool frimpulsevalid = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->frimpulsevalid(), target);
  }

  // optional double rlimpulse = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->rlimpulse(), target);
  }

  // optional bool rlimpulsevalid = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->rlimpulsevalid(), target);
  }

  // optional double rrimpulse = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->rrimpulse(), target);
  }

  // optional bool rrimpulsevalid = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->rrimpulsevalid(), target);
  }

  // optional double alivecounter = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->alivecounter(), target);
  }

  // optional double checksum = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aeb_wheelimpulse_355)
  return target;
}

size_t Aeb_wheelimpulse_355::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aeb_wheelimpulse_355)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double flimpulse = 1;
    if (has_flimpulse()) {
      total_size += 1 + 8;
    }

    // optional double frimpulse = 3;
    if (has_frimpulse()) {
      total_size += 1 + 8;
    }

    // optional double rlimpulse = 5;
    if (has_rlimpulse()) {
      total_size += 1 + 8;
    }

    // optional double rrimpulse = 7;
    if (has_rrimpulse()) {
      total_size += 1 + 8;
    }

    // optional double alivecounter = 9;
    if (has_alivecounter()) {
      total_size += 1 + 8;
    }

    // optional double checksum = 10;
    if (has_checksum()) {
      total_size += 1 + 8;
    }

    // optional bool flimpulsevalid = 2;
    if (has_flimpulsevalid()) {
      total_size += 1 + 1;
    }

    // optional bool frimpulsevalid = 4;
    if (has_frimpulsevalid()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool rlimpulsevalid = 6;
    if (has_rlimpulsevalid()) {
      total_size += 1 + 1;
    }

    // optional bool rrimpulsevalid = 8;
    if (has_rrimpulsevalid()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aeb_wheelimpulse_355::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aeb_wheelimpulse_355)
  GOOGLE_DCHECK_NE(&from, this);
  const Aeb_wheelimpulse_355* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aeb_wheelimpulse_355>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aeb_wheelimpulse_355)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aeb_wheelimpulse_355)
    MergeFrom(*source);
  }
}

void Aeb_wheelimpulse_355::MergeFrom(const Aeb_wheelimpulse_355& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aeb_wheelimpulse_355)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      flimpulse_ = from.flimpulse_;
    }
    if (cached_has_bits & 0x00000002u) {
      frimpulse_ = from.frimpulse_;
    }
    if (cached_has_bits & 0x00000004u) {
      rlimpulse_ = from.rlimpulse_;
    }
    if (cached_has_bits & 0x00000008u) {
      rrimpulse_ = from.rrimpulse_;
    }
    if (cached_has_bits & 0x00000010u) {
      alivecounter_ = from.alivecounter_;
    }
    if (cached_has_bits & 0x00000020u) {
      checksum_ = from.checksum_;
    }
    if (cached_has_bits & 0x00000040u) {
      flimpulsevalid_ = from.flimpulsevalid_;
    }
    if (cached_has_bits & 0x00000080u) {
      frimpulsevalid_ = from.frimpulsevalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      rlimpulsevalid_ = from.rlimpulsevalid_;
    }
    if (cached_has_bits & 0x00000200u) {
      rrimpulsevalid_ = from.rrimpulsevalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Aeb_wheelimpulse_355::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aeb_wheelimpulse_355)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aeb_wheelimpulse_355::CopyFrom(const Aeb_wheelimpulse_355& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aeb_wheelimpulse_355)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aeb_wheelimpulse_355::IsInitialized() const {
  return true;
}

void Aeb_wheelimpulse_355::Swap(Aeb_wheelimpulse_355* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aeb_wheelimpulse_355::InternalSwap(Aeb_wheelimpulse_355* other) {
  using std::swap;
  swap(flimpulse_, other->flimpulse_);
  swap(frimpulse_, other->frimpulse_);
  swap(rlimpulse_, other->rlimpulse_);
  swap(rrimpulse_, other->rrimpulse_);
  swap(alivecounter_, other->alivecounter_);
  swap(checksum_, other->checksum_);
  swap(flimpulsevalid_, other->flimpulsevalid_);
  swap(frimpulsevalid_, other->frimpulsevalid_);
  swap(rlimpulsevalid_, other->rlimpulsevalid_);
  swap(rrimpulsevalid_, other->rrimpulsevalid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Aeb_wheelimpulse_355::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Aeb_rearwheelspeed_354::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aeb_rearwheelspeed_354::kWheelspeedRlValidFieldNumber;
const int Aeb_rearwheelspeed_354::kWheelspeedRlFieldNumber;
const int Aeb_rearwheelspeed_354::kWheelspeedRrValidFieldNumber;
const int Aeb_rearwheelspeed_354::kWheelspeedRrFieldNumber;
const int Aeb_rearwheelspeed_354::kWheelspeedRlDirectFieldNumber;
const int Aeb_rearwheelspeed_354::kWheelspeedRrDirectFieldNumber;
const int Aeb_rearwheelspeed_354::kAlivecounterRearFieldNumber;
const int Aeb_rearwheelspeed_354::kChecksumRearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aeb_rearwheelspeed_354::Aeb_rearwheelspeed_354()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_rearwheelspeed_354.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Aeb_rearwheelspeed_354)
}
Aeb_rearwheelspeed_354::Aeb_rearwheelspeed_354(const Aeb_rearwheelspeed_354& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wheelspeed_rl_, &from.wheelspeed_rl_,
    static_cast<size_t>(reinterpret_cast<char*>(&wheelspeed_rr_valid_) -
    reinterpret_cast<char*>(&wheelspeed_rl_)) + sizeof(wheelspeed_rr_valid_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aeb_rearwheelspeed_354)
}

void Aeb_rearwheelspeed_354::SharedCtor() {
  ::memset(&wheelspeed_rl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wheelspeed_rr_valid_) -
      reinterpret_cast<char*>(&wheelspeed_rl_)) + sizeof(wheelspeed_rr_valid_));
}

Aeb_rearwheelspeed_354::~Aeb_rearwheelspeed_354() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aeb_rearwheelspeed_354)
  SharedDtor();
}

void Aeb_rearwheelspeed_354::SharedDtor() {
}

void Aeb_rearwheelspeed_354::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Aeb_rearwheelspeed_354::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aeb_rearwheelspeed_354& Aeb_rearwheelspeed_354::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_rearwheelspeed_354.base);
  return *internal_default_instance();
}


void Aeb_rearwheelspeed_354::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aeb_rearwheelspeed_354)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&wheelspeed_rl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wheelspeed_rr_valid_) -
        reinterpret_cast<char*>(&wheelspeed_rl_)) + sizeof(wheelspeed_rr_valid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Aeb_rearwheelspeed_354::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Aeb_rearwheelspeed_354)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool wheelspeed_rl_valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wheelspeed_rl_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wheelspeed_rl_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_rl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_wheelspeed_rl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_rl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool wheelspeed_rr_valid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_wheelspeed_rr_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wheelspeed_rr_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_rr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_wheelspeed_rr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_rl_direct = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_wheelspeed_rl_direct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_rl_direct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_rr_direct = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_wheelspeed_rr_direct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_rr_direct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double alivecounter_rear = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_alivecounter_rear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alivecounter_rear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double checksum_rear = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_checksum_rear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &checksum_rear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Aeb_rearwheelspeed_354)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Aeb_rearwheelspeed_354)
  return false;
#undef DO_
}

void Aeb_rearwheelspeed_354::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Aeb_rearwheelspeed_354)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool wheelspeed_rl_valid = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->wheelspeed_rl_valid(), output);
  }

  // optional double wheelspeed_rl = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->wheelspeed_rl(), output);
  }

  // optional bool wheelspeed_rr_valid = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->wheelspeed_rr_valid(), output);
  }

  // optional double wheelspeed_rr = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->wheelspeed_rr(), output);
  }

  // optional double wheelspeed_rl_direct = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->wheelspeed_rl_direct(), output);
  }

  // optional double wheelspeed_rr_direct = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->wheelspeed_rr_direct(), output);
  }

  // optional double alivecounter_rear = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->alivecounter_rear(), output);
  }

  // optional double checksum_rear = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->checksum_rear(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Aeb_rearwheelspeed_354)
}

::google::protobuf::uint8* Aeb_rearwheelspeed_354::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aeb_rearwheelspeed_354)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool wheelspeed_rl_valid = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->wheelspeed_rl_valid(), target);
  }

  // optional double wheelspeed_rl = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->wheelspeed_rl(), target);
  }

  // optional bool wheelspeed_rr_valid = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->wheelspeed_rr_valid(), target);
  }

  // optional double wheelspeed_rr = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->wheelspeed_rr(), target);
  }

  // optional double wheelspeed_rl_direct = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->wheelspeed_rl_direct(), target);
  }

  // optional double wheelspeed_rr_direct = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->wheelspeed_rr_direct(), target);
  }

  // optional double alivecounter_rear = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->alivecounter_rear(), target);
  }

  // optional double checksum_rear = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->checksum_rear(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aeb_rearwheelspeed_354)
  return target;
}

size_t Aeb_rearwheelspeed_354::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aeb_rearwheelspeed_354)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double wheelspeed_rl = 2;
    if (has_wheelspeed_rl()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_rr = 4;
    if (has_wheelspeed_rr()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_rl_direct = 5;
    if (has_wheelspeed_rl_direct()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_rr_direct = 6;
    if (has_wheelspeed_rr_direct()) {
      total_size += 1 + 8;
    }

    // optional double alivecounter_rear = 7;
    if (has_alivecounter_rear()) {
      total_size += 1 + 8;
    }

    // optional double checksum_rear = 8;
    if (has_checksum_rear()) {
      total_size += 1 + 8;
    }

    // optional bool wheelspeed_rl_valid = 1;
    if (has_wheelspeed_rl_valid()) {
      total_size += 1 + 1;
    }

    // optional bool wheelspeed_rr_valid = 3;
    if (has_wheelspeed_rr_valid()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aeb_rearwheelspeed_354::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aeb_rearwheelspeed_354)
  GOOGLE_DCHECK_NE(&from, this);
  const Aeb_rearwheelspeed_354* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aeb_rearwheelspeed_354>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aeb_rearwheelspeed_354)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aeb_rearwheelspeed_354)
    MergeFrom(*source);
  }
}

void Aeb_rearwheelspeed_354::MergeFrom(const Aeb_rearwheelspeed_354& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aeb_rearwheelspeed_354)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      wheelspeed_rl_ = from.wheelspeed_rl_;
    }
    if (cached_has_bits & 0x00000002u) {
      wheelspeed_rr_ = from.wheelspeed_rr_;
    }
    if (cached_has_bits & 0x00000004u) {
      wheelspeed_rl_direct_ = from.wheelspeed_rl_direct_;
    }
    if (cached_has_bits & 0x00000008u) {
      wheelspeed_rr_direct_ = from.wheelspeed_rr_direct_;
    }
    if (cached_has_bits & 0x00000010u) {
      alivecounter_rear_ = from.alivecounter_rear_;
    }
    if (cached_has_bits & 0x00000020u) {
      checksum_rear_ = from.checksum_rear_;
    }
    if (cached_has_bits & 0x00000040u) {
      wheelspeed_rl_valid_ = from.wheelspeed_rl_valid_;
    }
    if (cached_has_bits & 0x00000080u) {
      wheelspeed_rr_valid_ = from.wheelspeed_rr_valid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Aeb_rearwheelspeed_354::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aeb_rearwheelspeed_354)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aeb_rearwheelspeed_354::CopyFrom(const Aeb_rearwheelspeed_354& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aeb_rearwheelspeed_354)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aeb_rearwheelspeed_354::IsInitialized() const {
  return true;
}

void Aeb_rearwheelspeed_354::Swap(Aeb_rearwheelspeed_354* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aeb_rearwheelspeed_354::InternalSwap(Aeb_rearwheelspeed_354* other) {
  using std::swap;
  swap(wheelspeed_rl_, other->wheelspeed_rl_);
  swap(wheelspeed_rr_, other->wheelspeed_rr_);
  swap(wheelspeed_rl_direct_, other->wheelspeed_rl_direct_);
  swap(wheelspeed_rr_direct_, other->wheelspeed_rr_direct_);
  swap(alivecounter_rear_, other->alivecounter_rear_);
  swap(checksum_rear_, other->checksum_rear_);
  swap(wheelspeed_rl_valid_, other->wheelspeed_rl_valid_);
  swap(wheelspeed_rr_valid_, other->wheelspeed_rr_valid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Aeb_rearwheelspeed_354::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Aeb_frontwheelspeed_353::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aeb_frontwheelspeed_353::kVehiclespeedvalidFieldNumber;
const int Aeb_frontwheelspeed_353::kVehiclespeedFieldNumber;
const int Aeb_frontwheelspeed_353::kVehiclerealdirectFieldNumber;
const int Aeb_frontwheelspeed_353::kWheelspeedFlValidFieldNumber;
const int Aeb_frontwheelspeed_353::kWheelspeedFlFieldNumber;
const int Aeb_frontwheelspeed_353::kWheelspeedFrValidFieldNumber;
const int Aeb_frontwheelspeed_353::kWheelspeedFrFieldNumber;
const int Aeb_frontwheelspeed_353::kWheelspeedFlDirectFieldNumber;
const int Aeb_frontwheelspeed_353::kWheelspeedFrDirectFieldNumber;
const int Aeb_frontwheelspeed_353::kAlivecounterFrontFieldNumber;
const int Aeb_frontwheelspeed_353::kChecksumFrontFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aeb_frontwheelspeed_353::Aeb_frontwheelspeed_353()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_frontwheelspeed_353.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Aeb_frontwheelspeed_353)
}
Aeb_frontwheelspeed_353::Aeb_frontwheelspeed_353(const Aeb_frontwheelspeed_353& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehiclespeed_, &from.vehiclespeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&wheelspeed_fr_valid_) -
    reinterpret_cast<char*>(&vehiclespeed_)) + sizeof(wheelspeed_fr_valid_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aeb_frontwheelspeed_353)
}

void Aeb_frontwheelspeed_353::SharedCtor() {
  ::memset(&vehiclespeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wheelspeed_fr_valid_) -
      reinterpret_cast<char*>(&vehiclespeed_)) + sizeof(wheelspeed_fr_valid_));
}

Aeb_frontwheelspeed_353::~Aeb_frontwheelspeed_353() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aeb_frontwheelspeed_353)
  SharedDtor();
}

void Aeb_frontwheelspeed_353::SharedDtor() {
}

void Aeb_frontwheelspeed_353::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Aeb_frontwheelspeed_353::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Aeb_frontwheelspeed_353& Aeb_frontwheelspeed_353::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Aeb_frontwheelspeed_353.base);
  return *internal_default_instance();
}


void Aeb_frontwheelspeed_353::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aeb_frontwheelspeed_353)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&vehiclespeed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&checksum_front_) -
        reinterpret_cast<char*>(&vehiclespeed_)) + sizeof(checksum_front_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&vehiclespeedvalid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wheelspeed_fr_valid_) -
        reinterpret_cast<char*>(&vehiclespeedvalid_)) + sizeof(wheelspeed_fr_valid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Aeb_frontwheelspeed_353::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Aeb_frontwheelspeed_353)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool vehiclespeedvalid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_vehiclespeedvalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vehiclespeedvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehiclespeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_vehiclespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehiclespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehiclerealdirect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_vehiclerealdirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehiclerealdirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool wheelspeed_fl_valid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_wheelspeed_fl_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wheelspeed_fl_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_fl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_wheelspeed_fl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_fl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool wheelspeed_fr_valid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_wheelspeed_fr_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wheelspeed_fr_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_fr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_wheelspeed_fr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_fr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_fl_direct = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_wheelspeed_fl_direct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_fl_direct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wheelspeed_fr_direct = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_wheelspeed_fr_direct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wheelspeed_fr_direct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double alivecounter_front = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_alivecounter_front();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alivecounter_front_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double checksum_front = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_checksum_front();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &checksum_front_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Aeb_frontwheelspeed_353)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Aeb_frontwheelspeed_353)
  return false;
#undef DO_
}

void Aeb_frontwheelspeed_353::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Aeb_frontwheelspeed_353)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool vehiclespeedvalid = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vehiclespeedvalid(), output);
  }

  // optional double vehiclespeed = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vehiclespeed(), output);
  }

  // optional double vehiclerealdirect = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vehiclerealdirect(), output);
  }

  // optional bool wheelspeed_fl_valid = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->wheelspeed_fl_valid(), output);
  }

  // optional double wheelspeed_fl = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->wheelspeed_fl(), output);
  }

  // optional bool wheelspeed_fr_valid = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->wheelspeed_fr_valid(), output);
  }

  // optional double wheelspeed_fr = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->wheelspeed_fr(), output);
  }

  // optional double wheelspeed_fl_direct = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->wheelspeed_fl_direct(), output);
  }

  // optional double wheelspeed_fr_direct = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->wheelspeed_fr_direct(), output);
  }

  // optional double alivecounter_front = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->alivecounter_front(), output);
  }

  // optional double checksum_front = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->checksum_front(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Aeb_frontwheelspeed_353)
}

::google::protobuf::uint8* Aeb_frontwheelspeed_353::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aeb_frontwheelspeed_353)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool vehiclespeedvalid = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vehiclespeedvalid(), target);
  }

  // optional double vehiclespeed = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vehiclespeed(), target);
  }

  // optional double vehiclerealdirect = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->vehiclerealdirect(), target);
  }

  // optional bool wheelspeed_fl_valid = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->wheelspeed_fl_valid(), target);
  }

  // optional double wheelspeed_fl = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->wheelspeed_fl(), target);
  }

  // optional bool wheelspeed_fr_valid = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->wheelspeed_fr_valid(), target);
  }

  // optional double wheelspeed_fr = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->wheelspeed_fr(), target);
  }

  // optional double wheelspeed_fl_direct = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->wheelspeed_fl_direct(), target);
  }

  // optional double wheelspeed_fr_direct = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->wheelspeed_fr_direct(), target);
  }

  // optional double alivecounter_front = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->alivecounter_front(), target);
  }

  // optional double checksum_front = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->checksum_front(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aeb_frontwheelspeed_353)
  return target;
}

size_t Aeb_frontwheelspeed_353::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aeb_frontwheelspeed_353)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double vehiclespeed = 2;
    if (has_vehiclespeed()) {
      total_size += 1 + 8;
    }

    // optional double vehiclerealdirect = 3;
    if (has_vehiclerealdirect()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_fl = 5;
    if (has_wheelspeed_fl()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_fr = 7;
    if (has_wheelspeed_fr()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_fl_direct = 8;
    if (has_wheelspeed_fl_direct()) {
      total_size += 1 + 8;
    }

    // optional double wheelspeed_fr_direct = 9;
    if (has_wheelspeed_fr_direct()) {
      total_size += 1 + 8;
    }

    // optional double alivecounter_front = 10;
    if (has_alivecounter_front()) {
      total_size += 1 + 8;
    }

    // optional double checksum_front = 11;
    if (has_checksum_front()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool vehiclespeedvalid = 1;
    if (has_vehiclespeedvalid()) {
      total_size += 1 + 1;
    }

    // optional bool wheelspeed_fl_valid = 4;
    if (has_wheelspeed_fl_valid()) {
      total_size += 1 + 1;
    }

    // optional bool wheelspeed_fr_valid = 6;
    if (has_wheelspeed_fr_valid()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aeb_frontwheelspeed_353::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aeb_frontwheelspeed_353)
  GOOGLE_DCHECK_NE(&from, this);
  const Aeb_frontwheelspeed_353* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aeb_frontwheelspeed_353>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aeb_frontwheelspeed_353)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aeb_frontwheelspeed_353)
    MergeFrom(*source);
  }
}

void Aeb_frontwheelspeed_353::MergeFrom(const Aeb_frontwheelspeed_353& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aeb_frontwheelspeed_353)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      vehiclespeed_ = from.vehiclespeed_;
    }
    if (cached_has_bits & 0x00000002u) {
      vehiclerealdirect_ = from.vehiclerealdirect_;
    }
    if (cached_has_bits & 0x00000004u) {
      wheelspeed_fl_ = from.wheelspeed_fl_;
    }
    if (cached_has_bits & 0x00000008u) {
      wheelspeed_fr_ = from.wheelspeed_fr_;
    }
    if (cached_has_bits & 0x00000010u) {
      wheelspeed_fl_direct_ = from.wheelspeed_fl_direct_;
    }
    if (cached_has_bits & 0x00000020u) {
      wheelspeed_fr_direct_ = from.wheelspeed_fr_direct_;
    }
    if (cached_has_bits & 0x00000040u) {
      alivecounter_front_ = from.alivecounter_front_;
    }
    if (cached_has_bits & 0x00000080u) {
      checksum_front_ = from.checksum_front_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      vehiclespeedvalid_ = from.vehiclespeedvalid_;
    }
    if (cached_has_bits & 0x00000200u) {
      wheelspeed_fl_valid_ = from.wheelspeed_fl_valid_;
    }
    if (cached_has_bits & 0x00000400u) {
      wheelspeed_fr_valid_ = from.wheelspeed_fr_valid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Aeb_frontwheelspeed_353::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aeb_frontwheelspeed_353)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aeb_frontwheelspeed_353::CopyFrom(const Aeb_frontwheelspeed_353& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aeb_frontwheelspeed_353)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aeb_frontwheelspeed_353::IsInitialized() const {
  return true;
}

void Aeb_frontwheelspeed_353::Swap(Aeb_frontwheelspeed_353* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aeb_frontwheelspeed_353::InternalSwap(Aeb_frontwheelspeed_353* other) {
  using std::swap;
  swap(vehiclespeed_, other->vehiclespeed_);
  swap(vehiclerealdirect_, other->vehiclerealdirect_);
  swap(wheelspeed_fl_, other->wheelspeed_fl_);
  swap(wheelspeed_fr_, other->wheelspeed_fr_);
  swap(wheelspeed_fl_direct_, other->wheelspeed_fl_direct_);
  swap(wheelspeed_fr_direct_, other->wheelspeed_fr_direct_);
  swap(alivecounter_front_, other->alivecounter_front_);
  swap(checksum_front_, other->checksum_front_);
  swap(vehiclespeedvalid_, other->vehiclespeedvalid_);
  swap(wheelspeed_fl_valid_, other->wheelspeed_fl_valid_);
  swap(wheelspeed_fr_valid_, other->wheelspeed_fr_valid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Aeb_frontwheelspeed_353::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Neolix_edu::InitAsDefaultInstance() {
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->aeb_systemstate_11_ = const_cast< ::apollo::canbus::Aeb_systemstate_11*>(
      ::apollo::canbus::Aeb_systemstate_11::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_vehicle_fault_response_201_ = const_cast< ::apollo::canbus::Vcu_vehicle_fault_response_201*>(
      ::apollo::canbus::Vcu_vehicle_fault_response_201::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_powerstatus_214_ = const_cast< ::apollo::canbus::Vcu_powerstatus_214*>(
      ::apollo::canbus::Vcu_powerstatus_214::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->ads_light_horn_command_310_ = const_cast< ::apollo::canbus::Ads_light_horn_command_310*>(
      ::apollo::canbus::Ads_light_horn_command_310::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->ads_brake_command_46_ = const_cast< ::apollo::canbus::Ads_brake_command_46*>(
      ::apollo::canbus::Ads_brake_command_46::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_brake_report_47_ = const_cast< ::apollo::canbus::Vcu_brake_report_47*>(
      ::apollo::canbus::Vcu_brake_report_47::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_eps_report_57_ = const_cast< ::apollo::canbus::Vcu_eps_report_57*>(
      ::apollo::canbus::Vcu_eps_report_57::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->ads_eps_command_56_ = const_cast< ::apollo::canbus::Ads_eps_command_56*>(
      ::apollo::canbus::Ads_eps_command_56::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->ads_drive_command_50_ = const_cast< ::apollo::canbus::Ads_drive_command_50*>(
      ::apollo::canbus::Ads_drive_command_50::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_drive_report_52_ = const_cast< ::apollo::canbus::Vcu_drive_report_52*>(
      ::apollo::canbus::Vcu_drive_report_52::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->ads_diagnosis_628_ = const_cast< ::apollo::canbus::Ads_diagnosis_628*>(
      ::apollo::canbus::Ads_diagnosis_628::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_nm_401_ = const_cast< ::apollo::canbus::Vcu_nm_401*>(
      ::apollo::canbus::Vcu_nm_401::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_vehicle_status_report_101_ = const_cast< ::apollo::canbus::Vcu_vehicle_status_report_101*>(
      ::apollo::canbus::Vcu_vehicle_status_report_101::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->vcu_vehicle_info_response_502_ = const_cast< ::apollo::canbus::Vcu_vehicle_info_response_502*>(
      ::apollo::canbus::Vcu_vehicle_info_response_502::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->aeb_diagnosis1_626_ = const_cast< ::apollo::canbus::Aeb_diagnosis1_626*>(
      ::apollo::canbus::Aeb_diagnosis1_626::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->aeb_diagresp_718_ = const_cast< ::apollo::canbus::Aeb_diagresp_718*>(
      ::apollo::canbus::Aeb_diagresp_718::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->pas_1st_data_311_ = const_cast< ::apollo::canbus::Pas_1st_data_311*>(
      ::apollo::canbus::Pas_1st_data_311::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->pas_2nd_data_312_ = const_cast< ::apollo::canbus::Pas_2nd_data_312*>(
      ::apollo::canbus::Pas_2nd_data_312::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->aeb_wheelimpulse_355_ = const_cast< ::apollo::canbus::Aeb_wheelimpulse_355*>(
      ::apollo::canbus::Aeb_wheelimpulse_355::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->aeb_rearwheelspeed_354_ = const_cast< ::apollo::canbus::Aeb_rearwheelspeed_354*>(
      ::apollo::canbus::Aeb_rearwheelspeed_354::internal_default_instance());
  ::apollo::canbus::_Neolix_edu_default_instance_._instance.get_mutable()->aeb_frontwheelspeed_353_ = const_cast< ::apollo::canbus::Aeb_frontwheelspeed_353*>(
      ::apollo::canbus::Aeb_frontwheelspeed_353::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Neolix_edu::kAebSystemstate11FieldNumber;
const int Neolix_edu::kVcuVehicleFaultResponse201FieldNumber;
const int Neolix_edu::kVcuPowerstatus214FieldNumber;
const int Neolix_edu::kAdsLightHornCommand310FieldNumber;
const int Neolix_edu::kAdsBrakeCommand46FieldNumber;
const int Neolix_edu::kVcuBrakeReport47FieldNumber;
const int Neolix_edu::kVcuEpsReport57FieldNumber;
const int Neolix_edu::kAdsEpsCommand56FieldNumber;
const int Neolix_edu::kAdsDriveCommand50FieldNumber;
const int Neolix_edu::kVcuDriveReport52FieldNumber;
const int Neolix_edu::kAdsDiagnosis628FieldNumber;
const int Neolix_edu::kVcuNm401FieldNumber;
const int Neolix_edu::kVcuVehicleStatusReport101FieldNumber;
const int Neolix_edu::kVcuVehicleInfoResponse502FieldNumber;
const int Neolix_edu::kAebDiagnosis1626FieldNumber;
const int Neolix_edu::kAebDiagresp718FieldNumber;
const int Neolix_edu::kPas1StData311FieldNumber;
const int Neolix_edu::kPas2NdData312FieldNumber;
const int Neolix_edu::kAebWheelimpulse355FieldNumber;
const int Neolix_edu::kAebRearwheelspeed354FieldNumber;
const int Neolix_edu::kAebFrontwheelspeed353FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Neolix_edu::Neolix_edu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Neolix_edu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Neolix_edu)
}
Neolix_edu::Neolix_edu(const Neolix_edu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_aeb_systemstate_11()) {
    aeb_systemstate_11_ = new ::apollo::canbus::Aeb_systemstate_11(*from.aeb_systemstate_11_);
  } else {
    aeb_systemstate_11_ = NULL;
  }
  if (from.has_vcu_vehicle_fault_response_201()) {
    vcu_vehicle_fault_response_201_ = new ::apollo::canbus::Vcu_vehicle_fault_response_201(*from.vcu_vehicle_fault_response_201_);
  } else {
    vcu_vehicle_fault_response_201_ = NULL;
  }
  if (from.has_vcu_powerstatus_214()) {
    vcu_powerstatus_214_ = new ::apollo::canbus::Vcu_powerstatus_214(*from.vcu_powerstatus_214_);
  } else {
    vcu_powerstatus_214_ = NULL;
  }
  if (from.has_ads_light_horn_command_310()) {
    ads_light_horn_command_310_ = new ::apollo::canbus::Ads_light_horn_command_310(*from.ads_light_horn_command_310_);
  } else {
    ads_light_horn_command_310_ = NULL;
  }
  if (from.has_ads_brake_command_46()) {
    ads_brake_command_46_ = new ::apollo::canbus::Ads_brake_command_46(*from.ads_brake_command_46_);
  } else {
    ads_brake_command_46_ = NULL;
  }
  if (from.has_vcu_brake_report_47()) {
    vcu_brake_report_47_ = new ::apollo::canbus::Vcu_brake_report_47(*from.vcu_brake_report_47_);
  } else {
    vcu_brake_report_47_ = NULL;
  }
  if (from.has_vcu_eps_report_57()) {
    vcu_eps_report_57_ = new ::apollo::canbus::Vcu_eps_report_57(*from.vcu_eps_report_57_);
  } else {
    vcu_eps_report_57_ = NULL;
  }
  if (from.has_ads_eps_command_56()) {
    ads_eps_command_56_ = new ::apollo::canbus::Ads_eps_command_56(*from.ads_eps_command_56_);
  } else {
    ads_eps_command_56_ = NULL;
  }
  if (from.has_ads_drive_command_50()) {
    ads_drive_command_50_ = new ::apollo::canbus::Ads_drive_command_50(*from.ads_drive_command_50_);
  } else {
    ads_drive_command_50_ = NULL;
  }
  if (from.has_vcu_drive_report_52()) {
    vcu_drive_report_52_ = new ::apollo::canbus::Vcu_drive_report_52(*from.vcu_drive_report_52_);
  } else {
    vcu_drive_report_52_ = NULL;
  }
  if (from.has_ads_diagnosis_628()) {
    ads_diagnosis_628_ = new ::apollo::canbus::Ads_diagnosis_628(*from.ads_diagnosis_628_);
  } else {
    ads_diagnosis_628_ = NULL;
  }
  if (from.has_vcu_nm_401()) {
    vcu_nm_401_ = new ::apollo::canbus::Vcu_nm_401(*from.vcu_nm_401_);
  } else {
    vcu_nm_401_ = NULL;
  }
  if (from.has_vcu_vehicle_status_report_101()) {
    vcu_vehicle_status_report_101_ = new ::apollo::canbus::Vcu_vehicle_status_report_101(*from.vcu_vehicle_status_report_101_);
  } else {
    vcu_vehicle_status_report_101_ = NULL;
  }
  if (from.has_vcu_vehicle_info_response_502()) {
    vcu_vehicle_info_response_502_ = new ::apollo::canbus::Vcu_vehicle_info_response_502(*from.vcu_vehicle_info_response_502_);
  } else {
    vcu_vehicle_info_response_502_ = NULL;
  }
  if (from.has_aeb_diagnosis1_626()) {
    aeb_diagnosis1_626_ = new ::apollo::canbus::Aeb_diagnosis1_626(*from.aeb_diagnosis1_626_);
  } else {
    aeb_diagnosis1_626_ = NULL;
  }
  if (from.has_aeb_diagresp_718()) {
    aeb_diagresp_718_ = new ::apollo::canbus::Aeb_diagresp_718(*from.aeb_diagresp_718_);
  } else {
    aeb_diagresp_718_ = NULL;
  }
  if (from.has_pas_1st_data_311()) {
    pas_1st_data_311_ = new ::apollo::canbus::Pas_1st_data_311(*from.pas_1st_data_311_);
  } else {
    pas_1st_data_311_ = NULL;
  }
  if (from.has_pas_2nd_data_312()) {
    pas_2nd_data_312_ = new ::apollo::canbus::Pas_2nd_data_312(*from.pas_2nd_data_312_);
  } else {
    pas_2nd_data_312_ = NULL;
  }
  if (from.has_aeb_wheelimpulse_355()) {
    aeb_wheelimpulse_355_ = new ::apollo::canbus::Aeb_wheelimpulse_355(*from.aeb_wheelimpulse_355_);
  } else {
    aeb_wheelimpulse_355_ = NULL;
  }
  if (from.has_aeb_rearwheelspeed_354()) {
    aeb_rearwheelspeed_354_ = new ::apollo::canbus::Aeb_rearwheelspeed_354(*from.aeb_rearwheelspeed_354_);
  } else {
    aeb_rearwheelspeed_354_ = NULL;
  }
  if (from.has_aeb_frontwheelspeed_353()) {
    aeb_frontwheelspeed_353_ = new ::apollo::canbus::Aeb_frontwheelspeed_353(*from.aeb_frontwheelspeed_353_);
  } else {
    aeb_frontwheelspeed_353_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Neolix_edu)
}

void Neolix_edu::SharedCtor() {
  ::memset(&aeb_systemstate_11_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aeb_frontwheelspeed_353_) -
      reinterpret_cast<char*>(&aeb_systemstate_11_)) + sizeof(aeb_frontwheelspeed_353_));
}

Neolix_edu::~Neolix_edu() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Neolix_edu)
  SharedDtor();
}

void Neolix_edu::SharedDtor() {
  if (this != internal_default_instance()) delete aeb_systemstate_11_;
  if (this != internal_default_instance()) delete vcu_vehicle_fault_response_201_;
  if (this != internal_default_instance()) delete vcu_powerstatus_214_;
  if (this != internal_default_instance()) delete ads_light_horn_command_310_;
  if (this != internal_default_instance()) delete ads_brake_command_46_;
  if (this != internal_default_instance()) delete vcu_brake_report_47_;
  if (this != internal_default_instance()) delete vcu_eps_report_57_;
  if (this != internal_default_instance()) delete ads_eps_command_56_;
  if (this != internal_default_instance()) delete ads_drive_command_50_;
  if (this != internal_default_instance()) delete vcu_drive_report_52_;
  if (this != internal_default_instance()) delete ads_diagnosis_628_;
  if (this != internal_default_instance()) delete vcu_nm_401_;
  if (this != internal_default_instance()) delete vcu_vehicle_status_report_101_;
  if (this != internal_default_instance()) delete vcu_vehicle_info_response_502_;
  if (this != internal_default_instance()) delete aeb_diagnosis1_626_;
  if (this != internal_default_instance()) delete aeb_diagresp_718_;
  if (this != internal_default_instance()) delete pas_1st_data_311_;
  if (this != internal_default_instance()) delete pas_2nd_data_312_;
  if (this != internal_default_instance()) delete aeb_wheelimpulse_355_;
  if (this != internal_default_instance()) delete aeb_rearwheelspeed_354_;
  if (this != internal_default_instance()) delete aeb_frontwheelspeed_353_;
}

void Neolix_edu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Neolix_edu::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Neolix_edu& Neolix_edu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::scc_info_Neolix_edu.base);
  return *internal_default_instance();
}


void Neolix_edu::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Neolix_edu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(aeb_systemstate_11_ != NULL);
      aeb_systemstate_11_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(vcu_vehicle_fault_response_201_ != NULL);
      vcu_vehicle_fault_response_201_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(vcu_powerstatus_214_ != NULL);
      vcu_powerstatus_214_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(ads_light_horn_command_310_ != NULL);
      ads_light_horn_command_310_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(ads_brake_command_46_ != NULL);
      ads_brake_command_46_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(vcu_brake_report_47_ != NULL);
      vcu_brake_report_47_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(vcu_eps_report_57_ != NULL);
      vcu_eps_report_57_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(ads_eps_command_56_ != NULL);
      ads_eps_command_56_->Clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(ads_drive_command_50_ != NULL);
      ads_drive_command_50_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(vcu_drive_report_52_ != NULL);
      vcu_drive_report_52_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(ads_diagnosis_628_ != NULL);
      ads_diagnosis_628_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(vcu_nm_401_ != NULL);
      vcu_nm_401_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(vcu_vehicle_status_report_101_ != NULL);
      vcu_vehicle_status_report_101_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(vcu_vehicle_info_response_502_ != NULL);
      vcu_vehicle_info_response_502_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(aeb_diagnosis1_626_ != NULL);
      aeb_diagnosis1_626_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(aeb_diagresp_718_ != NULL);
      aeb_diagresp_718_->Clear();
    }
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(pas_1st_data_311_ != NULL);
      pas_1st_data_311_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(pas_2nd_data_312_ != NULL);
      pas_2nd_data_312_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(aeb_wheelimpulse_355_ != NULL);
      aeb_wheelimpulse_355_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(aeb_rearwheelspeed_354_ != NULL);
      aeb_rearwheelspeed_354_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(aeb_frontwheelspeed_353_ != NULL);
      aeb_frontwheelspeed_353_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Neolix_edu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Neolix_edu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Aeb_systemstate_11 aeb_systemstate_11 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aeb_systemstate_11()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_vehicle_fault_response_201 vcu_vehicle_fault_response_201 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_vehicle_fault_response_201()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_powerstatus_214 vcu_powerstatus_214 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_powerstatus_214()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ads_light_horn_command_310 ads_light_horn_command_310 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ads_light_horn_command_310()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ads_brake_command_46 ads_brake_command_46 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ads_brake_command_46()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_brake_report_47 vcu_brake_report_47 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_brake_report_47()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_eps_report_57 vcu_eps_report_57 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_eps_report_57()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ads_eps_command_56 ads_eps_command_56 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ads_eps_command_56()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ads_drive_command_50 ads_drive_command_50 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ads_drive_command_50()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_drive_report_52 vcu_drive_report_52 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_drive_report_52()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ads_diagnosis_628 ads_diagnosis_628 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ads_diagnosis_628()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_nm_401 vcu_nm_401 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_nm_401()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_vehicle_status_report_101 vcu_vehicle_status_report_101 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_vehicle_status_report_101()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Vcu_vehicle_info_response_502 vcu_vehicle_info_response_502 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vcu_vehicle_info_response_502()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Aeb_diagnosis1_626 aeb_diagnosis1_626 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aeb_diagnosis1_626()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Aeb_diagresp_718 aeb_diagresp_718 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aeb_diagresp_718()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Pas_1st_data_311 pas_1st_data_311 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pas_1st_data_311()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Pas_2nd_data_312 pas_2nd_data_312 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pas_2nd_data_312()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Aeb_wheelimpulse_355 aeb_wheelimpulse_355 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aeb_wheelimpulse_355()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Aeb_rearwheelspeed_354 aeb_rearwheelspeed_354 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aeb_rearwheelspeed_354()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Aeb_frontwheelspeed_353 aeb_frontwheelspeed_353 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aeb_frontwheelspeed_353()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Neolix_edu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Neolix_edu)
  return false;
#undef DO_
}

void Neolix_edu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Neolix_edu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Aeb_systemstate_11 aeb_systemstate_11 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_aeb_systemstate_11(), output);
  }

  // optional .apollo.canbus.Vcu_vehicle_fault_response_201 vcu_vehicle_fault_response_201 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_vcu_vehicle_fault_response_201(), output);
  }

  // optional .apollo.canbus.Vcu_powerstatus_214 vcu_powerstatus_214 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_vcu_powerstatus_214(), output);
  }

  // optional .apollo.canbus.Ads_light_horn_command_310 ads_light_horn_command_310 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ads_light_horn_command_310(), output);
  }

  // optional .apollo.canbus.Ads_brake_command_46 ads_brake_command_46 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ads_brake_command_46(), output);
  }

  // optional .apollo.canbus.Vcu_brake_report_47 vcu_brake_report_47 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_vcu_brake_report_47(), output);
  }

  // optional .apollo.canbus.Vcu_eps_report_57 vcu_eps_report_57 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_vcu_eps_report_57(), output);
  }

  // optional .apollo.canbus.Ads_eps_command_56 ads_eps_command_56 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_ads_eps_command_56(), output);
  }

  // optional .apollo.canbus.Ads_drive_command_50 ads_drive_command_50 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_ads_drive_command_50(), output);
  }

  // optional .apollo.canbus.Vcu_drive_report_52 vcu_drive_report_52 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_vcu_drive_report_52(), output);
  }

  // optional .apollo.canbus.Ads_diagnosis_628 ads_diagnosis_628 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_ads_diagnosis_628(), output);
  }

  // optional .apollo.canbus.Vcu_nm_401 vcu_nm_401 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_vcu_nm_401(), output);
  }

  // optional .apollo.canbus.Vcu_vehicle_status_report_101 vcu_vehicle_status_report_101 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_vcu_vehicle_status_report_101(), output);
  }

  // optional .apollo.canbus.Vcu_vehicle_info_response_502 vcu_vehicle_info_response_502 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_vcu_vehicle_info_response_502(), output);
  }

  // optional .apollo.canbus.Aeb_diagnosis1_626 aeb_diagnosis1_626 = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_aeb_diagnosis1_626(), output);
  }

  // optional .apollo.canbus.Aeb_diagresp_718 aeb_diagresp_718 = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_aeb_diagresp_718(), output);
  }

  // optional .apollo.canbus.Pas_1st_data_311 pas_1st_data_311 = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_pas_1st_data_311(), output);
  }

  // optional .apollo.canbus.Pas_2nd_data_312 pas_2nd_data_312 = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_pas_2nd_data_312(), output);
  }

  // optional .apollo.canbus.Aeb_wheelimpulse_355 aeb_wheelimpulse_355 = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_aeb_wheelimpulse_355(), output);
  }

  // optional .apollo.canbus.Aeb_rearwheelspeed_354 aeb_rearwheelspeed_354 = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_aeb_rearwheelspeed_354(), output);
  }

  // optional .apollo.canbus.Aeb_frontwheelspeed_353 aeb_frontwheelspeed_353 = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_aeb_frontwheelspeed_353(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Neolix_edu)
}

::google::protobuf::uint8* Neolix_edu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Neolix_edu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Aeb_systemstate_11 aeb_systemstate_11 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_aeb_systemstate_11(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_vehicle_fault_response_201 vcu_vehicle_fault_response_201 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_vcu_vehicle_fault_response_201(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_powerstatus_214 vcu_powerstatus_214 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_vcu_powerstatus_214(), deterministic, target);
  }

  // optional .apollo.canbus.Ads_light_horn_command_310 ads_light_horn_command_310 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ads_light_horn_command_310(), deterministic, target);
  }

  // optional .apollo.canbus.Ads_brake_command_46 ads_brake_command_46 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ads_brake_command_46(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_brake_report_47 vcu_brake_report_47 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_vcu_brake_report_47(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_eps_report_57 vcu_eps_report_57 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_vcu_eps_report_57(), deterministic, target);
  }

  // optional .apollo.canbus.Ads_eps_command_56 ads_eps_command_56 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_ads_eps_command_56(), deterministic, target);
  }

  // optional .apollo.canbus.Ads_drive_command_50 ads_drive_command_50 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_ads_drive_command_50(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_drive_report_52 vcu_drive_report_52 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_vcu_drive_report_52(), deterministic, target);
  }

  // optional .apollo.canbus.Ads_diagnosis_628 ads_diagnosis_628 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_ads_diagnosis_628(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_nm_401 vcu_nm_401 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_vcu_nm_401(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_vehicle_status_report_101 vcu_vehicle_status_report_101 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_vcu_vehicle_status_report_101(), deterministic, target);
  }

  // optional .apollo.canbus.Vcu_vehicle_info_response_502 vcu_vehicle_info_response_502 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_vcu_vehicle_info_response_502(), deterministic, target);
  }

  // optional .apollo.canbus.Aeb_diagnosis1_626 aeb_diagnosis1_626 = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_aeb_diagnosis1_626(), deterministic, target);
  }

  // optional .apollo.canbus.Aeb_diagresp_718 aeb_diagresp_718 = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_aeb_diagresp_718(), deterministic, target);
  }

  // optional .apollo.canbus.Pas_1st_data_311 pas_1st_data_311 = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_pas_1st_data_311(), deterministic, target);
  }

  // optional .apollo.canbus.Pas_2nd_data_312 pas_2nd_data_312 = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_pas_2nd_data_312(), deterministic, target);
  }

  // optional .apollo.canbus.Aeb_wheelimpulse_355 aeb_wheelimpulse_355 = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_aeb_wheelimpulse_355(), deterministic, target);
  }

  // optional .apollo.canbus.Aeb_rearwheelspeed_354 aeb_rearwheelspeed_354 = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_aeb_rearwheelspeed_354(), deterministic, target);
  }

  // optional .apollo.canbus.Aeb_frontwheelspeed_353 aeb_frontwheelspeed_353 = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_aeb_frontwheelspeed_353(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Neolix_edu)
  return target;
}

size_t Neolix_edu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Neolix_edu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Aeb_systemstate_11 aeb_systemstate_11 = 1;
    if (has_aeb_systemstate_11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aeb_systemstate_11_);
    }

    // optional .apollo.canbus.Vcu_vehicle_fault_response_201 vcu_vehicle_fault_response_201 = 2;
    if (has_vcu_vehicle_fault_response_201()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_vehicle_fault_response_201_);
    }

    // optional .apollo.canbus.Vcu_powerstatus_214 vcu_powerstatus_214 = 3;
    if (has_vcu_powerstatus_214()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_powerstatus_214_);
    }

    // optional .apollo.canbus.Ads_light_horn_command_310 ads_light_horn_command_310 = 4;
    if (has_ads_light_horn_command_310()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ads_light_horn_command_310_);
    }

    // optional .apollo.canbus.Ads_brake_command_46 ads_brake_command_46 = 5;
    if (has_ads_brake_command_46()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ads_brake_command_46_);
    }

    // optional .apollo.canbus.Vcu_brake_report_47 vcu_brake_report_47 = 6;
    if (has_vcu_brake_report_47()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_brake_report_47_);
    }

    // optional .apollo.canbus.Vcu_eps_report_57 vcu_eps_report_57 = 7;
    if (has_vcu_eps_report_57()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_eps_report_57_);
    }

    // optional .apollo.canbus.Ads_eps_command_56 ads_eps_command_56 = 8;
    if (has_ads_eps_command_56()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ads_eps_command_56_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .apollo.canbus.Ads_drive_command_50 ads_drive_command_50 = 9;
    if (has_ads_drive_command_50()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ads_drive_command_50_);
    }

    // optional .apollo.canbus.Vcu_drive_report_52 vcu_drive_report_52 = 10;
    if (has_vcu_drive_report_52()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_drive_report_52_);
    }

    // optional .apollo.canbus.Ads_diagnosis_628 ads_diagnosis_628 = 11;
    if (has_ads_diagnosis_628()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ads_diagnosis_628_);
    }

    // optional .apollo.canbus.Vcu_nm_401 vcu_nm_401 = 12;
    if (has_vcu_nm_401()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_nm_401_);
    }

    // optional .apollo.canbus.Vcu_vehicle_status_report_101 vcu_vehicle_status_report_101 = 13;
    if (has_vcu_vehicle_status_report_101()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_vehicle_status_report_101_);
    }

    // optional .apollo.canbus.Vcu_vehicle_info_response_502 vcu_vehicle_info_response_502 = 14;
    if (has_vcu_vehicle_info_response_502()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vcu_vehicle_info_response_502_);
    }

    // optional .apollo.canbus.Aeb_diagnosis1_626 aeb_diagnosis1_626 = 15;
    if (has_aeb_diagnosis1_626()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aeb_diagnosis1_626_);
    }

    // optional .apollo.canbus.Aeb_diagresp_718 aeb_diagresp_718 = 16;
    if (has_aeb_diagresp_718()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aeb_diagresp_718_);
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional .apollo.canbus.Pas_1st_data_311 pas_1st_data_311 = 17;
    if (has_pas_1st_data_311()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pas_1st_data_311_);
    }

    // optional .apollo.canbus.Pas_2nd_data_312 pas_2nd_data_312 = 18;
    if (has_pas_2nd_data_312()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pas_2nd_data_312_);
    }

    // optional .apollo.canbus.Aeb_wheelimpulse_355 aeb_wheelimpulse_355 = 19;
    if (has_aeb_wheelimpulse_355()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aeb_wheelimpulse_355_);
    }

    // optional .apollo.canbus.Aeb_rearwheelspeed_354 aeb_rearwheelspeed_354 = 20;
    if (has_aeb_rearwheelspeed_354()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aeb_rearwheelspeed_354_);
    }

    // optional .apollo.canbus.Aeb_frontwheelspeed_353 aeb_frontwheelspeed_353 = 21;
    if (has_aeb_frontwheelspeed_353()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aeb_frontwheelspeed_353_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Neolix_edu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Neolix_edu)
  GOOGLE_DCHECK_NE(&from, this);
  const Neolix_edu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Neolix_edu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Neolix_edu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Neolix_edu)
    MergeFrom(*source);
  }
}

void Neolix_edu::MergeFrom(const Neolix_edu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Neolix_edu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_aeb_systemstate_11()->::apollo::canbus::Aeb_systemstate_11::MergeFrom(from.aeb_systemstate_11());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_vcu_vehicle_fault_response_201()->::apollo::canbus::Vcu_vehicle_fault_response_201::MergeFrom(from.vcu_vehicle_fault_response_201());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_vcu_powerstatus_214()->::apollo::canbus::Vcu_powerstatus_214::MergeFrom(from.vcu_powerstatus_214());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_ads_light_horn_command_310()->::apollo::canbus::Ads_light_horn_command_310::MergeFrom(from.ads_light_horn_command_310());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_ads_brake_command_46()->::apollo::canbus::Ads_brake_command_46::MergeFrom(from.ads_brake_command_46());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_vcu_brake_report_47()->::apollo::canbus::Vcu_brake_report_47::MergeFrom(from.vcu_brake_report_47());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_vcu_eps_report_57()->::apollo::canbus::Vcu_eps_report_57::MergeFrom(from.vcu_eps_report_57());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_ads_eps_command_56()->::apollo::canbus::Ads_eps_command_56::MergeFrom(from.ads_eps_command_56());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_ads_drive_command_50()->::apollo::canbus::Ads_drive_command_50::MergeFrom(from.ads_drive_command_50());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_vcu_drive_report_52()->::apollo::canbus::Vcu_drive_report_52::MergeFrom(from.vcu_drive_report_52());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_ads_diagnosis_628()->::apollo::canbus::Ads_diagnosis_628::MergeFrom(from.ads_diagnosis_628());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_vcu_nm_401()->::apollo::canbus::Vcu_nm_401::MergeFrom(from.vcu_nm_401());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_vcu_vehicle_status_report_101()->::apollo::canbus::Vcu_vehicle_status_report_101::MergeFrom(from.vcu_vehicle_status_report_101());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_vcu_vehicle_info_response_502()->::apollo::canbus::Vcu_vehicle_info_response_502::MergeFrom(from.vcu_vehicle_info_response_502());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_aeb_diagnosis1_626()->::apollo::canbus::Aeb_diagnosis1_626::MergeFrom(from.aeb_diagnosis1_626());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_aeb_diagresp_718()->::apollo::canbus::Aeb_diagresp_718::MergeFrom(from.aeb_diagresp_718());
    }
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_pas_1st_data_311()->::apollo::canbus::Pas_1st_data_311::MergeFrom(from.pas_1st_data_311());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_pas_2nd_data_312()->::apollo::canbus::Pas_2nd_data_312::MergeFrom(from.pas_2nd_data_312());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_aeb_wheelimpulse_355()->::apollo::canbus::Aeb_wheelimpulse_355::MergeFrom(from.aeb_wheelimpulse_355());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_aeb_rearwheelspeed_354()->::apollo::canbus::Aeb_rearwheelspeed_354::MergeFrom(from.aeb_rearwheelspeed_354());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_aeb_frontwheelspeed_353()->::apollo::canbus::Aeb_frontwheelspeed_353::MergeFrom(from.aeb_frontwheelspeed_353());
    }
  }
}

void Neolix_edu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Neolix_edu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Neolix_edu::CopyFrom(const Neolix_edu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Neolix_edu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Neolix_edu::IsInitialized() const {
  return true;
}

void Neolix_edu::Swap(Neolix_edu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Neolix_edu::InternalSwap(Neolix_edu* other) {
  using std::swap;
  swap(aeb_systemstate_11_, other->aeb_systemstate_11_);
  swap(vcu_vehicle_fault_response_201_, other->vcu_vehicle_fault_response_201_);
  swap(vcu_powerstatus_214_, other->vcu_powerstatus_214_);
  swap(ads_light_horn_command_310_, other->ads_light_horn_command_310_);
  swap(ads_brake_command_46_, other->ads_brake_command_46_);
  swap(vcu_brake_report_47_, other->vcu_brake_report_47_);
  swap(vcu_eps_report_57_, other->vcu_eps_report_57_);
  swap(ads_eps_command_56_, other->ads_eps_command_56_);
  swap(ads_drive_command_50_, other->ads_drive_command_50_);
  swap(vcu_drive_report_52_, other->vcu_drive_report_52_);
  swap(ads_diagnosis_628_, other->ads_diagnosis_628_);
  swap(vcu_nm_401_, other->vcu_nm_401_);
  swap(vcu_vehicle_status_report_101_, other->vcu_vehicle_status_report_101_);
  swap(vcu_vehicle_info_response_502_, other->vcu_vehicle_info_response_502_);
  swap(aeb_diagnosis1_626_, other->aeb_diagnosis1_626_);
  swap(aeb_diagresp_718_, other->aeb_diagresp_718_);
  swap(pas_1st_data_311_, other->pas_1st_data_311_);
  swap(pas_2nd_data_312_, other->pas_2nd_data_312_);
  swap(aeb_wheelimpulse_355_, other->aeb_wheelimpulse_355_);
  swap(aeb_rearwheelspeed_354_, other->aeb_rearwheelspeed_354_);
  swap(aeb_frontwheelspeed_353_, other->aeb_frontwheelspeed_353_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Neolix_edu::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fneolix_5fedu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Aeb_systemstate_11* Arena::CreateMaybeMessage< ::apollo::canbus::Aeb_systemstate_11 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Aeb_systemstate_11 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_vehicle_fault_response_201* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_vehicle_fault_response_201 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_vehicle_fault_response_201 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_powerstatus_214* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_powerstatus_214 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_powerstatus_214 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ads_light_horn_command_310* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_light_horn_command_310 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_light_horn_command_310 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ads_brake_command_46* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_brake_command_46 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_brake_command_46 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_brake_report_47* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_brake_report_47 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_brake_report_47 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_eps_report_57* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_eps_report_57 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_eps_report_57 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ads_eps_command_56* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_eps_command_56 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_eps_command_56 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ads_drive_command_50* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_drive_command_50 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_drive_command_50 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_drive_report_52* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_drive_report_52 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_drive_report_52 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ads_diagnosis_628* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_diagnosis_628 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_diagnosis_628 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_nm_401* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_nm_401 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_nm_401 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_vehicle_status_report_101* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_vehicle_status_report_101 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_vehicle_status_report_101 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Vcu_vehicle_info_response_502* Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_vehicle_info_response_502 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vcu_vehicle_info_response_502 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Aeb_diagnosis1_626* Arena::CreateMaybeMessage< ::apollo::canbus::Aeb_diagnosis1_626 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Aeb_diagnosis1_626 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Aeb_diagresp_718* Arena::CreateMaybeMessage< ::apollo::canbus::Aeb_diagresp_718 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Aeb_diagresp_718 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Pas_1st_data_311* Arena::CreateMaybeMessage< ::apollo::canbus::Pas_1st_data_311 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Pas_1st_data_311 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Pas_2nd_data_312* Arena::CreateMaybeMessage< ::apollo::canbus::Pas_2nd_data_312 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Pas_2nd_data_312 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Aeb_wheelimpulse_355* Arena::CreateMaybeMessage< ::apollo::canbus::Aeb_wheelimpulse_355 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Aeb_wheelimpulse_355 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Aeb_rearwheelspeed_354* Arena::CreateMaybeMessage< ::apollo::canbus::Aeb_rearwheelspeed_354 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Aeb_rearwheelspeed_354 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Aeb_frontwheelspeed_353* Arena::CreateMaybeMessage< ::apollo::canbus::Aeb_frontwheelspeed_353 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Aeb_frontwheelspeed_353 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Neolix_edu* Arena::CreateMaybeMessage< ::apollo::canbus::Neolix_edu >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Neolix_edu >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

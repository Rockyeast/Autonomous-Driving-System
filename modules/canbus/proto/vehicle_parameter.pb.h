// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/vehicle_parameter.proto

#ifndef PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto
#define PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/canbus/proto/chassis.pb.h"
#include "modules/common/configs/proto/vehicle_config.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto 

namespace protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto
namespace apollo {
namespace canbus {
class VehicleParameter;
class VehicleParameterDefaultTypeInternal;
extern VehicleParameterDefaultTypeInternal _VehicleParameter_default_instance_;
}  // namespace canbus
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::canbus::VehicleParameter* Arena::CreateMaybeMessage<::apollo::canbus::VehicleParameter>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace canbus {

// ===================================================================

class VehicleParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.VehicleParameter) */ {
 public:
  VehicleParameter();
  virtual ~VehicleParameter();

  VehicleParameter(const VehicleParameter& from);

  inline VehicleParameter& operator=(const VehicleParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleParameter(VehicleParameter&& from) noexcept
    : VehicleParameter() {
    *this = ::std::move(from);
  }

  inline VehicleParameter& operator=(VehicleParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleParameter* internal_default_instance() {
    return reinterpret_cast<const VehicleParameter*>(
               &_VehicleParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VehicleParameter* other);
  friend void swap(VehicleParameter& a, VehicleParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleParameter* New() const final {
    return CreateMaybeMessage<VehicleParameter>(NULL);
  }

  VehicleParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleParameter& from);
  void MergeFrom(const VehicleParameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double max_engine_pedal = 2;
  bool has_max_engine_pedal() const;
  void clear_max_engine_pedal();
  static const int kMaxEnginePedalFieldNumber = 2;
  double max_engine_pedal() const;
  void set_max_engine_pedal(double value);

  // optional .apollo.common.VehicleBrand brand = 1;
  bool has_brand() const;
  void clear_brand();
  static const int kBrandFieldNumber = 1;
  ::apollo::common::VehicleBrand brand() const;
  void set_brand(::apollo::common::VehicleBrand value);

  // optional int32 max_enable_fail_attempt = 3;
  bool has_max_enable_fail_attempt() const;
  void clear_max_enable_fail_attempt();
  static const int kMaxEnableFailAttemptFieldNumber = 3;
  ::google::protobuf::int32 max_enable_fail_attempt() const;
  void set_max_enable_fail_attempt(::google::protobuf::int32 value);

  // optional .apollo.canbus.Chassis.DrivingMode driving_mode = 4;
  bool has_driving_mode() const;
  void clear_driving_mode();
  static const int kDrivingModeFieldNumber = 4;
  ::apollo::canbus::Chassis_DrivingMode driving_mode() const;
  void set_driving_mode(::apollo::canbus::Chassis_DrivingMode value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.VehicleParameter)
 private:
  void set_has_brand();
  void clear_has_brand();
  void set_has_max_engine_pedal();
  void clear_has_max_engine_pedal();
  void set_has_max_enable_fail_attempt();
  void clear_has_max_enable_fail_attempt();
  void set_has_driving_mode();
  void clear_has_driving_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double max_engine_pedal_;
  int brand_;
  ::google::protobuf::int32 max_enable_fail_attempt_;
  int driving_mode_;
  friend struct ::protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleParameter

// optional .apollo.common.VehicleBrand brand = 1;
inline bool VehicleParameter::has_brand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VehicleParameter::set_has_brand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VehicleParameter::clear_has_brand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VehicleParameter::clear_brand() {
  brand_ = 0;
  clear_has_brand();
}
inline ::apollo::common::VehicleBrand VehicleParameter::brand() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.VehicleParameter.brand)
  return static_cast< ::apollo::common::VehicleBrand >(brand_);
}
inline void VehicleParameter::set_brand(::apollo::common::VehicleBrand value) {
  assert(::apollo::common::VehicleBrand_IsValid(value));
  set_has_brand();
  brand_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.VehicleParameter.brand)
}

// optional double max_engine_pedal = 2;
inline bool VehicleParameter::has_max_engine_pedal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VehicleParameter::set_has_max_engine_pedal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VehicleParameter::clear_has_max_engine_pedal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VehicleParameter::clear_max_engine_pedal() {
  max_engine_pedal_ = 0;
  clear_has_max_engine_pedal();
}
inline double VehicleParameter::max_engine_pedal() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.VehicleParameter.max_engine_pedal)
  return max_engine_pedal_;
}
inline void VehicleParameter::set_max_engine_pedal(double value) {
  set_has_max_engine_pedal();
  max_engine_pedal_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.VehicleParameter.max_engine_pedal)
}

// optional int32 max_enable_fail_attempt = 3;
inline bool VehicleParameter::has_max_enable_fail_attempt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VehicleParameter::set_has_max_enable_fail_attempt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VehicleParameter::clear_has_max_enable_fail_attempt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VehicleParameter::clear_max_enable_fail_attempt() {
  max_enable_fail_attempt_ = 0;
  clear_has_max_enable_fail_attempt();
}
inline ::google::protobuf::int32 VehicleParameter::max_enable_fail_attempt() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.VehicleParameter.max_enable_fail_attempt)
  return max_enable_fail_attempt_;
}
inline void VehicleParameter::set_max_enable_fail_attempt(::google::protobuf::int32 value) {
  set_has_max_enable_fail_attempt();
  max_enable_fail_attempt_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.VehicleParameter.max_enable_fail_attempt)
}

// optional .apollo.canbus.Chassis.DrivingMode driving_mode = 4;
inline bool VehicleParameter::has_driving_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VehicleParameter::set_has_driving_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VehicleParameter::clear_has_driving_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VehicleParameter::clear_driving_mode() {
  driving_mode_ = 0;
  clear_has_driving_mode();
}
inline ::apollo::canbus::Chassis_DrivingMode VehicleParameter::driving_mode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.VehicleParameter.driving_mode)
  return static_cast< ::apollo::canbus::Chassis_DrivingMode >(driving_mode_);
}
inline void VehicleParameter::set_driving_mode(::apollo::canbus::Chassis_DrivingMode value) {
  assert(::apollo::canbus::Chassis_DrivingMode_IsValid(value));
  set_has_driving_mode();
  driving_mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.VehicleParameter.driving_mode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto

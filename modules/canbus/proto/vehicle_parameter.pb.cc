// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/vehicle_parameter.proto

#include "modules/canbus/proto/vehicle_parameter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace apollo {
namespace canbus {
class VehicleParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleParameter>
      _instance;
} _VehicleParameter_default_instance_;
}  // namespace canbus
}  // namespace apollo
namespace protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto {
static void InitDefaultsVehicleParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_VehicleParameter_default_instance_;
    new (ptr) ::apollo::canbus::VehicleParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::VehicleParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleParameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleParameter}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleParameter.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::VehicleParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::VehicleParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::VehicleParameter, brand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::VehicleParameter, max_engine_pedal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::VehicleParameter, max_enable_fail_attempt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::VehicleParameter, driving_mode_),
  1,
  0,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::canbus::VehicleParameter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_VehicleParameter_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/canbus/proto/vehicle_parameter.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,modules/canbus/proto/vehicle_parameter"
      ".proto\022\rapollo.canbus\032\"modules/canbus/pr"
      "oto/chassis.proto\0321modules/common/config"
      "s/proto/vehicle_config.proto\"\263\001\n\020Vehicle"
      "Parameter\022*\n\005brand\030\001 \001(\0162\033.apollo.common"
      ".VehicleBrand\022\030\n\020max_engine_pedal\030\002 \001(\001\022"
      "\037\n\027max_enable_fail_attempt\030\003 \001(\005\0228\n\014driv"
      "ing_mode\030\004 \001(\0162\".apollo.canbus.Chassis.D"
      "rivingMode"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 330);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/canbus/proto/vehicle_parameter.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcanbus_2fproto_2fchassis_2eproto::AddDescriptors();
  ::protobuf_modules_2fcommon_2fconfigs_2fproto_2fvehicle_5fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto
namespace apollo {
namespace canbus {

// ===================================================================

void VehicleParameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleParameter::kBrandFieldNumber;
const int VehicleParameter::kMaxEnginePedalFieldNumber;
const int VehicleParameter::kMaxEnableFailAttemptFieldNumber;
const int VehicleParameter::kDrivingModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleParameter::VehicleParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::scc_info_VehicleParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.VehicleParameter)
}
VehicleParameter::VehicleParameter(const VehicleParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_engine_pedal_, &from.max_engine_pedal_,
    static_cast<size_t>(reinterpret_cast<char*>(&driving_mode_) -
    reinterpret_cast<char*>(&max_engine_pedal_)) + sizeof(driving_mode_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.VehicleParameter)
}

void VehicleParameter::SharedCtor() {
  ::memset(&max_engine_pedal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&driving_mode_) -
      reinterpret_cast<char*>(&max_engine_pedal_)) + sizeof(driving_mode_));
}

VehicleParameter::~VehicleParameter() {
  // @@protoc_insertion_point(destructor:apollo.canbus.VehicleParameter)
  SharedDtor();
}

void VehicleParameter::SharedDtor() {
}

void VehicleParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleParameter::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleParameter& VehicleParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::scc_info_VehicleParameter.base);
  return *internal_default_instance();
}


void VehicleParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.VehicleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&max_engine_pedal_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&driving_mode_) -
        reinterpret_cast<char*>(&max_engine_pedal_)) + sizeof(driving_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.VehicleParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.VehicleBrand brand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::VehicleBrand_IsValid(value)) {
            set_brand(static_cast< ::apollo::common::VehicleBrand >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_engine_pedal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_max_engine_pedal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_engine_pedal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_enable_fail_attempt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_enable_fail_attempt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_enable_fail_attempt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Chassis.DrivingMode driving_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Chassis_DrivingMode_IsValid(value)) {
            set_driving_mode(static_cast< ::apollo::canbus::Chassis_DrivingMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.VehicleParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.VehicleParameter)
  return false;
#undef DO_
}

void VehicleParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.VehicleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.VehicleBrand brand = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->brand(), output);
  }

  // optional double max_engine_pedal = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->max_engine_pedal(), output);
  }

  // optional int32 max_enable_fail_attempt = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_enable_fail_attempt(), output);
  }

  // optional .apollo.canbus.Chassis.DrivingMode driving_mode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->driving_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.VehicleParameter)
}

::google::protobuf::uint8* VehicleParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.VehicleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.VehicleBrand brand = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->brand(), target);
  }

  // optional double max_engine_pedal = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->max_engine_pedal(), target);
  }

  // optional int32 max_enable_fail_attempt = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_enable_fail_attempt(), target);
  }

  // optional .apollo.canbus.Chassis.DrivingMode driving_mode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->driving_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.VehicleParameter)
  return target;
}

size_t VehicleParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.VehicleParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double max_engine_pedal = 2;
    if (has_max_engine_pedal()) {
      total_size += 1 + 8;
    }

    // optional .apollo.common.VehicleBrand brand = 1;
    if (has_brand()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brand());
    }

    // optional int32 max_enable_fail_attempt = 3;
    if (has_max_enable_fail_attempt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_enable_fail_attempt());
    }

    // optional .apollo.canbus.Chassis.DrivingMode driving_mode = 4;
    if (has_driving_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->driving_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.VehicleParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.VehicleParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.VehicleParameter)
    MergeFrom(*source);
  }
}

void VehicleParameter::MergeFrom(const VehicleParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.VehicleParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      max_engine_pedal_ = from.max_engine_pedal_;
    }
    if (cached_has_bits & 0x00000002u) {
      brand_ = from.brand_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_enable_fail_attempt_ = from.max_enable_fail_attempt_;
    }
    if (cached_has_bits & 0x00000008u) {
      driving_mode_ = from.driving_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.VehicleParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleParameter::CopyFrom(const VehicleParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.VehicleParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleParameter::IsInitialized() const {
  return true;
}

void VehicleParameter::Swap(VehicleParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleParameter::InternalSwap(VehicleParameter* other) {
  using std::swap;
  swap(max_engine_pedal_, other->max_engine_pedal_);
  swap(brand_, other->brand_);
  swap(max_enable_fail_attempt_, other->max_enable_fail_attempt_);
  swap(driving_mode_, other->driving_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleParameter::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fvehicle_5fparameter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::VehicleParameter* Arena::CreateMaybeMessage< ::apollo::canbus::VehicleParameter >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::VehicleParameter >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

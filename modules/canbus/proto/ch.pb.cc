// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/ch.proto

#include "modules/canbus/proto/ch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcanbus_2fproto_2fch_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Brake_command_111;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Brake_status__511;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Control_command_115;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ecu_status_1_515;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ecu_status_2_516;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ecu_status_3_517;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gear_command_114;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gear_status_514;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Steer_command_112;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Steer_status__512;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_command_110;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_status__510;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Turnsignal_command_113;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fch_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Turnsignal_status__513;
}  // namespace protobuf_modules_2fcanbus_2fproto_2fch_2eproto
namespace apollo {
namespace canbus {
class Throttle_command_110DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Throttle_command_110>
      _instance;
} _Throttle_command_110_default_instance_;
class Brake_command_111DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Brake_command_111>
      _instance;
} _Brake_command_111_default_instance_;
class Steer_command_112DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Steer_command_112>
      _instance;
} _Steer_command_112_default_instance_;
class Turnsignal_command_113DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Turnsignal_command_113>
      _instance;
} _Turnsignal_command_113_default_instance_;
class Gear_command_114DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gear_command_114>
      _instance;
} _Gear_command_114_default_instance_;
class Control_command_115DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Control_command_115>
      _instance;
} _Control_command_115_default_instance_;
class Throttle_status__510DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Throttle_status__510>
      _instance;
} _Throttle_status__510_default_instance_;
class Brake_status__511DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Brake_status__511>
      _instance;
} _Brake_status__511_default_instance_;
class Steer_status__512DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Steer_status__512>
      _instance;
} _Steer_status__512_default_instance_;
class Turnsignal_status__513DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Turnsignal_status__513>
      _instance;
} _Turnsignal_status__513_default_instance_;
class Gear_status_514DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gear_status_514>
      _instance;
} _Gear_status_514_default_instance_;
class Ecu_status_1_515DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ecu_status_1_515>
      _instance;
} _Ecu_status_1_515_default_instance_;
class Ecu_status_2_516DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ecu_status_2_516>
      _instance;
} _Ecu_status_2_516_default_instance_;
class Ecu_status_3_517DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ecu_status_3_517>
      _instance;
} _Ecu_status_3_517_default_instance_;
class ChDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ch>
      _instance;
} _Ch_default_instance_;
}  // namespace canbus
}  // namespace apollo
namespace protobuf_modules_2fcanbus_2fproto_2fch_2eproto {
static void InitDefaultsThrottle_command_110() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Throttle_command_110_default_instance_;
    new (ptr) ::apollo::canbus::Throttle_command_110();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Throttle_command_110::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_command_110 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThrottle_command_110}, {}};

static void InitDefaultsBrake_command_111() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Brake_command_111_default_instance_;
    new (ptr) ::apollo::canbus::Brake_command_111();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Brake_command_111::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Brake_command_111 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrake_command_111}, {}};

static void InitDefaultsSteer_command_112() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Steer_command_112_default_instance_;
    new (ptr) ::apollo::canbus::Steer_command_112();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Steer_command_112::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Steer_command_112 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSteer_command_112}, {}};

static void InitDefaultsTurnsignal_command_113() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Turnsignal_command_113_default_instance_;
    new (ptr) ::apollo::canbus::Turnsignal_command_113();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Turnsignal_command_113::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Turnsignal_command_113 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTurnsignal_command_113}, {}};

static void InitDefaultsGear_command_114() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Gear_command_114_default_instance_;
    new (ptr) ::apollo::canbus::Gear_command_114();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Gear_command_114::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gear_command_114 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGear_command_114}, {}};

static void InitDefaultsControl_command_115() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Control_command_115_default_instance_;
    new (ptr) ::apollo::canbus::Control_command_115();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Control_command_115::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Control_command_115 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControl_command_115}, {}};

static void InitDefaultsThrottle_status__510() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Throttle_status__510_default_instance_;
    new (ptr) ::apollo::canbus::Throttle_status__510();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Throttle_status__510::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_status__510 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThrottle_status__510}, {}};

static void InitDefaultsBrake_status__511() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Brake_status__511_default_instance_;
    new (ptr) ::apollo::canbus::Brake_status__511();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Brake_status__511::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Brake_status__511 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrake_status__511}, {}};

static void InitDefaultsSteer_status__512() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Steer_status__512_default_instance_;
    new (ptr) ::apollo::canbus::Steer_status__512();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Steer_status__512::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Steer_status__512 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSteer_status__512}, {}};

static void InitDefaultsTurnsignal_status__513() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Turnsignal_status__513_default_instance_;
    new (ptr) ::apollo::canbus::Turnsignal_status__513();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Turnsignal_status__513::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Turnsignal_status__513 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTurnsignal_status__513}, {}};

static void InitDefaultsGear_status_514() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Gear_status_514_default_instance_;
    new (ptr) ::apollo::canbus::Gear_status_514();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Gear_status_514::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gear_status_514 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGear_status_514}, {}};

static void InitDefaultsEcu_status_1_515() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ecu_status_1_515_default_instance_;
    new (ptr) ::apollo::canbus::Ecu_status_1_515();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ecu_status_1_515::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ecu_status_1_515 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEcu_status_1_515}, {}};

static void InitDefaultsEcu_status_2_516() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ecu_status_2_516_default_instance_;
    new (ptr) ::apollo::canbus::Ecu_status_2_516();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ecu_status_2_516::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ecu_status_2_516 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEcu_status_2_516}, {}};

static void InitDefaultsEcu_status_3_517() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ecu_status_3_517_default_instance_;
    new (ptr) ::apollo::canbus::Ecu_status_3_517();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ecu_status_3_517::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ecu_status_3_517 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEcu_status_3_517}, {}};

static void InitDefaultsCh() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ch_default_instance_;
    new (ptr) ::apollo::canbus::Ch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_Ch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsCh}, {
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Throttle_command_110.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Brake_command_111.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Steer_command_112.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Turnsignal_command_113.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Gear_command_114.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Control_command_115.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Throttle_status__510.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Brake_status__511.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Steer_status__512.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Turnsignal_status__513.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Gear_status_514.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_1_515.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_2_516.base,
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_3_517.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Throttle_command_110.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Brake_command_111.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Steer_command_112.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Turnsignal_command_113.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gear_command_114.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Control_command_115.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Throttle_status__510.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Brake_status__511.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Steer_status__512.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Turnsignal_status__513.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gear_status_514.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ecu_status_1_515.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ecu_status_2_516.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ecu_status_3_517.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ch.base);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_command_110, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_command_110, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_command_110, throttle_pedal_en_ctrl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_command_110, throttle_pedal_cmd_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_command_111, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_command_111, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_command_111, brake_pedal_en_ctrl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_command_111, brake_pedal_cmd_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_command_112, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_command_112, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_command_112, steer_angle_en_ctrl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_command_112, steer_angle_cmd_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Turnsignal_command_113, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Turnsignal_command_113, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Turnsignal_command_113, turn_signal_cmd_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Gear_command_114, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Gear_command_114, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Gear_command_114, gear_cmd_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Control_command_115, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Control_command_115, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Control_command_115, ctrl_cmd_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_status__510, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_status__510, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_status__510, throttle_pedal_en_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_status__510, throttle_pedal_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_status__510, drive_motor_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Throttle_status__510, battery_bms_err_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, brake_pedal_en_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, brake_pedal_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, brake_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, emergency_btn_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, front_bump_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, back_bump_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Brake_status__511, overspd_env_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_status__512, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_status__512, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_status__512, steer_angle_en_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_status__512, steer_angle_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_status__512, steer_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Steer_status__512, sensor_err_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Turnsignal_status__513, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Turnsignal_status__513, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Turnsignal_status__513, turn_signal_sts_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Gear_status_514, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Gear_status_514, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Gear_status_514, gear_sts_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, acc_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, ctrl_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, chassis_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_1_515, chassis_err_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, battery_soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, battery_capacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, battery_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, battery_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_2_516, battery_temperature_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ecu_status_3_517, ultrasound_dist_8_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, throttle_command_110_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, brake_command_111_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, steer_command_112_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, turnsignal_command_113_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, gear_command_114_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, control_command_115_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, throttle_status__510_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, brake_status__511_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, steer_status__512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, turnsignal_status__513_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, gear_status_514_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, ecu_status_1_515_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, ecu_status_2_516_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Ch, ecu_status_3_517_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::canbus::Throttle_command_110)},
  { 9, 16, sizeof(::apollo::canbus::Brake_command_111)},
  { 18, 25, sizeof(::apollo::canbus::Steer_command_112)},
  { 27, 33, sizeof(::apollo::canbus::Turnsignal_command_113)},
  { 34, 40, sizeof(::apollo::canbus::Gear_command_114)},
  { 41, 47, sizeof(::apollo::canbus::Control_command_115)},
  { 48, 57, sizeof(::apollo::canbus::Throttle_status__510)},
  { 61, 73, sizeof(::apollo::canbus::Brake_status__511)},
  { 80, 89, sizeof(::apollo::canbus::Steer_status__512)},
  { 93, 99, sizeof(::apollo::canbus::Turnsignal_status__513)},
  { 100, 106, sizeof(::apollo::canbus::Gear_status_514)},
  { 107, 117, sizeof(::apollo::canbus::Ecu_status_1_515)},
  { 122, 132, sizeof(::apollo::canbus::Ecu_status_2_516)},
  { 137, 150, sizeof(::apollo::canbus::Ecu_status_3_517)},
  { 158, 177, sizeof(::apollo::canbus::Ch)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Throttle_command_110_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Brake_command_111_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Steer_command_112_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Turnsignal_command_113_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Gear_command_114_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Control_command_115_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Throttle_status__510_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Brake_status__511_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Steer_status__512_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Turnsignal_status__513_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Gear_status_514_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ecu_status_1_515_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ecu_status_2_516_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ecu_status_3_517_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Ch_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/canbus/proto/ch.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035modules/canbus/proto/ch.proto\022\rapollo."
      "canbus\"\367\001\n\024Throttle_command_110\022^\n\026throt"
      "tle_pedal_en_ctrl\030\001 \001(\0162>.apollo.canbus."
      "Throttle_command_110.Throttle_pedal_en_c"
      "trlType\022\032\n\022throttle_pedal_cmd\030\002 \001(\005\"c\n\032T"
      "hrottle_pedal_en_ctrlType\022\"\n\036THROTTLE_PE"
      "DAL_EN_CTRL_DISABLE\020\000\022!\n\035THROTTLE_PEDAL_"
      "EN_CTRL_ENABLE\020\001\"\337\001\n\021Brake_command_111\022U"
      "\n\023brake_pedal_en_ctrl\030\001 \001(\01628.apollo.can"
      "bus.Brake_command_111.Brake_pedal_en_ctr"
      "lType\022\027\n\017brake_pedal_cmd\030\002 \001(\005\"Z\n\027Brake_"
      "pedal_en_ctrlType\022\037\n\033BRAKE_PEDAL_EN_CTRL"
      "_DISABLE\020\000\022\036\n\032BRAKE_PEDAL_EN_CTRL_ENABLE"
      "\020\001\"\337\001\n\021Steer_command_112\022U\n\023steer_angle_"
      "en_ctrl\030\001 \001(\01628.apollo.canbus.Steer_comm"
      "and_112.Steer_angle_en_ctrlType\022\027\n\017steer"
      "_angle_cmd\030\002 \001(\001\"Z\n\027Steer_angle_en_ctrlT"
      "ype\022\037\n\033STEER_ANGLE_EN_CTRL_DISABLE\020\000\022\036\n\032"
      "STEER_ANGLE_EN_CTRL_ENABLE\020\001\"\322\001\n\026Turnsig"
      "nal_command_113\022R\n\017turn_signal_cmd\030\001 \001(\016"
      "29.apollo.canbus.Turnsignal_command_113."
      "Turn_signal_cmdType\"d\n\023Turn_signal_cmdTy"
      "pe\022\030\n\024TURN_SIGNAL_CMD_NONE\020\000\022\030\n\024TURN_SIG"
      "NAL_CMD_LEFT\020\001\022\031\n\025TURN_SIGNAL_CMD_RIGHT\020"
      "\002\"\265\001\n\020Gear_command_114\022>\n\010gear_cmd\030\001 \001(\016"
      "2,.apollo.canbus.Gear_command_114.Gear_c"
      "mdType\"a\n\014Gear_cmdType\022\021\n\rGEAR_CMD_PARK\020"
      "\001\022\024\n\020GEAR_CMD_REVERSE\020\002\022\024\n\020GEAR_CMD_NEUT"
      "RAL\020\003\022\022\n\016GEAR_CMD_DRIVE\020\004\"\241\001\n\023Control_co"
      "mmand_115\022A\n\010ctrl_cmd\030\001 \001(\0162/.apollo.can"
      "bus.Control_command_115.Ctrl_cmdType\"G\n\014"
      "Ctrl_cmdType\022\033\n\027CTRL_CMD_OUT_OF_CONTROL\020"
      "\000\022\032\n\026CTRL_CMD_UNDER_CONTROL\020\001\"\343\004\n\024Thrott"
      "le_status__510\022\\\n\025throttle_pedal_en_sts\030"
      "\001 \001(\0162=.apollo.canbus.Throttle_status__5"
      "10.Throttle_pedal_en_stsType\022\032\n\022throttle"
      "_pedal_sts\030\002 \001(\005\022P\n\017drive_motor_err\030\003 \001("
      "\01627.apollo.canbus.Throttle_status__510.D"
      "rive_motor_errType\022P\n\017battery_bms_err\030\004 "
      "\001(\01627.apollo.canbus.Throttle_status__510"
      ".Battery_bms_errType\"\204\001\n\031Throttle_pedal_"
      "en_stsType\022!\n\035THROTTLE_PEDAL_EN_STS_DISA"
      "BLE\020\000\022 \n\034THROTTLE_PEDAL_EN_STS_ENABLE\020\001\022"
      "\"\n\036THROTTLE_PEDAL_EN_STS_TAKEOVER\020\002\"S\n\023D"
      "rive_motor_errType\022\031\n\025DRIVE_MOTOR_ERR_NO"
      "ERR\020\000\022!\n\035DRIVE_MOTOR_ERR_DRV_MOTOR_ERR\020\001"
      "\"Q\n\023Battery_bms_errType\022\031\n\025BATTERY_BMS_E"
      "RR_NOERR\020\000\022\037\n\033BATTERY_BMS_ERR_BATTERY_ER"
      "R\020\001\"\207\010\n\021Brake_status__511\022S\n\022brake_pedal"
      "_en_sts\030\001 \001(\01627.apollo.canbus.Brake_stat"
      "us__511.Brake_pedal_en_stsType\022\027\n\017brake_"
      "pedal_sts\030\002 \001(\005\022A\n\tbrake_err\030\003 \001(\0162..apo"
      "llo.canbus.Brake_status__511.Brake_errTy"
      "pe\022Q\n\021emergency_btn_env\030\004 \001(\01626.apollo.c"
      "anbus.Brake_status__511.Emergency_btn_en"
      "vType\022K\n\016front_bump_env\030\005 \001(\01623.apollo.c"
      "anbus.Brake_status__511.Front_bump_envTy"
      "pe\022I\n\rback_bump_env\030\006 \001(\01622.apollo.canbu"
      "s.Brake_status__511.Back_bump_envType\022E\n"
      "\013overspd_env\030\007 \001(\01620.apollo.canbus.Brake"
      "_status__511.Overspd_envType\"x\n\026Brake_pe"
      "dal_en_stsType\022\036\n\032BRAKE_PEDAL_EN_STS_DIS"
      "ABLE\020\000\022\035\n\031BRAKE_PEDAL_EN_STS_ENABLE\020\001\022\037\n"
      "\033BRAKE_PEDAL_EN_STS_TAKEOVER\020\002\"D\n\rBrake_"
      "errType\022\023\n\017BRAKE_ERR_NOERR\020\000\022\036\n\032BRAKE_ER"
      "R_BRAKE_SYSTEM_ERR\020\001\"`\n\025Emergency_btn_en"
      "vType\022\033\n\027EMERGENCY_BTN_ENV_NOENV\020\000\022*\n&EM"
      "ERGENCY_BTN_ENV_EMERGENCY_BUTTON_ENV\020\001\"S"
      "\n\022Front_bump_envType\022\030\n\024FRONT_BUMP_ENV_N"
      "OENV\020\000\022#\n\037FRONT_BUMP_ENV_FRONT_BUMPER_EN"
      "V\020\001\"O\n\021Back_bump_envType\022\027\n\023BACK_BUMP_EN"
      "V_NOENV\020\000\022!\n\035BACK_BUMP_ENV_BACK_BUMPER_E"
      "NV\020\001\"G\n\017Overspd_envType\022\025\n\021OVERSPD_ENV_N"
      "OENV\020\000\022\035\n\031OVERSPD_ENV_OVERSPEED_ENV\020\001\"\221\004"
      "\n\021Steer_status__512\022S\n\022steer_angle_en_st"
      "s\030\001 \001(\01627.apollo.canbus.Steer_status__51"
      "2.Steer_angle_en_stsType\022\027\n\017steer_angle_"
      "sts\030\002 \001(\001\022A\n\tsteer_err\030\003 \001(\0162..apollo.ca"
      "nbus.Steer_status__512.Steer_errType\022C\n\n"
      "sensor_err\030\004 \001(\0162/.apollo.canbus.Steer_s"
      "tatus__512.Sensor_errType\"x\n\026Steer_angle"
      "_en_stsType\022\036\n\032STEER_ANGLE_EN_STS_DISABL"
      "E\020\000\022\035\n\031STEER_ANGLE_EN_STS_ENABLE\020\001\022\037\n\033ST"
      "EER_ANGLE_EN_STS_TAKEOVER\020\002\"C\n\rSteer_err"
      "Type\022\023\n\017STEER_ERR_NOERR\020\000\022\035\n\031STEER_ERR_S"
      "TEER_MOTOR_ERR\020\001\"G\n\016Sensor_errType\022\024\n\020SE"
      "NSOR_ERR_NOERR\020\000\022\037\n\033SENSOR_ERR_STEER_SEN"
      "SOR_ERR\020\001\"\322\001\n\026Turnsignal_status__513\022R\n\017"
      "turn_signal_sts\030\001 \001(\01629.apollo.canbus.Tu"
      "rnsignal_status__513.Turn_signal_stsType"
      "\"d\n\023Turn_signal_stsType\022\030\n\024TURN_SIGNAL_S"
      "TS_NONE\020\000\022\030\n\024TURN_SIGNAL_STS_LEFT\020\001\022\031\n\025T"
      "URN_SIGNAL_STS_RIGHT\020\002\"\263\001\n\017Gear_status_5"
      "14\022=\n\010gear_sts\030\001 \001(\0162+.apollo.canbus.Gea"
      "r_status_514.Gear_stsType\"a\n\014Gear_stsTyp"
      "e\022\021\n\rGEAR_STS_PARK\020\001\022\024\n\020GEAR_STS_REVERSE"
      "\020\002\022\024\n\020GEAR_STS_NEUTRAL\020\003\022\022\n\016GEAR_STS_DRI"
      "VE\020\004\"\347\001\n\020Ecu_status_1_515\022\r\n\005speed\030\001 \001(\001"
      "\022\021\n\tacc_speed\030\002 \001(\001\022>\n\010ctrl_sts\030\003 \001(\0162,."
      "apollo.canbus.Ecu_status_1_515.Ctrl_stsT"
      "ype\022\023\n\013chassis_sts\030\004 \001(\005\022\023\n\013chassis_err\030"
      "\005 \001(\005\"G\n\014Ctrl_stsType\022\033\n\027CTRL_STS_OUT_OF"
      "_CONTROL\020\000\022\032\n\026CTRL_STS_UNDER_CONTROL\020\001\"\220"
      "\001\n\020Ecu_status_2_516\022\023\n\013battery_soc\030\001 \001(\005"
      "\022\030\n\020battery_capacity\030\002 \001(\005\022\027\n\017battery_vo"
      "ltage\030\003 \001(\001\022\027\n\017battery_current\030\004 \001(\001\022\033\n\023"
      "battery_temperature\030\005 \001(\005\"\352\001\n\020Ecu_status"
      "_3_517\022\031\n\021ultrasound_dist_1\030\001 \001(\001\022\031\n\021ult"
      "rasound_dist_2\030\002 \001(\001\022\031\n\021ultrasound_dist_"
      "3\030\003 \001(\001\022\031\n\021ultrasound_dist_4\030\004 \001(\001\022\031\n\021ul"
      "trasound_dist_5\030\005 \001(\001\022\031\n\021ultrasound_dist"
      "_6\030\006 \001(\001\022\031\n\021ultrasound_dist_7\030\007 \001(\001\022\031\n\021u"
      "ltrasound_dist_8\030\010 \001(\001\"\362\006\n\002Ch\022A\n\024throttl"
      "e_command_110\030\001 \001(\0132#.apollo.canbus.Thro"
      "ttle_command_110\022;\n\021brake_command_111\030\002 "
      "\001(\0132 .apollo.canbus.Brake_command_111\022;\n"
      "\021steer_command_112\030\003 \001(\0132 .apollo.canbus"
      ".Steer_command_112\022E\n\026turnsignal_command"
      "_113\030\004 \001(\0132%.apollo.canbus.Turnsignal_co"
      "mmand_113\0229\n\020gear_command_114\030\005 \001(\0132\037.ap"
      "ollo.canbus.Gear_command_114\022\?\n\023control_"
      "command_115\030\006 \001(\0132\".apollo.canbus.Contro"
      "l_command_115\022A\n\024throttle_status__510\030\007 "
      "\001(\0132#.apollo.canbus.Throttle_status__510"
      "\022;\n\021brake_status__511\030\010 \001(\0132 .apollo.can"
      "bus.Brake_status__511\022;\n\021steer_status__5"
      "12\030\t \001(\0132 .apollo.canbus.Steer_status__5"
      "12\022E\n\026turnsignal_status__513\030\n \001(\0132%.apo"
      "llo.canbus.Turnsignal_status__513\0227\n\017gea"
      "r_status_514\030\013 \001(\0132\036.apollo.canbus.Gear_"
      "status_514\0229\n\020ecu_status_1_515\030\014 \001(\0132\037.a"
      "pollo.canbus.Ecu_status_1_515\0229\n\020ecu_sta"
      "tus_2_516\030\r \001(\0132\037.apollo.canbus.Ecu_stat"
      "us_2_516\0229\n\020ecu_status_3_517\030\016 \001(\0132\037.apo"
      "llo.canbus.Ecu_status_3_517"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/canbus/proto/ch.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fcanbus_2fproto_2fch_2eproto
namespace apollo {
namespace canbus {
const ::google::protobuf::EnumDescriptor* Throttle_command_110_Throttle_pedal_en_ctrlType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[0];
}
bool Throttle_command_110_Throttle_pedal_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_command_110_Throttle_pedal_en_ctrlType Throttle_command_110::THROTTLE_PEDAL_EN_CTRL_DISABLE;
const Throttle_command_110_Throttle_pedal_en_ctrlType Throttle_command_110::THROTTLE_PEDAL_EN_CTRL_ENABLE;
const Throttle_command_110_Throttle_pedal_en_ctrlType Throttle_command_110::Throttle_pedal_en_ctrlType_MIN;
const Throttle_command_110_Throttle_pedal_en_ctrlType Throttle_command_110::Throttle_pedal_en_ctrlType_MAX;
const int Throttle_command_110::Throttle_pedal_en_ctrlType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_command_111_Brake_pedal_en_ctrlType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[1];
}
bool Brake_command_111_Brake_pedal_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_command_111_Brake_pedal_en_ctrlType Brake_command_111::BRAKE_PEDAL_EN_CTRL_DISABLE;
const Brake_command_111_Brake_pedal_en_ctrlType Brake_command_111::BRAKE_PEDAL_EN_CTRL_ENABLE;
const Brake_command_111_Brake_pedal_en_ctrlType Brake_command_111::Brake_pedal_en_ctrlType_MIN;
const Brake_command_111_Brake_pedal_en_ctrlType Brake_command_111::Brake_pedal_en_ctrlType_MAX;
const int Brake_command_111::Brake_pedal_en_ctrlType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Steer_command_112_Steer_angle_en_ctrlType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[2];
}
bool Steer_command_112_Steer_angle_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steer_command_112_Steer_angle_en_ctrlType Steer_command_112::STEER_ANGLE_EN_CTRL_DISABLE;
const Steer_command_112_Steer_angle_en_ctrlType Steer_command_112::STEER_ANGLE_EN_CTRL_ENABLE;
const Steer_command_112_Steer_angle_en_ctrlType Steer_command_112::Steer_angle_en_ctrlType_MIN;
const Steer_command_112_Steer_angle_en_ctrlType Steer_command_112::Steer_angle_en_ctrlType_MAX;
const int Steer_command_112::Steer_angle_en_ctrlType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Turnsignal_command_113_Turn_signal_cmdType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[3];
}
bool Turnsignal_command_113_Turn_signal_cmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Turnsignal_command_113_Turn_signal_cmdType Turnsignal_command_113::TURN_SIGNAL_CMD_NONE;
const Turnsignal_command_113_Turn_signal_cmdType Turnsignal_command_113::TURN_SIGNAL_CMD_LEFT;
const Turnsignal_command_113_Turn_signal_cmdType Turnsignal_command_113::TURN_SIGNAL_CMD_RIGHT;
const Turnsignal_command_113_Turn_signal_cmdType Turnsignal_command_113::Turn_signal_cmdType_MIN;
const Turnsignal_command_113_Turn_signal_cmdType Turnsignal_command_113::Turn_signal_cmdType_MAX;
const int Turnsignal_command_113::Turn_signal_cmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gear_command_114_Gear_cmdType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[4];
}
bool Gear_command_114_Gear_cmdType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_command_114_Gear_cmdType Gear_command_114::GEAR_CMD_PARK;
const Gear_command_114_Gear_cmdType Gear_command_114::GEAR_CMD_REVERSE;
const Gear_command_114_Gear_cmdType Gear_command_114::GEAR_CMD_NEUTRAL;
const Gear_command_114_Gear_cmdType Gear_command_114::GEAR_CMD_DRIVE;
const Gear_command_114_Gear_cmdType Gear_command_114::Gear_cmdType_MIN;
const Gear_command_114_Gear_cmdType Gear_command_114::Gear_cmdType_MAX;
const int Gear_command_114::Gear_cmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Control_command_115_Ctrl_cmdType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[5];
}
bool Control_command_115_Ctrl_cmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Control_command_115_Ctrl_cmdType Control_command_115::CTRL_CMD_OUT_OF_CONTROL;
const Control_command_115_Ctrl_cmdType Control_command_115::CTRL_CMD_UNDER_CONTROL;
const Control_command_115_Ctrl_cmdType Control_command_115::Ctrl_cmdType_MIN;
const Control_command_115_Ctrl_cmdType Control_command_115::Ctrl_cmdType_MAX;
const int Control_command_115::Ctrl_cmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Throttle_status__510_Throttle_pedal_en_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[6];
}
bool Throttle_status__510_Throttle_pedal_en_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_status__510_Throttle_pedal_en_stsType Throttle_status__510::THROTTLE_PEDAL_EN_STS_DISABLE;
const Throttle_status__510_Throttle_pedal_en_stsType Throttle_status__510::THROTTLE_PEDAL_EN_STS_ENABLE;
const Throttle_status__510_Throttle_pedal_en_stsType Throttle_status__510::THROTTLE_PEDAL_EN_STS_TAKEOVER;
const Throttle_status__510_Throttle_pedal_en_stsType Throttle_status__510::Throttle_pedal_en_stsType_MIN;
const Throttle_status__510_Throttle_pedal_en_stsType Throttle_status__510::Throttle_pedal_en_stsType_MAX;
const int Throttle_status__510::Throttle_pedal_en_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Throttle_status__510_Drive_motor_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[7];
}
bool Throttle_status__510_Drive_motor_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_status__510_Drive_motor_errType Throttle_status__510::DRIVE_MOTOR_ERR_NOERR;
const Throttle_status__510_Drive_motor_errType Throttle_status__510::DRIVE_MOTOR_ERR_DRV_MOTOR_ERR;
const Throttle_status__510_Drive_motor_errType Throttle_status__510::Drive_motor_errType_MIN;
const Throttle_status__510_Drive_motor_errType Throttle_status__510::Drive_motor_errType_MAX;
const int Throttle_status__510::Drive_motor_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Throttle_status__510_Battery_bms_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[8];
}
bool Throttle_status__510_Battery_bms_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_status__510_Battery_bms_errType Throttle_status__510::BATTERY_BMS_ERR_NOERR;
const Throttle_status__510_Battery_bms_errType Throttle_status__510::BATTERY_BMS_ERR_BATTERY_ERR;
const Throttle_status__510_Battery_bms_errType Throttle_status__510::Battery_bms_errType_MIN;
const Throttle_status__510_Battery_bms_errType Throttle_status__510::Battery_bms_errType_MAX;
const int Throttle_status__510::Battery_bms_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_status__511_Brake_pedal_en_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[9];
}
bool Brake_status__511_Brake_pedal_en_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_status__511_Brake_pedal_en_stsType Brake_status__511::BRAKE_PEDAL_EN_STS_DISABLE;
const Brake_status__511_Brake_pedal_en_stsType Brake_status__511::BRAKE_PEDAL_EN_STS_ENABLE;
const Brake_status__511_Brake_pedal_en_stsType Brake_status__511::BRAKE_PEDAL_EN_STS_TAKEOVER;
const Brake_status__511_Brake_pedal_en_stsType Brake_status__511::Brake_pedal_en_stsType_MIN;
const Brake_status__511_Brake_pedal_en_stsType Brake_status__511::Brake_pedal_en_stsType_MAX;
const int Brake_status__511::Brake_pedal_en_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_status__511_Brake_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[10];
}
bool Brake_status__511_Brake_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_status__511_Brake_errType Brake_status__511::BRAKE_ERR_NOERR;
const Brake_status__511_Brake_errType Brake_status__511::BRAKE_ERR_BRAKE_SYSTEM_ERR;
const Brake_status__511_Brake_errType Brake_status__511::Brake_errType_MIN;
const Brake_status__511_Brake_errType Brake_status__511::Brake_errType_MAX;
const int Brake_status__511::Brake_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_status__511_Emergency_btn_envType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[11];
}
bool Brake_status__511_Emergency_btn_envType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_status__511_Emergency_btn_envType Brake_status__511::EMERGENCY_BTN_ENV_NOENV;
const Brake_status__511_Emergency_btn_envType Brake_status__511::EMERGENCY_BTN_ENV_EMERGENCY_BUTTON_ENV;
const Brake_status__511_Emergency_btn_envType Brake_status__511::Emergency_btn_envType_MIN;
const Brake_status__511_Emergency_btn_envType Brake_status__511::Emergency_btn_envType_MAX;
const int Brake_status__511::Emergency_btn_envType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_status__511_Front_bump_envType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[12];
}
bool Brake_status__511_Front_bump_envType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_status__511_Front_bump_envType Brake_status__511::FRONT_BUMP_ENV_NOENV;
const Brake_status__511_Front_bump_envType Brake_status__511::FRONT_BUMP_ENV_FRONT_BUMPER_ENV;
const Brake_status__511_Front_bump_envType Brake_status__511::Front_bump_envType_MIN;
const Brake_status__511_Front_bump_envType Brake_status__511::Front_bump_envType_MAX;
const int Brake_status__511::Front_bump_envType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_status__511_Back_bump_envType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[13];
}
bool Brake_status__511_Back_bump_envType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_status__511_Back_bump_envType Brake_status__511::BACK_BUMP_ENV_NOENV;
const Brake_status__511_Back_bump_envType Brake_status__511::BACK_BUMP_ENV_BACK_BUMPER_ENV;
const Brake_status__511_Back_bump_envType Brake_status__511::Back_bump_envType_MIN;
const Brake_status__511_Back_bump_envType Brake_status__511::Back_bump_envType_MAX;
const int Brake_status__511::Back_bump_envType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Brake_status__511_Overspd_envType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[14];
}
bool Brake_status__511_Overspd_envType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_status__511_Overspd_envType Brake_status__511::OVERSPD_ENV_NOENV;
const Brake_status__511_Overspd_envType Brake_status__511::OVERSPD_ENV_OVERSPEED_ENV;
const Brake_status__511_Overspd_envType Brake_status__511::Overspd_envType_MIN;
const Brake_status__511_Overspd_envType Brake_status__511::Overspd_envType_MAX;
const int Brake_status__511::Overspd_envType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Steer_status__512_Steer_angle_en_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[15];
}
bool Steer_status__512_Steer_angle_en_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steer_status__512_Steer_angle_en_stsType Steer_status__512::STEER_ANGLE_EN_STS_DISABLE;
const Steer_status__512_Steer_angle_en_stsType Steer_status__512::STEER_ANGLE_EN_STS_ENABLE;
const Steer_status__512_Steer_angle_en_stsType Steer_status__512::STEER_ANGLE_EN_STS_TAKEOVER;
const Steer_status__512_Steer_angle_en_stsType Steer_status__512::Steer_angle_en_stsType_MIN;
const Steer_status__512_Steer_angle_en_stsType Steer_status__512::Steer_angle_en_stsType_MAX;
const int Steer_status__512::Steer_angle_en_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Steer_status__512_Steer_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[16];
}
bool Steer_status__512_Steer_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steer_status__512_Steer_errType Steer_status__512::STEER_ERR_NOERR;
const Steer_status__512_Steer_errType Steer_status__512::STEER_ERR_STEER_MOTOR_ERR;
const Steer_status__512_Steer_errType Steer_status__512::Steer_errType_MIN;
const Steer_status__512_Steer_errType Steer_status__512::Steer_errType_MAX;
const int Steer_status__512::Steer_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Steer_status__512_Sensor_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[17];
}
bool Steer_status__512_Sensor_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steer_status__512_Sensor_errType Steer_status__512::SENSOR_ERR_NOERR;
const Steer_status__512_Sensor_errType Steer_status__512::SENSOR_ERR_STEER_SENSOR_ERR;
const Steer_status__512_Sensor_errType Steer_status__512::Sensor_errType_MIN;
const Steer_status__512_Sensor_errType Steer_status__512::Sensor_errType_MAX;
const int Steer_status__512::Sensor_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Turnsignal_status__513_Turn_signal_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[18];
}
bool Turnsignal_status__513_Turn_signal_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Turnsignal_status__513_Turn_signal_stsType Turnsignal_status__513::TURN_SIGNAL_STS_NONE;
const Turnsignal_status__513_Turn_signal_stsType Turnsignal_status__513::TURN_SIGNAL_STS_LEFT;
const Turnsignal_status__513_Turn_signal_stsType Turnsignal_status__513::TURN_SIGNAL_STS_RIGHT;
const Turnsignal_status__513_Turn_signal_stsType Turnsignal_status__513::Turn_signal_stsType_MIN;
const Turnsignal_status__513_Turn_signal_stsType Turnsignal_status__513::Turn_signal_stsType_MAX;
const int Turnsignal_status__513::Turn_signal_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gear_status_514_Gear_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[19];
}
bool Gear_status_514_Gear_stsType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_status_514_Gear_stsType Gear_status_514::GEAR_STS_PARK;
const Gear_status_514_Gear_stsType Gear_status_514::GEAR_STS_REVERSE;
const Gear_status_514_Gear_stsType Gear_status_514::GEAR_STS_NEUTRAL;
const Gear_status_514_Gear_stsType Gear_status_514::GEAR_STS_DRIVE;
const Gear_status_514_Gear_stsType Gear_status_514::Gear_stsType_MIN;
const Gear_status_514_Gear_stsType Gear_status_514::Gear_stsType_MAX;
const int Gear_status_514::Gear_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ecu_status_1_515_Ctrl_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_enum_descriptors[20];
}
bool Ecu_status_1_515_Ctrl_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ecu_status_1_515_Ctrl_stsType Ecu_status_1_515::CTRL_STS_OUT_OF_CONTROL;
const Ecu_status_1_515_Ctrl_stsType Ecu_status_1_515::CTRL_STS_UNDER_CONTROL;
const Ecu_status_1_515_Ctrl_stsType Ecu_status_1_515::Ctrl_stsType_MIN;
const Ecu_status_1_515_Ctrl_stsType Ecu_status_1_515::Ctrl_stsType_MAX;
const int Ecu_status_1_515::Ctrl_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Throttle_command_110::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Throttle_command_110::kThrottlePedalEnCtrlFieldNumber;
const int Throttle_command_110::kThrottlePedalCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Throttle_command_110::Throttle_command_110()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Throttle_command_110.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Throttle_command_110)
}
Throttle_command_110::Throttle_command_110(const Throttle_command_110& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&throttle_pedal_en_ctrl_, &from.throttle_pedal_en_ctrl_,
    static_cast<size_t>(reinterpret_cast<char*>(&throttle_pedal_cmd_) -
    reinterpret_cast<char*>(&throttle_pedal_en_ctrl_)) + sizeof(throttle_pedal_cmd_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Throttle_command_110)
}

void Throttle_command_110::SharedCtor() {
  ::memset(&throttle_pedal_en_ctrl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&throttle_pedal_cmd_) -
      reinterpret_cast<char*>(&throttle_pedal_en_ctrl_)) + sizeof(throttle_pedal_cmd_));
}

Throttle_command_110::~Throttle_command_110() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Throttle_command_110)
  SharedDtor();
}

void Throttle_command_110::SharedDtor() {
}

void Throttle_command_110::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Throttle_command_110::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Throttle_command_110& Throttle_command_110::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Throttle_command_110.base);
  return *internal_default_instance();
}


void Throttle_command_110::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Throttle_command_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&throttle_pedal_en_ctrl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&throttle_pedal_cmd_) -
        reinterpret_cast<char*>(&throttle_pedal_en_ctrl_)) + sizeof(throttle_pedal_cmd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Throttle_command_110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Throttle_command_110)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType throttle_pedal_en_ctrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Throttle_command_110_Throttle_pedal_en_ctrlType_IsValid(value)) {
            set_throttle_pedal_en_ctrl(static_cast< ::apollo::canbus::Throttle_command_110_Throttle_pedal_en_ctrlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 throttle_pedal_cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_throttle_pedal_cmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &throttle_pedal_cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Throttle_command_110)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Throttle_command_110)
  return false;
#undef DO_
}

void Throttle_command_110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Throttle_command_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType throttle_pedal_en_ctrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->throttle_pedal_en_ctrl(), output);
  }

  // optional int32 throttle_pedal_cmd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->throttle_pedal_cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Throttle_command_110)
}

::google::protobuf::uint8* Throttle_command_110::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Throttle_command_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType throttle_pedal_en_ctrl = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->throttle_pedal_en_ctrl(), target);
  }

  // optional int32 throttle_pedal_cmd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->throttle_pedal_cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Throttle_command_110)
  return target;
}

size_t Throttle_command_110::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Throttle_command_110)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType throttle_pedal_en_ctrl = 1;
    if (has_throttle_pedal_en_ctrl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->throttle_pedal_en_ctrl());
    }

    // optional int32 throttle_pedal_cmd = 2;
    if (has_throttle_pedal_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->throttle_pedal_cmd());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Throttle_command_110::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Throttle_command_110)
  GOOGLE_DCHECK_NE(&from, this);
  const Throttle_command_110* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Throttle_command_110>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Throttle_command_110)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Throttle_command_110)
    MergeFrom(*source);
  }
}

void Throttle_command_110::MergeFrom(const Throttle_command_110& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Throttle_command_110)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      throttle_pedal_en_ctrl_ = from.throttle_pedal_en_ctrl_;
    }
    if (cached_has_bits & 0x00000002u) {
      throttle_pedal_cmd_ = from.throttle_pedal_cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Throttle_command_110::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Throttle_command_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Throttle_command_110::CopyFrom(const Throttle_command_110& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Throttle_command_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttle_command_110::IsInitialized() const {
  return true;
}

void Throttle_command_110::Swap(Throttle_command_110* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Throttle_command_110::InternalSwap(Throttle_command_110* other) {
  using std::swap;
  swap(throttle_pedal_en_ctrl_, other->throttle_pedal_en_ctrl_);
  swap(throttle_pedal_cmd_, other->throttle_pedal_cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Throttle_command_110::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Brake_command_111::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Brake_command_111::kBrakePedalEnCtrlFieldNumber;
const int Brake_command_111::kBrakePedalCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Brake_command_111::Brake_command_111()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Brake_command_111.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Brake_command_111)
}
Brake_command_111::Brake_command_111(const Brake_command_111& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&brake_pedal_en_ctrl_, &from.brake_pedal_en_ctrl_,
    static_cast<size_t>(reinterpret_cast<char*>(&brake_pedal_cmd_) -
    reinterpret_cast<char*>(&brake_pedal_en_ctrl_)) + sizeof(brake_pedal_cmd_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Brake_command_111)
}

void Brake_command_111::SharedCtor() {
  ::memset(&brake_pedal_en_ctrl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brake_pedal_cmd_) -
      reinterpret_cast<char*>(&brake_pedal_en_ctrl_)) + sizeof(brake_pedal_cmd_));
}

Brake_command_111::~Brake_command_111() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Brake_command_111)
  SharedDtor();
}

void Brake_command_111::SharedDtor() {
}

void Brake_command_111::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Brake_command_111::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Brake_command_111& Brake_command_111::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Brake_command_111.base);
  return *internal_default_instance();
}


void Brake_command_111::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Brake_command_111)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&brake_pedal_en_ctrl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&brake_pedal_cmd_) -
        reinterpret_cast<char*>(&brake_pedal_en_ctrl_)) + sizeof(brake_pedal_cmd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Brake_command_111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Brake_command_111)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType brake_pedal_en_ctrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_command_111_Brake_pedal_en_ctrlType_IsValid(value)) {
            set_brake_pedal_en_ctrl(static_cast< ::apollo::canbus::Brake_command_111_Brake_pedal_en_ctrlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brake_pedal_cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_brake_pedal_cmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brake_pedal_cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Brake_command_111)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Brake_command_111)
  return false;
#undef DO_
}

void Brake_command_111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Brake_command_111)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType brake_pedal_en_ctrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->brake_pedal_en_ctrl(), output);
  }

  // optional int32 brake_pedal_cmd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->brake_pedal_cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Brake_command_111)
}

::google::protobuf::uint8* Brake_command_111::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Brake_command_111)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType brake_pedal_en_ctrl = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->brake_pedal_en_ctrl(), target);
  }

  // optional int32 brake_pedal_cmd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->brake_pedal_cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Brake_command_111)
  return target;
}

size_t Brake_command_111::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Brake_command_111)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType brake_pedal_en_ctrl = 1;
    if (has_brake_pedal_en_ctrl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brake_pedal_en_ctrl());
    }

    // optional int32 brake_pedal_cmd = 2;
    if (has_brake_pedal_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brake_pedal_cmd());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Brake_command_111::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Brake_command_111)
  GOOGLE_DCHECK_NE(&from, this);
  const Brake_command_111* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Brake_command_111>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Brake_command_111)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Brake_command_111)
    MergeFrom(*source);
  }
}

void Brake_command_111::MergeFrom(const Brake_command_111& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Brake_command_111)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      brake_pedal_en_ctrl_ = from.brake_pedal_en_ctrl_;
    }
    if (cached_has_bits & 0x00000002u) {
      brake_pedal_cmd_ = from.brake_pedal_cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Brake_command_111::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Brake_command_111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Brake_command_111::CopyFrom(const Brake_command_111& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Brake_command_111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brake_command_111::IsInitialized() const {
  return true;
}

void Brake_command_111::Swap(Brake_command_111* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Brake_command_111::InternalSwap(Brake_command_111* other) {
  using std::swap;
  swap(brake_pedal_en_ctrl_, other->brake_pedal_en_ctrl_);
  swap(brake_pedal_cmd_, other->brake_pedal_cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Brake_command_111::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Steer_command_112::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Steer_command_112::kSteerAngleEnCtrlFieldNumber;
const int Steer_command_112::kSteerAngleCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Steer_command_112::Steer_command_112()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Steer_command_112.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Steer_command_112)
}
Steer_command_112::Steer_command_112(const Steer_command_112& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steer_angle_cmd_, &from.steer_angle_cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&steer_angle_en_ctrl_) -
    reinterpret_cast<char*>(&steer_angle_cmd_)) + sizeof(steer_angle_en_ctrl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Steer_command_112)
}

void Steer_command_112::SharedCtor() {
  ::memset(&steer_angle_cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steer_angle_en_ctrl_) -
      reinterpret_cast<char*>(&steer_angle_cmd_)) + sizeof(steer_angle_en_ctrl_));
}

Steer_command_112::~Steer_command_112() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Steer_command_112)
  SharedDtor();
}

void Steer_command_112::SharedDtor() {
}

void Steer_command_112::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Steer_command_112::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Steer_command_112& Steer_command_112::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Steer_command_112.base);
  return *internal_default_instance();
}


void Steer_command_112::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Steer_command_112)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steer_angle_cmd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steer_angle_en_ctrl_) -
        reinterpret_cast<char*>(&steer_angle_cmd_)) + sizeof(steer_angle_en_ctrl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Steer_command_112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Steer_command_112)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType steer_angle_en_ctrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Steer_command_112_Steer_angle_en_ctrlType_IsValid(value)) {
            set_steer_angle_en_ctrl(static_cast< ::apollo::canbus::Steer_command_112_Steer_angle_en_ctrlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double steer_angle_cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steer_angle_cmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &steer_angle_cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Steer_command_112)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Steer_command_112)
  return false;
#undef DO_
}

void Steer_command_112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Steer_command_112)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType steer_angle_en_ctrl = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->steer_angle_en_ctrl(), output);
  }

  // optional double steer_angle_cmd = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->steer_angle_cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Steer_command_112)
}

::google::protobuf::uint8* Steer_command_112::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Steer_command_112)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType steer_angle_en_ctrl = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->steer_angle_en_ctrl(), target);
  }

  // optional double steer_angle_cmd = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->steer_angle_cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Steer_command_112)
  return target;
}

size_t Steer_command_112::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Steer_command_112)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double steer_angle_cmd = 2;
    if (has_steer_angle_cmd()) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType steer_angle_en_ctrl = 1;
    if (has_steer_angle_en_ctrl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->steer_angle_en_ctrl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Steer_command_112::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Steer_command_112)
  GOOGLE_DCHECK_NE(&from, this);
  const Steer_command_112* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Steer_command_112>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Steer_command_112)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Steer_command_112)
    MergeFrom(*source);
  }
}

void Steer_command_112::MergeFrom(const Steer_command_112& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Steer_command_112)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steer_angle_cmd_ = from.steer_angle_cmd_;
    }
    if (cached_has_bits & 0x00000002u) {
      steer_angle_en_ctrl_ = from.steer_angle_en_ctrl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Steer_command_112::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Steer_command_112)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Steer_command_112::CopyFrom(const Steer_command_112& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Steer_command_112)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steer_command_112::IsInitialized() const {
  return true;
}

void Steer_command_112::Swap(Steer_command_112* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Steer_command_112::InternalSwap(Steer_command_112* other) {
  using std::swap;
  swap(steer_angle_cmd_, other->steer_angle_cmd_);
  swap(steer_angle_en_ctrl_, other->steer_angle_en_ctrl_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Steer_command_112::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Turnsignal_command_113::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Turnsignal_command_113::kTurnSignalCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Turnsignal_command_113::Turnsignal_command_113()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Turnsignal_command_113.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Turnsignal_command_113)
}
Turnsignal_command_113::Turnsignal_command_113(const Turnsignal_command_113& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  turn_signal_cmd_ = from.turn_signal_cmd_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Turnsignal_command_113)
}

void Turnsignal_command_113::SharedCtor() {
  turn_signal_cmd_ = 0;
}

Turnsignal_command_113::~Turnsignal_command_113() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Turnsignal_command_113)
  SharedDtor();
}

void Turnsignal_command_113::SharedDtor() {
}

void Turnsignal_command_113::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Turnsignal_command_113::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Turnsignal_command_113& Turnsignal_command_113::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Turnsignal_command_113.base);
  return *internal_default_instance();
}


void Turnsignal_command_113::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Turnsignal_command_113)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  turn_signal_cmd_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Turnsignal_command_113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Turnsignal_command_113)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType turn_signal_cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Turnsignal_command_113_Turn_signal_cmdType_IsValid(value)) {
            set_turn_signal_cmd(static_cast< ::apollo::canbus::Turnsignal_command_113_Turn_signal_cmdType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Turnsignal_command_113)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Turnsignal_command_113)
  return false;
#undef DO_
}

void Turnsignal_command_113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Turnsignal_command_113)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType turn_signal_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->turn_signal_cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Turnsignal_command_113)
}

::google::protobuf::uint8* Turnsignal_command_113::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Turnsignal_command_113)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType turn_signal_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->turn_signal_cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Turnsignal_command_113)
  return target;
}

size_t Turnsignal_command_113::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Turnsignal_command_113)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType turn_signal_cmd = 1;
  if (has_turn_signal_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->turn_signal_cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Turnsignal_command_113::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Turnsignal_command_113)
  GOOGLE_DCHECK_NE(&from, this);
  const Turnsignal_command_113* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Turnsignal_command_113>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Turnsignal_command_113)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Turnsignal_command_113)
    MergeFrom(*source);
  }
}

void Turnsignal_command_113::MergeFrom(const Turnsignal_command_113& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Turnsignal_command_113)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_turn_signal_cmd()) {
    set_turn_signal_cmd(from.turn_signal_cmd());
  }
}

void Turnsignal_command_113::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Turnsignal_command_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Turnsignal_command_113::CopyFrom(const Turnsignal_command_113& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Turnsignal_command_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Turnsignal_command_113::IsInitialized() const {
  return true;
}

void Turnsignal_command_113::Swap(Turnsignal_command_113* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Turnsignal_command_113::InternalSwap(Turnsignal_command_113* other) {
  using std::swap;
  swap(turn_signal_cmd_, other->turn_signal_cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Turnsignal_command_113::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Gear_command_114::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gear_command_114::kGearCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gear_command_114::Gear_command_114()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Gear_command_114.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Gear_command_114)
}
Gear_command_114::Gear_command_114(const Gear_command_114& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gear_cmd_ = from.gear_cmd_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Gear_command_114)
}

void Gear_command_114::SharedCtor() {
  gear_cmd_ = 1;
}

Gear_command_114::~Gear_command_114() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Gear_command_114)
  SharedDtor();
}

void Gear_command_114::SharedDtor() {
}

void Gear_command_114::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Gear_command_114::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gear_command_114& Gear_command_114::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Gear_command_114.base);
  return *internal_default_instance();
}


void Gear_command_114::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Gear_command_114)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gear_cmd_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gear_command_114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Gear_command_114)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Gear_command_114.Gear_cmdType gear_cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Gear_command_114_Gear_cmdType_IsValid(value)) {
            set_gear_cmd(static_cast< ::apollo::canbus::Gear_command_114_Gear_cmdType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Gear_command_114)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Gear_command_114)
  return false;
#undef DO_
}

void Gear_command_114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Gear_command_114)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Gear_command_114.Gear_cmdType gear_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gear_cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Gear_command_114)
}

::google::protobuf::uint8* Gear_command_114::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Gear_command_114)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Gear_command_114.Gear_cmdType gear_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gear_cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Gear_command_114)
  return target;
}

size_t Gear_command_114::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Gear_command_114)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.canbus.Gear_command_114.Gear_cmdType gear_cmd = 1;
  if (has_gear_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gear_cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gear_command_114::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Gear_command_114)
  GOOGLE_DCHECK_NE(&from, this);
  const Gear_command_114* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gear_command_114>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Gear_command_114)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Gear_command_114)
    MergeFrom(*source);
  }
}

void Gear_command_114::MergeFrom(const Gear_command_114& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Gear_command_114)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gear_cmd()) {
    set_gear_cmd(from.gear_cmd());
  }
}

void Gear_command_114::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Gear_command_114)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gear_command_114::CopyFrom(const Gear_command_114& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Gear_command_114)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_command_114::IsInitialized() const {
  return true;
}

void Gear_command_114::Swap(Gear_command_114* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gear_command_114::InternalSwap(Gear_command_114* other) {
  using std::swap;
  swap(gear_cmd_, other->gear_cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Gear_command_114::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Control_command_115::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Control_command_115::kCtrlCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Control_command_115::Control_command_115()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Control_command_115.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Control_command_115)
}
Control_command_115::Control_command_115(const Control_command_115& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ctrl_cmd_ = from.ctrl_cmd_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Control_command_115)
}

void Control_command_115::SharedCtor() {
  ctrl_cmd_ = 0;
}

Control_command_115::~Control_command_115() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Control_command_115)
  SharedDtor();
}

void Control_command_115::SharedDtor() {
}

void Control_command_115::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Control_command_115::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Control_command_115& Control_command_115::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Control_command_115.base);
  return *internal_default_instance();
}


void Control_command_115::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Control_command_115)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctrl_cmd_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Control_command_115::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Control_command_115)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Control_command_115.Ctrl_cmdType ctrl_cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Control_command_115_Ctrl_cmdType_IsValid(value)) {
            set_ctrl_cmd(static_cast< ::apollo::canbus::Control_command_115_Ctrl_cmdType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Control_command_115)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Control_command_115)
  return false;
#undef DO_
}

void Control_command_115::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Control_command_115)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Control_command_115.Ctrl_cmdType ctrl_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ctrl_cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Control_command_115)
}

::google::protobuf::uint8* Control_command_115::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Control_command_115)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Control_command_115.Ctrl_cmdType ctrl_cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ctrl_cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Control_command_115)
  return target;
}

size_t Control_command_115::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Control_command_115)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.canbus.Control_command_115.Ctrl_cmdType ctrl_cmd = 1;
  if (has_ctrl_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctrl_cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Control_command_115::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Control_command_115)
  GOOGLE_DCHECK_NE(&from, this);
  const Control_command_115* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Control_command_115>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Control_command_115)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Control_command_115)
    MergeFrom(*source);
  }
}

void Control_command_115::MergeFrom(const Control_command_115& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Control_command_115)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ctrl_cmd()) {
    set_ctrl_cmd(from.ctrl_cmd());
  }
}

void Control_command_115::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Control_command_115)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Control_command_115::CopyFrom(const Control_command_115& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Control_command_115)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Control_command_115::IsInitialized() const {
  return true;
}

void Control_command_115::Swap(Control_command_115* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Control_command_115::InternalSwap(Control_command_115* other) {
  using std::swap;
  swap(ctrl_cmd_, other->ctrl_cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Control_command_115::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Throttle_status__510::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Throttle_status__510::kThrottlePedalEnStsFieldNumber;
const int Throttle_status__510::kThrottlePedalStsFieldNumber;
const int Throttle_status__510::kDriveMotorErrFieldNumber;
const int Throttle_status__510::kBatteryBmsErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Throttle_status__510::Throttle_status__510()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Throttle_status__510.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Throttle_status__510)
}
Throttle_status__510::Throttle_status__510(const Throttle_status__510& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&throttle_pedal_en_sts_, &from.throttle_pedal_en_sts_,
    static_cast<size_t>(reinterpret_cast<char*>(&battery_bms_err_) -
    reinterpret_cast<char*>(&throttle_pedal_en_sts_)) + sizeof(battery_bms_err_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Throttle_status__510)
}

void Throttle_status__510::SharedCtor() {
  ::memset(&throttle_pedal_en_sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battery_bms_err_) -
      reinterpret_cast<char*>(&throttle_pedal_en_sts_)) + sizeof(battery_bms_err_));
}

Throttle_status__510::~Throttle_status__510() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Throttle_status__510)
  SharedDtor();
}

void Throttle_status__510::SharedDtor() {
}

void Throttle_status__510::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Throttle_status__510::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Throttle_status__510& Throttle_status__510::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Throttle_status__510.base);
  return *internal_default_instance();
}


void Throttle_status__510::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Throttle_status__510)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&throttle_pedal_en_sts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&battery_bms_err_) -
        reinterpret_cast<char*>(&throttle_pedal_en_sts_)) + sizeof(battery_bms_err_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Throttle_status__510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Throttle_status__510)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType throttle_pedal_en_sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Throttle_status__510_Throttle_pedal_en_stsType_IsValid(value)) {
            set_throttle_pedal_en_sts(static_cast< ::apollo::canbus::Throttle_status__510_Throttle_pedal_en_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 throttle_pedal_sts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_throttle_pedal_sts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &throttle_pedal_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Throttle_status__510.Drive_motor_errType drive_motor_err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Throttle_status__510_Drive_motor_errType_IsValid(value)) {
            set_drive_motor_err(static_cast< ::apollo::canbus::Throttle_status__510_Drive_motor_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Throttle_status__510.Battery_bms_errType battery_bms_err = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Throttle_status__510_Battery_bms_errType_IsValid(value)) {
            set_battery_bms_err(static_cast< ::apollo::canbus::Throttle_status__510_Battery_bms_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Throttle_status__510)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Throttle_status__510)
  return false;
#undef DO_
}

void Throttle_status__510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Throttle_status__510)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType throttle_pedal_en_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->throttle_pedal_en_sts(), output);
  }

  // optional int32 throttle_pedal_sts = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->throttle_pedal_sts(), output);
  }

  // optional .apollo.canbus.Throttle_status__510.Drive_motor_errType drive_motor_err = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->drive_motor_err(), output);
  }

  // optional .apollo.canbus.Throttle_status__510.Battery_bms_errType battery_bms_err = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->battery_bms_err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Throttle_status__510)
}

::google::protobuf::uint8* Throttle_status__510::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Throttle_status__510)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType throttle_pedal_en_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->throttle_pedal_en_sts(), target);
  }

  // optional int32 throttle_pedal_sts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->throttle_pedal_sts(), target);
  }

  // optional .apollo.canbus.Throttle_status__510.Drive_motor_errType drive_motor_err = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->drive_motor_err(), target);
  }

  // optional .apollo.canbus.Throttle_status__510.Battery_bms_errType battery_bms_err = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->battery_bms_err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Throttle_status__510)
  return target;
}

size_t Throttle_status__510::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Throttle_status__510)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType throttle_pedal_en_sts = 1;
    if (has_throttle_pedal_en_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->throttle_pedal_en_sts());
    }

    // optional int32 throttle_pedal_sts = 2;
    if (has_throttle_pedal_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->throttle_pedal_sts());
    }

    // optional .apollo.canbus.Throttle_status__510.Drive_motor_errType drive_motor_err = 3;
    if (has_drive_motor_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->drive_motor_err());
    }

    // optional .apollo.canbus.Throttle_status__510.Battery_bms_errType battery_bms_err = 4;
    if (has_battery_bms_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->battery_bms_err());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Throttle_status__510::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Throttle_status__510)
  GOOGLE_DCHECK_NE(&from, this);
  const Throttle_status__510* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Throttle_status__510>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Throttle_status__510)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Throttle_status__510)
    MergeFrom(*source);
  }
}

void Throttle_status__510::MergeFrom(const Throttle_status__510& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Throttle_status__510)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      throttle_pedal_en_sts_ = from.throttle_pedal_en_sts_;
    }
    if (cached_has_bits & 0x00000002u) {
      throttle_pedal_sts_ = from.throttle_pedal_sts_;
    }
    if (cached_has_bits & 0x00000004u) {
      drive_motor_err_ = from.drive_motor_err_;
    }
    if (cached_has_bits & 0x00000008u) {
      battery_bms_err_ = from.battery_bms_err_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Throttle_status__510::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Throttle_status__510)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Throttle_status__510::CopyFrom(const Throttle_status__510& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Throttle_status__510)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttle_status__510::IsInitialized() const {
  return true;
}

void Throttle_status__510::Swap(Throttle_status__510* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Throttle_status__510::InternalSwap(Throttle_status__510* other) {
  using std::swap;
  swap(throttle_pedal_en_sts_, other->throttle_pedal_en_sts_);
  swap(throttle_pedal_sts_, other->throttle_pedal_sts_);
  swap(drive_motor_err_, other->drive_motor_err_);
  swap(battery_bms_err_, other->battery_bms_err_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Throttle_status__510::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Brake_status__511::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Brake_status__511::kBrakePedalEnStsFieldNumber;
const int Brake_status__511::kBrakePedalStsFieldNumber;
const int Brake_status__511::kBrakeErrFieldNumber;
const int Brake_status__511::kEmergencyBtnEnvFieldNumber;
const int Brake_status__511::kFrontBumpEnvFieldNumber;
const int Brake_status__511::kBackBumpEnvFieldNumber;
const int Brake_status__511::kOverspdEnvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Brake_status__511::Brake_status__511()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Brake_status__511.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Brake_status__511)
}
Brake_status__511::Brake_status__511(const Brake_status__511& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&brake_pedal_en_sts_, &from.brake_pedal_en_sts_,
    static_cast<size_t>(reinterpret_cast<char*>(&overspd_env_) -
    reinterpret_cast<char*>(&brake_pedal_en_sts_)) + sizeof(overspd_env_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Brake_status__511)
}

void Brake_status__511::SharedCtor() {
  ::memset(&brake_pedal_en_sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overspd_env_) -
      reinterpret_cast<char*>(&brake_pedal_en_sts_)) + sizeof(overspd_env_));
}

Brake_status__511::~Brake_status__511() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Brake_status__511)
  SharedDtor();
}

void Brake_status__511::SharedDtor() {
}

void Brake_status__511::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Brake_status__511::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Brake_status__511& Brake_status__511::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Brake_status__511.base);
  return *internal_default_instance();
}


void Brake_status__511::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Brake_status__511)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&brake_pedal_en_sts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&overspd_env_) -
        reinterpret_cast<char*>(&brake_pedal_en_sts_)) + sizeof(overspd_env_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Brake_status__511::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Brake_status__511)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Brake_status__511.Brake_pedal_en_stsType brake_pedal_en_sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_status__511_Brake_pedal_en_stsType_IsValid(value)) {
            set_brake_pedal_en_sts(static_cast< ::apollo::canbus::Brake_status__511_Brake_pedal_en_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brake_pedal_sts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_brake_pedal_sts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brake_pedal_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_status__511.Brake_errType brake_err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_status__511_Brake_errType_IsValid(value)) {
            set_brake_err(static_cast< ::apollo::canbus::Brake_status__511_Brake_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_status__511.Emergency_btn_envType emergency_btn_env = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_status__511_Emergency_btn_envType_IsValid(value)) {
            set_emergency_btn_env(static_cast< ::apollo::canbus::Brake_status__511_Emergency_btn_envType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_status__511.Front_bump_envType front_bump_env = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_status__511_Front_bump_envType_IsValid(value)) {
            set_front_bump_env(static_cast< ::apollo::canbus::Brake_status__511_Front_bump_envType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_status__511.Back_bump_envType back_bump_env = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_status__511_Back_bump_envType_IsValid(value)) {
            set_back_bump_env(static_cast< ::apollo::canbus::Brake_status__511_Back_bump_envType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_status__511.Overspd_envType overspd_env = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Brake_status__511_Overspd_envType_IsValid(value)) {
            set_overspd_env(static_cast< ::apollo::canbus::Brake_status__511_Overspd_envType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Brake_status__511)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Brake_status__511)
  return false;
#undef DO_
}

void Brake_status__511::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Brake_status__511)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Brake_status__511.Brake_pedal_en_stsType brake_pedal_en_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->brake_pedal_en_sts(), output);
  }

  // optional int32 brake_pedal_sts = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->brake_pedal_sts(), output);
  }

  // optional .apollo.canbus.Brake_status__511.Brake_errType brake_err = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->brake_err(), output);
  }

  // optional .apollo.canbus.Brake_status__511.Emergency_btn_envType emergency_btn_env = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->emergency_btn_env(), output);
  }

  // optional .apollo.canbus.Brake_status__511.Front_bump_envType front_bump_env = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->front_bump_env(), output);
  }

  // optional .apollo.canbus.Brake_status__511.Back_bump_envType back_bump_env = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->back_bump_env(), output);
  }

  // optional .apollo.canbus.Brake_status__511.Overspd_envType overspd_env = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->overspd_env(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Brake_status__511)
}

::google::protobuf::uint8* Brake_status__511::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Brake_status__511)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Brake_status__511.Brake_pedal_en_stsType brake_pedal_en_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->brake_pedal_en_sts(), target);
  }

  // optional int32 brake_pedal_sts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->brake_pedal_sts(), target);
  }

  // optional .apollo.canbus.Brake_status__511.Brake_errType brake_err = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->brake_err(), target);
  }

  // optional .apollo.canbus.Brake_status__511.Emergency_btn_envType emergency_btn_env = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->emergency_btn_env(), target);
  }

  // optional .apollo.canbus.Brake_status__511.Front_bump_envType front_bump_env = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->front_bump_env(), target);
  }

  // optional .apollo.canbus.Brake_status__511.Back_bump_envType back_bump_env = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->back_bump_env(), target);
  }

  // optional .apollo.canbus.Brake_status__511.Overspd_envType overspd_env = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->overspd_env(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Brake_status__511)
  return target;
}

size_t Brake_status__511::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Brake_status__511)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .apollo.canbus.Brake_status__511.Brake_pedal_en_stsType brake_pedal_en_sts = 1;
    if (has_brake_pedal_en_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brake_pedal_en_sts());
    }

    // optional int32 brake_pedal_sts = 2;
    if (has_brake_pedal_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brake_pedal_sts());
    }

    // optional .apollo.canbus.Brake_status__511.Brake_errType brake_err = 3;
    if (has_brake_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brake_err());
    }

    // optional .apollo.canbus.Brake_status__511.Emergency_btn_envType emergency_btn_env = 4;
    if (has_emergency_btn_env()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->emergency_btn_env());
    }

    // optional .apollo.canbus.Brake_status__511.Front_bump_envType front_bump_env = 5;
    if (has_front_bump_env()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->front_bump_env());
    }

    // optional .apollo.canbus.Brake_status__511.Back_bump_envType back_bump_env = 6;
    if (has_back_bump_env()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->back_bump_env());
    }

    // optional .apollo.canbus.Brake_status__511.Overspd_envType overspd_env = 7;
    if (has_overspd_env()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->overspd_env());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Brake_status__511::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Brake_status__511)
  GOOGLE_DCHECK_NE(&from, this);
  const Brake_status__511* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Brake_status__511>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Brake_status__511)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Brake_status__511)
    MergeFrom(*source);
  }
}

void Brake_status__511::MergeFrom(const Brake_status__511& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Brake_status__511)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      brake_pedal_en_sts_ = from.brake_pedal_en_sts_;
    }
    if (cached_has_bits & 0x00000002u) {
      brake_pedal_sts_ = from.brake_pedal_sts_;
    }
    if (cached_has_bits & 0x00000004u) {
      brake_err_ = from.brake_err_;
    }
    if (cached_has_bits & 0x00000008u) {
      emergency_btn_env_ = from.emergency_btn_env_;
    }
    if (cached_has_bits & 0x00000010u) {
      front_bump_env_ = from.front_bump_env_;
    }
    if (cached_has_bits & 0x00000020u) {
      back_bump_env_ = from.back_bump_env_;
    }
    if (cached_has_bits & 0x00000040u) {
      overspd_env_ = from.overspd_env_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Brake_status__511::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Brake_status__511)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Brake_status__511::CopyFrom(const Brake_status__511& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Brake_status__511)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brake_status__511::IsInitialized() const {
  return true;
}

void Brake_status__511::Swap(Brake_status__511* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Brake_status__511::InternalSwap(Brake_status__511* other) {
  using std::swap;
  swap(brake_pedal_en_sts_, other->brake_pedal_en_sts_);
  swap(brake_pedal_sts_, other->brake_pedal_sts_);
  swap(brake_err_, other->brake_err_);
  swap(emergency_btn_env_, other->emergency_btn_env_);
  swap(front_bump_env_, other->front_bump_env_);
  swap(back_bump_env_, other->back_bump_env_);
  swap(overspd_env_, other->overspd_env_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Brake_status__511::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Steer_status__512::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Steer_status__512::kSteerAngleEnStsFieldNumber;
const int Steer_status__512::kSteerAngleStsFieldNumber;
const int Steer_status__512::kSteerErrFieldNumber;
const int Steer_status__512::kSensorErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Steer_status__512::Steer_status__512()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Steer_status__512.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Steer_status__512)
}
Steer_status__512::Steer_status__512(const Steer_status__512& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steer_angle_sts_, &from.steer_angle_sts_,
    static_cast<size_t>(reinterpret_cast<char*>(&sensor_err_) -
    reinterpret_cast<char*>(&steer_angle_sts_)) + sizeof(sensor_err_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Steer_status__512)
}

void Steer_status__512::SharedCtor() {
  ::memset(&steer_angle_sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensor_err_) -
      reinterpret_cast<char*>(&steer_angle_sts_)) + sizeof(sensor_err_));
}

Steer_status__512::~Steer_status__512() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Steer_status__512)
  SharedDtor();
}

void Steer_status__512::SharedDtor() {
}

void Steer_status__512::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Steer_status__512::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Steer_status__512& Steer_status__512::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Steer_status__512.base);
  return *internal_default_instance();
}


void Steer_status__512::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Steer_status__512)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&steer_angle_sts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sensor_err_) -
        reinterpret_cast<char*>(&steer_angle_sts_)) + sizeof(sensor_err_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Steer_status__512::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Steer_status__512)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Steer_status__512.Steer_angle_en_stsType steer_angle_en_sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Steer_status__512_Steer_angle_en_stsType_IsValid(value)) {
            set_steer_angle_en_sts(static_cast< ::apollo::canbus::Steer_status__512_Steer_angle_en_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double steer_angle_sts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steer_angle_sts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &steer_angle_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Steer_status__512.Steer_errType steer_err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Steer_status__512_Steer_errType_IsValid(value)) {
            set_steer_err(static_cast< ::apollo::canbus::Steer_status__512_Steer_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Steer_status__512.Sensor_errType sensor_err = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Steer_status__512_Sensor_errType_IsValid(value)) {
            set_sensor_err(static_cast< ::apollo::canbus::Steer_status__512_Sensor_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Steer_status__512)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Steer_status__512)
  return false;
#undef DO_
}

void Steer_status__512::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Steer_status__512)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Steer_status__512.Steer_angle_en_stsType steer_angle_en_sts = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->steer_angle_en_sts(), output);
  }

  // optional double steer_angle_sts = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->steer_angle_sts(), output);
  }

  // optional .apollo.canbus.Steer_status__512.Steer_errType steer_err = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->steer_err(), output);
  }

  // optional .apollo.canbus.Steer_status__512.Sensor_errType sensor_err = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->sensor_err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Steer_status__512)
}

::google::protobuf::uint8* Steer_status__512::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Steer_status__512)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Steer_status__512.Steer_angle_en_stsType steer_angle_en_sts = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->steer_angle_en_sts(), target);
  }

  // optional double steer_angle_sts = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->steer_angle_sts(), target);
  }

  // optional .apollo.canbus.Steer_status__512.Steer_errType steer_err = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->steer_err(), target);
  }

  // optional .apollo.canbus.Steer_status__512.Sensor_errType sensor_err = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->sensor_err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Steer_status__512)
  return target;
}

size_t Steer_status__512::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Steer_status__512)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double steer_angle_sts = 2;
    if (has_steer_angle_sts()) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Steer_status__512.Steer_angle_en_stsType steer_angle_en_sts = 1;
    if (has_steer_angle_en_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->steer_angle_en_sts());
    }

    // optional .apollo.canbus.Steer_status__512.Steer_errType steer_err = 3;
    if (has_steer_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->steer_err());
    }

    // optional .apollo.canbus.Steer_status__512.Sensor_errType sensor_err = 4;
    if (has_sensor_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sensor_err());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Steer_status__512::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Steer_status__512)
  GOOGLE_DCHECK_NE(&from, this);
  const Steer_status__512* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Steer_status__512>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Steer_status__512)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Steer_status__512)
    MergeFrom(*source);
  }
}

void Steer_status__512::MergeFrom(const Steer_status__512& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Steer_status__512)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      steer_angle_sts_ = from.steer_angle_sts_;
    }
    if (cached_has_bits & 0x00000002u) {
      steer_angle_en_sts_ = from.steer_angle_en_sts_;
    }
    if (cached_has_bits & 0x00000004u) {
      steer_err_ = from.steer_err_;
    }
    if (cached_has_bits & 0x00000008u) {
      sensor_err_ = from.sensor_err_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Steer_status__512::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Steer_status__512)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Steer_status__512::CopyFrom(const Steer_status__512& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Steer_status__512)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steer_status__512::IsInitialized() const {
  return true;
}

void Steer_status__512::Swap(Steer_status__512* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Steer_status__512::InternalSwap(Steer_status__512* other) {
  using std::swap;
  swap(steer_angle_sts_, other->steer_angle_sts_);
  swap(steer_angle_en_sts_, other->steer_angle_en_sts_);
  swap(steer_err_, other->steer_err_);
  swap(sensor_err_, other->sensor_err_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Steer_status__512::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Turnsignal_status__513::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Turnsignal_status__513::kTurnSignalStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Turnsignal_status__513::Turnsignal_status__513()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Turnsignal_status__513.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Turnsignal_status__513)
}
Turnsignal_status__513::Turnsignal_status__513(const Turnsignal_status__513& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  turn_signal_sts_ = from.turn_signal_sts_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Turnsignal_status__513)
}

void Turnsignal_status__513::SharedCtor() {
  turn_signal_sts_ = 0;
}

Turnsignal_status__513::~Turnsignal_status__513() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Turnsignal_status__513)
  SharedDtor();
}

void Turnsignal_status__513::SharedDtor() {
}

void Turnsignal_status__513::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Turnsignal_status__513::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Turnsignal_status__513& Turnsignal_status__513::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Turnsignal_status__513.base);
  return *internal_default_instance();
}


void Turnsignal_status__513::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Turnsignal_status__513)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  turn_signal_sts_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Turnsignal_status__513::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Turnsignal_status__513)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Turnsignal_status__513.Turn_signal_stsType turn_signal_sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Turnsignal_status__513_Turn_signal_stsType_IsValid(value)) {
            set_turn_signal_sts(static_cast< ::apollo::canbus::Turnsignal_status__513_Turn_signal_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Turnsignal_status__513)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Turnsignal_status__513)
  return false;
#undef DO_
}

void Turnsignal_status__513::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Turnsignal_status__513)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Turnsignal_status__513.Turn_signal_stsType turn_signal_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->turn_signal_sts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Turnsignal_status__513)
}

::google::protobuf::uint8* Turnsignal_status__513::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Turnsignal_status__513)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Turnsignal_status__513.Turn_signal_stsType turn_signal_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->turn_signal_sts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Turnsignal_status__513)
  return target;
}

size_t Turnsignal_status__513::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Turnsignal_status__513)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.canbus.Turnsignal_status__513.Turn_signal_stsType turn_signal_sts = 1;
  if (has_turn_signal_sts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->turn_signal_sts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Turnsignal_status__513::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Turnsignal_status__513)
  GOOGLE_DCHECK_NE(&from, this);
  const Turnsignal_status__513* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Turnsignal_status__513>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Turnsignal_status__513)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Turnsignal_status__513)
    MergeFrom(*source);
  }
}

void Turnsignal_status__513::MergeFrom(const Turnsignal_status__513& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Turnsignal_status__513)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_turn_signal_sts()) {
    set_turn_signal_sts(from.turn_signal_sts());
  }
}

void Turnsignal_status__513::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Turnsignal_status__513)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Turnsignal_status__513::CopyFrom(const Turnsignal_status__513& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Turnsignal_status__513)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Turnsignal_status__513::IsInitialized() const {
  return true;
}

void Turnsignal_status__513::Swap(Turnsignal_status__513* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Turnsignal_status__513::InternalSwap(Turnsignal_status__513* other) {
  using std::swap;
  swap(turn_signal_sts_, other->turn_signal_sts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Turnsignal_status__513::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Gear_status_514::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gear_status_514::kGearStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gear_status_514::Gear_status_514()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Gear_status_514.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Gear_status_514)
}
Gear_status_514::Gear_status_514(const Gear_status_514& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gear_sts_ = from.gear_sts_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Gear_status_514)
}

void Gear_status_514::SharedCtor() {
  gear_sts_ = 1;
}

Gear_status_514::~Gear_status_514() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Gear_status_514)
  SharedDtor();
}

void Gear_status_514::SharedDtor() {
}

void Gear_status_514::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Gear_status_514::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gear_status_514& Gear_status_514::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Gear_status_514.base);
  return *internal_default_instance();
}


void Gear_status_514::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Gear_status_514)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gear_sts_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gear_status_514::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Gear_status_514)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Gear_status_514.Gear_stsType gear_sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Gear_status_514_Gear_stsType_IsValid(value)) {
            set_gear_sts(static_cast< ::apollo::canbus::Gear_status_514_Gear_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Gear_status_514)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Gear_status_514)
  return false;
#undef DO_
}

void Gear_status_514::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Gear_status_514)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Gear_status_514.Gear_stsType gear_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gear_sts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Gear_status_514)
}

::google::protobuf::uint8* Gear_status_514::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Gear_status_514)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Gear_status_514.Gear_stsType gear_sts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gear_sts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Gear_status_514)
  return target;
}

size_t Gear_status_514::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Gear_status_514)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.canbus.Gear_status_514.Gear_stsType gear_sts = 1;
  if (has_gear_sts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gear_sts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gear_status_514::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Gear_status_514)
  GOOGLE_DCHECK_NE(&from, this);
  const Gear_status_514* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gear_status_514>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Gear_status_514)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Gear_status_514)
    MergeFrom(*source);
  }
}

void Gear_status_514::MergeFrom(const Gear_status_514& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Gear_status_514)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gear_sts()) {
    set_gear_sts(from.gear_sts());
  }
}

void Gear_status_514::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Gear_status_514)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gear_status_514::CopyFrom(const Gear_status_514& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Gear_status_514)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_status_514::IsInitialized() const {
  return true;
}

void Gear_status_514::Swap(Gear_status_514* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gear_status_514::InternalSwap(Gear_status_514* other) {
  using std::swap;
  swap(gear_sts_, other->gear_sts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Gear_status_514::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ecu_status_1_515::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ecu_status_1_515::kSpeedFieldNumber;
const int Ecu_status_1_515::kAccSpeedFieldNumber;
const int Ecu_status_1_515::kCtrlStsFieldNumber;
const int Ecu_status_1_515::kChassisStsFieldNumber;
const int Ecu_status_1_515::kChassisErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ecu_status_1_515::Ecu_status_1_515()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_1_515.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ecu_status_1_515)
}
Ecu_status_1_515::Ecu_status_1_515(const Ecu_status_1_515& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&speed_, &from.speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&chassis_err_) -
    reinterpret_cast<char*>(&speed_)) + sizeof(chassis_err_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ecu_status_1_515)
}

void Ecu_status_1_515::SharedCtor() {
  ::memset(&speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chassis_err_) -
      reinterpret_cast<char*>(&speed_)) + sizeof(chassis_err_));
}

Ecu_status_1_515::~Ecu_status_1_515() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ecu_status_1_515)
  SharedDtor();
}

void Ecu_status_1_515::SharedDtor() {
}

void Ecu_status_1_515::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ecu_status_1_515::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ecu_status_1_515& Ecu_status_1_515::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_1_515.base);
  return *internal_default_instance();
}


void Ecu_status_1_515::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ecu_status_1_515)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&speed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chassis_err_) -
        reinterpret_cast<char*>(&speed_)) + sizeof(chassis_err_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ecu_status_1_515::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ecu_status_1_515)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double acc_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_acc_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ecu_status_1_515.Ctrl_stsType ctrl_sts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Ecu_status_1_515_Ctrl_stsType_IsValid(value)) {
            set_ctrl_sts(static_cast< ::apollo::canbus::Ecu_status_1_515_Ctrl_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chassis_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_chassis_sts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chassis_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chassis_err = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_chassis_err();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chassis_err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ecu_status_1_515)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ecu_status_1_515)
  return false;
#undef DO_
}

void Ecu_status_1_515::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ecu_status_1_515)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double speed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->speed(), output);
  }

  // optional double acc_speed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->acc_speed(), output);
  }

  // optional .apollo.canbus.Ecu_status_1_515.Ctrl_stsType ctrl_sts = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ctrl_sts(), output);
  }

  // optional int32 chassis_sts = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->chassis_sts(), output);
  }

  // optional int32 chassis_err = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->chassis_err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ecu_status_1_515)
}

::google::protobuf::uint8* Ecu_status_1_515::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ecu_status_1_515)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double speed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->speed(), target);
  }

  // optional double acc_speed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->acc_speed(), target);
  }

  // optional .apollo.canbus.Ecu_status_1_515.Ctrl_stsType ctrl_sts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ctrl_sts(), target);
  }

  // optional int32 chassis_sts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->chassis_sts(), target);
  }

  // optional int32 chassis_err = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->chassis_err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ecu_status_1_515)
  return target;
}

size_t Ecu_status_1_515::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ecu_status_1_515)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional double speed = 1;
    if (has_speed()) {
      total_size += 1 + 8;
    }

    // optional double acc_speed = 2;
    if (has_acc_speed()) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Ecu_status_1_515.Ctrl_stsType ctrl_sts = 3;
    if (has_ctrl_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctrl_sts());
    }

    // optional int32 chassis_sts = 4;
    if (has_chassis_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chassis_sts());
    }

    // optional int32 chassis_err = 5;
    if (has_chassis_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chassis_err());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ecu_status_1_515::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ecu_status_1_515)
  GOOGLE_DCHECK_NE(&from, this);
  const Ecu_status_1_515* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ecu_status_1_515>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ecu_status_1_515)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ecu_status_1_515)
    MergeFrom(*source);
  }
}

void Ecu_status_1_515::MergeFrom(const Ecu_status_1_515& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ecu_status_1_515)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      speed_ = from.speed_;
    }
    if (cached_has_bits & 0x00000002u) {
      acc_speed_ = from.acc_speed_;
    }
    if (cached_has_bits & 0x00000004u) {
      ctrl_sts_ = from.ctrl_sts_;
    }
    if (cached_has_bits & 0x00000008u) {
      chassis_sts_ = from.chassis_sts_;
    }
    if (cached_has_bits & 0x00000010u) {
      chassis_err_ = from.chassis_err_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ecu_status_1_515::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ecu_status_1_515)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ecu_status_1_515::CopyFrom(const Ecu_status_1_515& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ecu_status_1_515)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ecu_status_1_515::IsInitialized() const {
  return true;
}

void Ecu_status_1_515::Swap(Ecu_status_1_515* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ecu_status_1_515::InternalSwap(Ecu_status_1_515* other) {
  using std::swap;
  swap(speed_, other->speed_);
  swap(acc_speed_, other->acc_speed_);
  swap(ctrl_sts_, other->ctrl_sts_);
  swap(chassis_sts_, other->chassis_sts_);
  swap(chassis_err_, other->chassis_err_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ecu_status_1_515::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ecu_status_2_516::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ecu_status_2_516::kBatterySocFieldNumber;
const int Ecu_status_2_516::kBatteryCapacityFieldNumber;
const int Ecu_status_2_516::kBatteryVoltageFieldNumber;
const int Ecu_status_2_516::kBatteryCurrentFieldNumber;
const int Ecu_status_2_516::kBatteryTemperatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ecu_status_2_516::Ecu_status_2_516()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_2_516.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ecu_status_2_516)
}
Ecu_status_2_516::Ecu_status_2_516(const Ecu_status_2_516& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battery_soc_, &from.battery_soc_,
    static_cast<size_t>(reinterpret_cast<char*>(&battery_temperature_) -
    reinterpret_cast<char*>(&battery_soc_)) + sizeof(battery_temperature_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ecu_status_2_516)
}

void Ecu_status_2_516::SharedCtor() {
  ::memset(&battery_soc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battery_temperature_) -
      reinterpret_cast<char*>(&battery_soc_)) + sizeof(battery_temperature_));
}

Ecu_status_2_516::~Ecu_status_2_516() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ecu_status_2_516)
  SharedDtor();
}

void Ecu_status_2_516::SharedDtor() {
}

void Ecu_status_2_516::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ecu_status_2_516::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ecu_status_2_516& Ecu_status_2_516::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_2_516.base);
  return *internal_default_instance();
}


void Ecu_status_2_516::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ecu_status_2_516)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&battery_soc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&battery_temperature_) -
        reinterpret_cast<char*>(&battery_soc_)) + sizeof(battery_temperature_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ecu_status_2_516::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ecu_status_2_516)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 battery_soc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_battery_soc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battery_soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 battery_capacity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_battery_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battery_capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double battery_voltage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_battery_voltage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &battery_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double battery_current = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_battery_current();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &battery_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 battery_temperature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_battery_temperature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battery_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ecu_status_2_516)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ecu_status_2_516)
  return false;
#undef DO_
}

void Ecu_status_2_516::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ecu_status_2_516)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 battery_soc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->battery_soc(), output);
  }

  // optional int32 battery_capacity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->battery_capacity(), output);
  }

  // optional double battery_voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->battery_voltage(), output);
  }

  // optional double battery_current = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->battery_current(), output);
  }

  // optional int32 battery_temperature = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->battery_temperature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ecu_status_2_516)
}

::google::protobuf::uint8* Ecu_status_2_516::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ecu_status_2_516)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 battery_soc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->battery_soc(), target);
  }

  // optional int32 battery_capacity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->battery_capacity(), target);
  }

  // optional double battery_voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->battery_voltage(), target);
  }

  // optional double battery_current = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->battery_current(), target);
  }

  // optional int32 battery_temperature = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->battery_temperature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ecu_status_2_516)
  return target;
}

size_t Ecu_status_2_516::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ecu_status_2_516)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 battery_soc = 1;
    if (has_battery_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->battery_soc());
    }

    // optional int32 battery_capacity = 2;
    if (has_battery_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->battery_capacity());
    }

    // optional double battery_voltage = 3;
    if (has_battery_voltage()) {
      total_size += 1 + 8;
    }

    // optional double battery_current = 4;
    if (has_battery_current()) {
      total_size += 1 + 8;
    }

    // optional int32 battery_temperature = 5;
    if (has_battery_temperature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->battery_temperature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ecu_status_2_516::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ecu_status_2_516)
  GOOGLE_DCHECK_NE(&from, this);
  const Ecu_status_2_516* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ecu_status_2_516>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ecu_status_2_516)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ecu_status_2_516)
    MergeFrom(*source);
  }
}

void Ecu_status_2_516::MergeFrom(const Ecu_status_2_516& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ecu_status_2_516)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      battery_soc_ = from.battery_soc_;
    }
    if (cached_has_bits & 0x00000002u) {
      battery_capacity_ = from.battery_capacity_;
    }
    if (cached_has_bits & 0x00000004u) {
      battery_voltage_ = from.battery_voltage_;
    }
    if (cached_has_bits & 0x00000008u) {
      battery_current_ = from.battery_current_;
    }
    if (cached_has_bits & 0x00000010u) {
      battery_temperature_ = from.battery_temperature_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ecu_status_2_516::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ecu_status_2_516)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ecu_status_2_516::CopyFrom(const Ecu_status_2_516& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ecu_status_2_516)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ecu_status_2_516::IsInitialized() const {
  return true;
}

void Ecu_status_2_516::Swap(Ecu_status_2_516* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ecu_status_2_516::InternalSwap(Ecu_status_2_516* other) {
  using std::swap;
  swap(battery_soc_, other->battery_soc_);
  swap(battery_capacity_, other->battery_capacity_);
  swap(battery_voltage_, other->battery_voltage_);
  swap(battery_current_, other->battery_current_);
  swap(battery_temperature_, other->battery_temperature_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ecu_status_2_516::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ecu_status_3_517::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ecu_status_3_517::kUltrasoundDist1FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist2FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist3FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist4FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist5FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist6FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist7FieldNumber;
const int Ecu_status_3_517::kUltrasoundDist8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ecu_status_3_517::Ecu_status_3_517()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_3_517.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ecu_status_3_517)
}
Ecu_status_3_517::Ecu_status_3_517(const Ecu_status_3_517& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ultrasound_dist_1_, &from.ultrasound_dist_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&ultrasound_dist_8_) -
    reinterpret_cast<char*>(&ultrasound_dist_1_)) + sizeof(ultrasound_dist_8_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ecu_status_3_517)
}

void Ecu_status_3_517::SharedCtor() {
  ::memset(&ultrasound_dist_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ultrasound_dist_8_) -
      reinterpret_cast<char*>(&ultrasound_dist_1_)) + sizeof(ultrasound_dist_8_));
}

Ecu_status_3_517::~Ecu_status_3_517() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ecu_status_3_517)
  SharedDtor();
}

void Ecu_status_3_517::SharedDtor() {
}

void Ecu_status_3_517::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ecu_status_3_517::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ecu_status_3_517& Ecu_status_3_517::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ecu_status_3_517.base);
  return *internal_default_instance();
}


void Ecu_status_3_517::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ecu_status_3_517)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&ultrasound_dist_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ultrasound_dist_8_) -
        reinterpret_cast<char*>(&ultrasound_dist_1_)) + sizeof(ultrasound_dist_8_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ecu_status_3_517::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ecu_status_3_517)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double ultrasound_dist_1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_ultrasound_dist_1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_ultrasound_dist_2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_ultrasound_dist_3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_ultrasound_dist_4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_ultrasound_dist_5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_ultrasound_dist_6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_ultrasound_dist_7();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ultrasound_dist_8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_ultrasound_dist_8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ultrasound_dist_8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ecu_status_3_517)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ecu_status_3_517)
  return false;
#undef DO_
}

void Ecu_status_3_517::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ecu_status_3_517)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double ultrasound_dist_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ultrasound_dist_1(), output);
  }

  // optional double ultrasound_dist_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ultrasound_dist_2(), output);
  }

  // optional double ultrasound_dist_3 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ultrasound_dist_3(), output);
  }

  // optional double ultrasound_dist_4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->ultrasound_dist_4(), output);
  }

  // optional double ultrasound_dist_5 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->ultrasound_dist_5(), output);
  }

  // optional double ultrasound_dist_6 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->ultrasound_dist_6(), output);
  }

  // optional double ultrasound_dist_7 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ultrasound_dist_7(), output);
  }

  // optional double ultrasound_dist_8 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->ultrasound_dist_8(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ecu_status_3_517)
}

::google::protobuf::uint8* Ecu_status_3_517::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ecu_status_3_517)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double ultrasound_dist_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ultrasound_dist_1(), target);
  }

  // optional double ultrasound_dist_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ultrasound_dist_2(), target);
  }

  // optional double ultrasound_dist_3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ultrasound_dist_3(), target);
  }

  // optional double ultrasound_dist_4 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->ultrasound_dist_4(), target);
  }

  // optional double ultrasound_dist_5 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->ultrasound_dist_5(), target);
  }

  // optional double ultrasound_dist_6 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->ultrasound_dist_6(), target);
  }

  // optional double ultrasound_dist_7 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ultrasound_dist_7(), target);
  }

  // optional double ultrasound_dist_8 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->ultrasound_dist_8(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ecu_status_3_517)
  return target;
}

size_t Ecu_status_3_517::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ecu_status_3_517)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double ultrasound_dist_1 = 1;
    if (has_ultrasound_dist_1()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_2 = 2;
    if (has_ultrasound_dist_2()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_3 = 3;
    if (has_ultrasound_dist_3()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_4 = 4;
    if (has_ultrasound_dist_4()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_5 = 5;
    if (has_ultrasound_dist_5()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_6 = 6;
    if (has_ultrasound_dist_6()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_7 = 7;
    if (has_ultrasound_dist_7()) {
      total_size += 1 + 8;
    }

    // optional double ultrasound_dist_8 = 8;
    if (has_ultrasound_dist_8()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ecu_status_3_517::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ecu_status_3_517)
  GOOGLE_DCHECK_NE(&from, this);
  const Ecu_status_3_517* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ecu_status_3_517>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ecu_status_3_517)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ecu_status_3_517)
    MergeFrom(*source);
  }
}

void Ecu_status_3_517::MergeFrom(const Ecu_status_3_517& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ecu_status_3_517)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      ultrasound_dist_1_ = from.ultrasound_dist_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      ultrasound_dist_2_ = from.ultrasound_dist_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      ultrasound_dist_3_ = from.ultrasound_dist_3_;
    }
    if (cached_has_bits & 0x00000008u) {
      ultrasound_dist_4_ = from.ultrasound_dist_4_;
    }
    if (cached_has_bits & 0x00000010u) {
      ultrasound_dist_5_ = from.ultrasound_dist_5_;
    }
    if (cached_has_bits & 0x00000020u) {
      ultrasound_dist_6_ = from.ultrasound_dist_6_;
    }
    if (cached_has_bits & 0x00000040u) {
      ultrasound_dist_7_ = from.ultrasound_dist_7_;
    }
    if (cached_has_bits & 0x00000080u) {
      ultrasound_dist_8_ = from.ultrasound_dist_8_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ecu_status_3_517::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ecu_status_3_517)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ecu_status_3_517::CopyFrom(const Ecu_status_3_517& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ecu_status_3_517)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ecu_status_3_517::IsInitialized() const {
  return true;
}

void Ecu_status_3_517::Swap(Ecu_status_3_517* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ecu_status_3_517::InternalSwap(Ecu_status_3_517* other) {
  using std::swap;
  swap(ultrasound_dist_1_, other->ultrasound_dist_1_);
  swap(ultrasound_dist_2_, other->ultrasound_dist_2_);
  swap(ultrasound_dist_3_, other->ultrasound_dist_3_);
  swap(ultrasound_dist_4_, other->ultrasound_dist_4_);
  swap(ultrasound_dist_5_, other->ultrasound_dist_5_);
  swap(ultrasound_dist_6_, other->ultrasound_dist_6_);
  swap(ultrasound_dist_7_, other->ultrasound_dist_7_);
  swap(ultrasound_dist_8_, other->ultrasound_dist_8_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ecu_status_3_517::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ch::InitAsDefaultInstance() {
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->throttle_command_110_ = const_cast< ::apollo::canbus::Throttle_command_110*>(
      ::apollo::canbus::Throttle_command_110::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->brake_command_111_ = const_cast< ::apollo::canbus::Brake_command_111*>(
      ::apollo::canbus::Brake_command_111::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->steer_command_112_ = const_cast< ::apollo::canbus::Steer_command_112*>(
      ::apollo::canbus::Steer_command_112::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->turnsignal_command_113_ = const_cast< ::apollo::canbus::Turnsignal_command_113*>(
      ::apollo::canbus::Turnsignal_command_113::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->gear_command_114_ = const_cast< ::apollo::canbus::Gear_command_114*>(
      ::apollo::canbus::Gear_command_114::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->control_command_115_ = const_cast< ::apollo::canbus::Control_command_115*>(
      ::apollo::canbus::Control_command_115::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->throttle_status__510_ = const_cast< ::apollo::canbus::Throttle_status__510*>(
      ::apollo::canbus::Throttle_status__510::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->brake_status__511_ = const_cast< ::apollo::canbus::Brake_status__511*>(
      ::apollo::canbus::Brake_status__511::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->steer_status__512_ = const_cast< ::apollo::canbus::Steer_status__512*>(
      ::apollo::canbus::Steer_status__512::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->turnsignal_status__513_ = const_cast< ::apollo::canbus::Turnsignal_status__513*>(
      ::apollo::canbus::Turnsignal_status__513::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->gear_status_514_ = const_cast< ::apollo::canbus::Gear_status_514*>(
      ::apollo::canbus::Gear_status_514::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->ecu_status_1_515_ = const_cast< ::apollo::canbus::Ecu_status_1_515*>(
      ::apollo::canbus::Ecu_status_1_515::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->ecu_status_2_516_ = const_cast< ::apollo::canbus::Ecu_status_2_516*>(
      ::apollo::canbus::Ecu_status_2_516::internal_default_instance());
  ::apollo::canbus::_Ch_default_instance_._instance.get_mutable()->ecu_status_3_517_ = const_cast< ::apollo::canbus::Ecu_status_3_517*>(
      ::apollo::canbus::Ecu_status_3_517::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ch::kThrottleCommand110FieldNumber;
const int Ch::kBrakeCommand111FieldNumber;
const int Ch::kSteerCommand112FieldNumber;
const int Ch::kTurnsignalCommand113FieldNumber;
const int Ch::kGearCommand114FieldNumber;
const int Ch::kControlCommand115FieldNumber;
const int Ch::kThrottleStatus510FieldNumber;
const int Ch::kBrakeStatus511FieldNumber;
const int Ch::kSteerStatus512FieldNumber;
const int Ch::kTurnsignalStatus513FieldNumber;
const int Ch::kGearStatus514FieldNumber;
const int Ch::kEcuStatus1515FieldNumber;
const int Ch::kEcuStatus2516FieldNumber;
const int Ch::kEcuStatus3517FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ch::Ch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ch)
}
Ch::Ch(const Ch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_throttle_command_110()) {
    throttle_command_110_ = new ::apollo::canbus::Throttle_command_110(*from.throttle_command_110_);
  } else {
    throttle_command_110_ = NULL;
  }
  if (from.has_brake_command_111()) {
    brake_command_111_ = new ::apollo::canbus::Brake_command_111(*from.brake_command_111_);
  } else {
    brake_command_111_ = NULL;
  }
  if (from.has_steer_command_112()) {
    steer_command_112_ = new ::apollo::canbus::Steer_command_112(*from.steer_command_112_);
  } else {
    steer_command_112_ = NULL;
  }
  if (from.has_turnsignal_command_113()) {
    turnsignal_command_113_ = new ::apollo::canbus::Turnsignal_command_113(*from.turnsignal_command_113_);
  } else {
    turnsignal_command_113_ = NULL;
  }
  if (from.has_gear_command_114()) {
    gear_command_114_ = new ::apollo::canbus::Gear_command_114(*from.gear_command_114_);
  } else {
    gear_command_114_ = NULL;
  }
  if (from.has_control_command_115()) {
    control_command_115_ = new ::apollo::canbus::Control_command_115(*from.control_command_115_);
  } else {
    control_command_115_ = NULL;
  }
  if (from.has_throttle_status__510()) {
    throttle_status__510_ = new ::apollo::canbus::Throttle_status__510(*from.throttle_status__510_);
  } else {
    throttle_status__510_ = NULL;
  }
  if (from.has_brake_status__511()) {
    brake_status__511_ = new ::apollo::canbus::Brake_status__511(*from.brake_status__511_);
  } else {
    brake_status__511_ = NULL;
  }
  if (from.has_steer_status__512()) {
    steer_status__512_ = new ::apollo::canbus::Steer_status__512(*from.steer_status__512_);
  } else {
    steer_status__512_ = NULL;
  }
  if (from.has_turnsignal_status__513()) {
    turnsignal_status__513_ = new ::apollo::canbus::Turnsignal_status__513(*from.turnsignal_status__513_);
  } else {
    turnsignal_status__513_ = NULL;
  }
  if (from.has_gear_status_514()) {
    gear_status_514_ = new ::apollo::canbus::Gear_status_514(*from.gear_status_514_);
  } else {
    gear_status_514_ = NULL;
  }
  if (from.has_ecu_status_1_515()) {
    ecu_status_1_515_ = new ::apollo::canbus::Ecu_status_1_515(*from.ecu_status_1_515_);
  } else {
    ecu_status_1_515_ = NULL;
  }
  if (from.has_ecu_status_2_516()) {
    ecu_status_2_516_ = new ::apollo::canbus::Ecu_status_2_516(*from.ecu_status_2_516_);
  } else {
    ecu_status_2_516_ = NULL;
  }
  if (from.has_ecu_status_3_517()) {
    ecu_status_3_517_ = new ::apollo::canbus::Ecu_status_3_517(*from.ecu_status_3_517_);
  } else {
    ecu_status_3_517_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ch)
}

void Ch::SharedCtor() {
  ::memset(&throttle_command_110_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ecu_status_3_517_) -
      reinterpret_cast<char*>(&throttle_command_110_)) + sizeof(ecu_status_3_517_));
}

Ch::~Ch() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ch)
  SharedDtor();
}

void Ch::SharedDtor() {
  if (this != internal_default_instance()) delete throttle_command_110_;
  if (this != internal_default_instance()) delete brake_command_111_;
  if (this != internal_default_instance()) delete steer_command_112_;
  if (this != internal_default_instance()) delete turnsignal_command_113_;
  if (this != internal_default_instance()) delete gear_command_114_;
  if (this != internal_default_instance()) delete control_command_115_;
  if (this != internal_default_instance()) delete throttle_status__510_;
  if (this != internal_default_instance()) delete brake_status__511_;
  if (this != internal_default_instance()) delete steer_status__512_;
  if (this != internal_default_instance()) delete turnsignal_status__513_;
  if (this != internal_default_instance()) delete gear_status_514_;
  if (this != internal_default_instance()) delete ecu_status_1_515_;
  if (this != internal_default_instance()) delete ecu_status_2_516_;
  if (this != internal_default_instance()) delete ecu_status_3_517_;
}

void Ch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ch::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ch& Ch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2fch_2eproto::scc_info_Ch.base);
  return *internal_default_instance();
}


void Ch::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(throttle_command_110_ != NULL);
      throttle_command_110_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(brake_command_111_ != NULL);
      brake_command_111_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(steer_command_112_ != NULL);
      steer_command_112_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(turnsignal_command_113_ != NULL);
      turnsignal_command_113_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(gear_command_114_ != NULL);
      gear_command_114_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(control_command_115_ != NULL);
      control_command_115_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(throttle_status__510_ != NULL);
      throttle_status__510_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(brake_status__511_ != NULL);
      brake_status__511_->Clear();
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(steer_status__512_ != NULL);
      steer_status__512_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(turnsignal_status__513_ != NULL);
      turnsignal_status__513_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(gear_status_514_ != NULL);
      gear_status_514_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(ecu_status_1_515_ != NULL);
      ecu_status_1_515_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(ecu_status_2_516_ != NULL);
      ecu_status_2_516_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(ecu_status_3_517_ != NULL);
      ecu_status_3_517_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Ch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Throttle_command_110 throttle_command_110 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_throttle_command_110()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_command_111 brake_command_111 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brake_command_111()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Steer_command_112 steer_command_112 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_steer_command_112()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Turnsignal_command_113 turnsignal_command_113 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_turnsignal_command_113()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Gear_command_114 gear_command_114 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gear_command_114()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Control_command_115 control_command_115 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_command_115()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Throttle_status__510 throttle_status__510 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_throttle_status__510()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Brake_status__511 brake_status__511 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brake_status__511()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Steer_status__512 steer_status__512 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_steer_status__512()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Turnsignal_status__513 turnsignal_status__513 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_turnsignal_status__513()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Gear_status_514 gear_status_514 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gear_status_514()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ecu_status_1_515 ecu_status_1_515 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ecu_status_1_515()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ecu_status_2_516 ecu_status_2_516 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ecu_status_2_516()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Ecu_status_3_517 ecu_status_3_517 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ecu_status_3_517()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Ch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Ch)
  return false;
#undef DO_
}

void Ch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Throttle_command_110 throttle_command_110 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_throttle_command_110(), output);
  }

  // optional .apollo.canbus.Brake_command_111 brake_command_111 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_brake_command_111(), output);
  }

  // optional .apollo.canbus.Steer_command_112 steer_command_112 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_steer_command_112(), output);
  }

  // optional .apollo.canbus.Turnsignal_command_113 turnsignal_command_113 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_turnsignal_command_113(), output);
  }

  // optional .apollo.canbus.Gear_command_114 gear_command_114 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_gear_command_114(), output);
  }

  // optional .apollo.canbus.Control_command_115 control_command_115 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_control_command_115(), output);
  }

  // optional .apollo.canbus.Throttle_status__510 throttle_status__510 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_throttle_status__510(), output);
  }

  // optional .apollo.canbus.Brake_status__511 brake_status__511 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_brake_status__511(), output);
  }

  // optional .apollo.canbus.Steer_status__512 steer_status__512 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_steer_status__512(), output);
  }

  // optional .apollo.canbus.Turnsignal_status__513 turnsignal_status__513 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_turnsignal_status__513(), output);
  }

  // optional .apollo.canbus.Gear_status_514 gear_status_514 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_gear_status_514(), output);
  }

  // optional .apollo.canbus.Ecu_status_1_515 ecu_status_1_515 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_ecu_status_1_515(), output);
  }

  // optional .apollo.canbus.Ecu_status_2_516 ecu_status_2_516 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_ecu_status_2_516(), output);
  }

  // optional .apollo.canbus.Ecu_status_3_517 ecu_status_3_517 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_ecu_status_3_517(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Ch)
}

::google::protobuf::uint8* Ch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Throttle_command_110 throttle_command_110 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_throttle_command_110(), deterministic, target);
  }

  // optional .apollo.canbus.Brake_command_111 brake_command_111 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_brake_command_111(), deterministic, target);
  }

  // optional .apollo.canbus.Steer_command_112 steer_command_112 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_steer_command_112(), deterministic, target);
  }

  // optional .apollo.canbus.Turnsignal_command_113 turnsignal_command_113 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_turnsignal_command_113(), deterministic, target);
  }

  // optional .apollo.canbus.Gear_command_114 gear_command_114 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_gear_command_114(), deterministic, target);
  }

  // optional .apollo.canbus.Control_command_115 control_command_115 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_control_command_115(), deterministic, target);
  }

  // optional .apollo.canbus.Throttle_status__510 throttle_status__510 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_throttle_status__510(), deterministic, target);
  }

  // optional .apollo.canbus.Brake_status__511 brake_status__511 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_brake_status__511(), deterministic, target);
  }

  // optional .apollo.canbus.Steer_status__512 steer_status__512 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_steer_status__512(), deterministic, target);
  }

  // optional .apollo.canbus.Turnsignal_status__513 turnsignal_status__513 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_turnsignal_status__513(), deterministic, target);
  }

  // optional .apollo.canbus.Gear_status_514 gear_status_514 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_gear_status_514(), deterministic, target);
  }

  // optional .apollo.canbus.Ecu_status_1_515 ecu_status_1_515 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_ecu_status_1_515(), deterministic, target);
  }

  // optional .apollo.canbus.Ecu_status_2_516 ecu_status_2_516 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_ecu_status_2_516(), deterministic, target);
  }

  // optional .apollo.canbus.Ecu_status_3_517 ecu_status_3_517 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_ecu_status_3_517(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ch)
  return target;
}

size_t Ch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Throttle_command_110 throttle_command_110 = 1;
    if (has_throttle_command_110()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *throttle_command_110_);
    }

    // optional .apollo.canbus.Brake_command_111 brake_command_111 = 2;
    if (has_brake_command_111()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *brake_command_111_);
    }

    // optional .apollo.canbus.Steer_command_112 steer_command_112 = 3;
    if (has_steer_command_112()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *steer_command_112_);
    }

    // optional .apollo.canbus.Turnsignal_command_113 turnsignal_command_113 = 4;
    if (has_turnsignal_command_113()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *turnsignal_command_113_);
    }

    // optional .apollo.canbus.Gear_command_114 gear_command_114 = 5;
    if (has_gear_command_114()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *gear_command_114_);
    }

    // optional .apollo.canbus.Control_command_115 control_command_115 = 6;
    if (has_control_command_115()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *control_command_115_);
    }

    // optional .apollo.canbus.Throttle_status__510 throttle_status__510 = 7;
    if (has_throttle_status__510()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *throttle_status__510_);
    }

    // optional .apollo.canbus.Brake_status__511 brake_status__511 = 8;
    if (has_brake_status__511()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *brake_status__511_);
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional .apollo.canbus.Steer_status__512 steer_status__512 = 9;
    if (has_steer_status__512()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *steer_status__512_);
    }

    // optional .apollo.canbus.Turnsignal_status__513 turnsignal_status__513 = 10;
    if (has_turnsignal_status__513()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *turnsignal_status__513_);
    }

    // optional .apollo.canbus.Gear_status_514 gear_status_514 = 11;
    if (has_gear_status_514()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *gear_status_514_);
    }

    // optional .apollo.canbus.Ecu_status_1_515 ecu_status_1_515 = 12;
    if (has_ecu_status_1_515()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ecu_status_1_515_);
    }

    // optional .apollo.canbus.Ecu_status_2_516 ecu_status_2_516 = 13;
    if (has_ecu_status_2_516()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ecu_status_2_516_);
    }

    // optional .apollo.canbus.Ecu_status_3_517 ecu_status_3_517 = 14;
    if (has_ecu_status_3_517()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ecu_status_3_517_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ch)
  GOOGLE_DCHECK_NE(&from, this);
  const Ch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ch)
    MergeFrom(*source);
  }
}

void Ch::MergeFrom(const Ch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_throttle_command_110()->::apollo::canbus::Throttle_command_110::MergeFrom(from.throttle_command_110());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_brake_command_111()->::apollo::canbus::Brake_command_111::MergeFrom(from.brake_command_111());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_steer_command_112()->::apollo::canbus::Steer_command_112::MergeFrom(from.steer_command_112());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_turnsignal_command_113()->::apollo::canbus::Turnsignal_command_113::MergeFrom(from.turnsignal_command_113());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_gear_command_114()->::apollo::canbus::Gear_command_114::MergeFrom(from.gear_command_114());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_control_command_115()->::apollo::canbus::Control_command_115::MergeFrom(from.control_command_115());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_throttle_status__510()->::apollo::canbus::Throttle_status__510::MergeFrom(from.throttle_status__510());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_brake_status__511()->::apollo::canbus::Brake_status__511::MergeFrom(from.brake_status__511());
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_steer_status__512()->::apollo::canbus::Steer_status__512::MergeFrom(from.steer_status__512());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_turnsignal_status__513()->::apollo::canbus::Turnsignal_status__513::MergeFrom(from.turnsignal_status__513());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_gear_status_514()->::apollo::canbus::Gear_status_514::MergeFrom(from.gear_status_514());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_ecu_status_1_515()->::apollo::canbus::Ecu_status_1_515::MergeFrom(from.ecu_status_1_515());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_ecu_status_2_516()->::apollo::canbus::Ecu_status_2_516::MergeFrom(from.ecu_status_2_516());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_ecu_status_3_517()->::apollo::canbus::Ecu_status_3_517::MergeFrom(from.ecu_status_3_517());
    }
  }
}

void Ch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ch::CopyFrom(const Ch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ch::IsInitialized() const {
  return true;
}

void Ch::Swap(Ch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ch::InternalSwap(Ch* other) {
  using std::swap;
  swap(throttle_command_110_, other->throttle_command_110_);
  swap(brake_command_111_, other->brake_command_111_);
  swap(steer_command_112_, other->steer_command_112_);
  swap(turnsignal_command_113_, other->turnsignal_command_113_);
  swap(gear_command_114_, other->gear_command_114_);
  swap(control_command_115_, other->control_command_115_);
  swap(throttle_status__510_, other->throttle_status__510_);
  swap(brake_status__511_, other->brake_status__511_);
  swap(steer_status__512_, other->steer_status__512_);
  swap(turnsignal_status__513_, other->turnsignal_status__513_);
  swap(gear_status_514_, other->gear_status_514_);
  swap(ecu_status_1_515_, other->ecu_status_1_515_);
  swap(ecu_status_2_516_, other->ecu_status_2_516_);
  swap(ecu_status_3_517_, other->ecu_status_3_517_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ch::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2fch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Throttle_command_110* Arena::CreateMaybeMessage< ::apollo::canbus::Throttle_command_110 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Throttle_command_110 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Brake_command_111* Arena::CreateMaybeMessage< ::apollo::canbus::Brake_command_111 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Brake_command_111 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Steer_command_112* Arena::CreateMaybeMessage< ::apollo::canbus::Steer_command_112 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Steer_command_112 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Turnsignal_command_113* Arena::CreateMaybeMessage< ::apollo::canbus::Turnsignal_command_113 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Turnsignal_command_113 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Gear_command_114* Arena::CreateMaybeMessage< ::apollo::canbus::Gear_command_114 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Gear_command_114 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Control_command_115* Arena::CreateMaybeMessage< ::apollo::canbus::Control_command_115 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Control_command_115 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Throttle_status__510* Arena::CreateMaybeMessage< ::apollo::canbus::Throttle_status__510 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Throttle_status__510 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Brake_status__511* Arena::CreateMaybeMessage< ::apollo::canbus::Brake_status__511 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Brake_status__511 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Steer_status__512* Arena::CreateMaybeMessage< ::apollo::canbus::Steer_status__512 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Steer_status__512 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Turnsignal_status__513* Arena::CreateMaybeMessage< ::apollo::canbus::Turnsignal_status__513 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Turnsignal_status__513 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Gear_status_514* Arena::CreateMaybeMessage< ::apollo::canbus::Gear_status_514 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Gear_status_514 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ecu_status_1_515* Arena::CreateMaybeMessage< ::apollo::canbus::Ecu_status_1_515 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ecu_status_1_515 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ecu_status_2_516* Arena::CreateMaybeMessage< ::apollo::canbus::Ecu_status_2_516 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ecu_status_2_516 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ecu_status_3_517* Arena::CreateMaybeMessage< ::apollo::canbus::Ecu_status_3_517 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ecu_status_3_517 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Ch* Arena::CreateMaybeMessage< ::apollo::canbus::Ch >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ch >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

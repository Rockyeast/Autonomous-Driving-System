// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/transit.proto

#include "modules/canbus/proto/transit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Adc_auxiliarycontrol_110;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Adc_motioncontrol1_10;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Adc_motioncontrollimits1_12;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_auxiliaryfeedback_120;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_diag_brakecontrol_721;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_diag_fault_620;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_diag_steeringcontrol_722;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_motioncommandfeedback1_22;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_motionfeedback1_20;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_motionfeedback2_21;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_vehiclelimits_24;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Llc_vehiclestatus_25;
}  // namespace protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto
namespace apollo {
namespace canbus {
class Llc_vehiclelimits_24DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_vehiclelimits_24>
      _instance;
} _Llc_vehiclelimits_24_default_instance_;
class Adc_motioncontrol1_10DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Adc_motioncontrol1_10>
      _instance;
} _Adc_motioncontrol1_10_default_instance_;
class Adc_motioncontrollimits1_12DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Adc_motioncontrollimits1_12>
      _instance;
} _Adc_motioncontrollimits1_12_default_instance_;
class Llc_motionfeedback1_20DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_motionfeedback1_20>
      _instance;
} _Llc_motionfeedback1_20_default_instance_;
class Llc_motionfeedback2_21DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_motionfeedback2_21>
      _instance;
} _Llc_motionfeedback2_21_default_instance_;
class Llc_motioncommandfeedback1_22DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_motioncommandfeedback1_22>
      _instance;
} _Llc_motioncommandfeedback1_22_default_instance_;
class Llc_vehiclestatus_25DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_vehiclestatus_25>
      _instance;
} _Llc_vehiclestatus_25_default_instance_;
class Llc_auxiliaryfeedback_120DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_auxiliaryfeedback_120>
      _instance;
} _Llc_auxiliaryfeedback_120_default_instance_;
class Llc_diag_fault_620DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_diag_fault_620>
      _instance;
} _Llc_diag_fault_620_default_instance_;
class Llc_diag_steeringcontrol_722DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_diag_steeringcontrol_722>
      _instance;
} _Llc_diag_steeringcontrol_722_default_instance_;
class Adc_auxiliarycontrol_110DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Adc_auxiliarycontrol_110>
      _instance;
} _Adc_auxiliarycontrol_110_default_instance_;
class Llc_diag_brakecontrol_721DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Llc_diag_brakecontrol_721>
      _instance;
} _Llc_diag_brakecontrol_721_default_instance_;
class TransitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transit>
      _instance;
} _Transit_default_instance_;
}  // namespace canbus
}  // namespace apollo
namespace protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto {
static void InitDefaultsLlc_vehiclelimits_24() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_vehiclelimits_24_default_instance_;
    new (ptr) ::apollo::canbus::Llc_vehiclelimits_24();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_vehiclelimits_24::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_vehiclelimits_24 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_vehiclelimits_24}, {}};

static void InitDefaultsAdc_motioncontrol1_10() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Adc_motioncontrol1_10_default_instance_;
    new (ptr) ::apollo::canbus::Adc_motioncontrol1_10();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Adc_motioncontrol1_10::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Adc_motioncontrol1_10 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdc_motioncontrol1_10}, {}};

static void InitDefaultsAdc_motioncontrollimits1_12() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Adc_motioncontrollimits1_12_default_instance_;
    new (ptr) ::apollo::canbus::Adc_motioncontrollimits1_12();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Adc_motioncontrollimits1_12::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Adc_motioncontrollimits1_12 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdc_motioncontrollimits1_12}, {}};

static void InitDefaultsLlc_motionfeedback1_20() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_motionfeedback1_20_default_instance_;
    new (ptr) ::apollo::canbus::Llc_motionfeedback1_20();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_motionfeedback1_20::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_motionfeedback1_20 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_motionfeedback1_20}, {}};

static void InitDefaultsLlc_motionfeedback2_21() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_motionfeedback2_21_default_instance_;
    new (ptr) ::apollo::canbus::Llc_motionfeedback2_21();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_motionfeedback2_21::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_motionfeedback2_21 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_motionfeedback2_21}, {}};

static void InitDefaultsLlc_motioncommandfeedback1_22() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_motioncommandfeedback1_22_default_instance_;
    new (ptr) ::apollo::canbus::Llc_motioncommandfeedback1_22();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_motioncommandfeedback1_22::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_motioncommandfeedback1_22 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_motioncommandfeedback1_22}, {}};

static void InitDefaultsLlc_vehiclestatus_25() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_vehiclestatus_25_default_instance_;
    new (ptr) ::apollo::canbus::Llc_vehiclestatus_25();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_vehiclestatus_25::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_vehiclestatus_25 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_vehiclestatus_25}, {}};

static void InitDefaultsLlc_auxiliaryfeedback_120() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_auxiliaryfeedback_120_default_instance_;
    new (ptr) ::apollo::canbus::Llc_auxiliaryfeedback_120();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_auxiliaryfeedback_120::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_auxiliaryfeedback_120 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_auxiliaryfeedback_120}, {}};

static void InitDefaultsLlc_diag_fault_620() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_diag_fault_620_default_instance_;
    new (ptr) ::apollo::canbus::Llc_diag_fault_620();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_diag_fault_620::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_diag_fault_620 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_diag_fault_620}, {}};

static void InitDefaultsLlc_diag_steeringcontrol_722() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_diag_steeringcontrol_722_default_instance_;
    new (ptr) ::apollo::canbus::Llc_diag_steeringcontrol_722();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_diag_steeringcontrol_722::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_diag_steeringcontrol_722 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_diag_steeringcontrol_722}, {}};

static void InitDefaultsAdc_auxiliarycontrol_110() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Adc_auxiliarycontrol_110_default_instance_;
    new (ptr) ::apollo::canbus::Adc_auxiliarycontrol_110();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Adc_auxiliarycontrol_110::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Adc_auxiliarycontrol_110 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdc_auxiliarycontrol_110}, {}};

static void InitDefaultsLlc_diag_brakecontrol_721() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Llc_diag_brakecontrol_721_default_instance_;
    new (ptr) ::apollo::canbus::Llc_diag_brakecontrol_721();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Llc_diag_brakecontrol_721::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Llc_diag_brakecontrol_721 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLlc_diag_brakecontrol_721}, {}};

static void InitDefaultsTransit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Transit_default_instance_;
    new (ptr) ::apollo::canbus::Transit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Transit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<12> scc_info_Transit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 12, InitDefaultsTransit}, {
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_vehiclelimits_24.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_motioncontrol1_10.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_motioncontrollimits1_12.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motionfeedback1_20.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motionfeedback2_21.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motioncommandfeedback1_22.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_vehiclestatus_25.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_auxiliaryfeedback_120.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_fault_620.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_steeringcontrol_722.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_auxiliarycontrol_110.base,
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_brakecontrol_721.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_vehiclelimits_24.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Adc_motioncontrol1_10.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Adc_motioncontrollimits1_12.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_motionfeedback1_20.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_motionfeedback2_21.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_motioncommandfeedback1_22.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_vehiclestatus_25.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_auxiliaryfeedback_120.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_diag_fault_620.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_diag_steeringcontrol_722.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Adc_auxiliarycontrol_110.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Llc_diag_brakecontrol_721.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transit.base);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclelimits_24, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclelimits_24, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclelimits_24, llc_fbk_maxsteeringangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclelimits_24, llc_fbk_maxbrakepercent_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_steerwheelangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_steeringcontrolmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_parkingbrake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_gear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_motioncontrol1_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_brakepercentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_throttleposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_motioncontrol1_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_autonomyrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrol1_10, adc_cmd_longitudinalcontrolmode_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrollimits1_12, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrollimits1_12, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrollimits1_12, adc_cmd_throttlecommandlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrollimits1_12, adc_cmd_steeringrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_motioncontrollimits1_12, adc_cmd_steerwheelanglelimit_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_gear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_parkingbrake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_throttleposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_brakepercentrear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_brakepercentfront_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_steeringcontrolmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_motionfeedback1_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_motionfeedback1_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_commandaligned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_estoppressed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_adcrequestautonomy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_allowautonomy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_longitudinalcontrolmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback1_20, llc_fbk_state_),
  1,
  7,
  0,
  3,
  4,
  2,
  5,
  6,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, llc_fbk_vehiclespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, llc_motionfeedback2_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, llc_motionfeedback2_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, llc_fbk_steeringrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motionfeedback2_21, llc_fbk_steeringangle_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, llc_fbk_steeringanglesetpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, llc_fbk_throttlesetpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, llc_fbk_brakepercentsetpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, llc_motioncommandfeedback1_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_motioncommandfeedback1_22, llc_motioncommandfeedback1_check_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclestatus_25, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclestatus_25, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_vehiclestatus_25, llc_fbk_12voltage_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_inverter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_pdu_ch1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_hazardlights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_ledgreenon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_horn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_buzzeron_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_turnsignal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_lowbeam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_highbeam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_ledredon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_auxiliaryfeedback_120, llc_fbk_autonomybuttonpressed_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  12,
  14,
  15,
  16,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_disengagecounter_brake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_disengagecounter_steer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_disengagecounter_throttle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_fbk_faultcounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_disengagecounter_button_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_fbk_version_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_fbk_version_month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_fbk_version_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_fault_620, llc_fbk_version_hour_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_steeringcontrol_722, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_steeringcontrol_722, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_steeringcontrol_722, llc_dbg_steeringsensorposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_steeringcontrol_722, llc_dbg_steeringrackinputtorque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_steeringcontrol_722, llc_dbg_steeringmotorposition_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_auxcontrol_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_auxcontrol_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_inverter_controlenable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_inverter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_wiper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_controlenable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_pdu_ch1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_hazardlights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_highbeam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_lowbeam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_horn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Adc_auxiliarycontrol_110, adc_cmd_turnsignal_),
  0,
  1,
  3,
  4,
  2,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, llc_dbg_brakepidcontribution_p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, llc_dbg_brakepidcontribution_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, llc_dbg_brakepidcontribution_d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, llc_dbg_brakepid_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, llc_dbg_brakepid_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Llc_diag_brakecontrol_721, llc_dbg_brakefeedforward_),
  0,
  1,
  2,
  3,
  5,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_vehiclelimits_24_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, adc_motioncontrol1_10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, adc_motioncontrollimits1_12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_motionfeedback1_20_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_motionfeedback2_21_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_motioncommandfeedback1_22_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_vehiclestatus_25_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_auxiliaryfeedback_120_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_diag_fault_620_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_diag_steeringcontrol_722_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, adc_auxiliarycontrol_110_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::canbus::Transit, llc_diag_brakecontrol_721_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::canbus::Llc_vehiclelimits_24)},
  { 9, 24, sizeof(::apollo::canbus::Adc_motioncontrol1_10)},
  { 34, 42, sizeof(::apollo::canbus::Adc_motioncontrollimits1_12)},
  { 45, 64, sizeof(::apollo::canbus::Llc_motionfeedback1_20)},
  { 78, 88, sizeof(::apollo::canbus::Llc_motionfeedback2_21)},
  { 93, 103, sizeof(::apollo::canbus::Llc_motioncommandfeedback1_22)},
  { 108, 114, sizeof(::apollo::canbus::Llc_vehiclestatus_25)},
  { 115, 138, sizeof(::apollo::canbus::Llc_auxiliaryfeedback_120)},
  { 156, 170, sizeof(::apollo::canbus::Llc_diag_fault_620)},
  { 179, 187, sizeof(::apollo::canbus::Llc_diag_steeringcontrol_722)},
  { 190, 214, sizeof(::apollo::canbus::Adc_auxiliarycontrol_110)},
  { 233, 244, sizeof(::apollo::canbus::Llc_diag_brakecontrol_721)},
  { 250, 267, sizeof(::apollo::canbus::Transit)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_vehiclelimits_24_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Adc_motioncontrol1_10_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Adc_motioncontrollimits1_12_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_motionfeedback1_20_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_motionfeedback2_21_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_motioncommandfeedback1_22_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_vehiclestatus_25_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_auxiliaryfeedback_120_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_diag_fault_620_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_diag_steeringcontrol_722_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Adc_auxiliarycontrol_110_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Llc_diag_brakecontrol_721_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::canbus::_Transit_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/canbus/proto/transit.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"modules/canbus/proto/transit.proto\022\rap"
      "ollo.canbus\"Y\n\024Llc_vehiclelimits_24\022 \n\030l"
      "lc_fbk_maxsteeringangle\030\001 \001(\005\022\037\n\027llc_fbk"
      "_maxbrakepercent\030\002 \001(\001\"\231\013\n\025Adc_motioncon"
      "trol1_10\022\037\n\027adc_cmd_steerwheelangle\030\001 \001("
      "\001\022i\n\033adc_cmd_steeringcontrolmode\030\002 \001(\0162D"
      ".apollo.canbus.Adc_motioncontrol1_10.Adc"
      "_cmd_steeringcontrolmodeType\022\034\n\024adc_cmd_"
      "parkingbrake\030\003 \001(\010\022K\n\014adc_cmd_gear\030\004 \001(\016"
      "25.apollo.canbus.Adc_motioncontrol1_10.A"
      "dc_cmd_gearType\022#\n\033adc_motioncontrol1_ch"
      "ecksum\030\005 \001(\005\022\037\n\027adc_cmd_brakepercentage\030"
      "\006 \001(\001\022 \n\030adc_cmd_throttleposition\030\007 \001(\001\022"
      "\"\n\032adc_motioncontrol1_counter\030\010 \001(\005\022a\n\027a"
      "dc_cmd_autonomyrequest\030\t \001(\0162@.apollo.ca"
      "nbus.Adc_motioncontrol1_10.Adc_cmd_auton"
      "omyrequestType\022q\n\037adc_cmd_longitudinalco"
      "ntrolmode\030\n \001(\0162H.apollo.canbus.Adc_moti"
      "oncontrol1_10.Adc_cmd_longitudinalcontro"
      "lmodeType\"\314\001\n\037Adc_cmd_steeringcontrolmod"
      "eType\022$\n ADC_CMD_STEERINGCONTROLMODE_NON"
      "E\020\000\022%\n!ADC_CMD_STEERINGCONTROLMODE_ANGLE"
      "\020\001\0222\n.ADC_CMD_STEERINGCONTROLMODE_RESERV"
      "ED_CURVATURE\020\002\022(\n$ADC_CMD_STEERINGCONTRO"
      "LMODE_RESERVED\020\003\"}\n\020Adc_cmd_gearType\022\027\n\023"
      "ADC_CMD_GEAR_P_PARK\020\000\022\030\n\024ADC_CMD_GEAR_D_"
      "DRIVE\020\001\022\032\n\026ADC_CMD_GEAR_N_NEUTRAL\020\002\022\032\n\026A"
      "DC_CMD_GEAR_R_REVERSE\020\003\"\317\001\n\033Adc_cmd_auto"
      "nomyrequestType\0222\n.ADC_CMD_AUTONOMYREQUE"
      "ST_AUTONOMY_NOT_REQUESTED\020\000\022.\n*ADC_CMD_A"
      "UTONOMYREQUEST_AUTONOMY_REQUESTED\020\001\022%\n!A"
      "DC_CMD_AUTONOMYREQUEST_RESERVED0\020\002\022%\n!AD"
      "C_CMD_AUTONOMYREQUEST_RESERVED1\020\003\"\206\002\n#Ad"
      "c_cmd_longitudinalcontrolmodeType\022(\n$ADC"
      "_CMD_LONGITUDINALCONTROLMODE_NONE\020\000\022F\nBA"
      "DC_CMD_LONGITUDINALCONTROLMODE_RESERVED_"
      "VELOCITY_AND_ACCELERATION\020\001\0222\n.ADC_CMD_L"
      "ONGITUDINALCONTROLMODE_RESERVED_FORCE\020\002\022"
      "9\n5ADC_CMD_LONGITUDINALCONTROLMODE_DIREC"
      "T_THROTTLE_BRAKE\020\003\"\207\001\n\033Adc_motioncontrol"
      "limits1_12\022$\n\034adc_cmd_throttlecommandlim"
      "it\030\001 \001(\001\022\034\n\024adc_cmd_steeringrate\030\002 \001(\001\022$"
      "\n\034adc_cmd_steerwheelanglelimit\030\003 \001(\001\"\305\016\n"
      "\026Llc_motionfeedback1_20\022L\n\014llc_fbk_gear\030"
      "\001 \001(\01626.apollo.canbus.Llc_motionfeedback"
      "1_20.Llc_fbk_gearType\022\034\n\024llc_fbk_parking"
      "brake\030\002 \001(\010\022 \n\030llc_fbk_throttleposition\030"
      "\003 \001(\001\022 \n\030llc_fbk_brakepercentrear\030\004 \001(\001\022"
      "!\n\031llc_fbk_brakepercentfront\030\005 \001(\001\022j\n\033ll"
      "c_fbk_steeringcontrolmode\030\006 \001(\0162E.apollo"
      ".canbus.Llc_motionfeedback1_20.Llc_fbk_s"
      "teeringcontrolmodeType\022#\n\033llc_motionfeed"
      "back1_counter\030\007 \001(\005\022$\n\034llc_motionfeedbac"
      "k1_checksum\030\010 \001(\005\022\036\n\026llc_fbk_commandalig"
      "ned\030\t \001(\010\022\034\n\024llc_fbk_estoppressed\030\n \001(\010\022"
      "\"\n\032llc_fbk_adcrequestautonomy\030\013 \001(\010\022\035\n\025l"
      "lc_fbk_allowautonomy\030\014 \001(\010\022r\n\037llc_fbk_lo"
      "ngitudinalcontrolmode\030\r \001(\0162I.apollo.can"
      "bus.Llc_motionfeedback1_20.Llc_fbk_longi"
      "tudinalcontrolmodeType\022N\n\rllc_fbk_state\030"
      "\016 \001(\01627.apollo.canbus.Llc_motionfeedback"
      "1_20.Llc_fbk_stateType\"}\n\020Llc_fbk_gearTy"
      "pe\022\027\n\023LLC_FBK_GEAR_P_PARK\020\000\022\030\n\024LLC_FBK_G"
      "EAR_D_DRIVE\020\001\022\032\n\026LLC_FBK_GEAR_N_NEUTRAL\020"
      "\002\022\032\n\026LLC_FBK_GEAR_R_REVERSE\020\003\"\314\001\n\037Llc_fb"
      "k_steeringcontrolmodeType\022$\n LLC_FBK_STE"
      "ERINGCONTROLMODE_NONE\020\000\022%\n!LLC_FBK_STEER"
      "INGCONTROLMODE_ANGLE\020\001\0222\n.LLC_FBK_STEERI"
      "NGCONTROLMODE_RESERVED_CURVATURE\020\002\022(\n$LL"
      "C_FBK_STEERINGCONTROLMODE_RESERVED\020\003\"\206\002\n"
      "#Llc_fbk_longitudinalcontrolmodeType\022(\n$"
      "LLC_FBK_LONGITUDINALCONTROLMODE_NONE\020\000\022F"
      "\nBLLC_FBK_LONGITUDINALCONTROLMODE_RESERV"
      "ED_VELOCITY_AND_ACCELERATION\020\001\0222\n.LLC_FB"
      "K_LONGITUDINALCONTROLMODE_RESERVED_FORCE"
      "\020\002\0229\n5LLC_FBK_LONGITUDINALCONTROLMODE_DI"
      "RECT_THROTTLE_BRAKE\020\003\"\204\004\n\021Llc_fbk_stateT"
      "ype\022\033\n\027LLC_FBK_STATE_RESERVED0\020\000\022&\n\"LLC_"
      "FBK_STATE_AUTONOMY_NOT_ALLOWED\020\001\022\"\n\036LLC_"
      "FBK_STATE_AUTONOMY_ALLOWED\020\002\022$\n LLC_FBK_"
      "STATE_AUTONOMY_REQUESTED\020\003\022\032\n\026LLC_FBK_ST"
      "ATE_AUTONOMY\020\004\022\033\n\027LLC_FBK_STATE_RESERVED"
      "1\020\005\022\033\n\027LLC_FBK_STATE_RESERVED2\020\006\022\033\n\027LLC_"
      "FBK_STATE_RESERVED3\020\007\022\033\n\027LLC_FBK_STATE_R"
      "ESERVED4\020\010\022\033\n\027LLC_FBK_STATE_RESERVED5\020\t\022"
      "\033\n\027LLC_FBK_STATE_RESERVED6\020\n\022\033\n\027LLC_FBK_"
      "STATE_RESERVED7\020\013\022\033\n\027LLC_FBK_STATE_RESER"
      "VED8\020\014\022%\n!LLC_FBK_STATE_DISENGAGE_REQUES"
      "TED\020\r\022\034\n\030LLC_FBK_STATE_DISENGAGED\020\016\022\027\n\023L"
      "LC_FBK_STATE_FAULT\020\017\"\276\001\n\026Llc_motionfeedb"
      "ack2_21\022\034\n\024llc_fbk_vehiclespeed\030\001 \001(\001\022#\n"
      "\033llc_motionfeedback2_counter\030\002 \001(\005\022$\n\034ll"
      "c_motionfeedback2_checksum\030\003 \001(\005\022\034\n\024llc_"
      "fbk_steeringrate\030\004 \001(\001\022\035\n\025llc_fbk_steeri"
      "ngangle\030\005 \001(\001\"\342\001\n\035Llc_motioncommandfeedb"
      "ack1_22\022%\n\035llc_fbk_steeringanglesetpoint"
      "\030\001 \001(\001\022 \n\030llc_fbk_throttlesetpoint\030\002 \001(\001"
      "\022$\n\034llc_fbk_brakepercentsetpoint\030\003 \001(\001\022("
      "\n llc_motioncommandfeedback1_count\030\004 \001(\005"
      "\022(\n llc_motioncommandfeedback1_check\030\005 \001"
      "(\005\"1\n\024Llc_vehiclestatus_25\022\031\n\021llc_fbk_12"
      "voltage\030\001 \001(\001\"\313\005\n\031Llc_auxiliaryfeedback_"
      "120\022\030\n\020llc_fbk_inverter\030\001 \001(\010\022\027\n\017llc_fbk"
      "_pdu_ch8\030\002 \001(\010\022\027\n\017llc_fbk_pdu_ch7\030\003 \001(\010\022"
      "\027\n\017llc_fbk_pdu_ch6\030\004 \001(\010\022\027\n\017llc_fbk_pdu_"
      "ch5\030\005 \001(\010\022\027\n\017llc_fbk_pdu_ch4\030\006 \001(\010\022\027\n\017ll"
      "c_fbk_pdu_ch3\030\007 \001(\010\022\027\n\017llc_fbk_pdu_ch2\030\010"
      " \001(\010\022\027\n\017llc_fbk_pdu_ch1\030\t \001(\010\022\034\n\024llc_fbk"
      "_hazardlights\030\n \001(\010\022\032\n\022llc_fbk_ledgreeno"
      "n\030\013 \001(\010\022\024\n\014llc_fbk_horn\030\014 \001(\010\022\030\n\020llc_fbk"
      "_buzzeron\030\r \001(\010\022[\n\022llc_fbk_turnsignal\030\016 "
      "\001(\0162\?.apollo.canbus.Llc_auxiliaryfeedbac"
      "k_120.Llc_fbk_turnsignalType\022\027\n\017llc_fbk_"
      "lowbeam\030\017 \001(\010\022\030\n\020llc_fbk_highbeam\030\020 \001(\010\022"
      "\030\n\020llc_fbk_ledredon\030\021 \001(\010\022%\n\035llc_fbk_aut"
      "onomybuttonpressed\030\022 \001(\010\"\220\001\n\026Llc_fbk_tur"
      "nsignalType\022\033\n\027LLC_FBK_TURNSIGNAL_NONE\020\000"
      "\022\033\n\027LLC_FBK_TURNSIGNAL_LEFT\020\001\022\034\n\030LLC_FBK"
      "_TURNSIGNAL_RIGHT\020\002\022\036\n\032LLC_FBK_TURNSIGNA"
      "L_RESERVE\020\003\"\276\002\n\022Llc_diag_fault_620\022\"\n\032ll"
      "c_disengagecounter_brake\030\001 \001(\005\022\"\n\032llc_di"
      "sengagecounter_steer\030\002 \001(\005\022%\n\035llc_diseng"
      "agecounter_throttle\030\003 \001(\005\022\034\n\024llc_fbk_fau"
      "ltcounter\030\004 \001(\005\022#\n\033llc_disengagecounter_"
      "button\030\005 \001(\005\022\034\n\024llc_fbk_version_year\030\006 \001"
      "(\005\022\035\n\025llc_fbk_version_month\030\007 \001(\005\022\033\n\023llc"
      "_fbk_version_day\030\010 \001(\005\022\034\n\024llc_fbk_versio"
      "n_hour\030\t \001(\005\"\226\001\n\034Llc_diag_steeringcontro"
      "l_722\022&\n\036llc_dbg_steeringsensorposition\030"
      "\001 \001(\001\022\'\n\037llc_dbg_steeringrackinputtorque"
      "\030\002 \001(\005\022%\n\035llc_dbg_steeringmotorposition\030"
      "\003 \001(\001\"\365\005\n\030Adc_auxiliarycontrol_110\022\036\n\026ad"
      "c_auxcontrol_counter\030\001 \001(\005\022\037\n\027adc_auxcon"
      "trol_checksum\030\002 \001(\005\022&\n\036adc_cmd_inverter_"
      "controlenable\030\003 \001(\010\022\030\n\020adc_cmd_inverter\030"
      "\004 \001(\010\022\025\n\radc_cmd_wiper\030\005 \001(\005\022!\n\031adc_cmd_"
      "pdu_controlenable\030\006 \001(\010\022\027\n\017adc_cmd_pdu_c"
      "h8\030\007 \001(\010\022\027\n\017adc_cmd_pdu_ch7\030\010 \001(\010\022\027\n\017adc"
      "_cmd_pdu_ch6\030\t \001(\010\022\027\n\017adc_cmd_pdu_ch5\030\n "
      "\001(\010\022\027\n\017adc_cmd_pdu_ch4\030\013 \001(\010\022\027\n\017adc_cmd_"
      "pdu_ch3\030\014 \001(\010\022\027\n\017adc_cmd_pdu_ch2\030\r \001(\010\022\027"
      "\n\017adc_cmd_pdu_ch1\030\016 \001(\010\022\034\n\024adc_cmd_hazar"
      "dlights\030\017 \001(\010\022\030\n\020adc_cmd_highbeam\030\020 \001(\010\022"
      "\027\n\017adc_cmd_lowbeam\030\021 \001(\010\022\024\n\014adc_cmd_horn"
      "\030\022 \001(\010\022Z\n\022adc_cmd_turnsignal\030\023 \001(\0162>.apo"
      "llo.canbus.Adc_auxiliarycontrol_110.Adc_"
      "cmd_turnsignalType\"\220\001\n\026Adc_cmd_turnsigna"
      "lType\022\033\n\027ADC_CMD_TURNSIGNAL_NONE\020\000\022\033\n\027AD"
      "C_CMD_TURNSIGNAL_LEFT\020\001\022\034\n\030ADC_CMD_TURNS"
      "IGNAL_RIGHT\020\002\022\036\n\032ADC_CMD_TURNSIGNAL_RESE"
      "RVE\020\003\"\366\001\n\031Llc_diag_brakecontrol_721\022&\n\036l"
      "lc_dbg_brakepidcontribution_p\030\001 \001(\001\022&\n\036l"
      "lc_dbg_brakepidcontribution_i\030\002 \001(\001\022&\n\036l"
      "lc_dbg_brakepidcontribution_d\030\003 \001(\001\022\037\n\027l"
      "lc_dbg_brakepid_output\030\004 \001(\001\022\036\n\026llc_dbg_"
      "brakepid_error\030\005 \001(\005\022 \n\030llc_dbg_brakefee"
      "dforward\030\006 \001(\001\"\377\006\n\007Transit\022A\n\024llc_vehicl"
      "elimits_24\030\001 \001(\0132#.apollo.canbus.Llc_veh"
      "iclelimits_24\022C\n\025adc_motioncontrol1_10\030\002"
      " \001(\0132$.apollo.canbus.Adc_motioncontrol1_"
      "10\022O\n\033adc_motioncontrollimits1_12\030\003 \001(\0132"
      "*.apollo.canbus.Adc_motioncontrollimits1"
      "_12\022E\n\026llc_motionfeedback1_20\030\004 \001(\0132%.ap"
      "ollo.canbus.Llc_motionfeedback1_20\022E\n\026ll"
      "c_motionfeedback2_21\030\005 \001(\0132%.apollo.canb"
      "us.Llc_motionfeedback2_21\022S\n\035llc_motionc"
      "ommandfeedback1_22\030\006 \001(\0132,.apollo.canbus"
      ".Llc_motioncommandfeedback1_22\022A\n\024llc_ve"
      "hiclestatus_25\030\007 \001(\0132#.apollo.canbus.Llc"
      "_vehiclestatus_25\022K\n\031llc_auxiliaryfeedba"
      "ck_120\030\010 \001(\0132(.apollo.canbus.Llc_auxilia"
      "ryfeedback_120\022=\n\022llc_diag_fault_620\030\t \001"
      "(\0132!.apollo.canbus.Llc_diag_fault_620\022Q\n"
      "\034llc_diag_steeringcontrol_722\030\n \001(\0132+.ap"
      "ollo.canbus.Llc_diag_steeringcontrol_722"
      "\022I\n\030adc_auxiliarycontrol_110\030\013 \001(\0132\'.apo"
      "llo.canbus.Adc_auxiliarycontrol_110\022K\n\031l"
      "lc_diag_brakecontrol_721\030\014 \001(\0132(.apollo."
      "canbus.Llc_diag_brakecontrol_721"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7152);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/canbus/proto/transit.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto
namespace apollo {
namespace canbus {
const ::google::protobuf::EnumDescriptor* Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[0];
}
bool Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_STEERINGCONTROLMODE_NONE;
const Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_STEERINGCONTROLMODE_ANGLE;
const Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_STEERINGCONTROLMODE_RESERVED_CURVATURE;
const Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_STEERINGCONTROLMODE_RESERVED;
const Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType Adc_motioncontrol1_10::Adc_cmd_steeringcontrolmodeType_MIN;
const Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType Adc_motioncontrol1_10::Adc_cmd_steeringcontrolmodeType_MAX;
const int Adc_motioncontrol1_10::Adc_cmd_steeringcontrolmodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adc_motioncontrol1_10_Adc_cmd_gearType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[1];
}
bool Adc_motioncontrol1_10_Adc_cmd_gearType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adc_motioncontrol1_10_Adc_cmd_gearType Adc_motioncontrol1_10::ADC_CMD_GEAR_P_PARK;
const Adc_motioncontrol1_10_Adc_cmd_gearType Adc_motioncontrol1_10::ADC_CMD_GEAR_D_DRIVE;
const Adc_motioncontrol1_10_Adc_cmd_gearType Adc_motioncontrol1_10::ADC_CMD_GEAR_N_NEUTRAL;
const Adc_motioncontrol1_10_Adc_cmd_gearType Adc_motioncontrol1_10::ADC_CMD_GEAR_R_REVERSE;
const Adc_motioncontrol1_10_Adc_cmd_gearType Adc_motioncontrol1_10::Adc_cmd_gearType_MIN;
const Adc_motioncontrol1_10_Adc_cmd_gearType Adc_motioncontrol1_10::Adc_cmd_gearType_MAX;
const int Adc_motioncontrol1_10::Adc_cmd_gearType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[2];
}
bool Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType Adc_motioncontrol1_10::ADC_CMD_AUTONOMYREQUEST_AUTONOMY_NOT_REQUESTED;
const Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType Adc_motioncontrol1_10::ADC_CMD_AUTONOMYREQUEST_AUTONOMY_REQUESTED;
const Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType Adc_motioncontrol1_10::ADC_CMD_AUTONOMYREQUEST_RESERVED0;
const Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType Adc_motioncontrol1_10::ADC_CMD_AUTONOMYREQUEST_RESERVED1;
const Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType Adc_motioncontrol1_10::Adc_cmd_autonomyrequestType_MIN;
const Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType Adc_motioncontrol1_10::Adc_cmd_autonomyrequestType_MAX;
const int Adc_motioncontrol1_10::Adc_cmd_autonomyrequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[3];
}
bool Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_LONGITUDINALCONTROLMODE_NONE;
const Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_LONGITUDINALCONTROLMODE_RESERVED_VELOCITY_AND_ACCELERATION;
const Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_LONGITUDINALCONTROLMODE_RESERVED_FORCE;
const Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType Adc_motioncontrol1_10::ADC_CMD_LONGITUDINALCONTROLMODE_DIRECT_THROTTLE_BRAKE;
const Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType Adc_motioncontrol1_10::Adc_cmd_longitudinalcontrolmodeType_MIN;
const Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType Adc_motioncontrol1_10::Adc_cmd_longitudinalcontrolmodeType_MAX;
const int Adc_motioncontrol1_10::Adc_cmd_longitudinalcontrolmodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Llc_motionfeedback1_20_Llc_fbk_gearType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[4];
}
bool Llc_motionfeedback1_20_Llc_fbk_gearType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Llc_motionfeedback1_20_Llc_fbk_gearType Llc_motionfeedback1_20::LLC_FBK_GEAR_P_PARK;
const Llc_motionfeedback1_20_Llc_fbk_gearType Llc_motionfeedback1_20::LLC_FBK_GEAR_D_DRIVE;
const Llc_motionfeedback1_20_Llc_fbk_gearType Llc_motionfeedback1_20::LLC_FBK_GEAR_N_NEUTRAL;
const Llc_motionfeedback1_20_Llc_fbk_gearType Llc_motionfeedback1_20::LLC_FBK_GEAR_R_REVERSE;
const Llc_motionfeedback1_20_Llc_fbk_gearType Llc_motionfeedback1_20::Llc_fbk_gearType_MIN;
const Llc_motionfeedback1_20_Llc_fbk_gearType Llc_motionfeedback1_20::Llc_fbk_gearType_MAX;
const int Llc_motionfeedback1_20::Llc_fbk_gearType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[5];
}
bool Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_STEERINGCONTROLMODE_NONE;
const Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_STEERINGCONTROLMODE_ANGLE;
const Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_STEERINGCONTROLMODE_RESERVED_CURVATURE;
const Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_STEERINGCONTROLMODE_RESERVED;
const Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType Llc_motionfeedback1_20::Llc_fbk_steeringcontrolmodeType_MIN;
const Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType Llc_motionfeedback1_20::Llc_fbk_steeringcontrolmodeType_MAX;
const int Llc_motionfeedback1_20::Llc_fbk_steeringcontrolmodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[6];
}
bool Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_LONGITUDINALCONTROLMODE_NONE;
const Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_LONGITUDINALCONTROLMODE_RESERVED_VELOCITY_AND_ACCELERATION;
const Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_LONGITUDINALCONTROLMODE_RESERVED_FORCE;
const Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType Llc_motionfeedback1_20::LLC_FBK_LONGITUDINALCONTROLMODE_DIRECT_THROTTLE_BRAKE;
const Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType Llc_motionfeedback1_20::Llc_fbk_longitudinalcontrolmodeType_MIN;
const Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType Llc_motionfeedback1_20::Llc_fbk_longitudinalcontrolmodeType_MAX;
const int Llc_motionfeedback1_20::Llc_fbk_longitudinalcontrolmodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Llc_motionfeedback1_20_Llc_fbk_stateType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[7];
}
bool Llc_motionfeedback1_20_Llc_fbk_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED0;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_AUTONOMY_NOT_ALLOWED;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_AUTONOMY_ALLOWED;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_AUTONOMY_REQUESTED;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_AUTONOMY;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED1;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED2;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED3;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED4;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED5;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED6;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED7;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_RESERVED8;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_DISENGAGE_REQUESTED;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_DISENGAGED;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::LLC_FBK_STATE_FAULT;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::Llc_fbk_stateType_MIN;
const Llc_motionfeedback1_20_Llc_fbk_stateType Llc_motionfeedback1_20::Llc_fbk_stateType_MAX;
const int Llc_motionfeedback1_20::Llc_fbk_stateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[8];
}
bool Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType Llc_auxiliaryfeedback_120::LLC_FBK_TURNSIGNAL_NONE;
const Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType Llc_auxiliaryfeedback_120::LLC_FBK_TURNSIGNAL_LEFT;
const Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType Llc_auxiliaryfeedback_120::LLC_FBK_TURNSIGNAL_RIGHT;
const Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType Llc_auxiliaryfeedback_120::LLC_FBK_TURNSIGNAL_RESERVE;
const Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType Llc_auxiliaryfeedback_120::Llc_fbk_turnsignalType_MIN;
const Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType Llc_auxiliaryfeedback_120::Llc_fbk_turnsignalType_MAX;
const int Llc_auxiliaryfeedback_120::Llc_fbk_turnsignalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_enum_descriptors[9];
}
bool Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType Adc_auxiliarycontrol_110::ADC_CMD_TURNSIGNAL_NONE;
const Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType Adc_auxiliarycontrol_110::ADC_CMD_TURNSIGNAL_LEFT;
const Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType Adc_auxiliarycontrol_110::ADC_CMD_TURNSIGNAL_RIGHT;
const Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType Adc_auxiliarycontrol_110::ADC_CMD_TURNSIGNAL_RESERVE;
const Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType Adc_auxiliarycontrol_110::Adc_cmd_turnsignalType_MIN;
const Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType Adc_auxiliarycontrol_110::Adc_cmd_turnsignalType_MAX;
const int Adc_auxiliarycontrol_110::Adc_cmd_turnsignalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Llc_vehiclelimits_24::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_vehiclelimits_24::kLlcFbkMaxsteeringangleFieldNumber;
const int Llc_vehiclelimits_24::kLlcFbkMaxbrakepercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_vehiclelimits_24::Llc_vehiclelimits_24()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_vehiclelimits_24.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_vehiclelimits_24)
}
Llc_vehiclelimits_24::Llc_vehiclelimits_24(const Llc_vehiclelimits_24& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_fbk_maxbrakepercent_, &from.llc_fbk_maxbrakepercent_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_fbk_maxsteeringangle_) -
    reinterpret_cast<char*>(&llc_fbk_maxbrakepercent_)) + sizeof(llc_fbk_maxsteeringangle_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_vehiclelimits_24)
}

void Llc_vehiclelimits_24::SharedCtor() {
  ::memset(&llc_fbk_maxbrakepercent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_fbk_maxsteeringangle_) -
      reinterpret_cast<char*>(&llc_fbk_maxbrakepercent_)) + sizeof(llc_fbk_maxsteeringangle_));
}

Llc_vehiclelimits_24::~Llc_vehiclelimits_24() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_vehiclelimits_24)
  SharedDtor();
}

void Llc_vehiclelimits_24::SharedDtor() {
}

void Llc_vehiclelimits_24::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_vehiclelimits_24::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_vehiclelimits_24& Llc_vehiclelimits_24::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_vehiclelimits_24.base);
  return *internal_default_instance();
}


void Llc_vehiclelimits_24::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_vehiclelimits_24)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&llc_fbk_maxbrakepercent_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_maxsteeringangle_) -
        reinterpret_cast<char*>(&llc_fbk_maxbrakepercent_)) + sizeof(llc_fbk_maxsteeringangle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_vehiclelimits_24::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_vehiclelimits_24)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 llc_fbk_maxsteeringangle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_llc_fbk_maxsteeringangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_fbk_maxsteeringangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_maxbrakepercent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_llc_fbk_maxbrakepercent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_maxbrakepercent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_vehiclelimits_24)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_vehiclelimits_24)
  return false;
#undef DO_
}

void Llc_vehiclelimits_24::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_vehiclelimits_24)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 llc_fbk_maxsteeringangle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->llc_fbk_maxsteeringangle(), output);
  }

  // optional double llc_fbk_maxbrakepercent = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->llc_fbk_maxbrakepercent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_vehiclelimits_24)
}

::google::protobuf::uint8* Llc_vehiclelimits_24::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_vehiclelimits_24)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 llc_fbk_maxsteeringangle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->llc_fbk_maxsteeringangle(), target);
  }

  // optional double llc_fbk_maxbrakepercent = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->llc_fbk_maxbrakepercent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_vehiclelimits_24)
  return target;
}

size_t Llc_vehiclelimits_24::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_vehiclelimits_24)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double llc_fbk_maxbrakepercent = 2;
    if (has_llc_fbk_maxbrakepercent()) {
      total_size += 1 + 8;
    }

    // optional int32 llc_fbk_maxsteeringangle = 1;
    if (has_llc_fbk_maxsteeringangle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_fbk_maxsteeringangle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_vehiclelimits_24::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_vehiclelimits_24)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_vehiclelimits_24* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_vehiclelimits_24>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_vehiclelimits_24)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_vehiclelimits_24)
    MergeFrom(*source);
  }
}

void Llc_vehiclelimits_24::MergeFrom(const Llc_vehiclelimits_24& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_vehiclelimits_24)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      llc_fbk_maxbrakepercent_ = from.llc_fbk_maxbrakepercent_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_fbk_maxsteeringangle_ = from.llc_fbk_maxsteeringangle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_vehiclelimits_24::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_vehiclelimits_24)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_vehiclelimits_24::CopyFrom(const Llc_vehiclelimits_24& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_vehiclelimits_24)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_vehiclelimits_24::IsInitialized() const {
  return true;
}

void Llc_vehiclelimits_24::Swap(Llc_vehiclelimits_24* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_vehiclelimits_24::InternalSwap(Llc_vehiclelimits_24* other) {
  using std::swap;
  swap(llc_fbk_maxbrakepercent_, other->llc_fbk_maxbrakepercent_);
  swap(llc_fbk_maxsteeringangle_, other->llc_fbk_maxsteeringangle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_vehiclelimits_24::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Adc_motioncontrol1_10::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adc_motioncontrol1_10::kAdcCmdSteerwheelangleFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdSteeringcontrolmodeFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdParkingbrakeFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdGearFieldNumber;
const int Adc_motioncontrol1_10::kAdcMotioncontrol1ChecksumFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdBrakepercentageFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdThrottlepositionFieldNumber;
const int Adc_motioncontrol1_10::kAdcMotioncontrol1CounterFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdAutonomyrequestFieldNumber;
const int Adc_motioncontrol1_10::kAdcCmdLongitudinalcontrolmodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adc_motioncontrol1_10::Adc_motioncontrol1_10()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_motioncontrol1_10.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Adc_motioncontrol1_10)
}
Adc_motioncontrol1_10::Adc_motioncontrol1_10(const Adc_motioncontrol1_10& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adc_cmd_steerwheelangle_, &from.adc_cmd_steerwheelangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&adc_cmd_longitudinalcontrolmode_) -
    reinterpret_cast<char*>(&adc_cmd_steerwheelangle_)) + sizeof(adc_cmd_longitudinalcontrolmode_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Adc_motioncontrol1_10)
}

void Adc_motioncontrol1_10::SharedCtor() {
  ::memset(&adc_cmd_steerwheelangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adc_cmd_longitudinalcontrolmode_) -
      reinterpret_cast<char*>(&adc_cmd_steerwheelangle_)) + sizeof(adc_cmd_longitudinalcontrolmode_));
}

Adc_motioncontrol1_10::~Adc_motioncontrol1_10() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Adc_motioncontrol1_10)
  SharedDtor();
}

void Adc_motioncontrol1_10::SharedDtor() {
}

void Adc_motioncontrol1_10::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Adc_motioncontrol1_10::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adc_motioncontrol1_10& Adc_motioncontrol1_10::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_motioncontrol1_10.base);
  return *internal_default_instance();
}


void Adc_motioncontrol1_10::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Adc_motioncontrol1_10)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&adc_cmd_steerwheelangle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_motioncontrol1_counter_) -
        reinterpret_cast<char*>(&adc_cmd_steerwheelangle_)) + sizeof(adc_motioncontrol1_counter_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&adc_cmd_autonomyrequest_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_cmd_longitudinalcontrolmode_) -
        reinterpret_cast<char*>(&adc_cmd_autonomyrequest_)) + sizeof(adc_cmd_longitudinalcontrolmode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adc_motioncontrol1_10::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Adc_motioncontrol1_10)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double adc_cmd_steerwheelangle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_adc_cmd_steerwheelangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_cmd_steerwheelangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_steeringcontrolmodeType adc_cmd_steeringcontrolmode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType_IsValid(value)) {
            set_adc_cmd_steeringcontrolmode(static_cast< ::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_steeringcontrolmodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_parkingbrake = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_adc_cmd_parkingbrake();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_parkingbrake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_gearType adc_cmd_gear = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_gearType_IsValid(value)) {
            set_adc_cmd_gear(static_cast< ::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_gearType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adc_motioncontrol1_checksum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_adc_motioncontrol1_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adc_motioncontrol1_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adc_cmd_brakepercentage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_adc_cmd_brakepercentage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_cmd_brakepercentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adc_cmd_throttleposition = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_adc_cmd_throttleposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_cmd_throttleposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adc_motioncontrol1_counter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_adc_motioncontrol1_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adc_motioncontrol1_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_autonomyrequestType adc_cmd_autonomyrequest = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType_IsValid(value)) {
            set_adc_cmd_autonomyrequest(static_cast< ::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_autonomyrequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_longitudinalcontrolmodeType adc_cmd_longitudinalcontrolmode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType_IsValid(value)) {
            set_adc_cmd_longitudinalcontrolmode(static_cast< ::apollo::canbus::Adc_motioncontrol1_10_Adc_cmd_longitudinalcontrolmodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Adc_motioncontrol1_10)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Adc_motioncontrol1_10)
  return false;
#undef DO_
}

void Adc_motioncontrol1_10::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Adc_motioncontrol1_10)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double adc_cmd_steerwheelangle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->adc_cmd_steerwheelangle(), output);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_steeringcontrolmodeType adc_cmd_steeringcontrolmode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->adc_cmd_steeringcontrolmode(), output);
  }

  // optional bool adc_cmd_parkingbrake = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->adc_cmd_parkingbrake(), output);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_gearType adc_cmd_gear = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->adc_cmd_gear(), output);
  }

  // optional int32 adc_motioncontrol1_checksum = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->adc_motioncontrol1_checksum(), output);
  }

  // optional double adc_cmd_brakepercentage = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->adc_cmd_brakepercentage(), output);
  }

  // optional double adc_cmd_throttleposition = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->adc_cmd_throttleposition(), output);
  }

  // optional int32 adc_motioncontrol1_counter = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->adc_motioncontrol1_counter(), output);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_autonomyrequestType adc_cmd_autonomyrequest = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->adc_cmd_autonomyrequest(), output);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_longitudinalcontrolmodeType adc_cmd_longitudinalcontrolmode = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->adc_cmd_longitudinalcontrolmode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Adc_motioncontrol1_10)
}

::google::protobuf::uint8* Adc_motioncontrol1_10::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Adc_motioncontrol1_10)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double adc_cmd_steerwheelangle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->adc_cmd_steerwheelangle(), target);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_steeringcontrolmodeType adc_cmd_steeringcontrolmode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->adc_cmd_steeringcontrolmode(), target);
  }

  // optional bool adc_cmd_parkingbrake = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->adc_cmd_parkingbrake(), target);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_gearType adc_cmd_gear = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->adc_cmd_gear(), target);
  }

  // optional int32 adc_motioncontrol1_checksum = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->adc_motioncontrol1_checksum(), target);
  }

  // optional double adc_cmd_brakepercentage = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->adc_cmd_brakepercentage(), target);
  }

  // optional double adc_cmd_throttleposition = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->adc_cmd_throttleposition(), target);
  }

  // optional int32 adc_motioncontrol1_counter = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->adc_motioncontrol1_counter(), target);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_autonomyrequestType adc_cmd_autonomyrequest = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->adc_cmd_autonomyrequest(), target);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_longitudinalcontrolmodeType adc_cmd_longitudinalcontrolmode = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->adc_cmd_longitudinalcontrolmode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Adc_motioncontrol1_10)
  return target;
}

size_t Adc_motioncontrol1_10::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Adc_motioncontrol1_10)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double adc_cmd_steerwheelangle = 1;
    if (has_adc_cmd_steerwheelangle()) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_steeringcontrolmodeType adc_cmd_steeringcontrolmode = 2;
    if (has_adc_cmd_steeringcontrolmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adc_cmd_steeringcontrolmode());
    }

    // optional bool adc_cmd_parkingbrake = 3;
    if (has_adc_cmd_parkingbrake()) {
      total_size += 1 + 1;
    }

    // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_gearType adc_cmd_gear = 4;
    if (has_adc_cmd_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adc_cmd_gear());
    }

    // optional int32 adc_motioncontrol1_checksum = 5;
    if (has_adc_motioncontrol1_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adc_motioncontrol1_checksum());
    }

    // optional double adc_cmd_brakepercentage = 6;
    if (has_adc_cmd_brakepercentage()) {
      total_size += 1 + 8;
    }

    // optional double adc_cmd_throttleposition = 7;
    if (has_adc_cmd_throttleposition()) {
      total_size += 1 + 8;
    }

    // optional int32 adc_motioncontrol1_counter = 8;
    if (has_adc_motioncontrol1_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adc_motioncontrol1_counter());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_autonomyrequestType adc_cmd_autonomyrequest = 9;
    if (has_adc_cmd_autonomyrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adc_cmd_autonomyrequest());
    }

    // optional .apollo.canbus.Adc_motioncontrol1_10.Adc_cmd_longitudinalcontrolmodeType adc_cmd_longitudinalcontrolmode = 10;
    if (has_adc_cmd_longitudinalcontrolmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adc_cmd_longitudinalcontrolmode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Adc_motioncontrol1_10::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Adc_motioncontrol1_10)
  GOOGLE_DCHECK_NE(&from, this);
  const Adc_motioncontrol1_10* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adc_motioncontrol1_10>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Adc_motioncontrol1_10)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Adc_motioncontrol1_10)
    MergeFrom(*source);
  }
}

void Adc_motioncontrol1_10::MergeFrom(const Adc_motioncontrol1_10& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Adc_motioncontrol1_10)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      adc_cmd_steerwheelangle_ = from.adc_cmd_steerwheelangle_;
    }
    if (cached_has_bits & 0x00000002u) {
      adc_cmd_steeringcontrolmode_ = from.adc_cmd_steeringcontrolmode_;
    }
    if (cached_has_bits & 0x00000004u) {
      adc_cmd_parkingbrake_ = from.adc_cmd_parkingbrake_;
    }
    if (cached_has_bits & 0x00000008u) {
      adc_cmd_gear_ = from.adc_cmd_gear_;
    }
    if (cached_has_bits & 0x00000010u) {
      adc_motioncontrol1_checksum_ = from.adc_motioncontrol1_checksum_;
    }
    if (cached_has_bits & 0x00000020u) {
      adc_cmd_brakepercentage_ = from.adc_cmd_brakepercentage_;
    }
    if (cached_has_bits & 0x00000040u) {
      adc_cmd_throttleposition_ = from.adc_cmd_throttleposition_;
    }
    if (cached_has_bits & 0x00000080u) {
      adc_motioncontrol1_counter_ = from.adc_motioncontrol1_counter_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      adc_cmd_autonomyrequest_ = from.adc_cmd_autonomyrequest_;
    }
    if (cached_has_bits & 0x00000200u) {
      adc_cmd_longitudinalcontrolmode_ = from.adc_cmd_longitudinalcontrolmode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adc_motioncontrol1_10::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Adc_motioncontrol1_10)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adc_motioncontrol1_10::CopyFrom(const Adc_motioncontrol1_10& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Adc_motioncontrol1_10)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adc_motioncontrol1_10::IsInitialized() const {
  return true;
}

void Adc_motioncontrol1_10::Swap(Adc_motioncontrol1_10* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adc_motioncontrol1_10::InternalSwap(Adc_motioncontrol1_10* other) {
  using std::swap;
  swap(adc_cmd_steerwheelangle_, other->adc_cmd_steerwheelangle_);
  swap(adc_cmd_steeringcontrolmode_, other->adc_cmd_steeringcontrolmode_);
  swap(adc_cmd_parkingbrake_, other->adc_cmd_parkingbrake_);
  swap(adc_cmd_gear_, other->adc_cmd_gear_);
  swap(adc_motioncontrol1_checksum_, other->adc_motioncontrol1_checksum_);
  swap(adc_cmd_brakepercentage_, other->adc_cmd_brakepercentage_);
  swap(adc_cmd_throttleposition_, other->adc_cmd_throttleposition_);
  swap(adc_motioncontrol1_counter_, other->adc_motioncontrol1_counter_);
  swap(adc_cmd_autonomyrequest_, other->adc_cmd_autonomyrequest_);
  swap(adc_cmd_longitudinalcontrolmode_, other->adc_cmd_longitudinalcontrolmode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Adc_motioncontrol1_10::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Adc_motioncontrollimits1_12::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adc_motioncontrollimits1_12::kAdcCmdThrottlecommandlimitFieldNumber;
const int Adc_motioncontrollimits1_12::kAdcCmdSteeringrateFieldNumber;
const int Adc_motioncontrollimits1_12::kAdcCmdSteerwheelanglelimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adc_motioncontrollimits1_12::Adc_motioncontrollimits1_12()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_motioncontrollimits1_12.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Adc_motioncontrollimits1_12)
}
Adc_motioncontrollimits1_12::Adc_motioncontrollimits1_12(const Adc_motioncontrollimits1_12& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adc_cmd_throttlecommandlimit_, &from.adc_cmd_throttlecommandlimit_,
    static_cast<size_t>(reinterpret_cast<char*>(&adc_cmd_steerwheelanglelimit_) -
    reinterpret_cast<char*>(&adc_cmd_throttlecommandlimit_)) + sizeof(adc_cmd_steerwheelanglelimit_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Adc_motioncontrollimits1_12)
}

void Adc_motioncontrollimits1_12::SharedCtor() {
  ::memset(&adc_cmd_throttlecommandlimit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adc_cmd_steerwheelanglelimit_) -
      reinterpret_cast<char*>(&adc_cmd_throttlecommandlimit_)) + sizeof(adc_cmd_steerwheelanglelimit_));
}

Adc_motioncontrollimits1_12::~Adc_motioncontrollimits1_12() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Adc_motioncontrollimits1_12)
  SharedDtor();
}

void Adc_motioncontrollimits1_12::SharedDtor() {
}

void Adc_motioncontrollimits1_12::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Adc_motioncontrollimits1_12::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adc_motioncontrollimits1_12& Adc_motioncontrollimits1_12::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_motioncontrollimits1_12.base);
  return *internal_default_instance();
}


void Adc_motioncontrollimits1_12::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Adc_motioncontrollimits1_12)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&adc_cmd_throttlecommandlimit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_cmd_steerwheelanglelimit_) -
        reinterpret_cast<char*>(&adc_cmd_throttlecommandlimit_)) + sizeof(adc_cmd_steerwheelanglelimit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adc_motioncontrollimits1_12::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Adc_motioncontrollimits1_12)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double adc_cmd_throttlecommandlimit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_adc_cmd_throttlecommandlimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_cmd_throttlecommandlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adc_cmd_steeringrate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_adc_cmd_steeringrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_cmd_steeringrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adc_cmd_steerwheelanglelimit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_adc_cmd_steerwheelanglelimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_cmd_steerwheelanglelimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Adc_motioncontrollimits1_12)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Adc_motioncontrollimits1_12)
  return false;
#undef DO_
}

void Adc_motioncontrollimits1_12::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Adc_motioncontrollimits1_12)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double adc_cmd_throttlecommandlimit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->adc_cmd_throttlecommandlimit(), output);
  }

  // optional double adc_cmd_steeringrate = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->adc_cmd_steeringrate(), output);
  }

  // optional double adc_cmd_steerwheelanglelimit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->adc_cmd_steerwheelanglelimit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Adc_motioncontrollimits1_12)
}

::google::protobuf::uint8* Adc_motioncontrollimits1_12::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Adc_motioncontrollimits1_12)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double adc_cmd_throttlecommandlimit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->adc_cmd_throttlecommandlimit(), target);
  }

  // optional double adc_cmd_steeringrate = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->adc_cmd_steeringrate(), target);
  }

  // optional double adc_cmd_steerwheelanglelimit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->adc_cmd_steerwheelanglelimit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Adc_motioncontrollimits1_12)
  return target;
}

size_t Adc_motioncontrollimits1_12::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Adc_motioncontrollimits1_12)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double adc_cmd_throttlecommandlimit = 1;
    if (has_adc_cmd_throttlecommandlimit()) {
      total_size += 1 + 8;
    }

    // optional double adc_cmd_steeringrate = 2;
    if (has_adc_cmd_steeringrate()) {
      total_size += 1 + 8;
    }

    // optional double adc_cmd_steerwheelanglelimit = 3;
    if (has_adc_cmd_steerwheelanglelimit()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Adc_motioncontrollimits1_12::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Adc_motioncontrollimits1_12)
  GOOGLE_DCHECK_NE(&from, this);
  const Adc_motioncontrollimits1_12* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adc_motioncontrollimits1_12>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Adc_motioncontrollimits1_12)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Adc_motioncontrollimits1_12)
    MergeFrom(*source);
  }
}

void Adc_motioncontrollimits1_12::MergeFrom(const Adc_motioncontrollimits1_12& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Adc_motioncontrollimits1_12)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      adc_cmd_throttlecommandlimit_ = from.adc_cmd_throttlecommandlimit_;
    }
    if (cached_has_bits & 0x00000002u) {
      adc_cmd_steeringrate_ = from.adc_cmd_steeringrate_;
    }
    if (cached_has_bits & 0x00000004u) {
      adc_cmd_steerwheelanglelimit_ = from.adc_cmd_steerwheelanglelimit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adc_motioncontrollimits1_12::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Adc_motioncontrollimits1_12)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adc_motioncontrollimits1_12::CopyFrom(const Adc_motioncontrollimits1_12& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Adc_motioncontrollimits1_12)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adc_motioncontrollimits1_12::IsInitialized() const {
  return true;
}

void Adc_motioncontrollimits1_12::Swap(Adc_motioncontrollimits1_12* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adc_motioncontrollimits1_12::InternalSwap(Adc_motioncontrollimits1_12* other) {
  using std::swap;
  swap(adc_cmd_throttlecommandlimit_, other->adc_cmd_throttlecommandlimit_);
  swap(adc_cmd_steeringrate_, other->adc_cmd_steeringrate_);
  swap(adc_cmd_steerwheelanglelimit_, other->adc_cmd_steerwheelanglelimit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Adc_motioncontrollimits1_12::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_motionfeedback1_20::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_motionfeedback1_20::kLlcFbkGearFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkParkingbrakeFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkThrottlepositionFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkBrakepercentrearFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkBrakepercentfrontFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkSteeringcontrolmodeFieldNumber;
const int Llc_motionfeedback1_20::kLlcMotionfeedback1CounterFieldNumber;
const int Llc_motionfeedback1_20::kLlcMotionfeedback1ChecksumFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkCommandalignedFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkEstoppressedFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkAdcrequestautonomyFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkAllowautonomyFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkLongitudinalcontrolmodeFieldNumber;
const int Llc_motionfeedback1_20::kLlcFbkStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_motionfeedback1_20::Llc_motionfeedback1_20()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motionfeedback1_20.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_motionfeedback1_20)
}
Llc_motionfeedback1_20::Llc_motionfeedback1_20(const Llc_motionfeedback1_20& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_fbk_throttleposition_, &from.llc_fbk_throttleposition_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_fbk_state_) -
    reinterpret_cast<char*>(&llc_fbk_throttleposition_)) + sizeof(llc_fbk_state_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_motionfeedback1_20)
}

void Llc_motionfeedback1_20::SharedCtor() {
  ::memset(&llc_fbk_throttleposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_fbk_state_) -
      reinterpret_cast<char*>(&llc_fbk_throttleposition_)) + sizeof(llc_fbk_state_));
}

Llc_motionfeedback1_20::~Llc_motionfeedback1_20() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_motionfeedback1_20)
  SharedDtor();
}

void Llc_motionfeedback1_20::SharedDtor() {
}

void Llc_motionfeedback1_20::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_motionfeedback1_20::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_motionfeedback1_20& Llc_motionfeedback1_20::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motionfeedback1_20.base);
  return *internal_default_instance();
}


void Llc_motionfeedback1_20::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_motionfeedback1_20)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&llc_fbk_throttleposition_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_parkingbrake_) -
        reinterpret_cast<char*>(&llc_fbk_throttleposition_)) + sizeof(llc_fbk_parkingbrake_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&llc_fbk_commandaligned_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_state_) -
        reinterpret_cast<char*>(&llc_fbk_commandaligned_)) + sizeof(llc_fbk_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_motionfeedback1_20::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_motionfeedback1_20)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_gearType llc_fbk_gear = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_gearType_IsValid(value)) {
            set_llc_fbk_gear(static_cast< ::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_gearType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_parkingbrake = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_llc_fbk_parkingbrake();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_parkingbrake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_throttleposition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_llc_fbk_throttleposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_throttleposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_brakepercentrear = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_llc_fbk_brakepercentrear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_brakepercentrear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_brakepercentfront = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_llc_fbk_brakepercentfront();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_brakepercentfront_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_steeringcontrolmodeType llc_fbk_steeringcontrolmode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType_IsValid(value)) {
            set_llc_fbk_steeringcontrolmode(static_cast< ::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_steeringcontrolmodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_motionfeedback1_counter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_llc_motionfeedback1_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_motionfeedback1_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_motionfeedback1_checksum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_llc_motionfeedback1_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_motionfeedback1_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_commandaligned = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_llc_fbk_commandaligned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_commandaligned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_estoppressed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_llc_fbk_estoppressed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_estoppressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_adcrequestautonomy = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_llc_fbk_adcrequestautonomy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_adcrequestautonomy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_allowautonomy = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_llc_fbk_allowautonomy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_allowautonomy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_longitudinalcontrolmodeType llc_fbk_longitudinalcontrolmode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType_IsValid(value)) {
            set_llc_fbk_longitudinalcontrolmode(static_cast< ::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_longitudinalcontrolmodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                13, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_stateType llc_fbk_state = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_stateType_IsValid(value)) {
            set_llc_fbk_state(static_cast< ::apollo::canbus::Llc_motionfeedback1_20_Llc_fbk_stateType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_motionfeedback1_20)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_motionfeedback1_20)
  return false;
#undef DO_
}

void Llc_motionfeedback1_20::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_motionfeedback1_20)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_gearType llc_fbk_gear = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->llc_fbk_gear(), output);
  }

  // optional bool llc_fbk_parkingbrake = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->llc_fbk_parkingbrake(), output);
  }

  // optional double llc_fbk_throttleposition = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->llc_fbk_throttleposition(), output);
  }

  // optional double llc_fbk_brakepercentrear = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->llc_fbk_brakepercentrear(), output);
  }

  // optional double llc_fbk_brakepercentfront = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->llc_fbk_brakepercentfront(), output);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_steeringcontrolmodeType llc_fbk_steeringcontrolmode = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->llc_fbk_steeringcontrolmode(), output);
  }

  // optional int32 llc_motionfeedback1_counter = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->llc_motionfeedback1_counter(), output);
  }

  // optional int32 llc_motionfeedback1_checksum = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->llc_motionfeedback1_checksum(), output);
  }

  // optional bool llc_fbk_commandaligned = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->llc_fbk_commandaligned(), output);
  }

  // optional bool llc_fbk_estoppressed = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->llc_fbk_estoppressed(), output);
  }

  // optional bool llc_fbk_adcrequestautonomy = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->llc_fbk_adcrequestautonomy(), output);
  }

  // optional bool llc_fbk_allowautonomy = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->llc_fbk_allowautonomy(), output);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_longitudinalcontrolmodeType llc_fbk_longitudinalcontrolmode = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->llc_fbk_longitudinalcontrolmode(), output);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_stateType llc_fbk_state = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->llc_fbk_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_motionfeedback1_20)
}

::google::protobuf::uint8* Llc_motionfeedback1_20::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_motionfeedback1_20)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_gearType llc_fbk_gear = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->llc_fbk_gear(), target);
  }

  // optional bool llc_fbk_parkingbrake = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->llc_fbk_parkingbrake(), target);
  }

  // optional double llc_fbk_throttleposition = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->llc_fbk_throttleposition(), target);
  }

  // optional double llc_fbk_brakepercentrear = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->llc_fbk_brakepercentrear(), target);
  }

  // optional double llc_fbk_brakepercentfront = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->llc_fbk_brakepercentfront(), target);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_steeringcontrolmodeType llc_fbk_steeringcontrolmode = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->llc_fbk_steeringcontrolmode(), target);
  }

  // optional int32 llc_motionfeedback1_counter = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->llc_motionfeedback1_counter(), target);
  }

  // optional int32 llc_motionfeedback1_checksum = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->llc_motionfeedback1_checksum(), target);
  }

  // optional bool llc_fbk_commandaligned = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->llc_fbk_commandaligned(), target);
  }

  // optional bool llc_fbk_estoppressed = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->llc_fbk_estoppressed(), target);
  }

  // optional bool llc_fbk_adcrequestautonomy = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->llc_fbk_adcrequestautonomy(), target);
  }

  // optional bool llc_fbk_allowautonomy = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->llc_fbk_allowautonomy(), target);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_longitudinalcontrolmodeType llc_fbk_longitudinalcontrolmode = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->llc_fbk_longitudinalcontrolmode(), target);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_stateType llc_fbk_state = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->llc_fbk_state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_motionfeedback1_20)
  return target;
}

size_t Llc_motionfeedback1_20::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_motionfeedback1_20)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double llc_fbk_throttleposition = 3;
    if (has_llc_fbk_throttleposition()) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_gearType llc_fbk_gear = 1;
    if (has_llc_fbk_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->llc_fbk_gear());
    }

    // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_steeringcontrolmodeType llc_fbk_steeringcontrolmode = 6;
    if (has_llc_fbk_steeringcontrolmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->llc_fbk_steeringcontrolmode());
    }

    // optional double llc_fbk_brakepercentrear = 4;
    if (has_llc_fbk_brakepercentrear()) {
      total_size += 1 + 8;
    }

    // optional double llc_fbk_brakepercentfront = 5;
    if (has_llc_fbk_brakepercentfront()) {
      total_size += 1 + 8;
    }

    // optional int32 llc_motionfeedback1_counter = 7;
    if (has_llc_motionfeedback1_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_motionfeedback1_counter());
    }

    // optional int32 llc_motionfeedback1_checksum = 8;
    if (has_llc_motionfeedback1_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_motionfeedback1_checksum());
    }

    // optional bool llc_fbk_parkingbrake = 2;
    if (has_llc_fbk_parkingbrake()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool llc_fbk_commandaligned = 9;
    if (has_llc_fbk_commandaligned()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_estoppressed = 10;
    if (has_llc_fbk_estoppressed()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_adcrequestautonomy = 11;
    if (has_llc_fbk_adcrequestautonomy()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_allowautonomy = 12;
    if (has_llc_fbk_allowautonomy()) {
      total_size += 1 + 1;
    }

    // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_longitudinalcontrolmodeType llc_fbk_longitudinalcontrolmode = 13;
    if (has_llc_fbk_longitudinalcontrolmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->llc_fbk_longitudinalcontrolmode());
    }

    // optional .apollo.canbus.Llc_motionfeedback1_20.Llc_fbk_stateType llc_fbk_state = 14;
    if (has_llc_fbk_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->llc_fbk_state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_motionfeedback1_20::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_motionfeedback1_20)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_motionfeedback1_20* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_motionfeedback1_20>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_motionfeedback1_20)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_motionfeedback1_20)
    MergeFrom(*source);
  }
}

void Llc_motionfeedback1_20::MergeFrom(const Llc_motionfeedback1_20& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_motionfeedback1_20)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      llc_fbk_throttleposition_ = from.llc_fbk_throttleposition_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_fbk_gear_ = from.llc_fbk_gear_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_fbk_steeringcontrolmode_ = from.llc_fbk_steeringcontrolmode_;
    }
    if (cached_has_bits & 0x00000008u) {
      llc_fbk_brakepercentrear_ = from.llc_fbk_brakepercentrear_;
    }
    if (cached_has_bits & 0x00000010u) {
      llc_fbk_brakepercentfront_ = from.llc_fbk_brakepercentfront_;
    }
    if (cached_has_bits & 0x00000020u) {
      llc_motionfeedback1_counter_ = from.llc_motionfeedback1_counter_;
    }
    if (cached_has_bits & 0x00000040u) {
      llc_motionfeedback1_checksum_ = from.llc_motionfeedback1_checksum_;
    }
    if (cached_has_bits & 0x00000080u) {
      llc_fbk_parkingbrake_ = from.llc_fbk_parkingbrake_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      llc_fbk_commandaligned_ = from.llc_fbk_commandaligned_;
    }
    if (cached_has_bits & 0x00000200u) {
      llc_fbk_estoppressed_ = from.llc_fbk_estoppressed_;
    }
    if (cached_has_bits & 0x00000400u) {
      llc_fbk_adcrequestautonomy_ = from.llc_fbk_adcrequestautonomy_;
    }
    if (cached_has_bits & 0x00000800u) {
      llc_fbk_allowautonomy_ = from.llc_fbk_allowautonomy_;
    }
    if (cached_has_bits & 0x00001000u) {
      llc_fbk_longitudinalcontrolmode_ = from.llc_fbk_longitudinalcontrolmode_;
    }
    if (cached_has_bits & 0x00002000u) {
      llc_fbk_state_ = from.llc_fbk_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_motionfeedback1_20::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_motionfeedback1_20)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_motionfeedback1_20::CopyFrom(const Llc_motionfeedback1_20& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_motionfeedback1_20)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_motionfeedback1_20::IsInitialized() const {
  return true;
}

void Llc_motionfeedback1_20::Swap(Llc_motionfeedback1_20* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_motionfeedback1_20::InternalSwap(Llc_motionfeedback1_20* other) {
  using std::swap;
  swap(llc_fbk_throttleposition_, other->llc_fbk_throttleposition_);
  swap(llc_fbk_gear_, other->llc_fbk_gear_);
  swap(llc_fbk_steeringcontrolmode_, other->llc_fbk_steeringcontrolmode_);
  swap(llc_fbk_brakepercentrear_, other->llc_fbk_brakepercentrear_);
  swap(llc_fbk_brakepercentfront_, other->llc_fbk_brakepercentfront_);
  swap(llc_motionfeedback1_counter_, other->llc_motionfeedback1_counter_);
  swap(llc_motionfeedback1_checksum_, other->llc_motionfeedback1_checksum_);
  swap(llc_fbk_parkingbrake_, other->llc_fbk_parkingbrake_);
  swap(llc_fbk_commandaligned_, other->llc_fbk_commandaligned_);
  swap(llc_fbk_estoppressed_, other->llc_fbk_estoppressed_);
  swap(llc_fbk_adcrequestautonomy_, other->llc_fbk_adcrequestautonomy_);
  swap(llc_fbk_allowautonomy_, other->llc_fbk_allowautonomy_);
  swap(llc_fbk_longitudinalcontrolmode_, other->llc_fbk_longitudinalcontrolmode_);
  swap(llc_fbk_state_, other->llc_fbk_state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_motionfeedback1_20::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_motionfeedback2_21::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_motionfeedback2_21::kLlcFbkVehiclespeedFieldNumber;
const int Llc_motionfeedback2_21::kLlcMotionfeedback2CounterFieldNumber;
const int Llc_motionfeedback2_21::kLlcMotionfeedback2ChecksumFieldNumber;
const int Llc_motionfeedback2_21::kLlcFbkSteeringrateFieldNumber;
const int Llc_motionfeedback2_21::kLlcFbkSteeringangleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_motionfeedback2_21::Llc_motionfeedback2_21()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motionfeedback2_21.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_motionfeedback2_21)
}
Llc_motionfeedback2_21::Llc_motionfeedback2_21(const Llc_motionfeedback2_21& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_fbk_vehiclespeed_, &from.llc_fbk_vehiclespeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_fbk_steeringangle_) -
    reinterpret_cast<char*>(&llc_fbk_vehiclespeed_)) + sizeof(llc_fbk_steeringangle_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_motionfeedback2_21)
}

void Llc_motionfeedback2_21::SharedCtor() {
  ::memset(&llc_fbk_vehiclespeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_fbk_steeringangle_) -
      reinterpret_cast<char*>(&llc_fbk_vehiclespeed_)) + sizeof(llc_fbk_steeringangle_));
}

Llc_motionfeedback2_21::~Llc_motionfeedback2_21() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_motionfeedback2_21)
  SharedDtor();
}

void Llc_motionfeedback2_21::SharedDtor() {
}

void Llc_motionfeedback2_21::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_motionfeedback2_21::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_motionfeedback2_21& Llc_motionfeedback2_21::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motionfeedback2_21.base);
  return *internal_default_instance();
}


void Llc_motionfeedback2_21::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_motionfeedback2_21)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&llc_fbk_vehiclespeed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_steeringangle_) -
        reinterpret_cast<char*>(&llc_fbk_vehiclespeed_)) + sizeof(llc_fbk_steeringangle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_motionfeedback2_21::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_motionfeedback2_21)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double llc_fbk_vehiclespeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_llc_fbk_vehiclespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_vehiclespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_motionfeedback2_counter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_llc_motionfeedback2_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_motionfeedback2_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_motionfeedback2_checksum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_llc_motionfeedback2_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_motionfeedback2_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_steeringrate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_llc_fbk_steeringrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_steeringrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_steeringangle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_llc_fbk_steeringangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_steeringangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_motionfeedback2_21)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_motionfeedback2_21)
  return false;
#undef DO_
}

void Llc_motionfeedback2_21::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_motionfeedback2_21)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_fbk_vehiclespeed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->llc_fbk_vehiclespeed(), output);
  }

  // optional int32 llc_motionfeedback2_counter = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->llc_motionfeedback2_counter(), output);
  }

  // optional int32 llc_motionfeedback2_checksum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->llc_motionfeedback2_checksum(), output);
  }

  // optional double llc_fbk_steeringrate = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->llc_fbk_steeringrate(), output);
  }

  // optional double llc_fbk_steeringangle = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->llc_fbk_steeringangle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_motionfeedback2_21)
}

::google::protobuf::uint8* Llc_motionfeedback2_21::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_motionfeedback2_21)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_fbk_vehiclespeed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->llc_fbk_vehiclespeed(), target);
  }

  // optional int32 llc_motionfeedback2_counter = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->llc_motionfeedback2_counter(), target);
  }

  // optional int32 llc_motionfeedback2_checksum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->llc_motionfeedback2_checksum(), target);
  }

  // optional double llc_fbk_steeringrate = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->llc_fbk_steeringrate(), target);
  }

  // optional double llc_fbk_steeringangle = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->llc_fbk_steeringangle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_motionfeedback2_21)
  return target;
}

size_t Llc_motionfeedback2_21::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_motionfeedback2_21)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional double llc_fbk_vehiclespeed = 1;
    if (has_llc_fbk_vehiclespeed()) {
      total_size += 1 + 8;
    }

    // optional int32 llc_motionfeedback2_counter = 2;
    if (has_llc_motionfeedback2_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_motionfeedback2_counter());
    }

    // optional int32 llc_motionfeedback2_checksum = 3;
    if (has_llc_motionfeedback2_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_motionfeedback2_checksum());
    }

    // optional double llc_fbk_steeringrate = 4;
    if (has_llc_fbk_steeringrate()) {
      total_size += 1 + 8;
    }

    // optional double llc_fbk_steeringangle = 5;
    if (has_llc_fbk_steeringangle()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_motionfeedback2_21::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_motionfeedback2_21)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_motionfeedback2_21* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_motionfeedback2_21>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_motionfeedback2_21)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_motionfeedback2_21)
    MergeFrom(*source);
  }
}

void Llc_motionfeedback2_21::MergeFrom(const Llc_motionfeedback2_21& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_motionfeedback2_21)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      llc_fbk_vehiclespeed_ = from.llc_fbk_vehiclespeed_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_motionfeedback2_counter_ = from.llc_motionfeedback2_counter_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_motionfeedback2_checksum_ = from.llc_motionfeedback2_checksum_;
    }
    if (cached_has_bits & 0x00000008u) {
      llc_fbk_steeringrate_ = from.llc_fbk_steeringrate_;
    }
    if (cached_has_bits & 0x00000010u) {
      llc_fbk_steeringangle_ = from.llc_fbk_steeringangle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_motionfeedback2_21::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_motionfeedback2_21)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_motionfeedback2_21::CopyFrom(const Llc_motionfeedback2_21& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_motionfeedback2_21)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_motionfeedback2_21::IsInitialized() const {
  return true;
}

void Llc_motionfeedback2_21::Swap(Llc_motionfeedback2_21* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_motionfeedback2_21::InternalSwap(Llc_motionfeedback2_21* other) {
  using std::swap;
  swap(llc_fbk_vehiclespeed_, other->llc_fbk_vehiclespeed_);
  swap(llc_motionfeedback2_counter_, other->llc_motionfeedback2_counter_);
  swap(llc_motionfeedback2_checksum_, other->llc_motionfeedback2_checksum_);
  swap(llc_fbk_steeringrate_, other->llc_fbk_steeringrate_);
  swap(llc_fbk_steeringangle_, other->llc_fbk_steeringangle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_motionfeedback2_21::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_motioncommandfeedback1_22::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_motioncommandfeedback1_22::kLlcFbkSteeringanglesetpointFieldNumber;
const int Llc_motioncommandfeedback1_22::kLlcFbkThrottlesetpointFieldNumber;
const int Llc_motioncommandfeedback1_22::kLlcFbkBrakepercentsetpointFieldNumber;
const int Llc_motioncommandfeedback1_22::kLlcMotioncommandfeedback1CountFieldNumber;
const int Llc_motioncommandfeedback1_22::kLlcMotioncommandfeedback1CheckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_motioncommandfeedback1_22::Llc_motioncommandfeedback1_22()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motioncommandfeedback1_22.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_motioncommandfeedback1_22)
}
Llc_motioncommandfeedback1_22::Llc_motioncommandfeedback1_22(const Llc_motioncommandfeedback1_22& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_fbk_steeringanglesetpoint_, &from.llc_fbk_steeringanglesetpoint_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_motioncommandfeedback1_check_) -
    reinterpret_cast<char*>(&llc_fbk_steeringanglesetpoint_)) + sizeof(llc_motioncommandfeedback1_check_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_motioncommandfeedback1_22)
}

void Llc_motioncommandfeedback1_22::SharedCtor() {
  ::memset(&llc_fbk_steeringanglesetpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_motioncommandfeedback1_check_) -
      reinterpret_cast<char*>(&llc_fbk_steeringanglesetpoint_)) + sizeof(llc_motioncommandfeedback1_check_));
}

Llc_motioncommandfeedback1_22::~Llc_motioncommandfeedback1_22() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_motioncommandfeedback1_22)
  SharedDtor();
}

void Llc_motioncommandfeedback1_22::SharedDtor() {
}

void Llc_motioncommandfeedback1_22::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_motioncommandfeedback1_22::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_motioncommandfeedback1_22& Llc_motioncommandfeedback1_22::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_motioncommandfeedback1_22.base);
  return *internal_default_instance();
}


void Llc_motioncommandfeedback1_22::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&llc_fbk_steeringanglesetpoint_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_motioncommandfeedback1_check_) -
        reinterpret_cast<char*>(&llc_fbk_steeringanglesetpoint_)) + sizeof(llc_motioncommandfeedback1_check_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_motioncommandfeedback1_22::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double llc_fbk_steeringanglesetpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_llc_fbk_steeringanglesetpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_steeringanglesetpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_throttlesetpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_llc_fbk_throttlesetpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_throttlesetpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_fbk_brakepercentsetpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_llc_fbk_brakepercentsetpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_brakepercentsetpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_motioncommandfeedback1_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_llc_motioncommandfeedback1_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_motioncommandfeedback1_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_motioncommandfeedback1_check = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_llc_motioncommandfeedback1_check();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_motioncommandfeedback1_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_motioncommandfeedback1_22)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_motioncommandfeedback1_22)
  return false;
#undef DO_
}

void Llc_motioncommandfeedback1_22::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_fbk_steeringanglesetpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->llc_fbk_steeringanglesetpoint(), output);
  }

  // optional double llc_fbk_throttlesetpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->llc_fbk_throttlesetpoint(), output);
  }

  // optional double llc_fbk_brakepercentsetpoint = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->llc_fbk_brakepercentsetpoint(), output);
  }

  // optional int32 llc_motioncommandfeedback1_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->llc_motioncommandfeedback1_count(), output);
  }

  // optional int32 llc_motioncommandfeedback1_check = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->llc_motioncommandfeedback1_check(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_motioncommandfeedback1_22)
}

::google::protobuf::uint8* Llc_motioncommandfeedback1_22::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_fbk_steeringanglesetpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->llc_fbk_steeringanglesetpoint(), target);
  }

  // optional double llc_fbk_throttlesetpoint = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->llc_fbk_throttlesetpoint(), target);
  }

  // optional double llc_fbk_brakepercentsetpoint = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->llc_fbk_brakepercentsetpoint(), target);
  }

  // optional int32 llc_motioncommandfeedback1_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->llc_motioncommandfeedback1_count(), target);
  }

  // optional int32 llc_motioncommandfeedback1_check = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->llc_motioncommandfeedback1_check(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_motioncommandfeedback1_22)
  return target;
}

size_t Llc_motioncommandfeedback1_22::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional double llc_fbk_steeringanglesetpoint = 1;
    if (has_llc_fbk_steeringanglesetpoint()) {
      total_size += 1 + 8;
    }

    // optional double llc_fbk_throttlesetpoint = 2;
    if (has_llc_fbk_throttlesetpoint()) {
      total_size += 1 + 8;
    }

    // optional double llc_fbk_brakepercentsetpoint = 3;
    if (has_llc_fbk_brakepercentsetpoint()) {
      total_size += 1 + 8;
    }

    // optional int32 llc_motioncommandfeedback1_count = 4;
    if (has_llc_motioncommandfeedback1_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_motioncommandfeedback1_count());
    }

    // optional int32 llc_motioncommandfeedback1_check = 5;
    if (has_llc_motioncommandfeedback1_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_motioncommandfeedback1_check());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_motioncommandfeedback1_22::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_motioncommandfeedback1_22* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_motioncommandfeedback1_22>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_motioncommandfeedback1_22)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_motioncommandfeedback1_22)
    MergeFrom(*source);
  }
}

void Llc_motioncommandfeedback1_22::MergeFrom(const Llc_motioncommandfeedback1_22& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      llc_fbk_steeringanglesetpoint_ = from.llc_fbk_steeringanglesetpoint_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_fbk_throttlesetpoint_ = from.llc_fbk_throttlesetpoint_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_fbk_brakepercentsetpoint_ = from.llc_fbk_brakepercentsetpoint_;
    }
    if (cached_has_bits & 0x00000008u) {
      llc_motioncommandfeedback1_count_ = from.llc_motioncommandfeedback1_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      llc_motioncommandfeedback1_check_ = from.llc_motioncommandfeedback1_check_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_motioncommandfeedback1_22::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_motioncommandfeedback1_22::CopyFrom(const Llc_motioncommandfeedback1_22& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_motioncommandfeedback1_22)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_motioncommandfeedback1_22::IsInitialized() const {
  return true;
}

void Llc_motioncommandfeedback1_22::Swap(Llc_motioncommandfeedback1_22* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_motioncommandfeedback1_22::InternalSwap(Llc_motioncommandfeedback1_22* other) {
  using std::swap;
  swap(llc_fbk_steeringanglesetpoint_, other->llc_fbk_steeringanglesetpoint_);
  swap(llc_fbk_throttlesetpoint_, other->llc_fbk_throttlesetpoint_);
  swap(llc_fbk_brakepercentsetpoint_, other->llc_fbk_brakepercentsetpoint_);
  swap(llc_motioncommandfeedback1_count_, other->llc_motioncommandfeedback1_count_);
  swap(llc_motioncommandfeedback1_check_, other->llc_motioncommandfeedback1_check_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_motioncommandfeedback1_22::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_vehiclestatus_25::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_vehiclestatus_25::kLlcFbk12VoltageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_vehiclestatus_25::Llc_vehiclestatus_25()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_vehiclestatus_25.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_vehiclestatus_25)
}
Llc_vehiclestatus_25::Llc_vehiclestatus_25(const Llc_vehiclestatus_25& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  llc_fbk_12voltage_ = from.llc_fbk_12voltage_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_vehiclestatus_25)
}

void Llc_vehiclestatus_25::SharedCtor() {
  llc_fbk_12voltage_ = 0;
}

Llc_vehiclestatus_25::~Llc_vehiclestatus_25() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_vehiclestatus_25)
  SharedDtor();
}

void Llc_vehiclestatus_25::SharedDtor() {
}

void Llc_vehiclestatus_25::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_vehiclestatus_25::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_vehiclestatus_25& Llc_vehiclestatus_25::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_vehiclestatus_25.base);
  return *internal_default_instance();
}


void Llc_vehiclestatus_25::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_vehiclestatus_25)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  llc_fbk_12voltage_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_vehiclestatus_25::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_vehiclestatus_25)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double llc_fbk_12voltage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_llc_fbk_12voltage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_fbk_12voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_vehiclestatus_25)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_vehiclestatus_25)
  return false;
#undef DO_
}

void Llc_vehiclestatus_25::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_vehiclestatus_25)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_fbk_12voltage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->llc_fbk_12voltage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_vehiclestatus_25)
}

::google::protobuf::uint8* Llc_vehiclestatus_25::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_vehiclestatus_25)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_fbk_12voltage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->llc_fbk_12voltage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_vehiclestatus_25)
  return target;
}

size_t Llc_vehiclestatus_25::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_vehiclestatus_25)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional double llc_fbk_12voltage = 1;
  if (has_llc_fbk_12voltage()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_vehiclestatus_25::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_vehiclestatus_25)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_vehiclestatus_25* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_vehiclestatus_25>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_vehiclestatus_25)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_vehiclestatus_25)
    MergeFrom(*source);
  }
}

void Llc_vehiclestatus_25::MergeFrom(const Llc_vehiclestatus_25& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_vehiclestatus_25)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_llc_fbk_12voltage()) {
    set_llc_fbk_12voltage(from.llc_fbk_12voltage());
  }
}

void Llc_vehiclestatus_25::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_vehiclestatus_25)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_vehiclestatus_25::CopyFrom(const Llc_vehiclestatus_25& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_vehiclestatus_25)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_vehiclestatus_25::IsInitialized() const {
  return true;
}

void Llc_vehiclestatus_25::Swap(Llc_vehiclestatus_25* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_vehiclestatus_25::InternalSwap(Llc_vehiclestatus_25* other) {
  using std::swap;
  swap(llc_fbk_12voltage_, other->llc_fbk_12voltage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_vehiclestatus_25::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_auxiliaryfeedback_120::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_auxiliaryfeedback_120::kLlcFbkInverterFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh8FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh7FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh6FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh5FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh4FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh3FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh2FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkPduCh1FieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkHazardlightsFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkLedgreenonFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkHornFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkBuzzeronFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkTurnsignalFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkLowbeamFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkHighbeamFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkLedredonFieldNumber;
const int Llc_auxiliaryfeedback_120::kLlcFbkAutonomybuttonpressedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_auxiliaryfeedback_120::Llc_auxiliaryfeedback_120()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_auxiliaryfeedback_120.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_auxiliaryfeedback_120)
}
Llc_auxiliaryfeedback_120::Llc_auxiliaryfeedback_120(const Llc_auxiliaryfeedback_120& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_fbk_inverter_, &from.llc_fbk_inverter_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_fbk_autonomybuttonpressed_) -
    reinterpret_cast<char*>(&llc_fbk_inverter_)) + sizeof(llc_fbk_autonomybuttonpressed_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_auxiliaryfeedback_120)
}

void Llc_auxiliaryfeedback_120::SharedCtor() {
  ::memset(&llc_fbk_inverter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_fbk_autonomybuttonpressed_) -
      reinterpret_cast<char*>(&llc_fbk_inverter_)) + sizeof(llc_fbk_autonomybuttonpressed_));
}

Llc_auxiliaryfeedback_120::~Llc_auxiliaryfeedback_120() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_auxiliaryfeedback_120)
  SharedDtor();
}

void Llc_auxiliaryfeedback_120::SharedDtor() {
}

void Llc_auxiliaryfeedback_120::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_auxiliaryfeedback_120::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_auxiliaryfeedback_120& Llc_auxiliaryfeedback_120::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_auxiliaryfeedback_120.base);
  return *internal_default_instance();
}


void Llc_auxiliaryfeedback_120::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&llc_fbk_inverter_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_pdu_ch2_) -
        reinterpret_cast<char*>(&llc_fbk_inverter_)) + sizeof(llc_fbk_pdu_ch2_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&llc_fbk_pdu_ch1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_highbeam_) -
        reinterpret_cast<char*>(&llc_fbk_pdu_ch1_)) + sizeof(llc_fbk_highbeam_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&llc_fbk_ledredon_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_autonomybuttonpressed_) -
        reinterpret_cast<char*>(&llc_fbk_ledredon_)) + sizeof(llc_fbk_autonomybuttonpressed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_auxiliaryfeedback_120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool llc_fbk_inverter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_llc_fbk_inverter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_inverter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch7 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch7();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch6 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_pdu_ch1 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_llc_fbk_pdu_ch1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_pdu_ch1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_hazardlights = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_llc_fbk_hazardlights();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_hazardlights_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_ledgreenon = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_llc_fbk_ledgreenon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_ledgreenon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_horn = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_llc_fbk_horn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_horn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_buzzeron = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_llc_fbk_buzzeron();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_buzzeron_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_auxiliaryfeedback_120.Llc_fbk_turnsignalType llc_fbk_turnsignal = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType_IsValid(value)) {
            set_llc_fbk_turnsignal(static_cast< ::apollo::canbus::Llc_auxiliaryfeedback_120_Llc_fbk_turnsignalType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_lowbeam = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_llc_fbk_lowbeam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_lowbeam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_highbeam = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_llc_fbk_highbeam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_highbeam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_ledredon = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_llc_fbk_ledredon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_ledredon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool llc_fbk_autonomybuttonpressed = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_llc_fbk_autonomybuttonpressed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &llc_fbk_autonomybuttonpressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_auxiliaryfeedback_120)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_auxiliaryfeedback_120)
  return false;
#undef DO_
}

void Llc_auxiliaryfeedback_120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool llc_fbk_inverter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->llc_fbk_inverter(), output);
  }

  // optional bool llc_fbk_pdu_ch8 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->llc_fbk_pdu_ch8(), output);
  }

  // optional bool llc_fbk_pdu_ch7 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->llc_fbk_pdu_ch7(), output);
  }

  // optional bool llc_fbk_pdu_ch6 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->llc_fbk_pdu_ch6(), output);
  }

  // optional bool llc_fbk_pdu_ch5 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->llc_fbk_pdu_ch5(), output);
  }

  // optional bool llc_fbk_pdu_ch4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->llc_fbk_pdu_ch4(), output);
  }

  // optional bool llc_fbk_pdu_ch3 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->llc_fbk_pdu_ch3(), output);
  }

  // optional bool llc_fbk_pdu_ch2 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->llc_fbk_pdu_ch2(), output);
  }

  // optional bool llc_fbk_pdu_ch1 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->llc_fbk_pdu_ch1(), output);
  }

  // optional bool llc_fbk_hazardlights = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->llc_fbk_hazardlights(), output);
  }

  // optional bool llc_fbk_ledgreenon = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->llc_fbk_ledgreenon(), output);
  }

  // optional bool llc_fbk_horn = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->llc_fbk_horn(), output);
  }

  // optional bool llc_fbk_buzzeron = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->llc_fbk_buzzeron(), output);
  }

  // optional .apollo.canbus.Llc_auxiliaryfeedback_120.Llc_fbk_turnsignalType llc_fbk_turnsignal = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->llc_fbk_turnsignal(), output);
  }

  // optional bool llc_fbk_lowbeam = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->llc_fbk_lowbeam(), output);
  }

  // optional bool llc_fbk_highbeam = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->llc_fbk_highbeam(), output);
  }

  // optional bool llc_fbk_ledredon = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->llc_fbk_ledredon(), output);
  }

  // optional bool llc_fbk_autonomybuttonpressed = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->llc_fbk_autonomybuttonpressed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_auxiliaryfeedback_120)
}

::google::protobuf::uint8* Llc_auxiliaryfeedback_120::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool llc_fbk_inverter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->llc_fbk_inverter(), target);
  }

  // optional bool llc_fbk_pdu_ch8 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->llc_fbk_pdu_ch8(), target);
  }

  // optional bool llc_fbk_pdu_ch7 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->llc_fbk_pdu_ch7(), target);
  }

  // optional bool llc_fbk_pdu_ch6 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->llc_fbk_pdu_ch6(), target);
  }

  // optional bool llc_fbk_pdu_ch5 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->llc_fbk_pdu_ch5(), target);
  }

  // optional bool llc_fbk_pdu_ch4 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->llc_fbk_pdu_ch4(), target);
  }

  // optional bool llc_fbk_pdu_ch3 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->llc_fbk_pdu_ch3(), target);
  }

  // optional bool llc_fbk_pdu_ch2 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->llc_fbk_pdu_ch2(), target);
  }

  // optional bool llc_fbk_pdu_ch1 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->llc_fbk_pdu_ch1(), target);
  }

  // optional bool llc_fbk_hazardlights = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->llc_fbk_hazardlights(), target);
  }

  // optional bool llc_fbk_ledgreenon = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->llc_fbk_ledgreenon(), target);
  }

  // optional bool llc_fbk_horn = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->llc_fbk_horn(), target);
  }

  // optional bool llc_fbk_buzzeron = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->llc_fbk_buzzeron(), target);
  }

  // optional .apollo.canbus.Llc_auxiliaryfeedback_120.Llc_fbk_turnsignalType llc_fbk_turnsignal = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->llc_fbk_turnsignal(), target);
  }

  // optional bool llc_fbk_lowbeam = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->llc_fbk_lowbeam(), target);
  }

  // optional bool llc_fbk_highbeam = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->llc_fbk_highbeam(), target);
  }

  // optional bool llc_fbk_ledredon = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->llc_fbk_ledredon(), target);
  }

  // optional bool llc_fbk_autonomybuttonpressed = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->llc_fbk_autonomybuttonpressed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_auxiliaryfeedback_120)
  return target;
}

size_t Llc_auxiliaryfeedback_120::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bool llc_fbk_inverter = 1;
    if (has_llc_fbk_inverter()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch8 = 2;
    if (has_llc_fbk_pdu_ch8()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch7 = 3;
    if (has_llc_fbk_pdu_ch7()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch6 = 4;
    if (has_llc_fbk_pdu_ch6()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch5 = 5;
    if (has_llc_fbk_pdu_ch5()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch4 = 6;
    if (has_llc_fbk_pdu_ch4()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch3 = 7;
    if (has_llc_fbk_pdu_ch3()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_pdu_ch2 = 8;
    if (has_llc_fbk_pdu_ch2()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool llc_fbk_pdu_ch1 = 9;
    if (has_llc_fbk_pdu_ch1()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_hazardlights = 10;
    if (has_llc_fbk_hazardlights()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_ledgreenon = 11;
    if (has_llc_fbk_ledgreenon()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_horn = 12;
    if (has_llc_fbk_horn()) {
      total_size += 1 + 1;
    }

    // optional .apollo.canbus.Llc_auxiliaryfeedback_120.Llc_fbk_turnsignalType llc_fbk_turnsignal = 14;
    if (has_llc_fbk_turnsignal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->llc_fbk_turnsignal());
    }

    // optional bool llc_fbk_buzzeron = 13;
    if (has_llc_fbk_buzzeron()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_lowbeam = 15;
    if (has_llc_fbk_lowbeam()) {
      total_size += 1 + 1;
    }

    // optional bool llc_fbk_highbeam = 16;
    if (has_llc_fbk_highbeam()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional bool llc_fbk_ledredon = 17;
    if (has_llc_fbk_ledredon()) {
      total_size += 2 + 1;
    }

    // optional bool llc_fbk_autonomybuttonpressed = 18;
    if (has_llc_fbk_autonomybuttonpressed()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_auxiliaryfeedback_120::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_auxiliaryfeedback_120* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_auxiliaryfeedback_120>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_auxiliaryfeedback_120)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_auxiliaryfeedback_120)
    MergeFrom(*source);
  }
}

void Llc_auxiliaryfeedback_120::MergeFrom(const Llc_auxiliaryfeedback_120& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      llc_fbk_inverter_ = from.llc_fbk_inverter_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_fbk_pdu_ch8_ = from.llc_fbk_pdu_ch8_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_fbk_pdu_ch7_ = from.llc_fbk_pdu_ch7_;
    }
    if (cached_has_bits & 0x00000008u) {
      llc_fbk_pdu_ch6_ = from.llc_fbk_pdu_ch6_;
    }
    if (cached_has_bits & 0x00000010u) {
      llc_fbk_pdu_ch5_ = from.llc_fbk_pdu_ch5_;
    }
    if (cached_has_bits & 0x00000020u) {
      llc_fbk_pdu_ch4_ = from.llc_fbk_pdu_ch4_;
    }
    if (cached_has_bits & 0x00000040u) {
      llc_fbk_pdu_ch3_ = from.llc_fbk_pdu_ch3_;
    }
    if (cached_has_bits & 0x00000080u) {
      llc_fbk_pdu_ch2_ = from.llc_fbk_pdu_ch2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      llc_fbk_pdu_ch1_ = from.llc_fbk_pdu_ch1_;
    }
    if (cached_has_bits & 0x00000200u) {
      llc_fbk_hazardlights_ = from.llc_fbk_hazardlights_;
    }
    if (cached_has_bits & 0x00000400u) {
      llc_fbk_ledgreenon_ = from.llc_fbk_ledgreenon_;
    }
    if (cached_has_bits & 0x00000800u) {
      llc_fbk_horn_ = from.llc_fbk_horn_;
    }
    if (cached_has_bits & 0x00001000u) {
      llc_fbk_turnsignal_ = from.llc_fbk_turnsignal_;
    }
    if (cached_has_bits & 0x00002000u) {
      llc_fbk_buzzeron_ = from.llc_fbk_buzzeron_;
    }
    if (cached_has_bits & 0x00004000u) {
      llc_fbk_lowbeam_ = from.llc_fbk_lowbeam_;
    }
    if (cached_has_bits & 0x00008000u) {
      llc_fbk_highbeam_ = from.llc_fbk_highbeam_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      llc_fbk_ledredon_ = from.llc_fbk_ledredon_;
    }
    if (cached_has_bits & 0x00020000u) {
      llc_fbk_autonomybuttonpressed_ = from.llc_fbk_autonomybuttonpressed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_auxiliaryfeedback_120::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_auxiliaryfeedback_120::CopyFrom(const Llc_auxiliaryfeedback_120& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_auxiliaryfeedback_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_auxiliaryfeedback_120::IsInitialized() const {
  return true;
}

void Llc_auxiliaryfeedback_120::Swap(Llc_auxiliaryfeedback_120* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_auxiliaryfeedback_120::InternalSwap(Llc_auxiliaryfeedback_120* other) {
  using std::swap;
  swap(llc_fbk_inverter_, other->llc_fbk_inverter_);
  swap(llc_fbk_pdu_ch8_, other->llc_fbk_pdu_ch8_);
  swap(llc_fbk_pdu_ch7_, other->llc_fbk_pdu_ch7_);
  swap(llc_fbk_pdu_ch6_, other->llc_fbk_pdu_ch6_);
  swap(llc_fbk_pdu_ch5_, other->llc_fbk_pdu_ch5_);
  swap(llc_fbk_pdu_ch4_, other->llc_fbk_pdu_ch4_);
  swap(llc_fbk_pdu_ch3_, other->llc_fbk_pdu_ch3_);
  swap(llc_fbk_pdu_ch2_, other->llc_fbk_pdu_ch2_);
  swap(llc_fbk_pdu_ch1_, other->llc_fbk_pdu_ch1_);
  swap(llc_fbk_hazardlights_, other->llc_fbk_hazardlights_);
  swap(llc_fbk_ledgreenon_, other->llc_fbk_ledgreenon_);
  swap(llc_fbk_horn_, other->llc_fbk_horn_);
  swap(llc_fbk_turnsignal_, other->llc_fbk_turnsignal_);
  swap(llc_fbk_buzzeron_, other->llc_fbk_buzzeron_);
  swap(llc_fbk_lowbeam_, other->llc_fbk_lowbeam_);
  swap(llc_fbk_highbeam_, other->llc_fbk_highbeam_);
  swap(llc_fbk_ledredon_, other->llc_fbk_ledredon_);
  swap(llc_fbk_autonomybuttonpressed_, other->llc_fbk_autonomybuttonpressed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_auxiliaryfeedback_120::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_diag_fault_620::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_diag_fault_620::kLlcDisengagecounterBrakeFieldNumber;
const int Llc_diag_fault_620::kLlcDisengagecounterSteerFieldNumber;
const int Llc_diag_fault_620::kLlcDisengagecounterThrottleFieldNumber;
const int Llc_diag_fault_620::kLlcFbkFaultcounterFieldNumber;
const int Llc_diag_fault_620::kLlcDisengagecounterButtonFieldNumber;
const int Llc_diag_fault_620::kLlcFbkVersionYearFieldNumber;
const int Llc_diag_fault_620::kLlcFbkVersionMonthFieldNumber;
const int Llc_diag_fault_620::kLlcFbkVersionDayFieldNumber;
const int Llc_diag_fault_620::kLlcFbkVersionHourFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_diag_fault_620::Llc_diag_fault_620()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_fault_620.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_diag_fault_620)
}
Llc_diag_fault_620::Llc_diag_fault_620(const Llc_diag_fault_620& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_disengagecounter_brake_, &from.llc_disengagecounter_brake_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_fbk_version_hour_) -
    reinterpret_cast<char*>(&llc_disengagecounter_brake_)) + sizeof(llc_fbk_version_hour_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_diag_fault_620)
}

void Llc_diag_fault_620::SharedCtor() {
  ::memset(&llc_disengagecounter_brake_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_fbk_version_hour_) -
      reinterpret_cast<char*>(&llc_disengagecounter_brake_)) + sizeof(llc_fbk_version_hour_));
}

Llc_diag_fault_620::~Llc_diag_fault_620() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_diag_fault_620)
  SharedDtor();
}

void Llc_diag_fault_620::SharedDtor() {
}

void Llc_diag_fault_620::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_diag_fault_620::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_diag_fault_620& Llc_diag_fault_620::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_fault_620.base);
  return *internal_default_instance();
}


void Llc_diag_fault_620::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_diag_fault_620)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&llc_disengagecounter_brake_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_fbk_version_day_) -
        reinterpret_cast<char*>(&llc_disengagecounter_brake_)) + sizeof(llc_fbk_version_day_));
  }
  llc_fbk_version_hour_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_diag_fault_620::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_diag_fault_620)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 llc_disengagecounter_brake = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_llc_disengagecounter_brake();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_disengagecounter_brake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_disengagecounter_steer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_llc_disengagecounter_steer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_disengagecounter_steer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_disengagecounter_throttle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_llc_disengagecounter_throttle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_disengagecounter_throttle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_fbk_faultcounter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_llc_fbk_faultcounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_fbk_faultcounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_disengagecounter_button = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_llc_disengagecounter_button();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_disengagecounter_button_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_fbk_version_year = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_llc_fbk_version_year();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_fbk_version_year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_fbk_version_month = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_llc_fbk_version_month();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_fbk_version_month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_fbk_version_day = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_llc_fbk_version_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_fbk_version_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_fbk_version_hour = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_llc_fbk_version_hour();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_fbk_version_hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_diag_fault_620)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_diag_fault_620)
  return false;
#undef DO_
}

void Llc_diag_fault_620::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_diag_fault_620)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 llc_disengagecounter_brake = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->llc_disengagecounter_brake(), output);
  }

  // optional int32 llc_disengagecounter_steer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->llc_disengagecounter_steer(), output);
  }

  // optional int32 llc_disengagecounter_throttle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->llc_disengagecounter_throttle(), output);
  }

  // optional int32 llc_fbk_faultcounter = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->llc_fbk_faultcounter(), output);
  }

  // optional int32 llc_disengagecounter_button = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->llc_disengagecounter_button(), output);
  }

  // optional int32 llc_fbk_version_year = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->llc_fbk_version_year(), output);
  }

  // optional int32 llc_fbk_version_month = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->llc_fbk_version_month(), output);
  }

  // optional int32 llc_fbk_version_day = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->llc_fbk_version_day(), output);
  }

  // optional int32 llc_fbk_version_hour = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->llc_fbk_version_hour(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_diag_fault_620)
}

::google::protobuf::uint8* Llc_diag_fault_620::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_diag_fault_620)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 llc_disengagecounter_brake = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->llc_disengagecounter_brake(), target);
  }

  // optional int32 llc_disengagecounter_steer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->llc_disengagecounter_steer(), target);
  }

  // optional int32 llc_disengagecounter_throttle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->llc_disengagecounter_throttle(), target);
  }

  // optional int32 llc_fbk_faultcounter = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->llc_fbk_faultcounter(), target);
  }

  // optional int32 llc_disengagecounter_button = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->llc_disengagecounter_button(), target);
  }

  // optional int32 llc_fbk_version_year = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->llc_fbk_version_year(), target);
  }

  // optional int32 llc_fbk_version_month = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->llc_fbk_version_month(), target);
  }

  // optional int32 llc_fbk_version_day = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->llc_fbk_version_day(), target);
  }

  // optional int32 llc_fbk_version_hour = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->llc_fbk_version_hour(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_diag_fault_620)
  return target;
}

size_t Llc_diag_fault_620::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_diag_fault_620)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 llc_disengagecounter_brake = 1;
    if (has_llc_disengagecounter_brake()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_disengagecounter_brake());
    }

    // optional int32 llc_disengagecounter_steer = 2;
    if (has_llc_disengagecounter_steer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_disengagecounter_steer());
    }

    // optional int32 llc_disengagecounter_throttle = 3;
    if (has_llc_disengagecounter_throttle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_disengagecounter_throttle());
    }

    // optional int32 llc_fbk_faultcounter = 4;
    if (has_llc_fbk_faultcounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_fbk_faultcounter());
    }

    // optional int32 llc_disengagecounter_button = 5;
    if (has_llc_disengagecounter_button()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_disengagecounter_button());
    }

    // optional int32 llc_fbk_version_year = 6;
    if (has_llc_fbk_version_year()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_fbk_version_year());
    }

    // optional int32 llc_fbk_version_month = 7;
    if (has_llc_fbk_version_month()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_fbk_version_month());
    }

    // optional int32 llc_fbk_version_day = 8;
    if (has_llc_fbk_version_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_fbk_version_day());
    }

  }
  // optional int32 llc_fbk_version_hour = 9;
  if (has_llc_fbk_version_hour()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->llc_fbk_version_hour());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_diag_fault_620::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_diag_fault_620)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_diag_fault_620* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_diag_fault_620>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_diag_fault_620)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_diag_fault_620)
    MergeFrom(*source);
  }
}

void Llc_diag_fault_620::MergeFrom(const Llc_diag_fault_620& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_diag_fault_620)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      llc_disengagecounter_brake_ = from.llc_disengagecounter_brake_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_disengagecounter_steer_ = from.llc_disengagecounter_steer_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_disengagecounter_throttle_ = from.llc_disengagecounter_throttle_;
    }
    if (cached_has_bits & 0x00000008u) {
      llc_fbk_faultcounter_ = from.llc_fbk_faultcounter_;
    }
    if (cached_has_bits & 0x00000010u) {
      llc_disengagecounter_button_ = from.llc_disengagecounter_button_;
    }
    if (cached_has_bits & 0x00000020u) {
      llc_fbk_version_year_ = from.llc_fbk_version_year_;
    }
    if (cached_has_bits & 0x00000040u) {
      llc_fbk_version_month_ = from.llc_fbk_version_month_;
    }
    if (cached_has_bits & 0x00000080u) {
      llc_fbk_version_day_ = from.llc_fbk_version_day_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_llc_fbk_version_hour(from.llc_fbk_version_hour());
  }
}

void Llc_diag_fault_620::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_diag_fault_620)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_diag_fault_620::CopyFrom(const Llc_diag_fault_620& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_diag_fault_620)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_diag_fault_620::IsInitialized() const {
  return true;
}

void Llc_diag_fault_620::Swap(Llc_diag_fault_620* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_diag_fault_620::InternalSwap(Llc_diag_fault_620* other) {
  using std::swap;
  swap(llc_disengagecounter_brake_, other->llc_disengagecounter_brake_);
  swap(llc_disengagecounter_steer_, other->llc_disengagecounter_steer_);
  swap(llc_disengagecounter_throttle_, other->llc_disengagecounter_throttle_);
  swap(llc_fbk_faultcounter_, other->llc_fbk_faultcounter_);
  swap(llc_disengagecounter_button_, other->llc_disengagecounter_button_);
  swap(llc_fbk_version_year_, other->llc_fbk_version_year_);
  swap(llc_fbk_version_month_, other->llc_fbk_version_month_);
  swap(llc_fbk_version_day_, other->llc_fbk_version_day_);
  swap(llc_fbk_version_hour_, other->llc_fbk_version_hour_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_diag_fault_620::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_diag_steeringcontrol_722::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_diag_steeringcontrol_722::kLlcDbgSteeringsensorpositionFieldNumber;
const int Llc_diag_steeringcontrol_722::kLlcDbgSteeringrackinputtorqueFieldNumber;
const int Llc_diag_steeringcontrol_722::kLlcDbgSteeringmotorpositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_diag_steeringcontrol_722::Llc_diag_steeringcontrol_722()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_steeringcontrol_722.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_diag_steeringcontrol_722)
}
Llc_diag_steeringcontrol_722::Llc_diag_steeringcontrol_722(const Llc_diag_steeringcontrol_722& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_dbg_steeringsensorposition_, &from.llc_dbg_steeringsensorposition_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_dbg_steeringrackinputtorque_) -
    reinterpret_cast<char*>(&llc_dbg_steeringsensorposition_)) + sizeof(llc_dbg_steeringrackinputtorque_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_diag_steeringcontrol_722)
}

void Llc_diag_steeringcontrol_722::SharedCtor() {
  ::memset(&llc_dbg_steeringsensorposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_dbg_steeringrackinputtorque_) -
      reinterpret_cast<char*>(&llc_dbg_steeringsensorposition_)) + sizeof(llc_dbg_steeringrackinputtorque_));
}

Llc_diag_steeringcontrol_722::~Llc_diag_steeringcontrol_722() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_diag_steeringcontrol_722)
  SharedDtor();
}

void Llc_diag_steeringcontrol_722::SharedDtor() {
}

void Llc_diag_steeringcontrol_722::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_diag_steeringcontrol_722::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_diag_steeringcontrol_722& Llc_diag_steeringcontrol_722::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_steeringcontrol_722.base);
  return *internal_default_instance();
}


void Llc_diag_steeringcontrol_722::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&llc_dbg_steeringsensorposition_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_dbg_steeringrackinputtorque_) -
        reinterpret_cast<char*>(&llc_dbg_steeringsensorposition_)) + sizeof(llc_dbg_steeringrackinputtorque_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_diag_steeringcontrol_722::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double llc_dbg_steeringsensorposition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_llc_dbg_steeringsensorposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_steeringsensorposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_dbg_steeringrackinputtorque = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_llc_dbg_steeringrackinputtorque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_dbg_steeringrackinputtorque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_dbg_steeringmotorposition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_llc_dbg_steeringmotorposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_steeringmotorposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_diag_steeringcontrol_722)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_diag_steeringcontrol_722)
  return false;
#undef DO_
}

void Llc_diag_steeringcontrol_722::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_dbg_steeringsensorposition = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->llc_dbg_steeringsensorposition(), output);
  }

  // optional int32 llc_dbg_steeringrackinputtorque = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->llc_dbg_steeringrackinputtorque(), output);
  }

  // optional double llc_dbg_steeringmotorposition = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->llc_dbg_steeringmotorposition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_diag_steeringcontrol_722)
}

::google::protobuf::uint8* Llc_diag_steeringcontrol_722::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_dbg_steeringsensorposition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->llc_dbg_steeringsensorposition(), target);
  }

  // optional int32 llc_dbg_steeringrackinputtorque = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->llc_dbg_steeringrackinputtorque(), target);
  }

  // optional double llc_dbg_steeringmotorposition = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->llc_dbg_steeringmotorposition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_diag_steeringcontrol_722)
  return target;
}

size_t Llc_diag_steeringcontrol_722::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double llc_dbg_steeringsensorposition = 1;
    if (has_llc_dbg_steeringsensorposition()) {
      total_size += 1 + 8;
    }

    // optional double llc_dbg_steeringmotorposition = 3;
    if (has_llc_dbg_steeringmotorposition()) {
      total_size += 1 + 8;
    }

    // optional int32 llc_dbg_steeringrackinputtorque = 2;
    if (has_llc_dbg_steeringrackinputtorque()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_dbg_steeringrackinputtorque());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_diag_steeringcontrol_722::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_diag_steeringcontrol_722* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_diag_steeringcontrol_722>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_diag_steeringcontrol_722)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_diag_steeringcontrol_722)
    MergeFrom(*source);
  }
}

void Llc_diag_steeringcontrol_722::MergeFrom(const Llc_diag_steeringcontrol_722& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      llc_dbg_steeringsensorposition_ = from.llc_dbg_steeringsensorposition_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_dbg_steeringmotorposition_ = from.llc_dbg_steeringmotorposition_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_dbg_steeringrackinputtorque_ = from.llc_dbg_steeringrackinputtorque_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_diag_steeringcontrol_722::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_diag_steeringcontrol_722::CopyFrom(const Llc_diag_steeringcontrol_722& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_diag_steeringcontrol_722)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_diag_steeringcontrol_722::IsInitialized() const {
  return true;
}

void Llc_diag_steeringcontrol_722::Swap(Llc_diag_steeringcontrol_722* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_diag_steeringcontrol_722::InternalSwap(Llc_diag_steeringcontrol_722* other) {
  using std::swap;
  swap(llc_dbg_steeringsensorposition_, other->llc_dbg_steeringsensorposition_);
  swap(llc_dbg_steeringmotorposition_, other->llc_dbg_steeringmotorposition_);
  swap(llc_dbg_steeringrackinputtorque_, other->llc_dbg_steeringrackinputtorque_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_diag_steeringcontrol_722::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Adc_auxiliarycontrol_110::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adc_auxiliarycontrol_110::kAdcAuxcontrolCounterFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcAuxcontrolChecksumFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdInverterControlenableFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdInverterFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdWiperFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduControlenableFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh8FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh7FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh6FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh5FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh4FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh3FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh2FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdPduCh1FieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdHazardlightsFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdHighbeamFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdLowbeamFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdHornFieldNumber;
const int Adc_auxiliarycontrol_110::kAdcCmdTurnsignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adc_auxiliarycontrol_110::Adc_auxiliarycontrol_110()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_auxiliarycontrol_110.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Adc_auxiliarycontrol_110)
}
Adc_auxiliarycontrol_110::Adc_auxiliarycontrol_110(const Adc_auxiliarycontrol_110& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adc_auxcontrol_counter_, &from.adc_auxcontrol_counter_,
    static_cast<size_t>(reinterpret_cast<char*>(&adc_cmd_turnsignal_) -
    reinterpret_cast<char*>(&adc_auxcontrol_counter_)) + sizeof(adc_cmd_turnsignal_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Adc_auxiliarycontrol_110)
}

void Adc_auxiliarycontrol_110::SharedCtor() {
  ::memset(&adc_auxcontrol_counter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adc_cmd_turnsignal_) -
      reinterpret_cast<char*>(&adc_auxcontrol_counter_)) + sizeof(adc_cmd_turnsignal_));
}

Adc_auxiliarycontrol_110::~Adc_auxiliarycontrol_110() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Adc_auxiliarycontrol_110)
  SharedDtor();
}

void Adc_auxiliarycontrol_110::SharedDtor() {
}

void Adc_auxiliarycontrol_110::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Adc_auxiliarycontrol_110::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adc_auxiliarycontrol_110& Adc_auxiliarycontrol_110::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Adc_auxiliarycontrol_110.base);
  return *internal_default_instance();
}


void Adc_auxiliarycontrol_110::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Adc_auxiliarycontrol_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&adc_auxcontrol_counter_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_cmd_pdu_ch7_) -
        reinterpret_cast<char*>(&adc_auxcontrol_counter_)) + sizeof(adc_cmd_pdu_ch7_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&adc_cmd_pdu_ch6_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_cmd_highbeam_) -
        reinterpret_cast<char*>(&adc_cmd_pdu_ch6_)) + sizeof(adc_cmd_highbeam_));
  }
  if (cached_has_bits & 458752u) {
    ::memset(&adc_cmd_lowbeam_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_cmd_turnsignal_) -
        reinterpret_cast<char*>(&adc_cmd_lowbeam_)) + sizeof(adc_cmd_turnsignal_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adc_auxiliarycontrol_110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Adc_auxiliarycontrol_110)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 adc_auxcontrol_counter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_adc_auxcontrol_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adc_auxcontrol_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adc_auxcontrol_checksum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_adc_auxcontrol_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adc_auxcontrol_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_inverter_controlenable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_adc_cmd_inverter_controlenable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_inverter_controlenable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_inverter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_adc_cmd_inverter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_inverter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adc_cmd_wiper = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_adc_cmd_wiper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adc_cmd_wiper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_controlenable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_adc_cmd_pdu_controlenable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_controlenable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch8 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch7 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch7();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch6 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch5 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch4 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch3 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch2 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_pdu_ch1 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_adc_cmd_pdu_ch1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_pdu_ch1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_hazardlights = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_adc_cmd_hazardlights();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_hazardlights_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_highbeam = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_adc_cmd_highbeam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_highbeam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_lowbeam = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_adc_cmd_lowbeam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_lowbeam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adc_cmd_horn = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_adc_cmd_horn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adc_cmd_horn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_auxiliarycontrol_110.Adc_cmd_turnsignalType adc_cmd_turnsignal = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::canbus::Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType_IsValid(value)) {
            set_adc_cmd_turnsignal(static_cast< ::apollo::canbus::Adc_auxiliarycontrol_110_Adc_cmd_turnsignalType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                19, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Adc_auxiliarycontrol_110)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Adc_auxiliarycontrol_110)
  return false;
#undef DO_
}

void Adc_auxiliarycontrol_110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Adc_auxiliarycontrol_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 adc_auxcontrol_counter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->adc_auxcontrol_counter(), output);
  }

  // optional int32 adc_auxcontrol_checksum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->adc_auxcontrol_checksum(), output);
  }

  // optional bool adc_cmd_inverter_controlenable = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->adc_cmd_inverter_controlenable(), output);
  }

  // optional bool adc_cmd_inverter = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->adc_cmd_inverter(), output);
  }

  // optional int32 adc_cmd_wiper = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->adc_cmd_wiper(), output);
  }

  // optional bool adc_cmd_pdu_controlenable = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->adc_cmd_pdu_controlenable(), output);
  }

  // optional bool adc_cmd_pdu_ch8 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->adc_cmd_pdu_ch8(), output);
  }

  // optional bool adc_cmd_pdu_ch7 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->adc_cmd_pdu_ch7(), output);
  }

  // optional bool adc_cmd_pdu_ch6 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->adc_cmd_pdu_ch6(), output);
  }

  // optional bool adc_cmd_pdu_ch5 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->adc_cmd_pdu_ch5(), output);
  }

  // optional bool adc_cmd_pdu_ch4 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->adc_cmd_pdu_ch4(), output);
  }

  // optional bool adc_cmd_pdu_ch3 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->adc_cmd_pdu_ch3(), output);
  }

  // optional bool adc_cmd_pdu_ch2 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->adc_cmd_pdu_ch2(), output);
  }

  // optional bool adc_cmd_pdu_ch1 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->adc_cmd_pdu_ch1(), output);
  }

  // optional bool adc_cmd_hazardlights = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->adc_cmd_hazardlights(), output);
  }

  // optional bool adc_cmd_highbeam = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->adc_cmd_highbeam(), output);
  }

  // optional bool adc_cmd_lowbeam = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->adc_cmd_lowbeam(), output);
  }

  // optional bool adc_cmd_horn = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->adc_cmd_horn(), output);
  }

  // optional .apollo.canbus.Adc_auxiliarycontrol_110.Adc_cmd_turnsignalType adc_cmd_turnsignal = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->adc_cmd_turnsignal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Adc_auxiliarycontrol_110)
}

::google::protobuf::uint8* Adc_auxiliarycontrol_110::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Adc_auxiliarycontrol_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 adc_auxcontrol_counter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->adc_auxcontrol_counter(), target);
  }

  // optional int32 adc_auxcontrol_checksum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->adc_auxcontrol_checksum(), target);
  }

  // optional bool adc_cmd_inverter_controlenable = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->adc_cmd_inverter_controlenable(), target);
  }

  // optional bool adc_cmd_inverter = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->adc_cmd_inverter(), target);
  }

  // optional int32 adc_cmd_wiper = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->adc_cmd_wiper(), target);
  }

  // optional bool adc_cmd_pdu_controlenable = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->adc_cmd_pdu_controlenable(), target);
  }

  // optional bool adc_cmd_pdu_ch8 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->adc_cmd_pdu_ch8(), target);
  }

  // optional bool adc_cmd_pdu_ch7 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->adc_cmd_pdu_ch7(), target);
  }

  // optional bool adc_cmd_pdu_ch6 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->adc_cmd_pdu_ch6(), target);
  }

  // optional bool adc_cmd_pdu_ch5 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->adc_cmd_pdu_ch5(), target);
  }

  // optional bool adc_cmd_pdu_ch4 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->adc_cmd_pdu_ch4(), target);
  }

  // optional bool adc_cmd_pdu_ch3 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->adc_cmd_pdu_ch3(), target);
  }

  // optional bool adc_cmd_pdu_ch2 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->adc_cmd_pdu_ch2(), target);
  }

  // optional bool adc_cmd_pdu_ch1 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->adc_cmd_pdu_ch1(), target);
  }

  // optional bool adc_cmd_hazardlights = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->adc_cmd_hazardlights(), target);
  }

  // optional bool adc_cmd_highbeam = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->adc_cmd_highbeam(), target);
  }

  // optional bool adc_cmd_lowbeam = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->adc_cmd_lowbeam(), target);
  }

  // optional bool adc_cmd_horn = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->adc_cmd_horn(), target);
  }

  // optional .apollo.canbus.Adc_auxiliarycontrol_110.Adc_cmd_turnsignalType adc_cmd_turnsignal = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->adc_cmd_turnsignal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Adc_auxiliarycontrol_110)
  return target;
}

size_t Adc_auxiliarycontrol_110::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Adc_auxiliarycontrol_110)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 adc_auxcontrol_counter = 1;
    if (has_adc_auxcontrol_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adc_auxcontrol_counter());
    }

    // optional int32 adc_auxcontrol_checksum = 2;
    if (has_adc_auxcontrol_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adc_auxcontrol_checksum());
    }

    // optional int32 adc_cmd_wiper = 5;
    if (has_adc_cmd_wiper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adc_cmd_wiper());
    }

    // optional bool adc_cmd_inverter_controlenable = 3;
    if (has_adc_cmd_inverter_controlenable()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_inverter = 4;
    if (has_adc_cmd_inverter()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_controlenable = 6;
    if (has_adc_cmd_pdu_controlenable()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch8 = 7;
    if (has_adc_cmd_pdu_ch8()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch7 = 8;
    if (has_adc_cmd_pdu_ch7()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool adc_cmd_pdu_ch6 = 9;
    if (has_adc_cmd_pdu_ch6()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch5 = 10;
    if (has_adc_cmd_pdu_ch5()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch4 = 11;
    if (has_adc_cmd_pdu_ch4()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch3 = 12;
    if (has_adc_cmd_pdu_ch3()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch2 = 13;
    if (has_adc_cmd_pdu_ch2()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_pdu_ch1 = 14;
    if (has_adc_cmd_pdu_ch1()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_hazardlights = 15;
    if (has_adc_cmd_hazardlights()) {
      total_size += 1 + 1;
    }

    // optional bool adc_cmd_highbeam = 16;
    if (has_adc_cmd_highbeam()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional bool adc_cmd_lowbeam = 17;
    if (has_adc_cmd_lowbeam()) {
      total_size += 2 + 1;
    }

    // optional bool adc_cmd_horn = 18;
    if (has_adc_cmd_horn()) {
      total_size += 2 + 1;
    }

    // optional .apollo.canbus.Adc_auxiliarycontrol_110.Adc_cmd_turnsignalType adc_cmd_turnsignal = 19;
    if (has_adc_cmd_turnsignal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adc_cmd_turnsignal());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Adc_auxiliarycontrol_110::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Adc_auxiliarycontrol_110)
  GOOGLE_DCHECK_NE(&from, this);
  const Adc_auxiliarycontrol_110* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adc_auxiliarycontrol_110>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Adc_auxiliarycontrol_110)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Adc_auxiliarycontrol_110)
    MergeFrom(*source);
  }
}

void Adc_auxiliarycontrol_110::MergeFrom(const Adc_auxiliarycontrol_110& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Adc_auxiliarycontrol_110)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      adc_auxcontrol_counter_ = from.adc_auxcontrol_counter_;
    }
    if (cached_has_bits & 0x00000002u) {
      adc_auxcontrol_checksum_ = from.adc_auxcontrol_checksum_;
    }
    if (cached_has_bits & 0x00000004u) {
      adc_cmd_wiper_ = from.adc_cmd_wiper_;
    }
    if (cached_has_bits & 0x00000008u) {
      adc_cmd_inverter_controlenable_ = from.adc_cmd_inverter_controlenable_;
    }
    if (cached_has_bits & 0x00000010u) {
      adc_cmd_inverter_ = from.adc_cmd_inverter_;
    }
    if (cached_has_bits & 0x00000020u) {
      adc_cmd_pdu_controlenable_ = from.adc_cmd_pdu_controlenable_;
    }
    if (cached_has_bits & 0x00000040u) {
      adc_cmd_pdu_ch8_ = from.adc_cmd_pdu_ch8_;
    }
    if (cached_has_bits & 0x00000080u) {
      adc_cmd_pdu_ch7_ = from.adc_cmd_pdu_ch7_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      adc_cmd_pdu_ch6_ = from.adc_cmd_pdu_ch6_;
    }
    if (cached_has_bits & 0x00000200u) {
      adc_cmd_pdu_ch5_ = from.adc_cmd_pdu_ch5_;
    }
    if (cached_has_bits & 0x00000400u) {
      adc_cmd_pdu_ch4_ = from.adc_cmd_pdu_ch4_;
    }
    if (cached_has_bits & 0x00000800u) {
      adc_cmd_pdu_ch3_ = from.adc_cmd_pdu_ch3_;
    }
    if (cached_has_bits & 0x00001000u) {
      adc_cmd_pdu_ch2_ = from.adc_cmd_pdu_ch2_;
    }
    if (cached_has_bits & 0x00002000u) {
      adc_cmd_pdu_ch1_ = from.adc_cmd_pdu_ch1_;
    }
    if (cached_has_bits & 0x00004000u) {
      adc_cmd_hazardlights_ = from.adc_cmd_hazardlights_;
    }
    if (cached_has_bits & 0x00008000u) {
      adc_cmd_highbeam_ = from.adc_cmd_highbeam_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      adc_cmd_lowbeam_ = from.adc_cmd_lowbeam_;
    }
    if (cached_has_bits & 0x00020000u) {
      adc_cmd_horn_ = from.adc_cmd_horn_;
    }
    if (cached_has_bits & 0x00040000u) {
      adc_cmd_turnsignal_ = from.adc_cmd_turnsignal_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adc_auxiliarycontrol_110::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Adc_auxiliarycontrol_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adc_auxiliarycontrol_110::CopyFrom(const Adc_auxiliarycontrol_110& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Adc_auxiliarycontrol_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adc_auxiliarycontrol_110::IsInitialized() const {
  return true;
}

void Adc_auxiliarycontrol_110::Swap(Adc_auxiliarycontrol_110* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adc_auxiliarycontrol_110::InternalSwap(Adc_auxiliarycontrol_110* other) {
  using std::swap;
  swap(adc_auxcontrol_counter_, other->adc_auxcontrol_counter_);
  swap(adc_auxcontrol_checksum_, other->adc_auxcontrol_checksum_);
  swap(adc_cmd_wiper_, other->adc_cmd_wiper_);
  swap(adc_cmd_inverter_controlenable_, other->adc_cmd_inverter_controlenable_);
  swap(adc_cmd_inverter_, other->adc_cmd_inverter_);
  swap(adc_cmd_pdu_controlenable_, other->adc_cmd_pdu_controlenable_);
  swap(adc_cmd_pdu_ch8_, other->adc_cmd_pdu_ch8_);
  swap(adc_cmd_pdu_ch7_, other->adc_cmd_pdu_ch7_);
  swap(adc_cmd_pdu_ch6_, other->adc_cmd_pdu_ch6_);
  swap(adc_cmd_pdu_ch5_, other->adc_cmd_pdu_ch5_);
  swap(adc_cmd_pdu_ch4_, other->adc_cmd_pdu_ch4_);
  swap(adc_cmd_pdu_ch3_, other->adc_cmd_pdu_ch3_);
  swap(adc_cmd_pdu_ch2_, other->adc_cmd_pdu_ch2_);
  swap(adc_cmd_pdu_ch1_, other->adc_cmd_pdu_ch1_);
  swap(adc_cmd_hazardlights_, other->adc_cmd_hazardlights_);
  swap(adc_cmd_highbeam_, other->adc_cmd_highbeam_);
  swap(adc_cmd_lowbeam_, other->adc_cmd_lowbeam_);
  swap(adc_cmd_horn_, other->adc_cmd_horn_);
  swap(adc_cmd_turnsignal_, other->adc_cmd_turnsignal_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Adc_auxiliarycontrol_110::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Llc_diag_brakecontrol_721::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Llc_diag_brakecontrol_721::kLlcDbgBrakepidcontributionPFieldNumber;
const int Llc_diag_brakecontrol_721::kLlcDbgBrakepidcontributionIFieldNumber;
const int Llc_diag_brakecontrol_721::kLlcDbgBrakepidcontributionDFieldNumber;
const int Llc_diag_brakecontrol_721::kLlcDbgBrakepidOutputFieldNumber;
const int Llc_diag_brakecontrol_721::kLlcDbgBrakepidErrorFieldNumber;
const int Llc_diag_brakecontrol_721::kLlcDbgBrakefeedforwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Llc_diag_brakecontrol_721::Llc_diag_brakecontrol_721()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_brakecontrol_721.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Llc_diag_brakecontrol_721)
}
Llc_diag_brakecontrol_721::Llc_diag_brakecontrol_721(const Llc_diag_brakecontrol_721& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&llc_dbg_brakepidcontribution_p_, &from.llc_dbg_brakepidcontribution_p_,
    static_cast<size_t>(reinterpret_cast<char*>(&llc_dbg_brakepid_error_) -
    reinterpret_cast<char*>(&llc_dbg_brakepidcontribution_p_)) + sizeof(llc_dbg_brakepid_error_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Llc_diag_brakecontrol_721)
}

void Llc_diag_brakecontrol_721::SharedCtor() {
  ::memset(&llc_dbg_brakepidcontribution_p_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_dbg_brakepid_error_) -
      reinterpret_cast<char*>(&llc_dbg_brakepidcontribution_p_)) + sizeof(llc_dbg_brakepid_error_));
}

Llc_diag_brakecontrol_721::~Llc_diag_brakecontrol_721() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Llc_diag_brakecontrol_721)
  SharedDtor();
}

void Llc_diag_brakecontrol_721::SharedDtor() {
}

void Llc_diag_brakecontrol_721::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Llc_diag_brakecontrol_721::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Llc_diag_brakecontrol_721& Llc_diag_brakecontrol_721::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Llc_diag_brakecontrol_721.base);
  return *internal_default_instance();
}


void Llc_diag_brakecontrol_721::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Llc_diag_brakecontrol_721)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&llc_dbg_brakepidcontribution_p_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llc_dbg_brakepid_error_) -
        reinterpret_cast<char*>(&llc_dbg_brakepidcontribution_p_)) + sizeof(llc_dbg_brakepid_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Llc_diag_brakecontrol_721::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Llc_diag_brakecontrol_721)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double llc_dbg_brakepidcontribution_p = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_llc_dbg_brakepidcontribution_p();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_brakepidcontribution_p_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_dbg_brakepidcontribution_i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_llc_dbg_brakepidcontribution_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_brakepidcontribution_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_dbg_brakepidcontribution_d = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_llc_dbg_brakepidcontribution_d();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_brakepidcontribution_d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_dbg_brakepid_output = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_llc_dbg_brakepid_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_brakepid_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 llc_dbg_brakepid_error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_llc_dbg_brakepid_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &llc_dbg_brakepid_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double llc_dbg_brakefeedforward = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_llc_dbg_brakefeedforward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &llc_dbg_brakefeedforward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Llc_diag_brakecontrol_721)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Llc_diag_brakecontrol_721)
  return false;
#undef DO_
}

void Llc_diag_brakecontrol_721::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Llc_diag_brakecontrol_721)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_dbg_brakepidcontribution_p = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->llc_dbg_brakepidcontribution_p(), output);
  }

  // optional double llc_dbg_brakepidcontribution_i = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->llc_dbg_brakepidcontribution_i(), output);
  }

  // optional double llc_dbg_brakepidcontribution_d = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->llc_dbg_brakepidcontribution_d(), output);
  }

  // optional double llc_dbg_brakepid_output = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->llc_dbg_brakepid_output(), output);
  }

  // optional int32 llc_dbg_brakepid_error = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->llc_dbg_brakepid_error(), output);
  }

  // optional double llc_dbg_brakefeedforward = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->llc_dbg_brakefeedforward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Llc_diag_brakecontrol_721)
}

::google::protobuf::uint8* Llc_diag_brakecontrol_721::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Llc_diag_brakecontrol_721)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double llc_dbg_brakepidcontribution_p = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->llc_dbg_brakepidcontribution_p(), target);
  }

  // optional double llc_dbg_brakepidcontribution_i = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->llc_dbg_brakepidcontribution_i(), target);
  }

  // optional double llc_dbg_brakepidcontribution_d = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->llc_dbg_brakepidcontribution_d(), target);
  }

  // optional double llc_dbg_brakepid_output = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->llc_dbg_brakepid_output(), target);
  }

  // optional int32 llc_dbg_brakepid_error = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->llc_dbg_brakepid_error(), target);
  }

  // optional double llc_dbg_brakefeedforward = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->llc_dbg_brakefeedforward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Llc_diag_brakecontrol_721)
  return target;
}

size_t Llc_diag_brakecontrol_721::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Llc_diag_brakecontrol_721)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional double llc_dbg_brakepidcontribution_p = 1;
    if (has_llc_dbg_brakepidcontribution_p()) {
      total_size += 1 + 8;
    }

    // optional double llc_dbg_brakepidcontribution_i = 2;
    if (has_llc_dbg_brakepidcontribution_i()) {
      total_size += 1 + 8;
    }

    // optional double llc_dbg_brakepidcontribution_d = 3;
    if (has_llc_dbg_brakepidcontribution_d()) {
      total_size += 1 + 8;
    }

    // optional double llc_dbg_brakepid_output = 4;
    if (has_llc_dbg_brakepid_output()) {
      total_size += 1 + 8;
    }

    // optional double llc_dbg_brakefeedforward = 6;
    if (has_llc_dbg_brakefeedforward()) {
      total_size += 1 + 8;
    }

    // optional int32 llc_dbg_brakepid_error = 5;
    if (has_llc_dbg_brakepid_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->llc_dbg_brakepid_error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Llc_diag_brakecontrol_721::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Llc_diag_brakecontrol_721)
  GOOGLE_DCHECK_NE(&from, this);
  const Llc_diag_brakecontrol_721* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Llc_diag_brakecontrol_721>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Llc_diag_brakecontrol_721)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Llc_diag_brakecontrol_721)
    MergeFrom(*source);
  }
}

void Llc_diag_brakecontrol_721::MergeFrom(const Llc_diag_brakecontrol_721& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Llc_diag_brakecontrol_721)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      llc_dbg_brakepidcontribution_p_ = from.llc_dbg_brakepidcontribution_p_;
    }
    if (cached_has_bits & 0x00000002u) {
      llc_dbg_brakepidcontribution_i_ = from.llc_dbg_brakepidcontribution_i_;
    }
    if (cached_has_bits & 0x00000004u) {
      llc_dbg_brakepidcontribution_d_ = from.llc_dbg_brakepidcontribution_d_;
    }
    if (cached_has_bits & 0x00000008u) {
      llc_dbg_brakepid_output_ = from.llc_dbg_brakepid_output_;
    }
    if (cached_has_bits & 0x00000010u) {
      llc_dbg_brakefeedforward_ = from.llc_dbg_brakefeedforward_;
    }
    if (cached_has_bits & 0x00000020u) {
      llc_dbg_brakepid_error_ = from.llc_dbg_brakepid_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Llc_diag_brakecontrol_721::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Llc_diag_brakecontrol_721)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Llc_diag_brakecontrol_721::CopyFrom(const Llc_diag_brakecontrol_721& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Llc_diag_brakecontrol_721)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Llc_diag_brakecontrol_721::IsInitialized() const {
  return true;
}

void Llc_diag_brakecontrol_721::Swap(Llc_diag_brakecontrol_721* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Llc_diag_brakecontrol_721::InternalSwap(Llc_diag_brakecontrol_721* other) {
  using std::swap;
  swap(llc_dbg_brakepidcontribution_p_, other->llc_dbg_brakepidcontribution_p_);
  swap(llc_dbg_brakepidcontribution_i_, other->llc_dbg_brakepidcontribution_i_);
  swap(llc_dbg_brakepidcontribution_d_, other->llc_dbg_brakepidcontribution_d_);
  swap(llc_dbg_brakepid_output_, other->llc_dbg_brakepid_output_);
  swap(llc_dbg_brakefeedforward_, other->llc_dbg_brakefeedforward_);
  swap(llc_dbg_brakepid_error_, other->llc_dbg_brakepid_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Llc_diag_brakecontrol_721::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transit::InitAsDefaultInstance() {
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_vehiclelimits_24_ = const_cast< ::apollo::canbus::Llc_vehiclelimits_24*>(
      ::apollo::canbus::Llc_vehiclelimits_24::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->adc_motioncontrol1_10_ = const_cast< ::apollo::canbus::Adc_motioncontrol1_10*>(
      ::apollo::canbus::Adc_motioncontrol1_10::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->adc_motioncontrollimits1_12_ = const_cast< ::apollo::canbus::Adc_motioncontrollimits1_12*>(
      ::apollo::canbus::Adc_motioncontrollimits1_12::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_motionfeedback1_20_ = const_cast< ::apollo::canbus::Llc_motionfeedback1_20*>(
      ::apollo::canbus::Llc_motionfeedback1_20::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_motionfeedback2_21_ = const_cast< ::apollo::canbus::Llc_motionfeedback2_21*>(
      ::apollo::canbus::Llc_motionfeedback2_21::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_motioncommandfeedback1_22_ = const_cast< ::apollo::canbus::Llc_motioncommandfeedback1_22*>(
      ::apollo::canbus::Llc_motioncommandfeedback1_22::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_vehiclestatus_25_ = const_cast< ::apollo::canbus::Llc_vehiclestatus_25*>(
      ::apollo::canbus::Llc_vehiclestatus_25::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_auxiliaryfeedback_120_ = const_cast< ::apollo::canbus::Llc_auxiliaryfeedback_120*>(
      ::apollo::canbus::Llc_auxiliaryfeedback_120::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_diag_fault_620_ = const_cast< ::apollo::canbus::Llc_diag_fault_620*>(
      ::apollo::canbus::Llc_diag_fault_620::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_diag_steeringcontrol_722_ = const_cast< ::apollo::canbus::Llc_diag_steeringcontrol_722*>(
      ::apollo::canbus::Llc_diag_steeringcontrol_722::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->adc_auxiliarycontrol_110_ = const_cast< ::apollo::canbus::Adc_auxiliarycontrol_110*>(
      ::apollo::canbus::Adc_auxiliarycontrol_110::internal_default_instance());
  ::apollo::canbus::_Transit_default_instance_._instance.get_mutable()->llc_diag_brakecontrol_721_ = const_cast< ::apollo::canbus::Llc_diag_brakecontrol_721*>(
      ::apollo::canbus::Llc_diag_brakecontrol_721::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transit::kLlcVehiclelimits24FieldNumber;
const int Transit::kAdcMotioncontrol110FieldNumber;
const int Transit::kAdcMotioncontrollimits112FieldNumber;
const int Transit::kLlcMotionfeedback120FieldNumber;
const int Transit::kLlcMotionfeedback221FieldNumber;
const int Transit::kLlcMotioncommandfeedback122FieldNumber;
const int Transit::kLlcVehiclestatus25FieldNumber;
const int Transit::kLlcAuxiliaryfeedback120FieldNumber;
const int Transit::kLlcDiagFault620FieldNumber;
const int Transit::kLlcDiagSteeringcontrol722FieldNumber;
const int Transit::kAdcAuxiliarycontrol110FieldNumber;
const int Transit::kLlcDiagBrakecontrol721FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transit::Transit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Transit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Transit)
}
Transit::Transit(const Transit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_llc_vehiclelimits_24()) {
    llc_vehiclelimits_24_ = new ::apollo::canbus::Llc_vehiclelimits_24(*from.llc_vehiclelimits_24_);
  } else {
    llc_vehiclelimits_24_ = NULL;
  }
  if (from.has_adc_motioncontrol1_10()) {
    adc_motioncontrol1_10_ = new ::apollo::canbus::Adc_motioncontrol1_10(*from.adc_motioncontrol1_10_);
  } else {
    adc_motioncontrol1_10_ = NULL;
  }
  if (from.has_adc_motioncontrollimits1_12()) {
    adc_motioncontrollimits1_12_ = new ::apollo::canbus::Adc_motioncontrollimits1_12(*from.adc_motioncontrollimits1_12_);
  } else {
    adc_motioncontrollimits1_12_ = NULL;
  }
  if (from.has_llc_motionfeedback1_20()) {
    llc_motionfeedback1_20_ = new ::apollo::canbus::Llc_motionfeedback1_20(*from.llc_motionfeedback1_20_);
  } else {
    llc_motionfeedback1_20_ = NULL;
  }
  if (from.has_llc_motionfeedback2_21()) {
    llc_motionfeedback2_21_ = new ::apollo::canbus::Llc_motionfeedback2_21(*from.llc_motionfeedback2_21_);
  } else {
    llc_motionfeedback2_21_ = NULL;
  }
  if (from.has_llc_motioncommandfeedback1_22()) {
    llc_motioncommandfeedback1_22_ = new ::apollo::canbus::Llc_motioncommandfeedback1_22(*from.llc_motioncommandfeedback1_22_);
  } else {
    llc_motioncommandfeedback1_22_ = NULL;
  }
  if (from.has_llc_vehiclestatus_25()) {
    llc_vehiclestatus_25_ = new ::apollo::canbus::Llc_vehiclestatus_25(*from.llc_vehiclestatus_25_);
  } else {
    llc_vehiclestatus_25_ = NULL;
  }
  if (from.has_llc_auxiliaryfeedback_120()) {
    llc_auxiliaryfeedback_120_ = new ::apollo::canbus::Llc_auxiliaryfeedback_120(*from.llc_auxiliaryfeedback_120_);
  } else {
    llc_auxiliaryfeedback_120_ = NULL;
  }
  if (from.has_llc_diag_fault_620()) {
    llc_diag_fault_620_ = new ::apollo::canbus::Llc_diag_fault_620(*from.llc_diag_fault_620_);
  } else {
    llc_diag_fault_620_ = NULL;
  }
  if (from.has_llc_diag_steeringcontrol_722()) {
    llc_diag_steeringcontrol_722_ = new ::apollo::canbus::Llc_diag_steeringcontrol_722(*from.llc_diag_steeringcontrol_722_);
  } else {
    llc_diag_steeringcontrol_722_ = NULL;
  }
  if (from.has_adc_auxiliarycontrol_110()) {
    adc_auxiliarycontrol_110_ = new ::apollo::canbus::Adc_auxiliarycontrol_110(*from.adc_auxiliarycontrol_110_);
  } else {
    adc_auxiliarycontrol_110_ = NULL;
  }
  if (from.has_llc_diag_brakecontrol_721()) {
    llc_diag_brakecontrol_721_ = new ::apollo::canbus::Llc_diag_brakecontrol_721(*from.llc_diag_brakecontrol_721_);
  } else {
    llc_diag_brakecontrol_721_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Transit)
}

void Transit::SharedCtor() {
  ::memset(&llc_vehiclelimits_24_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llc_diag_brakecontrol_721_) -
      reinterpret_cast<char*>(&llc_vehiclelimits_24_)) + sizeof(llc_diag_brakecontrol_721_));
}

Transit::~Transit() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Transit)
  SharedDtor();
}

void Transit::SharedDtor() {
  if (this != internal_default_instance()) delete llc_vehiclelimits_24_;
  if (this != internal_default_instance()) delete adc_motioncontrol1_10_;
  if (this != internal_default_instance()) delete adc_motioncontrollimits1_12_;
  if (this != internal_default_instance()) delete llc_motionfeedback1_20_;
  if (this != internal_default_instance()) delete llc_motionfeedback2_21_;
  if (this != internal_default_instance()) delete llc_motioncommandfeedback1_22_;
  if (this != internal_default_instance()) delete llc_vehiclestatus_25_;
  if (this != internal_default_instance()) delete llc_auxiliaryfeedback_120_;
  if (this != internal_default_instance()) delete llc_diag_fault_620_;
  if (this != internal_default_instance()) delete llc_diag_steeringcontrol_722_;
  if (this != internal_default_instance()) delete adc_auxiliarycontrol_110_;
  if (this != internal_default_instance()) delete llc_diag_brakecontrol_721_;
}

void Transit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transit::descriptor() {
  ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transit& Transit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::scc_info_Transit.base);
  return *internal_default_instance();
}


void Transit::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Transit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(llc_vehiclelimits_24_ != NULL);
      llc_vehiclelimits_24_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(adc_motioncontrol1_10_ != NULL);
      adc_motioncontrol1_10_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(adc_motioncontrollimits1_12_ != NULL);
      adc_motioncontrollimits1_12_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(llc_motionfeedback1_20_ != NULL);
      llc_motionfeedback1_20_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(llc_motionfeedback2_21_ != NULL);
      llc_motionfeedback2_21_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(llc_motioncommandfeedback1_22_ != NULL);
      llc_motioncommandfeedback1_22_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(llc_vehiclestatus_25_ != NULL);
      llc_vehiclestatus_25_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(llc_auxiliaryfeedback_120_ != NULL);
      llc_auxiliaryfeedback_120_->Clear();
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(llc_diag_fault_620_ != NULL);
      llc_diag_fault_620_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(llc_diag_steeringcontrol_722_ != NULL);
      llc_diag_steeringcontrol_722_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(adc_auxiliarycontrol_110_ != NULL);
      adc_auxiliarycontrol_110_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(llc_diag_brakecontrol_721_ != NULL);
      llc_diag_brakecontrol_721_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Transit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Transit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Llc_vehiclelimits_24 llc_vehiclelimits_24 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_vehiclelimits_24()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_motioncontrol1_10 adc_motioncontrol1_10 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adc_motioncontrol1_10()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_motioncontrollimits1_12 adc_motioncontrollimits1_12 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adc_motioncontrollimits1_12()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_motionfeedback1_20 llc_motionfeedback1_20 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_motionfeedback1_20()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_motionfeedback2_21 llc_motionfeedback2_21 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_motionfeedback2_21()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_motioncommandfeedback1_22 llc_motioncommandfeedback1_22 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_motioncommandfeedback1_22()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_vehiclestatus_25 llc_vehiclestatus_25 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_vehiclestatus_25()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_auxiliaryfeedback_120 llc_auxiliaryfeedback_120 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_auxiliaryfeedback_120()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_diag_fault_620 llc_diag_fault_620 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_diag_fault_620()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_diag_steeringcontrol_722 llc_diag_steeringcontrol_722 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_diag_steeringcontrol_722()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Adc_auxiliarycontrol_110 adc_auxiliarycontrol_110 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adc_auxiliarycontrol_110()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Llc_diag_brakecontrol_721 llc_diag_brakecontrol_721 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_llc_diag_brakecontrol_721()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Transit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Transit)
  return false;
#undef DO_
}

void Transit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Transit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Llc_vehiclelimits_24 llc_vehiclelimits_24 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_llc_vehiclelimits_24(), output);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10 adc_motioncontrol1_10 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_adc_motioncontrol1_10(), output);
  }

  // optional .apollo.canbus.Adc_motioncontrollimits1_12 adc_motioncontrollimits1_12 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_adc_motioncontrollimits1_12(), output);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20 llc_motionfeedback1_20 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_llc_motionfeedback1_20(), output);
  }

  // optional .apollo.canbus.Llc_motionfeedback2_21 llc_motionfeedback2_21 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_llc_motionfeedback2_21(), output);
  }

  // optional .apollo.canbus.Llc_motioncommandfeedback1_22 llc_motioncommandfeedback1_22 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_llc_motioncommandfeedback1_22(), output);
  }

  // optional .apollo.canbus.Llc_vehiclestatus_25 llc_vehiclestatus_25 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_llc_vehiclestatus_25(), output);
  }

  // optional .apollo.canbus.Llc_auxiliaryfeedback_120 llc_auxiliaryfeedback_120 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_llc_auxiliaryfeedback_120(), output);
  }

  // optional .apollo.canbus.Llc_diag_fault_620 llc_diag_fault_620 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_llc_diag_fault_620(), output);
  }

  // optional .apollo.canbus.Llc_diag_steeringcontrol_722 llc_diag_steeringcontrol_722 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_llc_diag_steeringcontrol_722(), output);
  }

  // optional .apollo.canbus.Adc_auxiliarycontrol_110 adc_auxiliarycontrol_110 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_adc_auxiliarycontrol_110(), output);
  }

  // optional .apollo.canbus.Llc_diag_brakecontrol_721 llc_diag_brakecontrol_721 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_llc_diag_brakecontrol_721(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Transit)
}

::google::protobuf::uint8* Transit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Transit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Llc_vehiclelimits_24 llc_vehiclelimits_24 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_llc_vehiclelimits_24(), deterministic, target);
  }

  // optional .apollo.canbus.Adc_motioncontrol1_10 adc_motioncontrol1_10 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_adc_motioncontrol1_10(), deterministic, target);
  }

  // optional .apollo.canbus.Adc_motioncontrollimits1_12 adc_motioncontrollimits1_12 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_adc_motioncontrollimits1_12(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_motionfeedback1_20 llc_motionfeedback1_20 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_llc_motionfeedback1_20(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_motionfeedback2_21 llc_motionfeedback2_21 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_llc_motionfeedback2_21(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_motioncommandfeedback1_22 llc_motioncommandfeedback1_22 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_llc_motioncommandfeedback1_22(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_vehiclestatus_25 llc_vehiclestatus_25 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_llc_vehiclestatus_25(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_auxiliaryfeedback_120 llc_auxiliaryfeedback_120 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_llc_auxiliaryfeedback_120(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_diag_fault_620 llc_diag_fault_620 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_llc_diag_fault_620(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_diag_steeringcontrol_722 llc_diag_steeringcontrol_722 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_llc_diag_steeringcontrol_722(), deterministic, target);
  }

  // optional .apollo.canbus.Adc_auxiliarycontrol_110 adc_auxiliarycontrol_110 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_adc_auxiliarycontrol_110(), deterministic, target);
  }

  // optional .apollo.canbus.Llc_diag_brakecontrol_721 llc_diag_brakecontrol_721 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_llc_diag_brakecontrol_721(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Transit)
  return target;
}

size_t Transit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Transit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.canbus.Llc_vehiclelimits_24 llc_vehiclelimits_24 = 1;
    if (has_llc_vehiclelimits_24()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_vehiclelimits_24_);
    }

    // optional .apollo.canbus.Adc_motioncontrol1_10 adc_motioncontrol1_10 = 2;
    if (has_adc_motioncontrol1_10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *adc_motioncontrol1_10_);
    }

    // optional .apollo.canbus.Adc_motioncontrollimits1_12 adc_motioncontrollimits1_12 = 3;
    if (has_adc_motioncontrollimits1_12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *adc_motioncontrollimits1_12_);
    }

    // optional .apollo.canbus.Llc_motionfeedback1_20 llc_motionfeedback1_20 = 4;
    if (has_llc_motionfeedback1_20()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_motionfeedback1_20_);
    }

    // optional .apollo.canbus.Llc_motionfeedback2_21 llc_motionfeedback2_21 = 5;
    if (has_llc_motionfeedback2_21()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_motionfeedback2_21_);
    }

    // optional .apollo.canbus.Llc_motioncommandfeedback1_22 llc_motioncommandfeedback1_22 = 6;
    if (has_llc_motioncommandfeedback1_22()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_motioncommandfeedback1_22_);
    }

    // optional .apollo.canbus.Llc_vehiclestatus_25 llc_vehiclestatus_25 = 7;
    if (has_llc_vehiclestatus_25()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_vehiclestatus_25_);
    }

    // optional .apollo.canbus.Llc_auxiliaryfeedback_120 llc_auxiliaryfeedback_120 = 8;
    if (has_llc_auxiliaryfeedback_120()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_auxiliaryfeedback_120_);
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .apollo.canbus.Llc_diag_fault_620 llc_diag_fault_620 = 9;
    if (has_llc_diag_fault_620()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_diag_fault_620_);
    }

    // optional .apollo.canbus.Llc_diag_steeringcontrol_722 llc_diag_steeringcontrol_722 = 10;
    if (has_llc_diag_steeringcontrol_722()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_diag_steeringcontrol_722_);
    }

    // optional .apollo.canbus.Adc_auxiliarycontrol_110 adc_auxiliarycontrol_110 = 11;
    if (has_adc_auxiliarycontrol_110()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *adc_auxiliarycontrol_110_);
    }

    // optional .apollo.canbus.Llc_diag_brakecontrol_721 llc_diag_brakecontrol_721 = 12;
    if (has_llc_diag_brakecontrol_721()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *llc_diag_brakecontrol_721_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Transit)
  GOOGLE_DCHECK_NE(&from, this);
  const Transit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Transit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Transit)
    MergeFrom(*source);
  }
}

void Transit::MergeFrom(const Transit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Transit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_llc_vehiclelimits_24()->::apollo::canbus::Llc_vehiclelimits_24::MergeFrom(from.llc_vehiclelimits_24());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_adc_motioncontrol1_10()->::apollo::canbus::Adc_motioncontrol1_10::MergeFrom(from.adc_motioncontrol1_10());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_adc_motioncontrollimits1_12()->::apollo::canbus::Adc_motioncontrollimits1_12::MergeFrom(from.adc_motioncontrollimits1_12());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_llc_motionfeedback1_20()->::apollo::canbus::Llc_motionfeedback1_20::MergeFrom(from.llc_motionfeedback1_20());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_llc_motionfeedback2_21()->::apollo::canbus::Llc_motionfeedback2_21::MergeFrom(from.llc_motionfeedback2_21());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_llc_motioncommandfeedback1_22()->::apollo::canbus::Llc_motioncommandfeedback1_22::MergeFrom(from.llc_motioncommandfeedback1_22());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_llc_vehiclestatus_25()->::apollo::canbus::Llc_vehiclestatus_25::MergeFrom(from.llc_vehiclestatus_25());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_llc_auxiliaryfeedback_120()->::apollo::canbus::Llc_auxiliaryfeedback_120::MergeFrom(from.llc_auxiliaryfeedback_120());
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_llc_diag_fault_620()->::apollo::canbus::Llc_diag_fault_620::MergeFrom(from.llc_diag_fault_620());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_llc_diag_steeringcontrol_722()->::apollo::canbus::Llc_diag_steeringcontrol_722::MergeFrom(from.llc_diag_steeringcontrol_722());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_adc_auxiliarycontrol_110()->::apollo::canbus::Adc_auxiliarycontrol_110::MergeFrom(from.adc_auxiliarycontrol_110());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_llc_diag_brakecontrol_721()->::apollo::canbus::Llc_diag_brakecontrol_721::MergeFrom(from.llc_diag_brakecontrol_721());
    }
  }
}

void Transit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Transit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transit::CopyFrom(const Transit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Transit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transit::IsInitialized() const {
  return true;
}

void Transit::Swap(Transit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transit::InternalSwap(Transit* other) {
  using std::swap;
  swap(llc_vehiclelimits_24_, other->llc_vehiclelimits_24_);
  swap(adc_motioncontrol1_10_, other->adc_motioncontrol1_10_);
  swap(adc_motioncontrollimits1_12_, other->adc_motioncontrollimits1_12_);
  swap(llc_motionfeedback1_20_, other->llc_motionfeedback1_20_);
  swap(llc_motionfeedback2_21_, other->llc_motionfeedback2_21_);
  swap(llc_motioncommandfeedback1_22_, other->llc_motioncommandfeedback1_22_);
  swap(llc_vehiclestatus_25_, other->llc_vehiclestatus_25_);
  swap(llc_auxiliaryfeedback_120_, other->llc_auxiliaryfeedback_120_);
  swap(llc_diag_fault_620_, other->llc_diag_fault_620_);
  swap(llc_diag_steeringcontrol_722_, other->llc_diag_steeringcontrol_722_);
  swap(adc_auxiliarycontrol_110_, other->adc_auxiliarycontrol_110_);
  swap(llc_diag_brakecontrol_721_, other->llc_diag_brakecontrol_721_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transit::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fcanbus_2fproto_2ftransit_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_vehiclelimits_24* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_vehiclelimits_24 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_vehiclelimits_24 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Adc_motioncontrol1_10* Arena::CreateMaybeMessage< ::apollo::canbus::Adc_motioncontrol1_10 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Adc_motioncontrol1_10 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Adc_motioncontrollimits1_12* Arena::CreateMaybeMessage< ::apollo::canbus::Adc_motioncontrollimits1_12 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Adc_motioncontrollimits1_12 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_motionfeedback1_20* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_motionfeedback1_20 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_motionfeedback1_20 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_motionfeedback2_21* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_motionfeedback2_21 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_motionfeedback2_21 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_motioncommandfeedback1_22* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_motioncommandfeedback1_22 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_motioncommandfeedback1_22 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_vehiclestatus_25* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_vehiclestatus_25 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_vehiclestatus_25 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_auxiliaryfeedback_120* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_auxiliaryfeedback_120 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_auxiliaryfeedback_120 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_diag_fault_620* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_diag_fault_620 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_diag_fault_620 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_diag_steeringcontrol_722* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_diag_steeringcontrol_722 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_diag_steeringcontrol_722 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Adc_auxiliarycontrol_110* Arena::CreateMaybeMessage< ::apollo::canbus::Adc_auxiliarycontrol_110 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Adc_auxiliarycontrol_110 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Llc_diag_brakecontrol_721* Arena::CreateMaybeMessage< ::apollo::canbus::Llc_diag_brakecontrol_721 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Llc_diag_brakecontrol_721 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::canbus::Transit* Arena::CreateMaybeMessage< ::apollo::canbus::Transit >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Transit >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/dreamview/proto/hmi_status.proto

#include "modules/dreamview/proto/hmi_status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HMIStatus_ModulesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HMIStatus_MonitoredComponentsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HMIStatus_OtherComponentsEntry_DoNotUse;
}  // namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto
namespace protobuf_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComponentStatus;
}  // namespace protobuf_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto
namespace apollo {
namespace dreamview {
class HMIStatus_ModulesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIStatus_ModulesEntry_DoNotUse>
      _instance;
} _HMIStatus_ModulesEntry_DoNotUse_default_instance_;
class HMIStatus_MonitoredComponentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIStatus_MonitoredComponentsEntry_DoNotUse>
      _instance;
} _HMIStatus_MonitoredComponentsEntry_DoNotUse_default_instance_;
class HMIStatus_OtherComponentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIStatus_OtherComponentsEntry_DoNotUse>
      _instance;
} _HMIStatus_OtherComponentsEntry_DoNotUse_default_instance_;
class HMIStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIStatus>
      _instance;
} _HMIStatus_default_instance_;
}  // namespace dreamview
}  // namespace apollo
namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto {
static void InitDefaultsHMIStatus_ModulesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIStatus_ModulesEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HMIStatus_ModulesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHMIStatus_ModulesEntry_DoNotUse}, {}};

static void InitDefaultsHMIStatus_MonitoredComponentsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIStatus_MonitoredComponentsEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HMIStatus_MonitoredComponentsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHMIStatus_MonitoredComponentsEntry_DoNotUse}, {
      &protobuf_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto::scc_info_ComponentStatus.base,}};

static void InitDefaultsHMIStatus_OtherComponentsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIStatus_OtherComponentsEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HMIStatus_OtherComponentsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHMIStatus_OtherComponentsEntry_DoNotUse}, {
      &protobuf_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto::scc_info_ComponentStatus.base,}};

static void InitDefaultsHMIStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIStatus_default_instance_;
    new (ptr) ::apollo::dreamview::HMIStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::HMIStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_HMIStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsHMIStatus}, {
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::scc_info_HMIStatus_ModulesEntry_DoNotUse.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::scc_info_HMIStatus_MonitoredComponentsEntry_DoNotUse.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::scc_info_HMIStatus_OtherComponentsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HMIStatus_ModulesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIStatus_MonitoredComponentsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIStatus_OtherComponentsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIStatus.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, modes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, current_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, maps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, current_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, vehicles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, current_vehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, modules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, monitored_components_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, docker_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, utm_zone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, passenger_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIStatus, other_components_),
  5,
  ~0u,
  0,
  ~0u,
  1,
  ~0u,
  2,
  ~0u,
  ~0u,
  3,
  6,
  4,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse)},
  { 9, 16, sizeof(::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse)},
  { 18, 25, sizeof(::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse)},
  { 27, 45, sizeof(::apollo::dreamview::HMIStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIStatus_ModulesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIStatus_MonitoredComponentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIStatus_OtherComponentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/dreamview/proto/hmi_status.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(modules/dreamview/proto/hmi_status.pro"
      "to\022\020apollo.dreamview\032!modules/common/pro"
      "to/header.proto\032)modules/monitor/proto/s"
      "ystem_status.proto\"\250\005\n\tHMIStatus\022%\n\006head"
      "er\030\001 \001(\0132\025.apollo.common.Header\022\r\n\005modes"
      "\030\002 \003(\t\022\024\n\014current_mode\030\003 \001(\t\022\014\n\004maps\030\004 \003"
      "(\t\022\023\n\013current_map\030\005 \001(\t\022\020\n\010vehicles\030\006 \003("
      "\t\022\027\n\017current_vehicle\030\007 \001(\t\0229\n\007modules\030\010 "
      "\003(\0132(.apollo.dreamview.HMIStatus.Modules"
      "Entry\022R\n\024monitored_components\030\t \003(\01324.ap"
      "ollo.dreamview.HMIStatus.MonitoredCompon"
      "entsEntry\022\024\n\014docker_image\030\n \001(\t\022\023\n\013utm_z"
      "one_id\030\013 \001(\005\022\025\n\rpassenger_msg\030\014 \001(\t\022J\n\020o"
      "ther_components\030\r \003(\01320.apollo.dreamview"
      ".HMIStatus.OtherComponentsEntry\032.\n\014Modul"
      "esEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\032"
      "[\n\030MonitoredComponentsEntry\022\013\n\003key\030\001 \001(\t"
      "\022.\n\005value\030\002 \001(\0132\037.apollo.monitor.Compone"
      "ntStatus:\0028\001\032W\n\024OtherComponentsEntry\022\013\n\003"
      "key\030\001 \001(\t\022.\n\005value\030\002 \001(\0132\037.apollo.monito"
      "r.ComponentStatus:\0028\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 821);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/dreamview/proto/hmi_status.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
  ::protobuf_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto
namespace apollo {
namespace dreamview {

// ===================================================================

HMIStatus_ModulesEntry_DoNotUse::HMIStatus_ModulesEntry_DoNotUse() {}
HMIStatus_ModulesEntry_DoNotUse::HMIStatus_ModulesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIStatus_ModulesEntry_DoNotUse::MergeFrom(const HMIStatus_ModulesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIStatus_ModulesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::file_level_metadata[0];
}
void HMIStatus_ModulesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HMIStatus_MonitoredComponentsEntry_DoNotUse::HMIStatus_MonitoredComponentsEntry_DoNotUse() {}
HMIStatus_MonitoredComponentsEntry_DoNotUse::HMIStatus_MonitoredComponentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIStatus_MonitoredComponentsEntry_DoNotUse::MergeFrom(const HMIStatus_MonitoredComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIStatus_MonitoredComponentsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::file_level_metadata[1];
}
void HMIStatus_MonitoredComponentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HMIStatus_OtherComponentsEntry_DoNotUse::HMIStatus_OtherComponentsEntry_DoNotUse() {}
HMIStatus_OtherComponentsEntry_DoNotUse::HMIStatus_OtherComponentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIStatus_OtherComponentsEntry_DoNotUse::MergeFrom(const HMIStatus_OtherComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIStatus_OtherComponentsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::file_level_metadata[2];
}
void HMIStatus_OtherComponentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HMIStatus::InitAsDefaultInstance() {
  ::apollo::dreamview::_HMIStatus_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
}
void HMIStatus::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
void HMIStatus::clear_monitored_components() {
  monitored_components_.Clear();
}
void HMIStatus::clear_other_components() {
  other_components_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HMIStatus::kHeaderFieldNumber;
const int HMIStatus::kModesFieldNumber;
const int HMIStatus::kCurrentModeFieldNumber;
const int HMIStatus::kMapsFieldNumber;
const int HMIStatus::kCurrentMapFieldNumber;
const int HMIStatus::kVehiclesFieldNumber;
const int HMIStatus::kCurrentVehicleFieldNumber;
const int HMIStatus::kModulesFieldNumber;
const int HMIStatus::kMonitoredComponentsFieldNumber;
const int HMIStatus::kDockerImageFieldNumber;
const int HMIStatus::kUtmZoneIdFieldNumber;
const int HMIStatus::kPassengerMsgFieldNumber;
const int HMIStatus::kOtherComponentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HMIStatus::HMIStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::scc_info_HMIStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.HMIStatus)
}
HMIStatus::HMIStatus(const HMIStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      modes_(from.modes_),
      maps_(from.maps_),
      vehicles_(from.vehicles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modules_.MergeFrom(from.modules_);
  monitored_components_.MergeFrom(from.monitored_components_);
  other_components_.MergeFrom(from.other_components_);
  current_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_current_mode()) {
    current_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_mode_);
  }
  current_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_current_map()) {
    current_map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_map_);
  }
  current_vehicle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_current_vehicle()) {
    current_vehicle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_vehicle_);
  }
  docker_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_docker_image()) {
    docker_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docker_image_);
  }
  passenger_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_passenger_msg()) {
    passenger_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passenger_msg_);
  }
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  utm_zone_id_ = from.utm_zone_id_;
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.HMIStatus)
}

void HMIStatus::SharedCtor() {
  current_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_vehicle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docker_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passenger_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&utm_zone_id_) -
      reinterpret_cast<char*>(&header_)) + sizeof(utm_zone_id_));
}

HMIStatus::~HMIStatus() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.HMIStatus)
  SharedDtor();
}

void HMIStatus::SharedDtor() {
  current_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_vehicle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docker_image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passenger_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void HMIStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HMIStatus::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HMIStatus& HMIStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::scc_info_HMIStatus.base);
  return *internal_default_instance();
}


void HMIStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.HMIStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modes_.Clear();
  maps_.Clear();
  vehicles_.Clear();
  modules_.Clear();
  monitored_components_.Clear();
  other_components_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      current_mode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      current_map_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      current_vehicle_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      docker_image_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      passenger_msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
  }
  utm_zone_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HMIStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.HMIStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string modes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_modes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->modes(this->modes_size() - 1).data(),
            static_cast<int>(this->modes(this->modes_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.modes");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string current_mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_mode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->current_mode().data(), static_cast<int>(this->current_mode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.current_mode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string maps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_maps()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->maps(this->maps_size() - 1).data(),
            static_cast<int>(this->maps(this->maps_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.maps");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string current_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_map()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->current_map().data(), static_cast<int>(this->current_map().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.current_map");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string vehicles = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_vehicles()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicles(this->vehicles_size() - 1).data(),
            static_cast<int>(this->vehicles(this->vehicles_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.vehicles");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string current_vehicle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_vehicle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->current_vehicle().data(), static_cast<int>(this->current_vehicle().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.current_vehicle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bool> modules = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          HMIStatus_ModulesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIStatus_ModulesEntry_DoNotUse,
              ::std::string, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::std::string, bool > > parser(&modules_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.ModulesEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .apollo.monitor.ComponentStatus> monitored_components = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          HMIStatus_MonitoredComponentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIStatus_MonitoredComponentsEntry_DoNotUse,
              ::std::string, ::apollo::monitor::ComponentStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus > > parser(&monitored_components_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.MonitoredComponentsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string docker_image = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docker_image()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->docker_image().data(), static_cast<int>(this->docker_image().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.docker_image");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 utm_zone_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_utm_zone_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utm_zone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string passenger_msg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passenger_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passenger_msg().data(), static_cast<int>(this->passenger_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.passenger_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .apollo.monitor.ComponentStatus> other_components = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          HMIStatus_OtherComponentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIStatus_OtherComponentsEntry_DoNotUse,
              ::std::string, ::apollo::monitor::ComponentStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus > > parser(&other_components_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIStatus.OtherComponentsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.HMIStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.HMIStatus)
  return false;
#undef DO_
}

void HMIStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.HMIStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated string modes = 2;
  for (int i = 0, n = this->modes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modes(i).data(), static_cast<int>(this->modes(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.modes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->modes(i), output);
  }

  // optional string current_mode = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_mode().data(), static_cast<int>(this->current_mode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.current_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->current_mode(), output);
  }

  // repeated string maps = 4;
  for (int i = 0, n = this->maps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maps(i).data(), static_cast<int>(this->maps(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.maps");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->maps(i), output);
  }

  // optional string current_map = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_map().data(), static_cast<int>(this->current_map().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.current_map");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->current_map(), output);
  }

  // repeated string vehicles = 6;
  for (int i = 0, n = this->vehicles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicles(i).data(), static_cast<int>(this->vehicles(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.vehicles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->vehicles(i), output);
  }

  // optional string current_vehicle = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_vehicle().data(), static_cast<int>(this->current_vehicle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.current_vehicle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->current_vehicle(), output);
  }

  // map<string, bool> modules = 8;
  if (!this->modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIStatus.ModulesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->modules().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIStatus_ModulesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(modules_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIStatus_ModulesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it) {
        entry.reset(modules_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.monitor.ComponentStatus> monitored_components = 9;
  if (!this->monitored_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIStatus.MonitoredComponentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->monitored_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->monitored_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIStatus_MonitoredComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monitored_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIStatus_MonitoredComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it) {
        entry.reset(monitored_components_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string docker_image = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->docker_image().data(), static_cast<int>(this->docker_image().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.docker_image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->docker_image(), output);
  }

  // optional int32 utm_zone_id = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->utm_zone_id(), output);
  }

  // optional string passenger_msg = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passenger_msg().data(), static_cast<int>(this->passenger_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.passenger_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->passenger_msg(), output);
  }

  // map<string, .apollo.monitor.ComponentStatus> other_components = 13;
  if (!this->other_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIStatus.OtherComponentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->other_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->other_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIStatus_OtherComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(other_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIStatus_OtherComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it) {
        entry.reset(other_components_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.HMIStatus)
}

::google::protobuf::uint8* HMIStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.HMIStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated string modes = 2;
  for (int i = 0, n = this->modes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modes(i).data(), static_cast<int>(this->modes(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.modes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->modes(i), target);
  }

  // optional string current_mode = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_mode().data(), static_cast<int>(this->current_mode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.current_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->current_mode(), target);
  }

  // repeated string maps = 4;
  for (int i = 0, n = this->maps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maps(i).data(), static_cast<int>(this->maps(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.maps");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->maps(i), target);
  }

  // optional string current_map = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_map().data(), static_cast<int>(this->current_map().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.current_map");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->current_map(), target);
  }

  // repeated string vehicles = 6;
  for (int i = 0, n = this->vehicles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicles(i).data(), static_cast<int>(this->vehicles(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.vehicles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->vehicles(i), target);
  }

  // optional string current_vehicle = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_vehicle().data(), static_cast<int>(this->current_vehicle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.current_vehicle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->current_vehicle(), target);
  }

  // map<string, bool> modules = 8;
  if (!this->modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIStatus.ModulesEntry.key");
      }
    };

    if (deterministic &&
        this->modules().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIStatus_ModulesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(modules_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIStatus_ModulesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it) {
        entry.reset(modules_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.monitor.ComponentStatus> monitored_components = 9;
  if (!this->monitored_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIStatus.MonitoredComponentsEntry.key");
      }
    };

    if (deterministic &&
        this->monitored_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->monitored_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIStatus_MonitoredComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monitored_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIStatus_MonitoredComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it) {
        entry.reset(monitored_components_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string docker_image = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->docker_image().data(), static_cast<int>(this->docker_image().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.docker_image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->docker_image(), target);
  }

  // optional int32 utm_zone_id = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->utm_zone_id(), target);
  }

  // optional string passenger_msg = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passenger_msg().data(), static_cast<int>(this->passenger_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.HMIStatus.passenger_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->passenger_msg(), target);
  }

  // map<string, .apollo.monitor.ComponentStatus> other_components = 13;
  if (!this->other_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIStatus.OtherComponentsEntry.key");
      }
    };

    if (deterministic &&
        this->other_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->other_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIStatus_OtherComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(other_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIStatus_OtherComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it) {
        entry.reset(other_components_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.HMIStatus)
  return target;
}

size_t HMIStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.HMIStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string modes = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->modes_size());
  for (int i = 0, n = this->modes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->modes(i));
  }

  // repeated string maps = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->maps_size());
  for (int i = 0, n = this->maps_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->maps(i));
  }

  // repeated string vehicles = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vehicles_size());
  for (int i = 0, n = this->vehicles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->vehicles(i));
  }

  // map<string, bool> modules = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->modules_size());
  {
    ::std::unique_ptr<HMIStatus_ModulesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, bool >::const_iterator
        it = this->modules().begin();
        it != this->modules().end(); ++it) {
      entry.reset(modules_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .apollo.monitor.ComponentStatus> monitored_components = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->monitored_components_size());
  {
    ::std::unique_ptr<HMIStatus_MonitoredComponentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
        it = this->monitored_components().begin();
        it != this->monitored_components().end(); ++it) {
      entry.reset(monitored_components_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .apollo.monitor.ComponentStatus> other_components = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->other_components_size());
  {
    ::std::unique_ptr<HMIStatus_OtherComponentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ComponentStatus >::const_iterator
        it = this->other_components().begin();
        it != this->other_components().end(); ++it) {
      entry.reset(other_components_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string current_mode = 3;
    if (has_current_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->current_mode());
    }

    // optional string current_map = 5;
    if (has_current_map()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->current_map());
    }

    // optional string current_vehicle = 7;
    if (has_current_vehicle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->current_vehicle());
    }

    // optional string docker_image = 10;
    if (has_docker_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->docker_image());
    }

    // optional string passenger_msg = 12;
    if (has_passenger_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passenger_msg());
    }

    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional int32 utm_zone_id = 11;
    if (has_utm_zone_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->utm_zone_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HMIStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.HMIStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const HMIStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HMIStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.HMIStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.HMIStatus)
    MergeFrom(*source);
  }
}

void HMIStatus::MergeFrom(const HMIStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.HMIStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modes_.MergeFrom(from.modes_);
  maps_.MergeFrom(from.maps_);
  vehicles_.MergeFrom(from.vehicles_);
  modules_.MergeFrom(from.modules_);
  monitored_components_.MergeFrom(from.monitored_components_);
  other_components_.MergeFrom(from.other_components_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_current_mode();
      current_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_mode_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_current_map();
      current_map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_map_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_current_vehicle();
      current_vehicle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_vehicle_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_docker_image();
      docker_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docker_image_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_passenger_msg();
      passenger_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passenger_msg_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000040u) {
      utm_zone_id_ = from.utm_zone_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HMIStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.HMIStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HMIStatus::CopyFrom(const HMIStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.HMIStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HMIStatus::IsInitialized() const {
  return true;
}

void HMIStatus::Swap(HMIStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HMIStatus::InternalSwap(HMIStatus* other) {
  using std::swap;
  modes_.InternalSwap(CastToBase(&other->modes_));
  maps_.InternalSwap(CastToBase(&other->maps_));
  vehicles_.InternalSwap(CastToBase(&other->vehicles_));
  modules_.Swap(&other->modules_);
  monitored_components_.Swap(&other->monitored_components_);
  other_components_.Swap(&other->other_components_);
  current_mode_.Swap(&other->current_mode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_map_.Swap(&other->current_map_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_vehicle_.Swap(&other->current_vehicle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  docker_image_.Swap(&other->docker_image_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passenger_msg_.Swap(&other->passenger_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(utm_zone_id_, other->utm_zone_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HMIStatus::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fstatus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dreamview
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIStatus_ModulesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIStatus_MonitoredComponentsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIStatus_OtherComponentsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIStatus* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIStatus >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIStatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/dreamview/proto/hmi_config.proto

#ifndef PROTOBUF_INCLUDED_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto
#define PROTOBUF_INCLUDED_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto 

namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto
namespace apollo {
namespace dreamview {
class HMIConfig;
class HMIConfigDefaultTypeInternal;
extern HMIConfigDefaultTypeInternal _HMIConfig_default_instance_;
class HMIConfig_MapsEntry_DoNotUse;
class HMIConfig_MapsEntry_DoNotUseDefaultTypeInternal;
extern HMIConfig_MapsEntry_DoNotUseDefaultTypeInternal _HMIConfig_MapsEntry_DoNotUse_default_instance_;
class HMIConfig_ModesEntry_DoNotUse;
class HMIConfig_ModesEntry_DoNotUseDefaultTypeInternal;
extern HMIConfig_ModesEntry_DoNotUseDefaultTypeInternal _HMIConfig_ModesEntry_DoNotUse_default_instance_;
class HMIConfig_VehiclesEntry_DoNotUse;
class HMIConfig_VehiclesEntry_DoNotUseDefaultTypeInternal;
extern HMIConfig_VehiclesEntry_DoNotUseDefaultTypeInternal _HMIConfig_VehiclesEntry_DoNotUse_default_instance_;
class VehicleData;
class VehicleDataDefaultTypeInternal;
extern VehicleDataDefaultTypeInternal _VehicleData_default_instance_;
class VehicleData_DataFile;
class VehicleData_DataFileDefaultTypeInternal;
extern VehicleData_DataFileDefaultTypeInternal _VehicleData_DataFile_default_instance_;
}  // namespace dreamview
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::dreamview::HMIConfig* Arena::CreateMaybeMessage<::apollo::dreamview::HMIConfig>(Arena*);
template<> ::apollo::dreamview::HMIConfig_MapsEntry_DoNotUse* Arena::CreateMaybeMessage<::apollo::dreamview::HMIConfig_MapsEntry_DoNotUse>(Arena*);
template<> ::apollo::dreamview::HMIConfig_ModesEntry_DoNotUse* Arena::CreateMaybeMessage<::apollo::dreamview::HMIConfig_ModesEntry_DoNotUse>(Arena*);
template<> ::apollo::dreamview::HMIConfig_VehiclesEntry_DoNotUse* Arena::CreateMaybeMessage<::apollo::dreamview::HMIConfig_VehiclesEntry_DoNotUse>(Arena*);
template<> ::apollo::dreamview::VehicleData* Arena::CreateMaybeMessage<::apollo::dreamview::VehicleData>(Arena*);
template<> ::apollo::dreamview::VehicleData_DataFile* Arena::CreateMaybeMessage<::apollo::dreamview::VehicleData_DataFile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace dreamview {

enum HMIAction {
  NONE = 0,
  SETUP_MODE = 1,
  RESET_MODE = 2,
  ENTER_AUTO_MODE = 3,
  DISENGAGE = 4,
  CHANGE_MODE = 5,
  CHANGE_MAP = 6,
  CHANGE_VEHICLE = 7,
  START_MODULE = 8,
  STOP_MODULE = 9
};
bool HMIAction_IsValid(int value);
const HMIAction HMIAction_MIN = NONE;
const HMIAction HMIAction_MAX = STOP_MODULE;
const int HMIAction_ARRAYSIZE = HMIAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* HMIAction_descriptor();
inline const ::std::string& HMIAction_Name(HMIAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    HMIAction_descriptor(), value);
}
inline bool HMIAction_Parse(
    const ::std::string& name, HMIAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HMIAction>(
    HMIAction_descriptor(), name, value);
}
// ===================================================================

class HMIConfig_ModesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<HMIConfig_ModesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<HMIConfig_ModesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  HMIConfig_ModesEntry_DoNotUse();
  HMIConfig_ModesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const HMIConfig_ModesEntry_DoNotUse& other);
  static const HMIConfig_ModesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const HMIConfig_ModesEntry_DoNotUse*>(&_HMIConfig_ModesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class HMIConfig_MapsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<HMIConfig_MapsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<HMIConfig_MapsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  HMIConfig_MapsEntry_DoNotUse();
  HMIConfig_MapsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const HMIConfig_MapsEntry_DoNotUse& other);
  static const HMIConfig_MapsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const HMIConfig_MapsEntry_DoNotUse*>(&_HMIConfig_MapsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class HMIConfig_VehiclesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<HMIConfig_VehiclesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<HMIConfig_VehiclesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  HMIConfig_VehiclesEntry_DoNotUse();
  HMIConfig_VehiclesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const HMIConfig_VehiclesEntry_DoNotUse& other);
  static const HMIConfig_VehiclesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const HMIConfig_VehiclesEntry_DoNotUse*>(&_HMIConfig_VehiclesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class HMIConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.dreamview.HMIConfig) */ {
 public:
  HMIConfig();
  virtual ~HMIConfig();

  HMIConfig(const HMIConfig& from);

  inline HMIConfig& operator=(const HMIConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HMIConfig(HMIConfig&& from) noexcept
    : HMIConfig() {
    *this = ::std::move(from);
  }

  inline HMIConfig& operator=(HMIConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HMIConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HMIConfig* internal_default_instance() {
    return reinterpret_cast<const HMIConfig*>(
               &_HMIConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HMIConfig* other);
  friend void swap(HMIConfig& a, HMIConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HMIConfig* New() const final {
    return CreateMaybeMessage<HMIConfig>(NULL);
  }

  HMIConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HMIConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HMIConfig& from);
  void MergeFrom(const HMIConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HMIConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> modes = 1;
  int modes_size() const;
  void clear_modes();
  static const int kModesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      modes() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_modes();

  // map<string, string> maps = 2;
  int maps_size() const;
  void clear_maps();
  static const int kMapsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      maps() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_maps();

  // map<string, string> vehicles = 3;
  int vehicles_size() const;
  void clear_vehicles();
  static const int kVehiclesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      vehicles() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_vehicles();

  // @@protoc_insertion_point(class_scope:apollo.dreamview.HMIConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::MapField<
      HMIConfig_ModesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > modes_;
  ::google::protobuf::internal::MapField<
      HMIConfig_MapsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > maps_;
  ::google::protobuf::internal::MapField<
      HMIConfig_VehiclesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > vehicles_;
  friend struct ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleData_DataFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.dreamview.VehicleData.DataFile) */ {
 public:
  VehicleData_DataFile();
  virtual ~VehicleData_DataFile();

  VehicleData_DataFile(const VehicleData_DataFile& from);

  inline VehicleData_DataFile& operator=(const VehicleData_DataFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleData_DataFile(VehicleData_DataFile&& from) noexcept
    : VehicleData_DataFile() {
    *this = ::std::move(from);
  }

  inline VehicleData_DataFile& operator=(VehicleData_DataFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleData_DataFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleData_DataFile* internal_default_instance() {
    return reinterpret_cast<const VehicleData_DataFile*>(
               &_VehicleData_DataFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(VehicleData_DataFile* other);
  friend void swap(VehicleData_DataFile& a, VehicleData_DataFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleData_DataFile* New() const final {
    return CreateMaybeMessage<VehicleData_DataFile>(NULL);
  }

  VehicleData_DataFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleData_DataFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleData_DataFile& from);
  void MergeFrom(const VehicleData_DataFile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleData_DataFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_path = 1;
  bool has_source_path() const;
  void clear_source_path();
  static const int kSourcePathFieldNumber = 1;
  const ::std::string& source_path() const;
  void set_source_path(const ::std::string& value);
  #if LANG_CXX11
  void set_source_path(::std::string&& value);
  #endif
  void set_source_path(const char* value);
  void set_source_path(const char* value, size_t size);
  ::std::string* mutable_source_path();
  ::std::string* release_source_path();
  void set_allocated_source_path(::std::string* source_path);

  // optional string dest_path = 2;
  bool has_dest_path() const;
  void clear_dest_path();
  static const int kDestPathFieldNumber = 2;
  const ::std::string& dest_path() const;
  void set_dest_path(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_path(::std::string&& value);
  #endif
  void set_dest_path(const char* value);
  void set_dest_path(const char* value, size_t size);
  ::std::string* mutable_dest_path();
  ::std::string* release_dest_path();
  void set_allocated_dest_path(::std::string* dest_path);

  // @@protoc_insertion_point(class_scope:apollo.dreamview.VehicleData.DataFile)
 private:
  void set_has_source_path();
  void clear_has_source_path();
  void set_has_dest_path();
  void clear_has_dest_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_path_;
  ::google::protobuf::internal::ArenaStringPtr dest_path_;
  friend struct ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.dreamview.VehicleData) */ {
 public:
  VehicleData();
  virtual ~VehicleData();

  VehicleData(const VehicleData& from);

  inline VehicleData& operator=(const VehicleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleData(VehicleData&& from) noexcept
    : VehicleData() {
    *this = ::std::move(from);
  }

  inline VehicleData& operator=(VehicleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleData* internal_default_instance() {
    return reinterpret_cast<const VehicleData*>(
               &_VehicleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(VehicleData* other);
  friend void swap(VehicleData& a, VehicleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleData* New() const final {
    return CreateMaybeMessage<VehicleData>(NULL);
  }

  VehicleData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleData& from);
  void MergeFrom(const VehicleData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VehicleData_DataFile DataFile;

  // accessors -------------------------------------------------------

  // repeated .apollo.dreamview.VehicleData.DataFile data_files = 1;
  int data_files_size() const;
  void clear_data_files();
  static const int kDataFilesFieldNumber = 1;
  ::apollo::dreamview::VehicleData_DataFile* mutable_data_files(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::dreamview::VehicleData_DataFile >*
      mutable_data_files();
  const ::apollo::dreamview::VehicleData_DataFile& data_files(int index) const;
  ::apollo::dreamview::VehicleData_DataFile* add_data_files();
  const ::google::protobuf::RepeatedPtrField< ::apollo::dreamview::VehicleData_DataFile >&
      data_files() const;

  // @@protoc_insertion_point(class_scope:apollo.dreamview.VehicleData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::dreamview::VehicleData_DataFile > data_files_;
  friend struct ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// HMIConfig

// map<string, string> modes = 1;
inline int HMIConfig::modes_size() const {
  return modes_.size();
}
inline void HMIConfig::clear_modes() {
  modes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HMIConfig::modes() const {
  // @@protoc_insertion_point(field_map:apollo.dreamview.HMIConfig.modes)
  return modes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HMIConfig::mutable_modes() {
  // @@protoc_insertion_point(field_mutable_map:apollo.dreamview.HMIConfig.modes)
  return modes_.MutableMap();
}

// map<string, string> maps = 2;
inline int HMIConfig::maps_size() const {
  return maps_.size();
}
inline void HMIConfig::clear_maps() {
  maps_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HMIConfig::maps() const {
  // @@protoc_insertion_point(field_map:apollo.dreamview.HMIConfig.maps)
  return maps_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HMIConfig::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_map:apollo.dreamview.HMIConfig.maps)
  return maps_.MutableMap();
}

// map<string, string> vehicles = 3;
inline int HMIConfig::vehicles_size() const {
  return vehicles_.size();
}
inline void HMIConfig::clear_vehicles() {
  vehicles_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HMIConfig::vehicles() const {
  // @@protoc_insertion_point(field_map:apollo.dreamview.HMIConfig.vehicles)
  return vehicles_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HMIConfig::mutable_vehicles() {
  // @@protoc_insertion_point(field_mutable_map:apollo.dreamview.HMIConfig.vehicles)
  return vehicles_.MutableMap();
}

// -------------------------------------------------------------------

// VehicleData_DataFile

// optional string source_path = 1;
inline bool VehicleData_DataFile::has_source_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VehicleData_DataFile::set_has_source_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VehicleData_DataFile::clear_has_source_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VehicleData_DataFile::clear_source_path() {
  source_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source_path();
}
inline const ::std::string& VehicleData_DataFile::source_path() const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.VehicleData.DataFile.source_path)
  return source_path_.GetNoArena();
}
inline void VehicleData_DataFile::set_source_path(const ::std::string& value) {
  set_has_source_path();
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.dreamview.VehicleData.DataFile.source_path)
}
#if LANG_CXX11
inline void VehicleData_DataFile::set_source_path(::std::string&& value) {
  set_has_source_path();
  source_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.dreamview.VehicleData.DataFile.source_path)
}
#endif
inline void VehicleData_DataFile::set_source_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source_path();
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.dreamview.VehicleData.DataFile.source_path)
}
inline void VehicleData_DataFile::set_source_path(const char* value, size_t size) {
  set_has_source_path();
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.dreamview.VehicleData.DataFile.source_path)
}
inline ::std::string* VehicleData_DataFile::mutable_source_path() {
  set_has_source_path();
  // @@protoc_insertion_point(field_mutable:apollo.dreamview.VehicleData.DataFile.source_path)
  return source_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleData_DataFile::release_source_path() {
  // @@protoc_insertion_point(field_release:apollo.dreamview.VehicleData.DataFile.source_path)
  if (!has_source_path()) {
    return NULL;
  }
  clear_has_source_path();
  return source_path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleData_DataFile::set_allocated_source_path(::std::string* source_path) {
  if (source_path != NULL) {
    set_has_source_path();
  } else {
    clear_has_source_path();
  }
  source_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.dreamview.VehicleData.DataFile.source_path)
}

// optional string dest_path = 2;
inline bool VehicleData_DataFile::has_dest_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VehicleData_DataFile::set_has_dest_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VehicleData_DataFile::clear_has_dest_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VehicleData_DataFile::clear_dest_path() {
  dest_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dest_path();
}
inline const ::std::string& VehicleData_DataFile::dest_path() const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.VehicleData.DataFile.dest_path)
  return dest_path_.GetNoArena();
}
inline void VehicleData_DataFile::set_dest_path(const ::std::string& value) {
  set_has_dest_path();
  dest_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.dreamview.VehicleData.DataFile.dest_path)
}
#if LANG_CXX11
inline void VehicleData_DataFile::set_dest_path(::std::string&& value) {
  set_has_dest_path();
  dest_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.dreamview.VehicleData.DataFile.dest_path)
}
#endif
inline void VehicleData_DataFile::set_dest_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dest_path();
  dest_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.dreamview.VehicleData.DataFile.dest_path)
}
inline void VehicleData_DataFile::set_dest_path(const char* value, size_t size) {
  set_has_dest_path();
  dest_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.dreamview.VehicleData.DataFile.dest_path)
}
inline ::std::string* VehicleData_DataFile::mutable_dest_path() {
  set_has_dest_path();
  // @@protoc_insertion_point(field_mutable:apollo.dreamview.VehicleData.DataFile.dest_path)
  return dest_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleData_DataFile::release_dest_path() {
  // @@protoc_insertion_point(field_release:apollo.dreamview.VehicleData.DataFile.dest_path)
  if (!has_dest_path()) {
    return NULL;
  }
  clear_has_dest_path();
  return dest_path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleData_DataFile::set_allocated_dest_path(::std::string* dest_path) {
  if (dest_path != NULL) {
    set_has_dest_path();
  } else {
    clear_has_dest_path();
  }
  dest_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.dreamview.VehicleData.DataFile.dest_path)
}

// -------------------------------------------------------------------

// VehicleData

// repeated .apollo.dreamview.VehicleData.DataFile data_files = 1;
inline int VehicleData::data_files_size() const {
  return data_files_.size();
}
inline void VehicleData::clear_data_files() {
  data_files_.Clear();
}
inline ::apollo::dreamview::VehicleData_DataFile* VehicleData::mutable_data_files(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.dreamview.VehicleData.data_files)
  return data_files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::dreamview::VehicleData_DataFile >*
VehicleData::mutable_data_files() {
  // @@protoc_insertion_point(field_mutable_list:apollo.dreamview.VehicleData.data_files)
  return &data_files_;
}
inline const ::apollo::dreamview::VehicleData_DataFile& VehicleData::data_files(int index) const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.VehicleData.data_files)
  return data_files_.Get(index);
}
inline ::apollo::dreamview::VehicleData_DataFile* VehicleData::add_data_files() {
  // @@protoc_insertion_point(field_add:apollo.dreamview.VehicleData.data_files)
  return data_files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::dreamview::VehicleData_DataFile >&
VehicleData::data_files() const {
  // @@protoc_insertion_point(field_list:apollo.dreamview.VehicleData.data_files)
  return data_files_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dreamview
}  // namespace apollo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::dreamview::HMIAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::dreamview::HMIAction>() {
  return ::apollo::dreamview::HMIAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fdreamview_2fproto_2fhmi_5fconfig_2eproto

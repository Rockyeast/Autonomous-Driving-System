// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/dreamview/proto/camera_update.proto

#ifndef PROTOBUF_INCLUDED_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto
#define PROTOBUF_INCLUDED_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto 

namespace protobuf_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto
namespace apollo {
namespace dreamview {
class CameraUpdate;
class CameraUpdateDefaultTypeInternal;
extern CameraUpdateDefaultTypeInternal _CameraUpdate_default_instance_;
}  // namespace dreamview
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::dreamview::CameraUpdate* Arena::CreateMaybeMessage<::apollo::dreamview::CameraUpdate>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace dreamview {

// ===================================================================

class CameraUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.dreamview.CameraUpdate) */ {
 public:
  CameraUpdate();
  virtual ~CameraUpdate();

  CameraUpdate(const CameraUpdate& from);

  inline CameraUpdate& operator=(const CameraUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CameraUpdate(CameraUpdate&& from) noexcept
    : CameraUpdate() {
    *this = ::std::move(from);
  }

  inline CameraUpdate& operator=(CameraUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraUpdate* internal_default_instance() {
    return reinterpret_cast<const CameraUpdate*>(
               &_CameraUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CameraUpdate* other);
  friend void swap(CameraUpdate& a, CameraUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CameraUpdate* New() const final {
    return CreateMaybeMessage<CameraUpdate>(NULL);
  }

  CameraUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CameraUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CameraUpdate& from);
  void MergeFrom(const CameraUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double localization = 1;
  int localization_size() const;
  void clear_localization();
  static const int kLocalizationFieldNumber = 1;
  double localization(int index) const;
  void set_localization(int index, double value);
  void add_localization(double value);
  const ::google::protobuf::RepeatedField< double >&
      localization() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_localization();

  // repeated double localization2camera_tf = 2;
  int localization2camera_tf_size() const;
  void clear_localization2camera_tf();
  static const int kLocalization2CameraTfFieldNumber = 2;
  double localization2camera_tf(int index) const;
  void set_localization2camera_tf(int index, double value);
  void add_localization2camera_tf(double value);
  const ::google::protobuf::RepeatedField< double >&
      localization2camera_tf() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_localization2camera_tf();

  // optional bytes image = 3;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 3;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // optional double image_aspect_ratio = 4;
  bool has_image_aspect_ratio() const;
  void clear_image_aspect_ratio();
  static const int kImageAspectRatioFieldNumber = 4;
  double image_aspect_ratio() const;
  void set_image_aspect_ratio(double value);

  // @@protoc_insertion_point(class_scope:apollo.dreamview.CameraUpdate)
 private:
  void set_has_image();
  void clear_has_image();
  void set_has_image_aspect_ratio();
  void clear_has_image_aspect_ratio();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< double > localization_;
  ::google::protobuf::RepeatedField< double > localization2camera_tf_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  double image_aspect_ratio_;
  friend struct ::protobuf_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CameraUpdate

// repeated double localization = 1;
inline int CameraUpdate::localization_size() const {
  return localization_.size();
}
inline void CameraUpdate::clear_localization() {
  localization_.Clear();
}
inline double CameraUpdate::localization(int index) const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.CameraUpdate.localization)
  return localization_.Get(index);
}
inline void CameraUpdate::set_localization(int index, double value) {
  localization_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.dreamview.CameraUpdate.localization)
}
inline void CameraUpdate::add_localization(double value) {
  localization_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.dreamview.CameraUpdate.localization)
}
inline const ::google::protobuf::RepeatedField< double >&
CameraUpdate::localization() const {
  // @@protoc_insertion_point(field_list:apollo.dreamview.CameraUpdate.localization)
  return localization_;
}
inline ::google::protobuf::RepeatedField< double >*
CameraUpdate::mutable_localization() {
  // @@protoc_insertion_point(field_mutable_list:apollo.dreamview.CameraUpdate.localization)
  return &localization_;
}

// repeated double localization2camera_tf = 2;
inline int CameraUpdate::localization2camera_tf_size() const {
  return localization2camera_tf_.size();
}
inline void CameraUpdate::clear_localization2camera_tf() {
  localization2camera_tf_.Clear();
}
inline double CameraUpdate::localization2camera_tf(int index) const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.CameraUpdate.localization2camera_tf)
  return localization2camera_tf_.Get(index);
}
inline void CameraUpdate::set_localization2camera_tf(int index, double value) {
  localization2camera_tf_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.dreamview.CameraUpdate.localization2camera_tf)
}
inline void CameraUpdate::add_localization2camera_tf(double value) {
  localization2camera_tf_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.dreamview.CameraUpdate.localization2camera_tf)
}
inline const ::google::protobuf::RepeatedField< double >&
CameraUpdate::localization2camera_tf() const {
  // @@protoc_insertion_point(field_list:apollo.dreamview.CameraUpdate.localization2camera_tf)
  return localization2camera_tf_;
}
inline ::google::protobuf::RepeatedField< double >*
CameraUpdate::mutable_localization2camera_tf() {
  // @@protoc_insertion_point(field_mutable_list:apollo.dreamview.CameraUpdate.localization2camera_tf)
  return &localization2camera_tf_;
}

// optional bytes image = 3;
inline bool CameraUpdate::has_image() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CameraUpdate::set_has_image() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CameraUpdate::clear_has_image() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CameraUpdate::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image();
}
inline const ::std::string& CameraUpdate::image() const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.CameraUpdate.image)
  return image_.GetNoArena();
}
inline void CameraUpdate::set_image(const ::std::string& value) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.dreamview.CameraUpdate.image)
}
#if LANG_CXX11
inline void CameraUpdate::set_image(::std::string&& value) {
  set_has_image();
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.dreamview.CameraUpdate.image)
}
#endif
inline void CameraUpdate::set_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.dreamview.CameraUpdate.image)
}
inline void CameraUpdate::set_image(const void* value, size_t size) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.dreamview.CameraUpdate.image)
}
inline ::std::string* CameraUpdate::mutable_image() {
  set_has_image();
  // @@protoc_insertion_point(field_mutable:apollo.dreamview.CameraUpdate.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CameraUpdate::release_image() {
  // @@protoc_insertion_point(field_release:apollo.dreamview.CameraUpdate.image)
  if (!has_image()) {
    return NULL;
  }
  clear_has_image();
  return image_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CameraUpdate::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    set_has_image();
  } else {
    clear_has_image();
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:apollo.dreamview.CameraUpdate.image)
}

// optional double image_aspect_ratio = 4;
inline bool CameraUpdate::has_image_aspect_ratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CameraUpdate::set_has_image_aspect_ratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CameraUpdate::clear_has_image_aspect_ratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CameraUpdate::clear_image_aspect_ratio() {
  image_aspect_ratio_ = 0;
  clear_has_image_aspect_ratio();
}
inline double CameraUpdate::image_aspect_ratio() const {
  // @@protoc_insertion_point(field_get:apollo.dreamview.CameraUpdate.image_aspect_ratio)
  return image_aspect_ratio_;
}
inline void CameraUpdate::set_image_aspect_ratio(double value) {
  set_has_image_aspect_ratio();
  image_aspect_ratio_ = value;
  // @@protoc_insertion_point(field_set:apollo.dreamview.CameraUpdate.image_aspect_ratio)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dreamview
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fdreamview_2fproto_2fcamera_5fupdate_2eproto

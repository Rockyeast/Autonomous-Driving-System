// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/dreamview/proto/hmi_mode.proto

#include "modules/dreamview/proto/hmi_mode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChannelMonitorConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CyberModule;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModuleMonitorConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcessMonitorConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_CPUUsage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_DiskLoad;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_DiskSpace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_MemoryUsage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_CyberModulesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_ModulesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_MonitoredComponentsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_OtherComponentsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Module;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_MonitoredComponent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_ResourceMonitorConfig;
}  // namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto
namespace apollo {
namespace dreamview {
class ProcessMonitorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessMonitorConfig>
      _instance;
} _ProcessMonitorConfig_default_instance_;
class ModuleMonitorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleMonitorConfig>
      _instance;
} _ModuleMonitorConfig_default_instance_;
class ChannelMonitorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelMonitorConfig>
      _instance;
} _ChannelMonitorConfig_default_instance_;
class ResourceMonitorConfig_DiskSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceMonitorConfig_DiskSpace>
      _instance;
} _ResourceMonitorConfig_DiskSpace_default_instance_;
class ResourceMonitorConfig_CPUUsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceMonitorConfig_CPUUsage>
      _instance;
} _ResourceMonitorConfig_CPUUsage_default_instance_;
class ResourceMonitorConfig_MemoryUsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceMonitorConfig_MemoryUsage>
      _instance;
} _ResourceMonitorConfig_MemoryUsage_default_instance_;
class ResourceMonitorConfig_DiskLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceMonitorConfig_DiskLoad>
      _instance;
} _ResourceMonitorConfig_DiskLoad_default_instance_;
class ResourceMonitorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceMonitorConfig>
      _instance;
} _ResourceMonitorConfig_default_instance_;
class MonitoredComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoredComponent>
      _instance;
} _MonitoredComponent_default_instance_;
class ModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Module>
      _instance;
} _Module_default_instance_;
class CyberModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CyberModule>
      _instance;
} _CyberModule_default_instance_;
class HMIMode_CyberModulesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIMode_CyberModulesEntry_DoNotUse>
      _instance;
} _HMIMode_CyberModulesEntry_DoNotUse_default_instance_;
class HMIMode_ModulesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIMode_ModulesEntry_DoNotUse>
      _instance;
} _HMIMode_ModulesEntry_DoNotUse_default_instance_;
class HMIMode_MonitoredComponentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIMode_MonitoredComponentsEntry_DoNotUse>
      _instance;
} _HMIMode_MonitoredComponentsEntry_DoNotUse_default_instance_;
class HMIMode_OtherComponentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIMode_OtherComponentsEntry_DoNotUse>
      _instance;
} _HMIMode_OtherComponentsEntry_DoNotUse_default_instance_;
class HMIModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HMIMode>
      _instance;
} _HMIMode_default_instance_;
}  // namespace dreamview
}  // namespace apollo
namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto {
static void InitDefaultsProcessMonitorConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ProcessMonitorConfig_default_instance_;
    new (ptr) ::apollo::dreamview::ProcessMonitorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ProcessMonitorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcessMonitorConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcessMonitorConfig}, {}};

static void InitDefaultsModuleMonitorConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ModuleMonitorConfig_default_instance_;
    new (ptr) ::apollo::dreamview::ModuleMonitorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ModuleMonitorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModuleMonitorConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModuleMonitorConfig}, {}};

static void InitDefaultsChannelMonitorConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ChannelMonitorConfig_default_instance_;
    new (ptr) ::apollo::dreamview::ChannelMonitorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ChannelMonitorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelMonitorConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelMonitorConfig}, {}};

static void InitDefaultsResourceMonitorConfig_DiskSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ResourceMonitorConfig_DiskSpace_default_instance_;
    new (ptr) ::apollo::dreamview::ResourceMonitorConfig_DiskSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ResourceMonitorConfig_DiskSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_DiskSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceMonitorConfig_DiskSpace}, {}};

static void InitDefaultsResourceMonitorConfig_CPUUsage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ResourceMonitorConfig_CPUUsage_default_instance_;
    new (ptr) ::apollo::dreamview::ResourceMonitorConfig_CPUUsage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ResourceMonitorConfig_CPUUsage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_CPUUsage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceMonitorConfig_CPUUsage}, {}};

static void InitDefaultsResourceMonitorConfig_MemoryUsage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ResourceMonitorConfig_MemoryUsage_default_instance_;
    new (ptr) ::apollo::dreamview::ResourceMonitorConfig_MemoryUsage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ResourceMonitorConfig_MemoryUsage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_MemoryUsage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceMonitorConfig_MemoryUsage}, {}};

static void InitDefaultsResourceMonitorConfig_DiskLoad() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ResourceMonitorConfig_DiskLoad_default_instance_;
    new (ptr) ::apollo::dreamview::ResourceMonitorConfig_DiskLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ResourceMonitorConfig_DiskLoad::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceMonitorConfig_DiskLoad =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceMonitorConfig_DiskLoad}, {}};

static void InitDefaultsResourceMonitorConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_ResourceMonitorConfig_default_instance_;
    new (ptr) ::apollo::dreamview::ResourceMonitorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::ResourceMonitorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ResourceMonitorConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsResourceMonitorConfig}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_DiskSpace.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_CPUUsage.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_MemoryUsage.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_DiskLoad.base,}};

static void InitDefaultsMonitoredComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_MonitoredComponent_default_instance_;
    new (ptr) ::apollo::dreamview::MonitoredComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::MonitoredComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_MonitoredComponent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsMonitoredComponent}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ProcessMonitorConfig.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ChannelMonitorConfig.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ModuleMonitorConfig.base,}};

static void InitDefaultsModule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_Module_default_instance_;
    new (ptr) ::apollo::dreamview::Module();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::Module::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Module =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModule}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ProcessMonitorConfig.base,}};

static void InitDefaultsCyberModule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_CyberModule_default_instance_;
    new (ptr) ::apollo::dreamview::CyberModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::CyberModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CyberModule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCyberModule}, {}};

static void InitDefaultsHMIMode_CyberModulesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIMode_CyberModulesEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_CyberModulesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHMIMode_CyberModulesEntry_DoNotUse}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_CyberModule.base,}};

static void InitDefaultsHMIMode_ModulesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIMode_ModulesEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_ModulesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHMIMode_ModulesEntry_DoNotUse}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_Module.base,}};

static void InitDefaultsHMIMode_MonitoredComponentsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIMode_MonitoredComponentsEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_MonitoredComponentsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHMIMode_MonitoredComponentsEntry_DoNotUse}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_MonitoredComponent.base,}};

static void InitDefaultsHMIMode_OtherComponentsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIMode_OtherComponentsEntry_DoNotUse_default_instance_;
    new (ptr) ::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse();
  }
  ::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HMIMode_OtherComponentsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHMIMode_OtherComponentsEntry_DoNotUse}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ProcessMonitorConfig.base,}};

static void InitDefaultsHMIMode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::dreamview::_HMIMode_default_instance_;
    new (ptr) ::apollo::dreamview::HMIMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::dreamview::HMIMode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_HMIMode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsHMIMode}, {
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_HMIMode_CyberModulesEntry_DoNotUse.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_HMIMode_ModulesEntry_DoNotUse.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_HMIMode_MonitoredComponentsEntry_DoNotUse.base,
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_HMIMode_OtherComponentsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProcessMonitorConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleMonitorConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelMonitorConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceMonitorConfig_DiskSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceMonitorConfig_CPUUsage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceMonitorConfig_MemoryUsage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceMonitorConfig_DiskLoad.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceMonitorConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoredComponent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Module.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CyberModule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIMode_CyberModulesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIMode_ModulesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIMode_MonitoredComponentsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIMode_OtherComponentsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HMIMode.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ProcessMonitorConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ProcessMonitorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ProcessMonitorConfig, command_keywords_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ModuleMonitorConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ModuleMonitorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ModuleMonitorConfig, node_name_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, delay_fatal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, mandatory_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, min_frequency_allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ChannelMonitorConfig, max_frequency_allowed_),
  0,
  2,
  ~0u,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskSpace, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskSpace, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskSpace, insufficient_space_warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskSpace, insufficient_space_error_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_CPUUsage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_CPUUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_CPUUsage, high_cpu_usage_warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_CPUUsage, high_cpu_usage_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_CPUUsage, process_dag_path_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_MemoryUsage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_MemoryUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_MemoryUsage, high_memory_usage_warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_MemoryUsage, high_memory_usage_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_MemoryUsage, process_dag_path_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskLoad, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskLoad, high_disk_load_warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskLoad, high_disk_load_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig_DiskLoad, device_name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig, disk_spaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig, cpu_usages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig, memory_usages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::ResourceMonitorConfig, disk_load_usages_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, process_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, required_for_safety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::MonitoredComponent, module_),
  0,
  1,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::Module, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::Module, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::Module, start_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::Module, stop_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::Module, process_monitor_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::Module, required_for_safety_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::CyberModule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::CyberModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::CyberModule, dag_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::CyberModule, required_for_safety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::CyberModule, process_group_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode, cyber_modules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode, modules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode, monitored_components_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::dreamview::HMIMode, other_components_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::apollo::dreamview::ProcessMonitorConfig)},
  { 7, 13, sizeof(::apollo::dreamview::ModuleMonitorConfig)},
  { 14, 24, sizeof(::apollo::dreamview::ChannelMonitorConfig)},
  { 29, 37, sizeof(::apollo::dreamview::ResourceMonitorConfig_DiskSpace)},
  { 40, 48, sizeof(::apollo::dreamview::ResourceMonitorConfig_CPUUsage)},
  { 51, 59, sizeof(::apollo::dreamview::ResourceMonitorConfig_MemoryUsage)},
  { 62, 70, sizeof(::apollo::dreamview::ResourceMonitorConfig_DiskLoad)},
  { 73, 82, sizeof(::apollo::dreamview::ResourceMonitorConfig)},
  { 86, 96, sizeof(::apollo::dreamview::MonitoredComponent)},
  { 101, 110, sizeof(::apollo::dreamview::Module)},
  { 114, 122, sizeof(::apollo::dreamview::CyberModule)},
  { 125, 132, sizeof(::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse)},
  { 134, 141, sizeof(::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse)},
  { 143, 150, sizeof(::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse)},
  { 152, 159, sizeof(::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse)},
  { 161, 170, sizeof(::apollo::dreamview::HMIMode)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ProcessMonitorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ModuleMonitorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ChannelMonitorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ResourceMonitorConfig_DiskSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ResourceMonitorConfig_CPUUsage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ResourceMonitorConfig_MemoryUsage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ResourceMonitorConfig_DiskLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_ResourceMonitorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_MonitoredComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_Module_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_CyberModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIMode_CyberModulesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIMode_ModulesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIMode_MonitoredComponentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIMode_OtherComponentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::dreamview::_HMIMode_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/dreamview/proto/hmi_mode.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&modules/dreamview/proto/hmi_mode.proto"
      "\022\020apollo.dreamview\"0\n\024ProcessMonitorConf"
      "ig\022\030\n\020command_keywords\030\001 \003(\t\"(\n\023ModuleMo"
      "nitorConfig\022\021\n\tnode_name\030\001 \003(\t\"\235\001\n\024Chann"
      "elMonitorConfig\022\014\n\004name\030\001 \001(\t\022\026\n\013delay_f"
      "atal\030\002 \001(\001:\0013\022\030\n\020mandatory_fields\030\003 \003(\t\022"
      " \n\025min_frequency_allowed\030\004 \001(\001:\0010\022#\n\025max"
      "_frequency_allowed\030\005 \001(\001:\0041000\"\316\005\n\025Resou"
      "rceMonitorConfig\022F\n\013disk_spaces\030\001 \003(\01321."
      "apollo.dreamview.ResourceMonitorConfig.D"
      "iskSpace\022D\n\ncpu_usages\030\002 \003(\01320.apollo.dr"
      "eamview.ResourceMonitorConfig.CPUUsage\022J"
      "\n\rmemory_usages\030\003 \003(\01323.apollo.dreamview"
      ".ResourceMonitorConfig.MemoryUsage\022J\n\020di"
      "sk_load_usages\030\004 \003(\01320.apollo.dreamview."
      "ResourceMonitorConfig.DiskLoad\032_\n\tDiskSp"
      "ace\022\014\n\004path\030\001 \001(\t\022\"\n\032insufficient_space_"
      "warning\030\002 \001(\005\022 \n\030insufficient_space_erro"
      "r\030\003 \001(\005\032b\n\010CPUUsage\022\036\n\026high_cpu_usage_wa"
      "rning\030\001 \001(\002\022\034\n\024high_cpu_usage_error\030\002 \001("
      "\002\022\030\n\020process_dag_path\030\003 \001(\t\032k\n\013MemoryUsa"
      "ge\022!\n\031high_memory_usage_warning\030\001 \001(\005\022\037\n"
      "\027high_memory_usage_error\030\002 \001(\005\022\030\n\020proces"
      "s_dag_path\030\003 \001(\t\032]\n\010DiskLoad\022\036\n\026high_dis"
      "k_load_warning\030\001 \001(\005\022\034\n\024high_disk_load_e"
      "rror\030\002 \001(\005\022\023\n\013device_name\030\003 \001(\t\"\233\002\n\022Moni"
      "toredComponent\0227\n\007process\030\001 \001(\0132&.apollo"
      ".dreamview.ProcessMonitorConfig\0227\n\007chann"
      "el\030\002 \001(\0132&.apollo.dreamview.ChannelMonit"
      "orConfig\0229\n\010resource\030\003 \001(\0132\'.apollo.drea"
      "mview.ResourceMonitorConfig\022!\n\023required_"
      "for_safety\030\004 \001(\010:\004true\0225\n\006module\030\005 \001(\0132%"
      ".apollo.dreamview.ModuleMonitorConfig\"\240\001"
      "\n\006Module\022\025\n\rstart_command\030\001 \001(\t\022\024\n\014stop_"
      "command\030\002 \001(\t\022F\n\026process_monitor_config\030"
      "\003 \001(\0132&.apollo.dreamview.ProcessMonitorC"
      "onfig\022!\n\023required_for_safety\030\004 \001(\010:\004true"
      "\"Z\n\013CyberModule\022\021\n\tdag_files\030\001 \003(\t\022!\n\023re"
      "quired_for_safety\030\002 \001(\010:\004true\022\025\n\rprocess"
      "_group\030\003 \001(\t\"\202\005\n\007HMIMode\022B\n\rcyber_module"
      "s\030\001 \003(\0132+.apollo.dreamview.HMIMode.Cyber"
      "ModulesEntry\0227\n\007modules\030\002 \003(\0132&.apollo.d"
      "reamview.HMIMode.ModulesEntry\022P\n\024monitor"
      "ed_components\030\003 \003(\01322.apollo.dreamview.H"
      "MIMode.MonitoredComponentsEntry\022H\n\020other"
      "_components\030\004 \003(\0132..apollo.dreamview.HMI"
      "Mode.OtherComponentsEntry\032R\n\021CyberModule"
      "sEntry\022\013\n\003key\030\001 \001(\t\022,\n\005value\030\002 \001(\0132\035.apo"
      "llo.dreamview.CyberModule:\0028\001\032H\n\014Modules"
      "Entry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002 \001(\0132\030.apol"
      "lo.dreamview.Module:\0028\001\032`\n\030MonitoredComp"
      "onentsEntry\022\013\n\003key\030\001 \001(\t\0223\n\005value\030\002 \001(\0132"
      "$.apollo.dreamview.MonitoredComponent:\0028"
      "\001\032^\n\024OtherComponentsEntry\022\013\n\003key\030\001 \001(\t\0225"
      "\n\005value\030\002 \001(\0132&.apollo.dreamview.Process"
      "MonitorConfig:\0028\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2217);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/dreamview/proto/hmi_mode.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto
namespace apollo {
namespace dreamview {

// ===================================================================

void ProcessMonitorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessMonitorConfig::kCommandKeywordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessMonitorConfig::ProcessMonitorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ProcessMonitorConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ProcessMonitorConfig)
}
ProcessMonitorConfig::ProcessMonitorConfig(const ProcessMonitorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      command_keywords_(from.command_keywords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ProcessMonitorConfig)
}

void ProcessMonitorConfig::SharedCtor() {
}

ProcessMonitorConfig::~ProcessMonitorConfig() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ProcessMonitorConfig)
  SharedDtor();
}

void ProcessMonitorConfig::SharedDtor() {
}

void ProcessMonitorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcessMonitorConfig::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessMonitorConfig& ProcessMonitorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ProcessMonitorConfig.base);
  return *internal_default_instance();
}


void ProcessMonitorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ProcessMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_keywords_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcessMonitorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ProcessMonitorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string command_keywords = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_command_keywords()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_keywords(this->command_keywords_size() - 1).data(),
            static_cast<int>(this->command_keywords(this->command_keywords_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ProcessMonitorConfig.command_keywords");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ProcessMonitorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ProcessMonitorConfig)
  return false;
#undef DO_
}

void ProcessMonitorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ProcessMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string command_keywords = 1;
  for (int i = 0, n = this->command_keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_keywords(i).data(), static_cast<int>(this->command_keywords(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ProcessMonitorConfig.command_keywords");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->command_keywords(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ProcessMonitorConfig)
}

::google::protobuf::uint8* ProcessMonitorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ProcessMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string command_keywords = 1;
  for (int i = 0, n = this->command_keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_keywords(i).data(), static_cast<int>(this->command_keywords(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ProcessMonitorConfig.command_keywords");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->command_keywords(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ProcessMonitorConfig)
  return target;
}

size_t ProcessMonitorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ProcessMonitorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string command_keywords = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->command_keywords_size());
  for (int i = 0, n = this->command_keywords_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->command_keywords(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessMonitorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ProcessMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessMonitorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessMonitorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ProcessMonitorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ProcessMonitorConfig)
    MergeFrom(*source);
  }
}

void ProcessMonitorConfig::MergeFrom(const ProcessMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ProcessMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  command_keywords_.MergeFrom(from.command_keywords_);
}

void ProcessMonitorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ProcessMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessMonitorConfig::CopyFrom(const ProcessMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ProcessMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessMonitorConfig::IsInitialized() const {
  return true;
}

void ProcessMonitorConfig::Swap(ProcessMonitorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessMonitorConfig::InternalSwap(ProcessMonitorConfig* other) {
  using std::swap;
  command_keywords_.InternalSwap(CastToBase(&other->command_keywords_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcessMonitorConfig::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleMonitorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleMonitorConfig::kNodeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleMonitorConfig::ModuleMonitorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ModuleMonitorConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ModuleMonitorConfig)
}
ModuleMonitorConfig::ModuleMonitorConfig(const ModuleMonitorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      node_name_(from.node_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ModuleMonitorConfig)
}

void ModuleMonitorConfig::SharedCtor() {
}

ModuleMonitorConfig::~ModuleMonitorConfig() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ModuleMonitorConfig)
  SharedDtor();
}

void ModuleMonitorConfig::SharedDtor() {
}

void ModuleMonitorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleMonitorConfig::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleMonitorConfig& ModuleMonitorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ModuleMonitorConfig.base);
  return *internal_default_instance();
}


void ModuleMonitorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ModuleMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_name_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModuleMonitorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ModuleMonitorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string node_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_node_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_name(this->node_name_size() - 1).data(),
            static_cast<int>(this->node_name(this->node_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ModuleMonitorConfig.node_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ModuleMonitorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ModuleMonitorConfig)
  return false;
#undef DO_
}

void ModuleMonitorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ModuleMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string node_name = 1;
  for (int i = 0, n = this->node_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_name(i).data(), static_cast<int>(this->node_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ModuleMonitorConfig.node_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->node_name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ModuleMonitorConfig)
}

::google::protobuf::uint8* ModuleMonitorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ModuleMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string node_name = 1;
  for (int i = 0, n = this->node_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_name(i).data(), static_cast<int>(this->node_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ModuleMonitorConfig.node_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->node_name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ModuleMonitorConfig)
  return target;
}

size_t ModuleMonitorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ModuleMonitorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string node_name = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->node_name_size());
  for (int i = 0, n = this->node_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->node_name(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleMonitorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ModuleMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleMonitorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleMonitorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ModuleMonitorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ModuleMonitorConfig)
    MergeFrom(*source);
  }
}

void ModuleMonitorConfig::MergeFrom(const ModuleMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ModuleMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_name_.MergeFrom(from.node_name_);
}

void ModuleMonitorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ModuleMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleMonitorConfig::CopyFrom(const ModuleMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ModuleMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleMonitorConfig::IsInitialized() const {
  return true;
}

void ModuleMonitorConfig::Swap(ModuleMonitorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleMonitorConfig::InternalSwap(ModuleMonitorConfig* other) {
  using std::swap;
  node_name_.InternalSwap(CastToBase(&other->node_name_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleMonitorConfig::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelMonitorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelMonitorConfig::kNameFieldNumber;
const int ChannelMonitorConfig::kDelayFatalFieldNumber;
const int ChannelMonitorConfig::kMandatoryFieldsFieldNumber;
const int ChannelMonitorConfig::kMinFrequencyAllowedFieldNumber;
const int ChannelMonitorConfig::kMaxFrequencyAllowedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelMonitorConfig::ChannelMonitorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ChannelMonitorConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ChannelMonitorConfig)
}
ChannelMonitorConfig::ChannelMonitorConfig(const ChannelMonitorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mandatory_fields_(from.mandatory_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&min_frequency_allowed_, &from.min_frequency_allowed_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_frequency_allowed_) -
    reinterpret_cast<char*>(&min_frequency_allowed_)) + sizeof(max_frequency_allowed_));
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ChannelMonitorConfig)
}

void ChannelMonitorConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_frequency_allowed_ = 0;
  delay_fatal_ = 3;
  max_frequency_allowed_ = 1000;
}

ChannelMonitorConfig::~ChannelMonitorConfig() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ChannelMonitorConfig)
  SharedDtor();
}

void ChannelMonitorConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelMonitorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelMonitorConfig::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelMonitorConfig& ChannelMonitorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ChannelMonitorConfig.base);
  return *internal_default_instance();
}


void ChannelMonitorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ChannelMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mandatory_fields_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    min_frequency_allowed_ = 0;
    delay_fatal_ = 3;
    max_frequency_allowed_ = 1000;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChannelMonitorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ChannelMonitorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ChannelMonitorConfig.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double delay_fatal = 2 [default = 3];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_delay_fatal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delay_fatal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mandatory_fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mandatory_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mandatory_fields(this->mandatory_fields_size() - 1).data(),
            static_cast<int>(this->mandatory_fields(this->mandatory_fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ChannelMonitorConfig.mandatory_fields");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double min_frequency_allowed = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_min_frequency_allowed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_frequency_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_frequency_allowed = 5 [default = 1000];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_max_frequency_allowed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_frequency_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ChannelMonitorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ChannelMonitorConfig)
  return false;
#undef DO_
}

void ChannelMonitorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ChannelMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ChannelMonitorConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double delay_fatal = 2 [default = 3];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->delay_fatal(), output);
  }

  // repeated string mandatory_fields = 3;
  for (int i = 0, n = this->mandatory_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mandatory_fields(i).data(), static_cast<int>(this->mandatory_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ChannelMonitorConfig.mandatory_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->mandatory_fields(i), output);
  }

  // optional double min_frequency_allowed = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->min_frequency_allowed(), output);
  }

  // optional double max_frequency_allowed = 5 [default = 1000];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->max_frequency_allowed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ChannelMonitorConfig)
}

::google::protobuf::uint8* ChannelMonitorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ChannelMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ChannelMonitorConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double delay_fatal = 2 [default = 3];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->delay_fatal(), target);
  }

  // repeated string mandatory_fields = 3;
  for (int i = 0, n = this->mandatory_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mandatory_fields(i).data(), static_cast<int>(this->mandatory_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ChannelMonitorConfig.mandatory_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->mandatory_fields(i), target);
  }

  // optional double min_frequency_allowed = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->min_frequency_allowed(), target);
  }

  // optional double max_frequency_allowed = 5 [default = 1000];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->max_frequency_allowed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ChannelMonitorConfig)
  return target;
}

size_t ChannelMonitorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ChannelMonitorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string mandatory_fields = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mandatory_fields_size());
  for (int i = 0, n = this->mandatory_fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mandatory_fields(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional double min_frequency_allowed = 4 [default = 0];
    if (has_min_frequency_allowed()) {
      total_size += 1 + 8;
    }

    // optional double delay_fatal = 2 [default = 3];
    if (has_delay_fatal()) {
      total_size += 1 + 8;
    }

    // optional double max_frequency_allowed = 5 [default = 1000];
    if (has_max_frequency_allowed()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelMonitorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ChannelMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelMonitorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelMonitorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ChannelMonitorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ChannelMonitorConfig)
    MergeFrom(*source);
  }
}

void ChannelMonitorConfig::MergeFrom(const ChannelMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ChannelMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mandatory_fields_.MergeFrom(from.mandatory_fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      min_frequency_allowed_ = from.min_frequency_allowed_;
    }
    if (cached_has_bits & 0x00000004u) {
      delay_fatal_ = from.delay_fatal_;
    }
    if (cached_has_bits & 0x00000008u) {
      max_frequency_allowed_ = from.max_frequency_allowed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChannelMonitorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ChannelMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelMonitorConfig::CopyFrom(const ChannelMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ChannelMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelMonitorConfig::IsInitialized() const {
  return true;
}

void ChannelMonitorConfig::Swap(ChannelMonitorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelMonitorConfig::InternalSwap(ChannelMonitorConfig* other) {
  using std::swap;
  mandatory_fields_.InternalSwap(CastToBase(&other->mandatory_fields_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(min_frequency_allowed_, other->min_frequency_allowed_);
  swap(delay_fatal_, other->delay_fatal_);
  swap(max_frequency_allowed_, other->max_frequency_allowed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelMonitorConfig::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceMonitorConfig_DiskSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceMonitorConfig_DiskSpace::kPathFieldNumber;
const int ResourceMonitorConfig_DiskSpace::kInsufficientSpaceWarningFieldNumber;
const int ResourceMonitorConfig_DiskSpace::kInsufficientSpaceErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceMonitorConfig_DiskSpace::ResourceMonitorConfig_DiskSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_DiskSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
}
ResourceMonitorConfig_DiskSpace::ResourceMonitorConfig_DiskSpace(const ResourceMonitorConfig_DiskSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&insufficient_space_warning_, &from.insufficient_space_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&insufficient_space_error_) -
    reinterpret_cast<char*>(&insufficient_space_warning_)) + sizeof(insufficient_space_error_));
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
}

void ResourceMonitorConfig_DiskSpace::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&insufficient_space_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&insufficient_space_error_) -
      reinterpret_cast<char*>(&insufficient_space_warning_)) + sizeof(insufficient_space_error_));
}

ResourceMonitorConfig_DiskSpace::~ResourceMonitorConfig_DiskSpace() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  SharedDtor();
}

void ResourceMonitorConfig_DiskSpace::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceMonitorConfig_DiskSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceMonitorConfig_DiskSpace::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceMonitorConfig_DiskSpace& ResourceMonitorConfig_DiskSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_DiskSpace.base);
  return *internal_default_instance();
}


void ResourceMonitorConfig_DiskSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&insufficient_space_warning_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&insufficient_space_error_) -
        reinterpret_cast<char*>(&insufficient_space_warning_)) + sizeof(insufficient_space_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceMonitorConfig_DiskSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ResourceMonitorConfig.DiskSpace.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 insufficient_space_warning = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_insufficient_space_warning();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &insufficient_space_warning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 insufficient_space_error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_insufficient_space_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &insufficient_space_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  return false;
#undef DO_
}

void ResourceMonitorConfig_DiskSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.DiskSpace.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional int32 insufficient_space_warning = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->insufficient_space_warning(), output);
  }

  // optional int32 insufficient_space_error = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->insufficient_space_error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
}

::google::protobuf::uint8* ResourceMonitorConfig_DiskSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.DiskSpace.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional int32 insufficient_space_warning = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->insufficient_space_warning(), target);
  }

  // optional int32 insufficient_space_error = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->insufficient_space_error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  return target;
}

size_t ResourceMonitorConfig_DiskSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional int32 insufficient_space_warning = 2;
    if (has_insufficient_space_warning()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->insufficient_space_warning());
    }

    // optional int32 insufficient_space_error = 3;
    if (has_insufficient_space_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->insufficient_space_error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceMonitorConfig_DiskSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceMonitorConfig_DiskSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceMonitorConfig_DiskSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
    MergeFrom(*source);
  }
}

void ResourceMonitorConfig_DiskSpace::MergeFrom(const ResourceMonitorConfig_DiskSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      insufficient_space_warning_ = from.insufficient_space_warning_;
    }
    if (cached_has_bits & 0x00000004u) {
      insufficient_space_error_ = from.insufficient_space_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResourceMonitorConfig_DiskSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceMonitorConfig_DiskSpace::CopyFrom(const ResourceMonitorConfig_DiskSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ResourceMonitorConfig.DiskSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceMonitorConfig_DiskSpace::IsInitialized() const {
  return true;
}

void ResourceMonitorConfig_DiskSpace::Swap(ResourceMonitorConfig_DiskSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceMonitorConfig_DiskSpace::InternalSwap(ResourceMonitorConfig_DiskSpace* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(insufficient_space_warning_, other->insufficient_space_warning_);
  swap(insufficient_space_error_, other->insufficient_space_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceMonitorConfig_DiskSpace::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceMonitorConfig_CPUUsage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceMonitorConfig_CPUUsage::kHighCpuUsageWarningFieldNumber;
const int ResourceMonitorConfig_CPUUsage::kHighCpuUsageErrorFieldNumber;
const int ResourceMonitorConfig_CPUUsage::kProcessDagPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceMonitorConfig_CPUUsage::ResourceMonitorConfig_CPUUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_CPUUsage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
}
ResourceMonitorConfig_CPUUsage::ResourceMonitorConfig_CPUUsage(const ResourceMonitorConfig_CPUUsage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  process_dag_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_process_dag_path()) {
    process_dag_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_dag_path_);
  }
  ::memcpy(&high_cpu_usage_warning_, &from.high_cpu_usage_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_cpu_usage_error_) -
    reinterpret_cast<char*>(&high_cpu_usage_warning_)) + sizeof(high_cpu_usage_error_));
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
}

void ResourceMonitorConfig_CPUUsage::SharedCtor() {
  process_dag_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&high_cpu_usage_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_cpu_usage_error_) -
      reinterpret_cast<char*>(&high_cpu_usage_warning_)) + sizeof(high_cpu_usage_error_));
}

ResourceMonitorConfig_CPUUsage::~ResourceMonitorConfig_CPUUsage() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  SharedDtor();
}

void ResourceMonitorConfig_CPUUsage::SharedDtor() {
  process_dag_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceMonitorConfig_CPUUsage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceMonitorConfig_CPUUsage::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceMonitorConfig_CPUUsage& ResourceMonitorConfig_CPUUsage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_CPUUsage.base);
  return *internal_default_instance();
}


void ResourceMonitorConfig_CPUUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    process_dag_path_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&high_cpu_usage_warning_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_cpu_usage_error_) -
        reinterpret_cast<char*>(&high_cpu_usage_warning_)) + sizeof(high_cpu_usage_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceMonitorConfig_CPUUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float high_cpu_usage_warning = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_high_cpu_usage_warning();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_cpu_usage_warning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float high_cpu_usage_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_high_cpu_usage_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_cpu_usage_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string process_dag_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_process_dag_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->process_dag_path().data(), static_cast<int>(this->process_dag_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ResourceMonitorConfig.CPUUsage.process_dag_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  return false;
#undef DO_
}

void ResourceMonitorConfig_CPUUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float high_cpu_usage_warning = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->high_cpu_usage_warning(), output);
  }

  // optional float high_cpu_usage_error = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->high_cpu_usage_error(), output);
  }

  // optional string process_dag_path = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_dag_path().data(), static_cast<int>(this->process_dag_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.CPUUsage.process_dag_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->process_dag_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
}

::google::protobuf::uint8* ResourceMonitorConfig_CPUUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float high_cpu_usage_warning = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->high_cpu_usage_warning(), target);
  }

  // optional float high_cpu_usage_error = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->high_cpu_usage_error(), target);
  }

  // optional string process_dag_path = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_dag_path().data(), static_cast<int>(this->process_dag_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.CPUUsage.process_dag_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->process_dag_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  return target;
}

size_t ResourceMonitorConfig_CPUUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string process_dag_path = 3;
    if (has_process_dag_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->process_dag_path());
    }

    // optional float high_cpu_usage_warning = 1;
    if (has_high_cpu_usage_warning()) {
      total_size += 1 + 4;
    }

    // optional float high_cpu_usage_error = 2;
    if (has_high_cpu_usage_error()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceMonitorConfig_CPUUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceMonitorConfig_CPUUsage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceMonitorConfig_CPUUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
    MergeFrom(*source);
  }
}

void ResourceMonitorConfig_CPUUsage::MergeFrom(const ResourceMonitorConfig_CPUUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_process_dag_path();
      process_dag_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_dag_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      high_cpu_usage_warning_ = from.high_cpu_usage_warning_;
    }
    if (cached_has_bits & 0x00000004u) {
      high_cpu_usage_error_ = from.high_cpu_usage_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResourceMonitorConfig_CPUUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceMonitorConfig_CPUUsage::CopyFrom(const ResourceMonitorConfig_CPUUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ResourceMonitorConfig.CPUUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceMonitorConfig_CPUUsage::IsInitialized() const {
  return true;
}

void ResourceMonitorConfig_CPUUsage::Swap(ResourceMonitorConfig_CPUUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceMonitorConfig_CPUUsage::InternalSwap(ResourceMonitorConfig_CPUUsage* other) {
  using std::swap;
  process_dag_path_.Swap(&other->process_dag_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(high_cpu_usage_warning_, other->high_cpu_usage_warning_);
  swap(high_cpu_usage_error_, other->high_cpu_usage_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceMonitorConfig_CPUUsage::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceMonitorConfig_MemoryUsage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceMonitorConfig_MemoryUsage::kHighMemoryUsageWarningFieldNumber;
const int ResourceMonitorConfig_MemoryUsage::kHighMemoryUsageErrorFieldNumber;
const int ResourceMonitorConfig_MemoryUsage::kProcessDagPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceMonitorConfig_MemoryUsage::ResourceMonitorConfig_MemoryUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_MemoryUsage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
}
ResourceMonitorConfig_MemoryUsage::ResourceMonitorConfig_MemoryUsage(const ResourceMonitorConfig_MemoryUsage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  process_dag_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_process_dag_path()) {
    process_dag_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_dag_path_);
  }
  ::memcpy(&high_memory_usage_warning_, &from.high_memory_usage_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_memory_usage_error_) -
    reinterpret_cast<char*>(&high_memory_usage_warning_)) + sizeof(high_memory_usage_error_));
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
}

void ResourceMonitorConfig_MemoryUsage::SharedCtor() {
  process_dag_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&high_memory_usage_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_memory_usage_error_) -
      reinterpret_cast<char*>(&high_memory_usage_warning_)) + sizeof(high_memory_usage_error_));
}

ResourceMonitorConfig_MemoryUsage::~ResourceMonitorConfig_MemoryUsage() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  SharedDtor();
}

void ResourceMonitorConfig_MemoryUsage::SharedDtor() {
  process_dag_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceMonitorConfig_MemoryUsage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceMonitorConfig_MemoryUsage::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceMonitorConfig_MemoryUsage& ResourceMonitorConfig_MemoryUsage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_MemoryUsage.base);
  return *internal_default_instance();
}


void ResourceMonitorConfig_MemoryUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    process_dag_path_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&high_memory_usage_warning_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_memory_usage_error_) -
        reinterpret_cast<char*>(&high_memory_usage_warning_)) + sizeof(high_memory_usage_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceMonitorConfig_MemoryUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 high_memory_usage_warning = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_high_memory_usage_warning();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_memory_usage_warning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 high_memory_usage_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_high_memory_usage_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_memory_usage_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string process_dag_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_process_dag_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->process_dag_path().data(), static_cast<int>(this->process_dag_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ResourceMonitorConfig.MemoryUsage.process_dag_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  return false;
#undef DO_
}

void ResourceMonitorConfig_MemoryUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 high_memory_usage_warning = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->high_memory_usage_warning(), output);
  }

  // optional int32 high_memory_usage_error = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->high_memory_usage_error(), output);
  }

  // optional string process_dag_path = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_dag_path().data(), static_cast<int>(this->process_dag_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.MemoryUsage.process_dag_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->process_dag_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
}

::google::protobuf::uint8* ResourceMonitorConfig_MemoryUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 high_memory_usage_warning = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->high_memory_usage_warning(), target);
  }

  // optional int32 high_memory_usage_error = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->high_memory_usage_error(), target);
  }

  // optional string process_dag_path = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_dag_path().data(), static_cast<int>(this->process_dag_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.MemoryUsage.process_dag_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->process_dag_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  return target;
}

size_t ResourceMonitorConfig_MemoryUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string process_dag_path = 3;
    if (has_process_dag_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->process_dag_path());
    }

    // optional int32 high_memory_usage_warning = 1;
    if (has_high_memory_usage_warning()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->high_memory_usage_warning());
    }

    // optional int32 high_memory_usage_error = 2;
    if (has_high_memory_usage_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->high_memory_usage_error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceMonitorConfig_MemoryUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceMonitorConfig_MemoryUsage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceMonitorConfig_MemoryUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
    MergeFrom(*source);
  }
}

void ResourceMonitorConfig_MemoryUsage::MergeFrom(const ResourceMonitorConfig_MemoryUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_process_dag_path();
      process_dag_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_dag_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      high_memory_usage_warning_ = from.high_memory_usage_warning_;
    }
    if (cached_has_bits & 0x00000004u) {
      high_memory_usage_error_ = from.high_memory_usage_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResourceMonitorConfig_MemoryUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceMonitorConfig_MemoryUsage::CopyFrom(const ResourceMonitorConfig_MemoryUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ResourceMonitorConfig.MemoryUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceMonitorConfig_MemoryUsage::IsInitialized() const {
  return true;
}

void ResourceMonitorConfig_MemoryUsage::Swap(ResourceMonitorConfig_MemoryUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceMonitorConfig_MemoryUsage::InternalSwap(ResourceMonitorConfig_MemoryUsage* other) {
  using std::swap;
  process_dag_path_.Swap(&other->process_dag_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(high_memory_usage_warning_, other->high_memory_usage_warning_);
  swap(high_memory_usage_error_, other->high_memory_usage_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceMonitorConfig_MemoryUsage::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceMonitorConfig_DiskLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceMonitorConfig_DiskLoad::kHighDiskLoadWarningFieldNumber;
const int ResourceMonitorConfig_DiskLoad::kHighDiskLoadErrorFieldNumber;
const int ResourceMonitorConfig_DiskLoad::kDeviceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceMonitorConfig_DiskLoad::ResourceMonitorConfig_DiskLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_DiskLoad.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
}
ResourceMonitorConfig_DiskLoad::ResourceMonitorConfig_DiskLoad(const ResourceMonitorConfig_DiskLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  ::memcpy(&high_disk_load_warning_, &from.high_disk_load_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_disk_load_error_) -
    reinterpret_cast<char*>(&high_disk_load_warning_)) + sizeof(high_disk_load_error_));
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
}

void ResourceMonitorConfig_DiskLoad::SharedCtor() {
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&high_disk_load_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_disk_load_error_) -
      reinterpret_cast<char*>(&high_disk_load_warning_)) + sizeof(high_disk_load_error_));
}

ResourceMonitorConfig_DiskLoad::~ResourceMonitorConfig_DiskLoad() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  SharedDtor();
}

void ResourceMonitorConfig_DiskLoad::SharedDtor() {
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceMonitorConfig_DiskLoad::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceMonitorConfig_DiskLoad::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceMonitorConfig_DiskLoad& ResourceMonitorConfig_DiskLoad::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig_DiskLoad.base);
  return *internal_default_instance();
}


void ResourceMonitorConfig_DiskLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    device_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&high_disk_load_warning_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_disk_load_error_) -
        reinterpret_cast<char*>(&high_disk_load_warning_)) + sizeof(high_disk_load_error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceMonitorConfig_DiskLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 high_disk_load_warning = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_high_disk_load_warning();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_disk_load_warning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 high_disk_load_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_high_disk_load_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_disk_load_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.ResourceMonitorConfig.DiskLoad.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  return false;
#undef DO_
}

void ResourceMonitorConfig_DiskLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 high_disk_load_warning = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->high_disk_load_warning(), output);
  }

  // optional int32 high_disk_load_error = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->high_disk_load_error(), output);
  }

  // optional string device_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.DiskLoad.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
}

::google::protobuf::uint8* ResourceMonitorConfig_DiskLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 high_disk_load_warning = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->high_disk_load_warning(), target);
  }

  // optional int32 high_disk_load_error = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->high_disk_load_error(), target);
  }

  // optional string device_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.ResourceMonitorConfig.DiskLoad.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  return target;
}

size_t ResourceMonitorConfig_DiskLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string device_name = 3;
    if (has_device_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_name());
    }

    // optional int32 high_disk_load_warning = 1;
    if (has_high_disk_load_warning()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->high_disk_load_warning());
    }

    // optional int32 high_disk_load_error = 2;
    if (has_high_disk_load_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->high_disk_load_error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceMonitorConfig_DiskLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceMonitorConfig_DiskLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceMonitorConfig_DiskLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
    MergeFrom(*source);
  }
}

void ResourceMonitorConfig_DiskLoad::MergeFrom(const ResourceMonitorConfig_DiskLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_name();
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      high_disk_load_warning_ = from.high_disk_load_warning_;
    }
    if (cached_has_bits & 0x00000004u) {
      high_disk_load_error_ = from.high_disk_load_error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResourceMonitorConfig_DiskLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceMonitorConfig_DiskLoad::CopyFrom(const ResourceMonitorConfig_DiskLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ResourceMonitorConfig.DiskLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceMonitorConfig_DiskLoad::IsInitialized() const {
  return true;
}

void ResourceMonitorConfig_DiskLoad::Swap(ResourceMonitorConfig_DiskLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceMonitorConfig_DiskLoad::InternalSwap(ResourceMonitorConfig_DiskLoad* other) {
  using std::swap;
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(high_disk_load_warning_, other->high_disk_load_warning_);
  swap(high_disk_load_error_, other->high_disk_load_error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceMonitorConfig_DiskLoad::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceMonitorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceMonitorConfig::kDiskSpacesFieldNumber;
const int ResourceMonitorConfig::kCpuUsagesFieldNumber;
const int ResourceMonitorConfig::kMemoryUsagesFieldNumber;
const int ResourceMonitorConfig::kDiskLoadUsagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceMonitorConfig::ResourceMonitorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.ResourceMonitorConfig)
}
ResourceMonitorConfig::ResourceMonitorConfig(const ResourceMonitorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      disk_spaces_(from.disk_spaces_),
      cpu_usages_(from.cpu_usages_),
      memory_usages_(from.memory_usages_),
      disk_load_usages_(from.disk_load_usages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.ResourceMonitorConfig)
}

void ResourceMonitorConfig::SharedCtor() {
}

ResourceMonitorConfig::~ResourceMonitorConfig() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.ResourceMonitorConfig)
  SharedDtor();
}

void ResourceMonitorConfig::SharedDtor() {
}

void ResourceMonitorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceMonitorConfig::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceMonitorConfig& ResourceMonitorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_ResourceMonitorConfig.base);
  return *internal_default_instance();
}


void ResourceMonitorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.ResourceMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disk_spaces_.Clear();
  cpu_usages_.Clear();
  memory_usages_.Clear();
  disk_load_usages_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceMonitorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.ResourceMonitorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.dreamview.ResourceMonitorConfig.DiskSpace disk_spaces = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_disk_spaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.dreamview.ResourceMonitorConfig.CPUUsage cpu_usages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cpu_usages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.dreamview.ResourceMonitorConfig.MemoryUsage memory_usages = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_memory_usages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.dreamview.ResourceMonitorConfig.DiskLoad disk_load_usages = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_disk_load_usages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.ResourceMonitorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.ResourceMonitorConfig)
  return false;
#undef DO_
}

void ResourceMonitorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.ResourceMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.dreamview.ResourceMonitorConfig.DiskSpace disk_spaces = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disk_spaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->disk_spaces(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.CPUUsage cpu_usages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cpu_usages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->cpu_usages(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.MemoryUsage memory_usages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memory_usages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->memory_usages(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.DiskLoad disk_load_usages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disk_load_usages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->disk_load_usages(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.ResourceMonitorConfig)
}

::google::protobuf::uint8* ResourceMonitorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.ResourceMonitorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.dreamview.ResourceMonitorConfig.DiskSpace disk_spaces = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disk_spaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->disk_spaces(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.CPUUsage cpu_usages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cpu_usages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->cpu_usages(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.MemoryUsage memory_usages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memory_usages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->memory_usages(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.DiskLoad disk_load_usages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disk_load_usages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->disk_load_usages(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.ResourceMonitorConfig)
  return target;
}

size_t ResourceMonitorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.ResourceMonitorConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.dreamview.ResourceMonitorConfig.DiskSpace disk_spaces = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->disk_spaces_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->disk_spaces(static_cast<int>(i)));
    }
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.CPUUsage cpu_usages = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cpu_usages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cpu_usages(static_cast<int>(i)));
    }
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.MemoryUsage memory_usages = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->memory_usages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->memory_usages(static_cast<int>(i)));
    }
  }

  // repeated .apollo.dreamview.ResourceMonitorConfig.DiskLoad disk_load_usages = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->disk_load_usages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->disk_load_usages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceMonitorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.ResourceMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceMonitorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceMonitorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.ResourceMonitorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.ResourceMonitorConfig)
    MergeFrom(*source);
  }
}

void ResourceMonitorConfig::MergeFrom(const ResourceMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.ResourceMonitorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disk_spaces_.MergeFrom(from.disk_spaces_);
  cpu_usages_.MergeFrom(from.cpu_usages_);
  memory_usages_.MergeFrom(from.memory_usages_);
  disk_load_usages_.MergeFrom(from.disk_load_usages_);
}

void ResourceMonitorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.ResourceMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceMonitorConfig::CopyFrom(const ResourceMonitorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.ResourceMonitorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceMonitorConfig::IsInitialized() const {
  return true;
}

void ResourceMonitorConfig::Swap(ResourceMonitorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceMonitorConfig::InternalSwap(ResourceMonitorConfig* other) {
  using std::swap;
  CastToBase(&disk_spaces_)->InternalSwap(CastToBase(&other->disk_spaces_));
  CastToBase(&cpu_usages_)->InternalSwap(CastToBase(&other->cpu_usages_));
  CastToBase(&memory_usages_)->InternalSwap(CastToBase(&other->memory_usages_));
  CastToBase(&disk_load_usages_)->InternalSwap(CastToBase(&other->disk_load_usages_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceMonitorConfig::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonitoredComponent::InitAsDefaultInstance() {
  ::apollo::dreamview::_MonitoredComponent_default_instance_._instance.get_mutable()->process_ = const_cast< ::apollo::dreamview::ProcessMonitorConfig*>(
      ::apollo::dreamview::ProcessMonitorConfig::internal_default_instance());
  ::apollo::dreamview::_MonitoredComponent_default_instance_._instance.get_mutable()->channel_ = const_cast< ::apollo::dreamview::ChannelMonitorConfig*>(
      ::apollo::dreamview::ChannelMonitorConfig::internal_default_instance());
  ::apollo::dreamview::_MonitoredComponent_default_instance_._instance.get_mutable()->resource_ = const_cast< ::apollo::dreamview::ResourceMonitorConfig*>(
      ::apollo::dreamview::ResourceMonitorConfig::internal_default_instance());
  ::apollo::dreamview::_MonitoredComponent_default_instance_._instance.get_mutable()->module_ = const_cast< ::apollo::dreamview::ModuleMonitorConfig*>(
      ::apollo::dreamview::ModuleMonitorConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoredComponent::kProcessFieldNumber;
const int MonitoredComponent::kChannelFieldNumber;
const int MonitoredComponent::kResourceFieldNumber;
const int MonitoredComponent::kRequiredForSafetyFieldNumber;
const int MonitoredComponent::kModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoredComponent::MonitoredComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_MonitoredComponent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.MonitoredComponent)
}
MonitoredComponent::MonitoredComponent(const MonitoredComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_process()) {
    process_ = new ::apollo::dreamview::ProcessMonitorConfig(*from.process_);
  } else {
    process_ = NULL;
  }
  if (from.has_channel()) {
    channel_ = new ::apollo::dreamview::ChannelMonitorConfig(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_resource()) {
    resource_ = new ::apollo::dreamview::ResourceMonitorConfig(*from.resource_);
  } else {
    resource_ = NULL;
  }
  if (from.has_module()) {
    module_ = new ::apollo::dreamview::ModuleMonitorConfig(*from.module_);
  } else {
    module_ = NULL;
  }
  required_for_safety_ = from.required_for_safety_;
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.MonitoredComponent)
}

void MonitoredComponent::SharedCtor() {
  ::memset(&process_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&process_)) + sizeof(module_));
  required_for_safety_ = true;
}

MonitoredComponent::~MonitoredComponent() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.MonitoredComponent)
  SharedDtor();
}

void MonitoredComponent::SharedDtor() {
  if (this != internal_default_instance()) delete process_;
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete resource_;
  if (this != internal_default_instance()) delete module_;
}

void MonitoredComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonitoredComponent::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitoredComponent& MonitoredComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_MonitoredComponent.base);
  return *internal_default_instance();
}


void MonitoredComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.MonitoredComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(process_ != NULL);
      process_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(channel_ != NULL);
      channel_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(resource_ != NULL);
      resource_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(module_ != NULL);
      module_->Clear();
    }
    required_for_safety_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitoredComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.MonitoredComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.dreamview.ProcessMonitorConfig process = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.dreamview.ChannelMonitorConfig channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.dreamview.ResourceMonitorConfig resource = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool required_for_safety = 4 [default = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_required_for_safety();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &required_for_safety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.dreamview.ModuleMonitorConfig module = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_module()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.MonitoredComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.MonitoredComponent)
  return false;
#undef DO_
}

void MonitoredComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.MonitoredComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.dreamview.ProcessMonitorConfig process = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_process(), output);
  }

  // optional .apollo.dreamview.ChannelMonitorConfig channel = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_channel(), output);
  }

  // optional .apollo.dreamview.ResourceMonitorConfig resource = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_resource(), output);
  }

  // optional bool required_for_safety = 4 [default = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->required_for_safety(), output);
  }

  // optional .apollo.dreamview.ModuleMonitorConfig module = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_module(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.MonitoredComponent)
}

::google::protobuf::uint8* MonitoredComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.MonitoredComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.dreamview.ProcessMonitorConfig process = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_process(), deterministic, target);
  }

  // optional .apollo.dreamview.ChannelMonitorConfig channel = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_channel(), deterministic, target);
  }

  // optional .apollo.dreamview.ResourceMonitorConfig resource = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_resource(), deterministic, target);
  }

  // optional bool required_for_safety = 4 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->required_for_safety(), target);
  }

  // optional .apollo.dreamview.ModuleMonitorConfig module = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_module(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.MonitoredComponent)
  return target;
}

size_t MonitoredComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.MonitoredComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .apollo.dreamview.ProcessMonitorConfig process = 1;
    if (has_process()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *process_);
    }

    // optional .apollo.dreamview.ChannelMonitorConfig channel = 2;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *channel_);
    }

    // optional .apollo.dreamview.ResourceMonitorConfig resource = 3;
    if (has_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_);
    }

    // optional .apollo.dreamview.ModuleMonitorConfig module = 5;
    if (has_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *module_);
    }

    // optional bool required_for_safety = 4 [default = true];
    if (has_required_for_safety()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.MonitoredComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitoredComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitoredComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.MonitoredComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.MonitoredComponent)
    MergeFrom(*source);
  }
}

void MonitoredComponent::MergeFrom(const MonitoredComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.MonitoredComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_process()->::apollo::dreamview::ProcessMonitorConfig::MergeFrom(from.process());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_channel()->::apollo::dreamview::ChannelMonitorConfig::MergeFrom(from.channel());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_resource()->::apollo::dreamview::ResourceMonitorConfig::MergeFrom(from.resource());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_module()->::apollo::dreamview::ModuleMonitorConfig::MergeFrom(from.module());
    }
    if (cached_has_bits & 0x00000010u) {
      required_for_safety_ = from.required_for_safety_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MonitoredComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.MonitoredComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoredComponent::CopyFrom(const MonitoredComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.MonitoredComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredComponent::IsInitialized() const {
  return true;
}

void MonitoredComponent::Swap(MonitoredComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitoredComponent::InternalSwap(MonitoredComponent* other) {
  using std::swap;
  swap(process_, other->process_);
  swap(channel_, other->channel_);
  swap(resource_, other->resource_);
  swap(module_, other->module_);
  swap(required_for_safety_, other->required_for_safety_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonitoredComponent::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Module::InitAsDefaultInstance() {
  ::apollo::dreamview::_Module_default_instance_._instance.get_mutable()->process_monitor_config_ = const_cast< ::apollo::dreamview::ProcessMonitorConfig*>(
      ::apollo::dreamview::ProcessMonitorConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Module::kStartCommandFieldNumber;
const int Module::kStopCommandFieldNumber;
const int Module::kProcessMonitorConfigFieldNumber;
const int Module::kRequiredForSafetyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Module::Module()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_Module.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.Module)
}
Module::Module(const Module& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_start_command()) {
    start_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_command_);
  }
  stop_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stop_command()) {
    stop_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stop_command_);
  }
  if (from.has_process_monitor_config()) {
    process_monitor_config_ = new ::apollo::dreamview::ProcessMonitorConfig(*from.process_monitor_config_);
  } else {
    process_monitor_config_ = NULL;
  }
  required_for_safety_ = from.required_for_safety_;
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.Module)
}

void Module::SharedCtor() {
  start_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stop_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  process_monitor_config_ = NULL;
  required_for_safety_ = true;
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.Module)
  SharedDtor();
}

void Module::SharedDtor() {
  start_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stop_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete process_monitor_config_;
}

void Module::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Module& Module::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_Module.base);
  return *internal_default_instance();
}


void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.Module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      start_command_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      stop_command_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(process_monitor_config_ != NULL);
      process_monitor_config_->Clear();
    }
    required_for_safety_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.Module)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string start_command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->start_command().data(), static_cast<int>(this->start_command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.Module.start_command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string stop_command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stop_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stop_command().data(), static_cast<int>(this->stop_command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.Module.stop_command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.dreamview.ProcessMonitorConfig process_monitor_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process_monitor_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool required_for_safety = 4 [default = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_required_for_safety();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &required_for_safety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.Module)
  return false;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.Module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string start_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_command().data(), static_cast<int>(this->start_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.Module.start_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->start_command(), output);
  }

  // optional string stop_command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stop_command().data(), static_cast<int>(this->stop_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.Module.stop_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stop_command(), output);
  }

  // optional .apollo.dreamview.ProcessMonitorConfig process_monitor_config = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_process_monitor_config(), output);
  }

  // optional bool required_for_safety = 4 [default = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->required_for_safety(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.Module)
}

::google::protobuf::uint8* Module::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.Module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string start_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_command().data(), static_cast<int>(this->start_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.Module.start_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->start_command(), target);
  }

  // optional string stop_command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stop_command().data(), static_cast<int>(this->stop_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.Module.stop_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stop_command(), target);
  }

  // optional .apollo.dreamview.ProcessMonitorConfig process_monitor_config = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_process_monitor_config(), deterministic, target);
  }

  // optional bool required_for_safety = 4 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->required_for_safety(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.Module)
  return target;
}

size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.Module)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string start_command = 1;
    if (has_start_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->start_command());
    }

    // optional string stop_command = 2;
    if (has_stop_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stop_command());
    }

    // optional .apollo.dreamview.ProcessMonitorConfig process_monitor_config = 3;
    if (has_process_monitor_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *process_monitor_config_);
    }

    // optional bool required_for_safety = 4 [default = true];
    if (has_required_for_safety()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.Module)
  GOOGLE_DCHECK_NE(&from, this);
  const Module* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Module>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.Module)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.Module)
    MergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.Module)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_start_command();
      start_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_command_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_stop_command();
      stop_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stop_command_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_process_monitor_config()->::apollo::dreamview::ProcessMonitorConfig::MergeFrom(from.process_monitor_config());
    }
    if (cached_has_bits & 0x00000008u) {
      required_for_safety_ = from.required_for_safety_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  return true;
}

void Module::Swap(Module* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Module::InternalSwap(Module* other) {
  using std::swap;
  start_command_.Swap(&other->start_command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stop_command_.Swap(&other->stop_command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(process_monitor_config_, other->process_monitor_config_);
  swap(required_for_safety_, other->required_for_safety_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CyberModule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CyberModule::kDagFilesFieldNumber;
const int CyberModule::kRequiredForSafetyFieldNumber;
const int CyberModule::kProcessGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CyberModule::CyberModule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_CyberModule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.CyberModule)
}
CyberModule::CyberModule(const CyberModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dag_files_(from.dag_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  process_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_process_group()) {
    process_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_group_);
  }
  required_for_safety_ = from.required_for_safety_;
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.CyberModule)
}

void CyberModule::SharedCtor() {
  process_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_for_safety_ = true;
}

CyberModule::~CyberModule() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.CyberModule)
  SharedDtor();
}

void CyberModule::SharedDtor() {
  process_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CyberModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CyberModule::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CyberModule& CyberModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_CyberModule.base);
  return *internal_default_instance();
}


void CyberModule::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.CyberModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dag_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      process_group_.ClearNonDefaultToEmptyNoArena();
    }
    required_for_safety_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CyberModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.CyberModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string dag_files = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dag_files()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dag_files(this->dag_files_size() - 1).data(),
            static_cast<int>(this->dag_files(this->dag_files_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.CyberModule.dag_files");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool required_for_safety = 2 [default = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_required_for_safety();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &required_for_safety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string process_group = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_process_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->process_group().data(), static_cast<int>(this->process_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.CyberModule.process_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.CyberModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.CyberModule)
  return false;
#undef DO_
}

void CyberModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.CyberModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dag_files = 1;
  for (int i = 0, n = this->dag_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dag_files(i).data(), static_cast<int>(this->dag_files(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.CyberModule.dag_files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->dag_files(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool required_for_safety = 2 [default = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->required_for_safety(), output);
  }

  // optional string process_group = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_group().data(), static_cast<int>(this->process_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.CyberModule.process_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->process_group(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.CyberModule)
}

::google::protobuf::uint8* CyberModule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.CyberModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dag_files = 1;
  for (int i = 0, n = this->dag_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dag_files(i).data(), static_cast<int>(this->dag_files(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.CyberModule.dag_files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->dag_files(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool required_for_safety = 2 [default = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->required_for_safety(), target);
  }

  // optional string process_group = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_group().data(), static_cast<int>(this->process_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.dreamview.CyberModule.process_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->process_group(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.CyberModule)
  return target;
}

size_t CyberModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.CyberModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string dag_files = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dag_files_size());
  for (int i = 0, n = this->dag_files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dag_files(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string process_group = 3;
    if (has_process_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->process_group());
    }

    // optional bool required_for_safety = 2 [default = true];
    if (has_required_for_safety()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CyberModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.CyberModule)
  GOOGLE_DCHECK_NE(&from, this);
  const CyberModule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CyberModule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.CyberModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.CyberModule)
    MergeFrom(*source);
  }
}

void CyberModule::MergeFrom(const CyberModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.CyberModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dag_files_.MergeFrom(from.dag_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_process_group();
      process_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_group_);
    }
    if (cached_has_bits & 0x00000002u) {
      required_for_safety_ = from.required_for_safety_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CyberModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.CyberModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CyberModule::CopyFrom(const CyberModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.CyberModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CyberModule::IsInitialized() const {
  return true;
}

void CyberModule::Swap(CyberModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CyberModule::InternalSwap(CyberModule* other) {
  using std::swap;
  dag_files_.InternalSwap(CastToBase(&other->dag_files_));
  process_group_.Swap(&other->process_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(required_for_safety_, other->required_for_safety_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CyberModule::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

HMIMode_CyberModulesEntry_DoNotUse::HMIMode_CyberModulesEntry_DoNotUse() {}
HMIMode_CyberModulesEntry_DoNotUse::HMIMode_CyberModulesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIMode_CyberModulesEntry_DoNotUse::MergeFrom(const HMIMode_CyberModulesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIMode_CyberModulesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[11];
}
void HMIMode_CyberModulesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HMIMode_ModulesEntry_DoNotUse::HMIMode_ModulesEntry_DoNotUse() {}
HMIMode_ModulesEntry_DoNotUse::HMIMode_ModulesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIMode_ModulesEntry_DoNotUse::MergeFrom(const HMIMode_ModulesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIMode_ModulesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[12];
}
void HMIMode_ModulesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HMIMode_MonitoredComponentsEntry_DoNotUse::HMIMode_MonitoredComponentsEntry_DoNotUse() {}
HMIMode_MonitoredComponentsEntry_DoNotUse::HMIMode_MonitoredComponentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIMode_MonitoredComponentsEntry_DoNotUse::MergeFrom(const HMIMode_MonitoredComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIMode_MonitoredComponentsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[13];
}
void HMIMode_MonitoredComponentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HMIMode_OtherComponentsEntry_DoNotUse::HMIMode_OtherComponentsEntry_DoNotUse() {}
HMIMode_OtherComponentsEntry_DoNotUse::HMIMode_OtherComponentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HMIMode_OtherComponentsEntry_DoNotUse::MergeFrom(const HMIMode_OtherComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HMIMode_OtherComponentsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[14];
}
void HMIMode_OtherComponentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HMIMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HMIMode::kCyberModulesFieldNumber;
const int HMIMode::kModulesFieldNumber;
const int HMIMode::kMonitoredComponentsFieldNumber;
const int HMIMode::kOtherComponentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HMIMode::HMIMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_HMIMode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.dreamview.HMIMode)
}
HMIMode::HMIMode(const HMIMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cyber_modules_.MergeFrom(from.cyber_modules_);
  modules_.MergeFrom(from.modules_);
  monitored_components_.MergeFrom(from.monitored_components_);
  other_components_.MergeFrom(from.other_components_);
  // @@protoc_insertion_point(copy_constructor:apollo.dreamview.HMIMode)
}

void HMIMode::SharedCtor() {
}

HMIMode::~HMIMode() {
  // @@protoc_insertion_point(destructor:apollo.dreamview.HMIMode)
  SharedDtor();
}

void HMIMode::SharedDtor() {
}

void HMIMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HMIMode::descriptor() {
  ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HMIMode& HMIMode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::scc_info_HMIMode.base);
  return *internal_default_instance();
}


void HMIMode::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.dreamview.HMIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cyber_modules_.Clear();
  modules_.Clear();
  monitored_components_.Clear();
  other_components_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HMIMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.dreamview.HMIMode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .apollo.dreamview.CyberModule> cyber_modules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          HMIMode_CyberModulesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIMode_CyberModulesEntry_DoNotUse,
              ::std::string, ::apollo::dreamview::CyberModule,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule > > parser(&cyber_modules_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIMode.CyberModulesEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .apollo.dreamview.Module> modules = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          HMIMode_ModulesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIMode_ModulesEntry_DoNotUse,
              ::std::string, ::apollo::dreamview::Module,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module > > parser(&modules_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIMode.ModulesEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .apollo.dreamview.MonitoredComponent> monitored_components = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          HMIMode_MonitoredComponentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIMode_MonitoredComponentsEntry_DoNotUse,
              ::std::string, ::apollo::dreamview::MonitoredComponent,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent > > parser(&monitored_components_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIMode.MonitoredComponentsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .apollo.dreamview.ProcessMonitorConfig> other_components = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          HMIMode_OtherComponentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HMIMode_OtherComponentsEntry_DoNotUse,
              ::std::string, ::apollo::dreamview::ProcessMonitorConfig,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig > > parser(&other_components_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.dreamview.HMIMode.OtherComponentsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.dreamview.HMIMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.dreamview.HMIMode)
  return false;
#undef DO_
}

void HMIMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.dreamview.HMIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .apollo.dreamview.CyberModule> cyber_modules = 1;
  if (!this->cyber_modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.CyberModulesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->cyber_modules().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cyber_modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_iterator
          it = this->cyber_modules().begin();
          it != this->cyber_modules().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_CyberModulesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cyber_modules_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_CyberModulesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_iterator
          it = this->cyber_modules().begin();
          it != this->cyber_modules().end(); ++it) {
        entry.reset(cyber_modules_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.dreamview.Module> modules = 2;
  if (!this->modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.ModulesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->modules().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_ModulesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(modules_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_ModulesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it) {
        entry.reset(modules_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.dreamview.MonitoredComponent> monitored_components = 3;
  if (!this->monitored_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.MonitoredComponentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->monitored_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->monitored_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_MonitoredComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monitored_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_MonitoredComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it) {
        entry.reset(monitored_components_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.dreamview.ProcessMonitorConfig> other_components = 4;
  if (!this->other_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.OtherComponentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->other_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->other_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_OtherComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(other_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_OtherComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it) {
        entry.reset(other_components_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.dreamview.HMIMode)
}

::google::protobuf::uint8* HMIMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.dreamview.HMIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .apollo.dreamview.CyberModule> cyber_modules = 1;
  if (!this->cyber_modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.CyberModulesEntry.key");
      }
    };

    if (deterministic &&
        this->cyber_modules().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cyber_modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_iterator
          it = this->cyber_modules().begin();
          it != this->cyber_modules().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_CyberModulesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cyber_modules_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_CyberModulesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_iterator
          it = this->cyber_modules().begin();
          it != this->cyber_modules().end(); ++it) {
        entry.reset(cyber_modules_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.dreamview.Module> modules = 2;
  if (!this->modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.ModulesEntry.key");
      }
    };

    if (deterministic &&
        this->modules().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_ModulesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(modules_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_ModulesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it) {
        entry.reset(modules_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.dreamview.MonitoredComponent> monitored_components = 3;
  if (!this->monitored_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.MonitoredComponentsEntry.key");
      }
    };

    if (deterministic &&
        this->monitored_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->monitored_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_MonitoredComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monitored_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_MonitoredComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_iterator
          it = this->monitored_components().begin();
          it != this->monitored_components().end(); ++it) {
        entry.reset(monitored_components_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.dreamview.ProcessMonitorConfig> other_components = 4;
  if (!this->other_components().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.dreamview.HMIMode.OtherComponentsEntry.key");
      }
    };

    if (deterministic &&
        this->other_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->other_components().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HMIMode_OtherComponentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(other_components_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HMIMode_OtherComponentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_iterator
          it = this->other_components().begin();
          it != this->other_components().end(); ++it) {
        entry.reset(other_components_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.dreamview.HMIMode)
  return target;
}

size_t HMIMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.dreamview.HMIMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // map<string, .apollo.dreamview.CyberModule> cyber_modules = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cyber_modules_size());
  {
    ::std::unique_ptr<HMIMode_CyberModulesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::CyberModule >::const_iterator
        it = this->cyber_modules().begin();
        it != this->cyber_modules().end(); ++it) {
      entry.reset(cyber_modules_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .apollo.dreamview.Module> modules = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->modules_size());
  {
    ::std::unique_ptr<HMIMode_ModulesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::Module >::const_iterator
        it = this->modules().begin();
        it != this->modules().end(); ++it) {
      entry.reset(modules_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .apollo.dreamview.MonitoredComponent> monitored_components = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->monitored_components_size());
  {
    ::std::unique_ptr<HMIMode_MonitoredComponentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::MonitoredComponent >::const_iterator
        it = this->monitored_components().begin();
        it != this->monitored_components().end(); ++it) {
      entry.reset(monitored_components_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .apollo.dreamview.ProcessMonitorConfig> other_components = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->other_components_size());
  {
    ::std::unique_ptr<HMIMode_OtherComponentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::dreamview::ProcessMonitorConfig >::const_iterator
        it = this->other_components().begin();
        it != this->other_components().end(); ++it) {
      entry.reset(other_components_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HMIMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.dreamview.HMIMode)
  GOOGLE_DCHECK_NE(&from, this);
  const HMIMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HMIMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.dreamview.HMIMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.dreamview.HMIMode)
    MergeFrom(*source);
  }
}

void HMIMode::MergeFrom(const HMIMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.dreamview.HMIMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cyber_modules_.MergeFrom(from.cyber_modules_);
  modules_.MergeFrom(from.modules_);
  monitored_components_.MergeFrom(from.monitored_components_);
  other_components_.MergeFrom(from.other_components_);
}

void HMIMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.dreamview.HMIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HMIMode::CopyFrom(const HMIMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.dreamview.HMIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HMIMode::IsInitialized() const {
  return true;
}

void HMIMode::Swap(HMIMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HMIMode::InternalSwap(HMIMode* other) {
  using std::swap;
  cyber_modules_.Swap(&other->cyber_modules_);
  modules_.Swap(&other->modules_);
  monitored_components_.Swap(&other->monitored_components_);
  other_components_.Swap(&other->other_components_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HMIMode::GetMetadata() const {
  protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdreamview_2fproto_2fhmi_5fmode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dreamview
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ProcessMonitorConfig* Arena::CreateMaybeMessage< ::apollo::dreamview::ProcessMonitorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ProcessMonitorConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ModuleMonitorConfig* Arena::CreateMaybeMessage< ::apollo::dreamview::ModuleMonitorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ModuleMonitorConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ChannelMonitorConfig* Arena::CreateMaybeMessage< ::apollo::dreamview::ChannelMonitorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ChannelMonitorConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ResourceMonitorConfig_DiskSpace* Arena::CreateMaybeMessage< ::apollo::dreamview::ResourceMonitorConfig_DiskSpace >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ResourceMonitorConfig_DiskSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ResourceMonitorConfig_CPUUsage* Arena::CreateMaybeMessage< ::apollo::dreamview::ResourceMonitorConfig_CPUUsage >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ResourceMonitorConfig_CPUUsage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ResourceMonitorConfig_MemoryUsage* Arena::CreateMaybeMessage< ::apollo::dreamview::ResourceMonitorConfig_MemoryUsage >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ResourceMonitorConfig_MemoryUsage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ResourceMonitorConfig_DiskLoad* Arena::CreateMaybeMessage< ::apollo::dreamview::ResourceMonitorConfig_DiskLoad >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ResourceMonitorConfig_DiskLoad >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::ResourceMonitorConfig* Arena::CreateMaybeMessage< ::apollo::dreamview::ResourceMonitorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::ResourceMonitorConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::MonitoredComponent* Arena::CreateMaybeMessage< ::apollo::dreamview::MonitoredComponent >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::MonitoredComponent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::Module* Arena::CreateMaybeMessage< ::apollo::dreamview::Module >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::Module >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::CyberModule* Arena::CreateMaybeMessage< ::apollo::dreamview::CyberModule >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::CyberModule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIMode_CyberModulesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIMode_ModulesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIMode_MonitoredComponentsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIMode_OtherComponentsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::dreamview::HMIMode* Arena::CreateMaybeMessage< ::apollo::dreamview::HMIMode >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::dreamview::HMIMode >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

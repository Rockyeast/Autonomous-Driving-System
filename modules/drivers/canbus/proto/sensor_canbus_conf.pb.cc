// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/drivers/canbus/proto/sensor_canbus_conf.proto

#include "modules/drivers/canbus/proto/sensor_canbus_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fdrivers_2fcanbus_2fproto_2fcan_5fcard_5fparameter_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdrivers_2fcanbus_2fproto_2fcan_5fcard_5fparameter_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CANCardParameter;
}  // namespace protobuf_modules_2fdrivers_2fcanbus_2fproto_2fcan_5fcard_5fparameter_2eproto
namespace apollo {
namespace drivers {
namespace canbus {
class SensorCanbusConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorCanbusConf>
      _instance;
} _SensorCanbusConf_default_instance_;
}  // namespace canbus
}  // namespace drivers
}  // namespace apollo
namespace protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto {
static void InitDefaultsSensorCanbusConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::drivers::canbus::_SensorCanbusConf_default_instance_;
    new (ptr) ::apollo::drivers::canbus::SensorCanbusConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::drivers::canbus::SensorCanbusConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SensorCanbusConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSensorCanbusConf}, {
      &protobuf_modules_2fdrivers_2fcanbus_2fproto_2fcan_5fcard_5fparameter_2eproto::scc_info_CANCardParameter.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SensorCanbusConf.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::drivers::canbus::SensorCanbusConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::drivers::canbus::SensorCanbusConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::drivers::canbus::SensorCanbusConf, can_card_parameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::drivers::canbus::SensorCanbusConf, enable_debug_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::drivers::canbus::SensorCanbusConf, enable_receiver_log_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::apollo::drivers::canbus::SensorCanbusConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::drivers::canbus::_SensorCanbusConf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/drivers/canbus/proto/sensor_canbus_conf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5modules/drivers/canbus/proto/sensor_ca"
      "nbus_conf.proto\022\025apollo.drivers.canbus\0325"
      "modules/drivers/canbus/proto/can_card_pa"
      "rameter.proto\"\235\001\n\020SensorCanbusConf\022C\n\022ca"
      "n_card_parameter\030\001 \001(\0132\'.apollo.drivers."
      "canbus.CANCardParameter\022 \n\021enable_debug_"
      "mode\030\002 \001(\010:\005false\022\"\n\023enable_receiver_log"
      "\030\003 \001(\010:\005false"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 293);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/drivers/canbus/proto/sensor_canbus_conf.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fdrivers_2fcanbus_2fproto_2fcan_5fcard_5fparameter_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto
namespace apollo {
namespace drivers {
namespace canbus {

// ===================================================================

void SensorCanbusConf::InitAsDefaultInstance() {
  ::apollo::drivers::canbus::_SensorCanbusConf_default_instance_._instance.get_mutable()->can_card_parameter_ = const_cast< ::apollo::drivers::canbus::CANCardParameter*>(
      ::apollo::drivers::canbus::CANCardParameter::internal_default_instance());
}
void SensorCanbusConf::clear_can_card_parameter() {
  if (can_card_parameter_ != NULL) can_card_parameter_->Clear();
  clear_has_can_card_parameter();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorCanbusConf::kCanCardParameterFieldNumber;
const int SensorCanbusConf::kEnableDebugModeFieldNumber;
const int SensorCanbusConf::kEnableReceiverLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorCanbusConf::SensorCanbusConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::scc_info_SensorCanbusConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.canbus.SensorCanbusConf)
}
SensorCanbusConf::SensorCanbusConf(const SensorCanbusConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_can_card_parameter()) {
    can_card_parameter_ = new ::apollo::drivers::canbus::CANCardParameter(*from.can_card_parameter_);
  } else {
    can_card_parameter_ = NULL;
  }
  ::memcpy(&enable_debug_mode_, &from.enable_debug_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_receiver_log_) -
    reinterpret_cast<char*>(&enable_debug_mode_)) + sizeof(enable_receiver_log_));
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.canbus.SensorCanbusConf)
}

void SensorCanbusConf::SharedCtor() {
  ::memset(&can_card_parameter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_receiver_log_) -
      reinterpret_cast<char*>(&can_card_parameter_)) + sizeof(enable_receiver_log_));
}

SensorCanbusConf::~SensorCanbusConf() {
  // @@protoc_insertion_point(destructor:apollo.drivers.canbus.SensorCanbusConf)
  SharedDtor();
}

void SensorCanbusConf::SharedDtor() {
  if (this != internal_default_instance()) delete can_card_parameter_;
}

void SensorCanbusConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SensorCanbusConf::descriptor() {
  ::protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorCanbusConf& SensorCanbusConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::scc_info_SensorCanbusConf.base);
  return *internal_default_instance();
}


void SensorCanbusConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.drivers.canbus.SensorCanbusConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(can_card_parameter_ != NULL);
    can_card_parameter_->Clear();
  }
  ::memset(&enable_debug_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_receiver_log_) -
      reinterpret_cast<char*>(&enable_debug_mode_)) + sizeof(enable_receiver_log_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SensorCanbusConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.canbus.SensorCanbusConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_can_card_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_debug_mode = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_enable_debug_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_debug_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_receiver_log = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_enable_receiver_log();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_receiver_log_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.canbus.SensorCanbusConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.canbus.SensorCanbusConf)
  return false;
#undef DO_
}

void SensorCanbusConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.canbus.SensorCanbusConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_can_card_parameter(), output);
  }

  // optional bool enable_debug_mode = 2 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable_debug_mode(), output);
  }

  // optional bool enable_receiver_log = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable_receiver_log(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.canbus.SensorCanbusConf)
}

::google::protobuf::uint8* SensorCanbusConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.canbus.SensorCanbusConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_can_card_parameter(), deterministic, target);
  }

  // optional bool enable_debug_mode = 2 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable_debug_mode(), target);
  }

  // optional bool enable_receiver_log = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable_receiver_log(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.canbus.SensorCanbusConf)
  return target;
}

size_t SensorCanbusConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.drivers.canbus.SensorCanbusConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
    if (has_can_card_parameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *can_card_parameter_);
    }

    // optional bool enable_debug_mode = 2 [default = false];
    if (has_enable_debug_mode()) {
      total_size += 1 + 1;
    }

    // optional bool enable_receiver_log = 3 [default = false];
    if (has_enable_receiver_log()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SensorCanbusConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.drivers.canbus.SensorCanbusConf)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorCanbusConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorCanbusConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.drivers.canbus.SensorCanbusConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.drivers.canbus.SensorCanbusConf)
    MergeFrom(*source);
  }
}

void SensorCanbusConf::MergeFrom(const SensorCanbusConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.drivers.canbus.SensorCanbusConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_can_card_parameter()->::apollo::drivers::canbus::CANCardParameter::MergeFrom(from.can_card_parameter());
    }
    if (cached_has_bits & 0x00000002u) {
      enable_debug_mode_ = from.enable_debug_mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      enable_receiver_log_ = from.enable_receiver_log_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SensorCanbusConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.drivers.canbus.SensorCanbusConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorCanbusConf::CopyFrom(const SensorCanbusConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.drivers.canbus.SensorCanbusConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorCanbusConf::IsInitialized() const {
  return true;
}

void SensorCanbusConf::Swap(SensorCanbusConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorCanbusConf::InternalSwap(SensorCanbusConf* other) {
  using std::swap;
  swap(can_card_parameter_, other->can_card_parameter_);
  swap(enable_debug_mode_, other->enable_debug_mode_);
  swap(enable_receiver_log_, other->enable_receiver_log_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SensorCanbusConf::GetMetadata() const {
  protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace drivers
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::drivers::canbus::SensorCanbusConf* Arena::CreateMaybeMessage< ::apollo::drivers::canbus::SensorCanbusConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::drivers::canbus::SensorCanbusConf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

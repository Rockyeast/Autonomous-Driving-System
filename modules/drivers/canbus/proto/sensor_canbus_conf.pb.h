// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/drivers/canbus/proto/sensor_canbus_conf.proto

#ifndef PROTOBUF_INCLUDED_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto
#define PROTOBUF_INCLUDED_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/drivers/canbus/proto/can_card_parameter.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto 

namespace protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto
namespace apollo {
namespace drivers {
namespace canbus {
class SensorCanbusConf;
class SensorCanbusConfDefaultTypeInternal;
extern SensorCanbusConfDefaultTypeInternal _SensorCanbusConf_default_instance_;
}  // namespace canbus
}  // namespace drivers
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::drivers::canbus::SensorCanbusConf* Arena::CreateMaybeMessage<::apollo::drivers::canbus::SensorCanbusConf>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace drivers {
namespace canbus {

// ===================================================================

class SensorCanbusConf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.drivers.canbus.SensorCanbusConf) */ {
 public:
  SensorCanbusConf();
  virtual ~SensorCanbusConf();

  SensorCanbusConf(const SensorCanbusConf& from);

  inline SensorCanbusConf& operator=(const SensorCanbusConf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorCanbusConf(SensorCanbusConf&& from) noexcept
    : SensorCanbusConf() {
    *this = ::std::move(from);
  }

  inline SensorCanbusConf& operator=(SensorCanbusConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorCanbusConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorCanbusConf* internal_default_instance() {
    return reinterpret_cast<const SensorCanbusConf*>(
               &_SensorCanbusConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SensorCanbusConf* other);
  friend void swap(SensorCanbusConf& a, SensorCanbusConf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorCanbusConf* New() const final {
    return CreateMaybeMessage<SensorCanbusConf>(NULL);
  }

  SensorCanbusConf* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SensorCanbusConf>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SensorCanbusConf& from);
  void MergeFrom(const SensorCanbusConf& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SensorCanbusConf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
  bool has_can_card_parameter() const;
  void clear_can_card_parameter();
  static const int kCanCardParameterFieldNumber = 1;
  private:
  const ::apollo::drivers::canbus::CANCardParameter& _internal_can_card_parameter() const;
  public:
  const ::apollo::drivers::canbus::CANCardParameter& can_card_parameter() const;
  ::apollo::drivers::canbus::CANCardParameter* release_can_card_parameter();
  ::apollo::drivers::canbus::CANCardParameter* mutable_can_card_parameter();
  void set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter);

  // optional bool enable_debug_mode = 2 [default = false];
  bool has_enable_debug_mode() const;
  void clear_enable_debug_mode();
  static const int kEnableDebugModeFieldNumber = 2;
  bool enable_debug_mode() const;
  void set_enable_debug_mode(bool value);

  // optional bool enable_receiver_log = 3 [default = false];
  bool has_enable_receiver_log() const;
  void clear_enable_receiver_log();
  static const int kEnableReceiverLogFieldNumber = 3;
  bool enable_receiver_log() const;
  void set_enable_receiver_log(bool value);

  // @@protoc_insertion_point(class_scope:apollo.drivers.canbus.SensorCanbusConf)
 private:
  void set_has_can_card_parameter();
  void clear_has_can_card_parameter();
  void set_has_enable_debug_mode();
  void clear_has_enable_debug_mode();
  void set_has_enable_receiver_log();
  void clear_has_enable_receiver_log();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::apollo::drivers::canbus::CANCardParameter* can_card_parameter_;
  bool enable_debug_mode_;
  bool enable_receiver_log_;
  friend struct ::protobuf_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SensorCanbusConf

// optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
inline bool SensorCanbusConf::has_can_card_parameter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SensorCanbusConf::set_has_can_card_parameter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SensorCanbusConf::clear_has_can_card_parameter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::apollo::drivers::canbus::CANCardParameter& SensorCanbusConf::_internal_can_card_parameter() const {
  return *can_card_parameter_;
}
inline const ::apollo::drivers::canbus::CANCardParameter& SensorCanbusConf::can_card_parameter() const {
  const ::apollo::drivers::canbus::CANCardParameter* p = can_card_parameter_;
  // @@protoc_insertion_point(field_get:apollo.drivers.canbus.SensorCanbusConf.can_card_parameter)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::drivers::canbus::CANCardParameter*>(
      &::apollo::drivers::canbus::_CANCardParameter_default_instance_);
}
inline ::apollo::drivers::canbus::CANCardParameter* SensorCanbusConf::release_can_card_parameter() {
  // @@protoc_insertion_point(field_release:apollo.drivers.canbus.SensorCanbusConf.can_card_parameter)
  clear_has_can_card_parameter();
  ::apollo::drivers::canbus::CANCardParameter* temp = can_card_parameter_;
  can_card_parameter_ = NULL;
  return temp;
}
inline ::apollo::drivers::canbus::CANCardParameter* SensorCanbusConf::mutable_can_card_parameter() {
  set_has_can_card_parameter();
  if (can_card_parameter_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::drivers::canbus::CANCardParameter>(GetArenaNoVirtual());
    can_card_parameter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.drivers.canbus.SensorCanbusConf.can_card_parameter)
  return can_card_parameter_;
}
inline void SensorCanbusConf::set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(can_card_parameter_);
  }
  if (can_card_parameter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      can_card_parameter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, can_card_parameter, submessage_arena);
    }
    set_has_can_card_parameter();
  } else {
    clear_has_can_card_parameter();
  }
  can_card_parameter_ = can_card_parameter;
  // @@protoc_insertion_point(field_set_allocated:apollo.drivers.canbus.SensorCanbusConf.can_card_parameter)
}

// optional bool enable_debug_mode = 2 [default = false];
inline bool SensorCanbusConf::has_enable_debug_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SensorCanbusConf::set_has_enable_debug_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SensorCanbusConf::clear_has_enable_debug_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SensorCanbusConf::clear_enable_debug_mode() {
  enable_debug_mode_ = false;
  clear_has_enable_debug_mode();
}
inline bool SensorCanbusConf::enable_debug_mode() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.canbus.SensorCanbusConf.enable_debug_mode)
  return enable_debug_mode_;
}
inline void SensorCanbusConf::set_enable_debug_mode(bool value) {
  set_has_enable_debug_mode();
  enable_debug_mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.canbus.SensorCanbusConf.enable_debug_mode)
}

// optional bool enable_receiver_log = 3 [default = false];
inline bool SensorCanbusConf::has_enable_receiver_log() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SensorCanbusConf::set_has_enable_receiver_log() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SensorCanbusConf::clear_has_enable_receiver_log() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SensorCanbusConf::clear_enable_receiver_log() {
  enable_receiver_log_ = false;
  clear_has_enable_receiver_log();
}
inline bool SensorCanbusConf::enable_receiver_log() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.canbus.SensorCanbusConf.enable_receiver_log)
  return enable_receiver_log_;
}
inline void SensorCanbusConf::set_enable_receiver_log(bool value) {
  set_has_enable_receiver_log();
  enable_receiver_log_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.canbus.SensorCanbusConf.enable_receiver_log)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace drivers
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fdrivers_2fcanbus_2fproto_2fsensor_5fcanbus_5fconf_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/routing/proto/routing_config.proto

#ifndef PROTOBUF_INCLUDED_modules_2frouting_2fproto_2frouting_5fconfig_2eproto
#define PROTOBUF_INCLUDED_modules_2frouting_2fproto_2frouting_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2frouting_2fproto_2frouting_5fconfig_2eproto 

namespace protobuf_modules_2frouting_2fproto_2frouting_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2frouting_2fproto_2frouting_5fconfig_2eproto
namespace apollo {
namespace routing {
class RoutingConfig;
class RoutingConfigDefaultTypeInternal;
extern RoutingConfigDefaultTypeInternal _RoutingConfig_default_instance_;
class TopicConfig;
class TopicConfigDefaultTypeInternal;
extern TopicConfigDefaultTypeInternal _TopicConfig_default_instance_;
}  // namespace routing
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::routing::RoutingConfig* Arena::CreateMaybeMessage<::apollo::routing::RoutingConfig>(Arena*);
template<> ::apollo::routing::TopicConfig* Arena::CreateMaybeMessage<::apollo::routing::TopicConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace routing {

// ===================================================================

class TopicConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.routing.TopicConfig) */ {
 public:
  TopicConfig();
  virtual ~TopicConfig();

  TopicConfig(const TopicConfig& from);

  inline TopicConfig& operator=(const TopicConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopicConfig(TopicConfig&& from) noexcept
    : TopicConfig() {
    *this = ::std::move(from);
  }

  inline TopicConfig& operator=(TopicConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TopicConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopicConfig* internal_default_instance() {
    return reinterpret_cast<const TopicConfig*>(
               &_TopicConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TopicConfig* other);
  friend void swap(TopicConfig& a, TopicConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopicConfig* New() const final {
    return CreateMaybeMessage<TopicConfig>(NULL);
  }

  TopicConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TopicConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TopicConfig& from);
  void MergeFrom(const TopicConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopicConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string routing_response_topic = 1;
  bool has_routing_response_topic() const;
  void clear_routing_response_topic();
  static const int kRoutingResponseTopicFieldNumber = 1;
  const ::std::string& routing_response_topic() const;
  void set_routing_response_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_routing_response_topic(::std::string&& value);
  #endif
  void set_routing_response_topic(const char* value);
  void set_routing_response_topic(const char* value, size_t size);
  ::std::string* mutable_routing_response_topic();
  ::std::string* release_routing_response_topic();
  void set_allocated_routing_response_topic(::std::string* routing_response_topic);

  // optional string routing_response_history_topic = 2;
  bool has_routing_response_history_topic() const;
  void clear_routing_response_history_topic();
  static const int kRoutingResponseHistoryTopicFieldNumber = 2;
  const ::std::string& routing_response_history_topic() const;
  void set_routing_response_history_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_routing_response_history_topic(::std::string&& value);
  #endif
  void set_routing_response_history_topic(const char* value);
  void set_routing_response_history_topic(const char* value, size_t size);
  ::std::string* mutable_routing_response_history_topic();
  ::std::string* release_routing_response_history_topic();
  void set_allocated_routing_response_history_topic(::std::string* routing_response_history_topic);

  // @@protoc_insertion_point(class_scope:apollo.routing.TopicConfig)
 private:
  void set_has_routing_response_topic();
  void clear_has_routing_response_topic();
  void set_has_routing_response_history_topic();
  void clear_has_routing_response_history_topic();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr routing_response_topic_;
  ::google::protobuf::internal::ArenaStringPtr routing_response_history_topic_;
  friend struct ::protobuf_modules_2frouting_2fproto_2frouting_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoutingConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.routing.RoutingConfig) */ {
 public:
  RoutingConfig();
  virtual ~RoutingConfig();

  RoutingConfig(const RoutingConfig& from);

  inline RoutingConfig& operator=(const RoutingConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutingConfig(RoutingConfig&& from) noexcept
    : RoutingConfig() {
    *this = ::std::move(from);
  }

  inline RoutingConfig& operator=(RoutingConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoutingConfig* internal_default_instance() {
    return reinterpret_cast<const RoutingConfig*>(
               &_RoutingConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RoutingConfig* other);
  friend void swap(RoutingConfig& a, RoutingConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutingConfig* New() const final {
    return CreateMaybeMessage<RoutingConfig>(NULL);
  }

  RoutingConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoutingConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoutingConfig& from);
  void MergeFrom(const RoutingConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutingConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.routing.TopicConfig topic_config = 7;
  bool has_topic_config() const;
  void clear_topic_config();
  static const int kTopicConfigFieldNumber = 7;
  private:
  const ::apollo::routing::TopicConfig& _internal_topic_config() const;
  public:
  const ::apollo::routing::TopicConfig& topic_config() const;
  ::apollo::routing::TopicConfig* release_topic_config();
  ::apollo::routing::TopicConfig* mutable_topic_config();
  void set_allocated_topic_config(::apollo::routing::TopicConfig* topic_config);

  // optional double base_speed = 1;
  bool has_base_speed() const;
  void clear_base_speed();
  static const int kBaseSpeedFieldNumber = 1;
  double base_speed() const;
  void set_base_speed(double value);

  // optional double left_turn_penalty = 2;
  bool has_left_turn_penalty() const;
  void clear_left_turn_penalty();
  static const int kLeftTurnPenaltyFieldNumber = 2;
  double left_turn_penalty() const;
  void set_left_turn_penalty(double value);

  // optional double right_turn_penalty = 3;
  bool has_right_turn_penalty() const;
  void clear_right_turn_penalty();
  static const int kRightTurnPenaltyFieldNumber = 3;
  double right_turn_penalty() const;
  void set_right_turn_penalty(double value);

  // optional double uturn_penalty = 4;
  bool has_uturn_penalty() const;
  void clear_uturn_penalty();
  static const int kUturnPenaltyFieldNumber = 4;
  double uturn_penalty() const;
  void set_uturn_penalty(double value);

  // optional double change_penalty = 5;
  bool has_change_penalty() const;
  void clear_change_penalty();
  static const int kChangePenaltyFieldNumber = 5;
  double change_penalty() const;
  void set_change_penalty(double value);

  // optional double base_changing_length = 6;
  bool has_base_changing_length() const;
  void clear_base_changing_length();
  static const int kBaseChangingLengthFieldNumber = 6;
  double base_changing_length() const;
  void set_base_changing_length(double value);

  // @@protoc_insertion_point(class_scope:apollo.routing.RoutingConfig)
 private:
  void set_has_base_speed();
  void clear_has_base_speed();
  void set_has_left_turn_penalty();
  void clear_has_left_turn_penalty();
  void set_has_right_turn_penalty();
  void clear_has_right_turn_penalty();
  void set_has_uturn_penalty();
  void clear_has_uturn_penalty();
  void set_has_change_penalty();
  void clear_has_change_penalty();
  void set_has_base_changing_length();
  void clear_has_base_changing_length();
  void set_has_topic_config();
  void clear_has_topic_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::apollo::routing::TopicConfig* topic_config_;
  double base_speed_;
  double left_turn_penalty_;
  double right_turn_penalty_;
  double uturn_penalty_;
  double change_penalty_;
  double base_changing_length_;
  friend struct ::protobuf_modules_2frouting_2fproto_2frouting_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TopicConfig

// optional string routing_response_topic = 1;
inline bool TopicConfig::has_routing_response_topic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopicConfig::set_has_routing_response_topic() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TopicConfig::clear_has_routing_response_topic() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TopicConfig::clear_routing_response_topic() {
  routing_response_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_routing_response_topic();
}
inline const ::std::string& TopicConfig::routing_response_topic() const {
  // @@protoc_insertion_point(field_get:apollo.routing.TopicConfig.routing_response_topic)
  return routing_response_topic_.GetNoArena();
}
inline void TopicConfig::set_routing_response_topic(const ::std::string& value) {
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.routing.TopicConfig.routing_response_topic)
}
#if LANG_CXX11
inline void TopicConfig::set_routing_response_topic(::std::string&& value) {
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.routing.TopicConfig.routing_response_topic)
}
#endif
inline void TopicConfig::set_routing_response_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.routing.TopicConfig.routing_response_topic)
}
inline void TopicConfig::set_routing_response_topic(const char* value, size_t size) {
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.routing.TopicConfig.routing_response_topic)
}
inline ::std::string* TopicConfig::mutable_routing_response_topic() {
  set_has_routing_response_topic();
  // @@protoc_insertion_point(field_mutable:apollo.routing.TopicConfig.routing_response_topic)
  return routing_response_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TopicConfig::release_routing_response_topic() {
  // @@protoc_insertion_point(field_release:apollo.routing.TopicConfig.routing_response_topic)
  if (!has_routing_response_topic()) {
    return NULL;
  }
  clear_has_routing_response_topic();
  return routing_response_topic_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TopicConfig::set_allocated_routing_response_topic(::std::string* routing_response_topic) {
  if (routing_response_topic != NULL) {
    set_has_routing_response_topic();
  } else {
    clear_has_routing_response_topic();
  }
  routing_response_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routing_response_topic);
  // @@protoc_insertion_point(field_set_allocated:apollo.routing.TopicConfig.routing_response_topic)
}

// optional string routing_response_history_topic = 2;
inline bool TopicConfig::has_routing_response_history_topic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TopicConfig::set_has_routing_response_history_topic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TopicConfig::clear_has_routing_response_history_topic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TopicConfig::clear_routing_response_history_topic() {
  routing_response_history_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_routing_response_history_topic();
}
inline const ::std::string& TopicConfig::routing_response_history_topic() const {
  // @@protoc_insertion_point(field_get:apollo.routing.TopicConfig.routing_response_history_topic)
  return routing_response_history_topic_.GetNoArena();
}
inline void TopicConfig::set_routing_response_history_topic(const ::std::string& value) {
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.routing.TopicConfig.routing_response_history_topic)
}
#if LANG_CXX11
inline void TopicConfig::set_routing_response_history_topic(::std::string&& value) {
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.routing.TopicConfig.routing_response_history_topic)
}
#endif
inline void TopicConfig::set_routing_response_history_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.routing.TopicConfig.routing_response_history_topic)
}
inline void TopicConfig::set_routing_response_history_topic(const char* value, size_t size) {
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.routing.TopicConfig.routing_response_history_topic)
}
inline ::std::string* TopicConfig::mutable_routing_response_history_topic() {
  set_has_routing_response_history_topic();
  // @@protoc_insertion_point(field_mutable:apollo.routing.TopicConfig.routing_response_history_topic)
  return routing_response_history_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TopicConfig::release_routing_response_history_topic() {
  // @@protoc_insertion_point(field_release:apollo.routing.TopicConfig.routing_response_history_topic)
  if (!has_routing_response_history_topic()) {
    return NULL;
  }
  clear_has_routing_response_history_topic();
  return routing_response_history_topic_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TopicConfig::set_allocated_routing_response_history_topic(::std::string* routing_response_history_topic) {
  if (routing_response_history_topic != NULL) {
    set_has_routing_response_history_topic();
  } else {
    clear_has_routing_response_history_topic();
  }
  routing_response_history_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routing_response_history_topic);
  // @@protoc_insertion_point(field_set_allocated:apollo.routing.TopicConfig.routing_response_history_topic)
}

// -------------------------------------------------------------------

// RoutingConfig

// optional double base_speed = 1;
inline bool RoutingConfig::has_base_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoutingConfig::set_has_base_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoutingConfig::clear_has_base_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoutingConfig::clear_base_speed() {
  base_speed_ = 0;
  clear_has_base_speed();
}
inline double RoutingConfig::base_speed() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.base_speed)
  return base_speed_;
}
inline void RoutingConfig::set_base_speed(double value) {
  set_has_base_speed();
  base_speed_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.base_speed)
}

// optional double left_turn_penalty = 2;
inline bool RoutingConfig::has_left_turn_penalty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoutingConfig::set_has_left_turn_penalty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoutingConfig::clear_has_left_turn_penalty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoutingConfig::clear_left_turn_penalty() {
  left_turn_penalty_ = 0;
  clear_has_left_turn_penalty();
}
inline double RoutingConfig::left_turn_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.left_turn_penalty)
  return left_turn_penalty_;
}
inline void RoutingConfig::set_left_turn_penalty(double value) {
  set_has_left_turn_penalty();
  left_turn_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.left_turn_penalty)
}

// optional double right_turn_penalty = 3;
inline bool RoutingConfig::has_right_turn_penalty() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoutingConfig::set_has_right_turn_penalty() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoutingConfig::clear_has_right_turn_penalty() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoutingConfig::clear_right_turn_penalty() {
  right_turn_penalty_ = 0;
  clear_has_right_turn_penalty();
}
inline double RoutingConfig::right_turn_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.right_turn_penalty)
  return right_turn_penalty_;
}
inline void RoutingConfig::set_right_turn_penalty(double value) {
  set_has_right_turn_penalty();
  right_turn_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.right_turn_penalty)
}

// optional double uturn_penalty = 4;
inline bool RoutingConfig::has_uturn_penalty() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoutingConfig::set_has_uturn_penalty() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoutingConfig::clear_has_uturn_penalty() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoutingConfig::clear_uturn_penalty() {
  uturn_penalty_ = 0;
  clear_has_uturn_penalty();
}
inline double RoutingConfig::uturn_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.uturn_penalty)
  return uturn_penalty_;
}
inline void RoutingConfig::set_uturn_penalty(double value) {
  set_has_uturn_penalty();
  uturn_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.uturn_penalty)
}

// optional double change_penalty = 5;
inline bool RoutingConfig::has_change_penalty() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoutingConfig::set_has_change_penalty() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoutingConfig::clear_has_change_penalty() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoutingConfig::clear_change_penalty() {
  change_penalty_ = 0;
  clear_has_change_penalty();
}
inline double RoutingConfig::change_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.change_penalty)
  return change_penalty_;
}
inline void RoutingConfig::set_change_penalty(double value) {
  set_has_change_penalty();
  change_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.change_penalty)
}

// optional double base_changing_length = 6;
inline bool RoutingConfig::has_base_changing_length() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoutingConfig::set_has_base_changing_length() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoutingConfig::clear_has_base_changing_length() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoutingConfig::clear_base_changing_length() {
  base_changing_length_ = 0;
  clear_has_base_changing_length();
}
inline double RoutingConfig::base_changing_length() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.base_changing_length)
  return base_changing_length_;
}
inline void RoutingConfig::set_base_changing_length(double value) {
  set_has_base_changing_length();
  base_changing_length_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.base_changing_length)
}

// optional .apollo.routing.TopicConfig topic_config = 7;
inline bool RoutingConfig::has_topic_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoutingConfig::set_has_topic_config() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoutingConfig::clear_has_topic_config() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoutingConfig::clear_topic_config() {
  if (topic_config_ != NULL) topic_config_->Clear();
  clear_has_topic_config();
}
inline const ::apollo::routing::TopicConfig& RoutingConfig::_internal_topic_config() const {
  return *topic_config_;
}
inline const ::apollo::routing::TopicConfig& RoutingConfig::topic_config() const {
  const ::apollo::routing::TopicConfig* p = topic_config_;
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.topic_config)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::routing::TopicConfig*>(
      &::apollo::routing::_TopicConfig_default_instance_);
}
inline ::apollo::routing::TopicConfig* RoutingConfig::release_topic_config() {
  // @@protoc_insertion_point(field_release:apollo.routing.RoutingConfig.topic_config)
  clear_has_topic_config();
  ::apollo::routing::TopicConfig* temp = topic_config_;
  topic_config_ = NULL;
  return temp;
}
inline ::apollo::routing::TopicConfig* RoutingConfig::mutable_topic_config() {
  set_has_topic_config();
  if (topic_config_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::routing::TopicConfig>(GetArenaNoVirtual());
    topic_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.routing.RoutingConfig.topic_config)
  return topic_config_;
}
inline void RoutingConfig::set_allocated_topic_config(::apollo::routing::TopicConfig* topic_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete topic_config_;
  }
  if (topic_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      topic_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topic_config, submessage_arena);
    }
    set_has_topic_config();
  } else {
    clear_has_topic_config();
  }
  topic_config_ = topic_config;
  // @@protoc_insertion_point(field_set_allocated:apollo.routing.RoutingConfig.topic_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace routing
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2frouting_2fproto_2frouting_5fconfig_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/decision.proto

#include "modules/planning/proto/decision.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointENU;
}  // namespace protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto
namespace protobuf_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleSignal;
}  // namespace protobuf_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto
namespace protobuf_modules_2fplanning_2fproto_2fdecision_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopCruiseToStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopHardBrake;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MainCruise;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MainNotReady;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MainParking;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectAvoid;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDynamic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectIgnore;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectNudge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectSidePass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectStatic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetLane;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MainMissionComplete;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MainStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDecisions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectFollow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectOvertake;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectYield;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MainChangeLane;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MainEmergencyStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectMotionType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_MainDecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_ObjectDecisionType;
}  // namespace protobuf_modules_2fplanning_2fproto_2fdecision_2eproto
namespace apollo {
namespace planning {
class TargetLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetLane>
      _instance;
} _TargetLane_default_instance_;
class ObjectIgnoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectIgnore>
      _instance;
} _ObjectIgnore_default_instance_;
class ObjectStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectStop>
      _instance;
} _ObjectStop_default_instance_;
class ObjectNudgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectNudge>
      _instance;
} _ObjectNudge_default_instance_;
class ObjectYieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectYield>
      _instance;
} _ObjectYield_default_instance_;
class ObjectFollowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectFollow>
      _instance;
} _ObjectFollow_default_instance_;
class ObjectOvertakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectOvertake>
      _instance;
} _ObjectOvertake_default_instance_;
class ObjectSidePassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectSidePass>
      _instance;
} _ObjectSidePass_default_instance_;
class ObjectAvoidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectAvoid>
      _instance;
} _ObjectAvoid_default_instance_;
class ObjectStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectStatus>
      _instance;
} _ObjectStatus_default_instance_;
class ObjectStaticDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectStatic>
      _instance;
} _ObjectStatic_default_instance_;
class ObjectDynamicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDynamic>
      _instance;
} _ObjectDynamic_default_instance_;
class ObjectMotionTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectMotionType>
      _instance;
  const ::apollo::planning::ObjectStatic* static__;
  const ::apollo::planning::ObjectDynamic* dynamic_;
} _ObjectMotionType_default_instance_;
class ObjectDecisionTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDecisionType>
      _instance;
  const ::apollo::planning::ObjectIgnore* ignore_;
  const ::apollo::planning::ObjectStop* stop_;
  const ::apollo::planning::ObjectFollow* follow_;
  const ::apollo::planning::ObjectYield* yield_;
  const ::apollo::planning::ObjectOvertake* overtake_;
  const ::apollo::planning::ObjectNudge* nudge_;
  const ::apollo::planning::ObjectAvoid* avoid_;
  const ::apollo::planning::ObjectSidePass* side_pass_;
} _ObjectDecisionType_default_instance_;
class ObjectDecisionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDecision>
      _instance;
} _ObjectDecision_default_instance_;
class ObjectDecisionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDecisions>
      _instance;
} _ObjectDecisions_default_instance_;
class MainStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainStop>
      _instance;
} _MainStop_default_instance_;
class EmergencyStopHardBrakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmergencyStopHardBrake>
      _instance;
} _EmergencyStopHardBrake_default_instance_;
class EmergencyStopCruiseToStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmergencyStopCruiseToStop>
      _instance;
} _EmergencyStopCruiseToStop_default_instance_;
class MainEmergencyStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainEmergencyStop>
      _instance;
  const ::apollo::planning::EmergencyStopHardBrake* hard_brake_;
  const ::apollo::planning::EmergencyStopCruiseToStop* cruise_to_stop_;
} _MainEmergencyStop_default_instance_;
class MainCruiseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainCruise>
      _instance;
} _MainCruise_default_instance_;
class MainChangeLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainChangeLane>
      _instance;
} _MainChangeLane_default_instance_;
class MainMissionCompleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainMissionComplete>
      _instance;
} _MainMissionComplete_default_instance_;
class MainNotReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainNotReady>
      _instance;
} _MainNotReady_default_instance_;
class MainParkingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainParking>
      _instance;
} _MainParking_default_instance_;
class MainDecisionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainDecision>
      _instance;
  const ::apollo::planning::MainCruise* cruise_;
  const ::apollo::planning::MainStop* stop_;
  const ::apollo::planning::MainEmergencyStop* estop_;
  const ::apollo::planning::MainChangeLane* change_lane_;
  const ::apollo::planning::MainMissionComplete* mission_complete_;
  const ::apollo::planning::MainNotReady* not_ready_;
  const ::apollo::planning::MainParking* parking_;
} _MainDecision_default_instance_;
class DecisionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecisionResult>
      _instance;
} _DecisionResult_default_instance_;
}  // namespace planning
}  // namespace apollo
namespace protobuf_modules_2fplanning_2fproto_2fdecision_2eproto {
static void InitDefaultsTargetLane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_TargetLane_default_instance_;
    new (ptr) ::apollo::planning::TargetLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::TargetLane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetLane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetLane}, {}};

static void InitDefaultsObjectIgnore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectIgnore_default_instance_;
    new (ptr) ::apollo::planning::ObjectIgnore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectIgnore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectIgnore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectIgnore}, {}};

static void InitDefaultsObjectStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectStop_default_instance_;
    new (ptr) ::apollo::planning::ObjectStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectStop}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectNudge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectNudge_default_instance_;
    new (ptr) ::apollo::planning::ObjectNudge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectNudge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectNudge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectNudge}, {}};

static void InitDefaultsObjectYield() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectYield_default_instance_;
    new (ptr) ::apollo::planning::ObjectYield();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectYield::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectYield =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectYield}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectFollow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectFollow_default_instance_;
    new (ptr) ::apollo::planning::ObjectFollow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectFollow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectFollow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectFollow}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectOvertake() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectOvertake_default_instance_;
    new (ptr) ::apollo::planning::ObjectOvertake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectOvertake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectOvertake =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectOvertake}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectSidePass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectSidePass_default_instance_;
    new (ptr) ::apollo::planning::ObjectSidePass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectSidePass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectSidePass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectSidePass}, {}};

static void InitDefaultsObjectAvoid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectAvoid_default_instance_;
    new (ptr) ::apollo::planning::ObjectAvoid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectAvoid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectAvoid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectAvoid}, {}};

static void InitDefaultsObjectStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectStatus_default_instance_;
    new (ptr) ::apollo::planning::ObjectStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectStatus}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectMotionType.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisionType.base,}};

static void InitDefaultsObjectStatic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectStatic_default_instance_;
    new (ptr) ::apollo::planning::ObjectStatic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectStatic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectStatic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectStatic}, {}};

static void InitDefaultsObjectDynamic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectDynamic_default_instance_;
    new (ptr) ::apollo::planning::ObjectDynamic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectDynamic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDynamic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectDynamic}, {}};

static void InitDefaultsObjectMotionType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectMotionType_default_instance_;
    new (ptr) ::apollo::planning::ObjectMotionType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectMotionType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectMotionType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectMotionType}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStatic.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDynamic.base,}};

static void InitDefaultsObjectDecisionType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectDecisionType_default_instance_;
    new (ptr) ::apollo::planning::ObjectDecisionType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectDecisionType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_ObjectDecisionType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsObjectDecisionType}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectIgnore.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStop.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectFollow.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectYield.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectOvertake.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectNudge.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectAvoid.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectSidePass.base,}};

static void InitDefaultsObjectDecision() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectDecision_default_instance_;
    new (ptr) ::apollo::planning::ObjectDecision();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectDecision::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDecision =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDecision}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisionType.base,}};

static void InitDefaultsObjectDecisions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_ObjectDecisions_default_instance_;
    new (ptr) ::apollo::planning::ObjectDecisions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::ObjectDecisions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDecisions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDecisions}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecision.base,}};

static void InitDefaultsMainStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainStop_default_instance_;
    new (ptr) ::apollo::planning::MainStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MainStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMainStop}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsEmergencyStopHardBrake() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_EmergencyStopHardBrake_default_instance_;
    new (ptr) ::apollo::planning::EmergencyStopHardBrake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::EmergencyStopHardBrake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopHardBrake =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmergencyStopHardBrake}, {}};

static void InitDefaultsEmergencyStopCruiseToStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_EmergencyStopCruiseToStop_default_instance_;
    new (ptr) ::apollo::planning::EmergencyStopCruiseToStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::EmergencyStopCruiseToStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopCruiseToStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmergencyStopCruiseToStop}, {}};

static void InitDefaultsMainEmergencyStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainEmergencyStop_default_instance_;
    new (ptr) ::apollo::planning::MainEmergencyStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainEmergencyStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MainEmergencyStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMainEmergencyStop}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_EmergencyStopHardBrake.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_EmergencyStopCruiseToStop.base,}};

static void InitDefaultsMainCruise() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainCruise_default_instance_;
    new (ptr) ::apollo::planning::MainCruise();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainCruise::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MainCruise =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMainCruise}, {}};

static void InitDefaultsMainChangeLane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainChangeLane_default_instance_;
    new (ptr) ::apollo::planning::MainChangeLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainChangeLane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MainChangeLane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMainChangeLane}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_TargetLane.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainStop.base,}};

static void InitDefaultsMainMissionComplete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainMissionComplete_default_instance_;
    new (ptr) ::apollo::planning::MainMissionComplete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainMissionComplete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MainMissionComplete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMainMissionComplete}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsMainNotReady() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainNotReady_default_instance_;
    new (ptr) ::apollo::planning::MainNotReady();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainNotReady::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MainNotReady =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMainNotReady}, {}};

static void InitDefaultsMainParking() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainParking_default_instance_;
    new (ptr) ::apollo::planning::MainParking();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainParking::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MainParking =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMainParking}, {}};

static void InitDefaultsMainDecision() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_MainDecision_default_instance_;
    new (ptr) ::apollo::planning::MainDecision();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::MainDecision::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_MainDecision =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsMainDecision}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainCruise.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainStop.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainEmergencyStop.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainChangeLane.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainMissionComplete.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainNotReady.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainParking.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_TargetLane.base,}};

static void InitDefaultsDecisionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_DecisionResult_default_instance_;
    new (ptr) ::apollo::planning::DecisionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::DecisionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DecisionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDecisionResult}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainDecision.base,
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisions.base,
      &protobuf_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto::scc_info_VehicleSignal.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TargetLane.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectIgnore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectNudge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectYield.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectFollow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectOvertake.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectSidePass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectAvoid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectStatic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDynamic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectMotionType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDecisionType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDecision.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDecisions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmergencyStopHardBrake.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmergencyStopCruiseToStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainEmergencyStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainCruise.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainChangeLane.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainMissionComplete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainNotReady.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainParking.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainDecision.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecisionResult.base);
}

::google::protobuf::Metadata file_level_metadata[27];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::TargetLane, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::TargetLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::TargetLane, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::TargetLane, start_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::TargetLane, end_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::TargetLane, speed_limit_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectIgnore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectIgnore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, stop_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, stop_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStop, wait_for_obstacle_),
  3,
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectNudge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectNudge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectNudge, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectNudge, distance_l_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectYield, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectYield, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectYield, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectYield, fence_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectYield, fence_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectYield, time_buffer_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectFollow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectFollow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectFollow, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectFollow, fence_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectFollow, fence_heading_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectOvertake, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectOvertake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectOvertake, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectOvertake, fence_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectOvertake, fence_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectOvertake, time_buffer_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectSidePass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectSidePass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectSidePass, type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectAvoid, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectAvoid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStatus, motion_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStatus, decision_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStatic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectStatic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDynamic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectMotionType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectMotionType, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectMotionType, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::apollo::planning::ObjectMotionTypeDefaultTypeInternal, static__),
  offsetof(::apollo::planning::ObjectMotionTypeDefaultTypeInternal, dynamic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectMotionType, motion_tag_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisionType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisionType, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisionType, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, ignore_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, stop_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, follow_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, yield_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, overtake_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, nudge_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, avoid_),
  offsetof(::apollo::planning::ObjectDecisionTypeDefaultTypeInternal, side_pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisionType, object_tag_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecision, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecision, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecision, perception_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecision, object_decision_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::ObjectDecisions, decision_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, stop_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, stop_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainStop, change_lane_type_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::EmergencyStopHardBrake, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::EmergencyStopHardBrake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::EmergencyStopCruiseToStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::EmergencyStopCruiseToStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainEmergencyStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainEmergencyStop, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainEmergencyStop, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainEmergencyStop, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainEmergencyStop, reason_),
  offsetof(::apollo::planning::MainEmergencyStopDefaultTypeInternal, hard_brake_),
  offsetof(::apollo::planning::MainEmergencyStopDefaultTypeInternal, cruise_to_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainEmergencyStop, task_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainCruise, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainCruise, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainCruise, change_lane_type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainChangeLane, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainChangeLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainChangeLane, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainChangeLane, default_lane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainChangeLane, default_lane_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainChangeLane, target_lane_stop_),
  2,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainMissionComplete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainMissionComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainMissionComplete, stop_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainMissionComplete, stop_heading_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainNotReady, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainNotReady, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainNotReady, reason_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainParking, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainParking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainParking, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainDecision, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainDecision, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainDecision, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, cruise_),
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, stop_),
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, estop_),
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, change_lane_),
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, mission_complete_),
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, not_ready_),
  offsetof(::apollo::planning::MainDecisionDefaultTypeInternal, parking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainDecision, target_lane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::MainDecision, task_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::DecisionResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::DecisionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::DecisionResult, main_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::DecisionResult, object_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::DecisionResult, vehicle_signal_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::planning::TargetLane)},
  { 13, 18, sizeof(::apollo::planning::ObjectIgnore)},
  { 18, 28, sizeof(::apollo::planning::ObjectStop)},
  { 33, 40, sizeof(::apollo::planning::ObjectNudge)},
  { 42, 51, sizeof(::apollo::planning::ObjectYield)},
  { 55, 63, sizeof(::apollo::planning::ObjectFollow)},
  { 66, 75, sizeof(::apollo::planning::ObjectOvertake)},
  { 79, 85, sizeof(::apollo::planning::ObjectSidePass)},
  { 86, 91, sizeof(::apollo::planning::ObjectAvoid)},
  { 91, 98, sizeof(::apollo::planning::ObjectStatus)},
  { 100, 105, sizeof(::apollo::planning::ObjectStatic)},
  { 105, 110, sizeof(::apollo::planning::ObjectDynamic)},
  { 110, 118, sizeof(::apollo::planning::ObjectMotionType)},
  { 120, 134, sizeof(::apollo::planning::ObjectDecisionType)},
  { 142, 150, sizeof(::apollo::planning::ObjectDecision)},
  { 153, 159, sizeof(::apollo::planning::ObjectDecisions)},
  { 160, 170, sizeof(::apollo::planning::MainStop)},
  { 175, 180, sizeof(::apollo::planning::EmergencyStopHardBrake)},
  { 180, 185, sizeof(::apollo::planning::EmergencyStopCruiseToStop)},
  { 185, 195, sizeof(::apollo::planning::MainEmergencyStop)},
  { 199, 205, sizeof(::apollo::planning::MainCruise)},
  { 206, 215, sizeof(::apollo::planning::MainChangeLane)},
  { 219, 226, sizeof(::apollo::planning::MainMissionComplete)},
  { 228, 234, sizeof(::apollo::planning::MainNotReady)},
  { 235, 241, sizeof(::apollo::planning::MainParking)},
  { 242, 256, sizeof(::apollo::planning::MainDecision)},
  { 264, 272, sizeof(::apollo::planning::DecisionResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_TargetLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectIgnore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectNudge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectYield_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectFollow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectOvertake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectSidePass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectAvoid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectStatic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectDynamic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectMotionType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectDecisionType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectDecision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_ObjectDecisions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_EmergencyStopHardBrake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_EmergencyStopCruiseToStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainEmergencyStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainCruise_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainChangeLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainMissionComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainNotReady_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainParking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_MainDecision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_DecisionResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/planning/proto/decision.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 27);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%modules/planning/proto/decision.proto\022"
      "\017apollo.planning\032#modules/common/proto/g"
      "eometry.proto\032)modules/common/proto/vehi"
      "cle_signal.proto\032#modules/routing/proto/"
      "routing.proto\"M\n\nTargetLane\022\n\n\002id\030\001 \001(\t\022"
      "\017\n\007start_s\030\002 \001(\001\022\r\n\005end_s\030\003 \001(\001\022\023\n\013speed"
      "_limit\030\004 \001(\001\"\016\n\014ObjectIgnore\"\264\001\n\nObjectS"
      "top\0224\n\013reason_code\030\001 \001(\0162\037.apollo.planni"
      "ng.StopReasonCode\022\022\n\ndistance_s\030\002 \001(\001\022+\n"
      "\nstop_point\030\003 \001(\0132\027.apollo.common.PointE"
      "NU\022\024\n\014stop_heading\030\004 \001(\001\022\031\n\021wait_for_obs"
      "tacle\030\005 \003(\t\"\254\001\n\013ObjectNudge\022/\n\004type\030\001 \001("
      "\0162!.apollo.planning.ObjectNudge.Type\022\022\n\n"
      "distance_l\030\002 \001(\001\"X\n\004Type\022\016\n\nLEFT_NUDGE\020\001"
      "\022\017\n\013RIGHT_NUDGE\020\002\022\026\n\022DYNAMIC_LEFT_NUDGE\020"
      "\003\022\027\n\023DYNAMIC_RIGHT_NUDGE\020\004\"{\n\013ObjectYiel"
      "d\022\022\n\ndistance_s\030\001 \001(\001\022,\n\013fence_point\030\002 \001"
      "(\0132\027.apollo.common.PointENU\022\025\n\rfence_hea"
      "ding\030\003 \001(\001\022\023\n\013time_buffer\030\004 \001(\001\"g\n\014Objec"
      "tFollow\022\022\n\ndistance_s\030\001 \001(\001\022,\n\013fence_poi"
      "nt\030\002 \001(\0132\027.apollo.common.PointENU\022\025\n\rfen"
      "ce_heading\030\003 \001(\001\"~\n\016ObjectOvertake\022\022\n\ndi"
      "stance_s\030\001 \001(\001\022,\n\013fence_point\030\002 \001(\0132\027.ap"
      "ollo.common.PointENU\022\025\n\rfence_heading\030\003 "
      "\001(\001\022\023\n\013time_buffer\030\004 \001(\001\"a\n\016ObjectSidePa"
      "ss\0222\n\004type\030\001 \001(\0162$.apollo.planning.Objec"
      "tSidePass.Type\"\033\n\004Type\022\010\n\004LEFT\020\001\022\t\n\005RIGH"
      "T\020\002\"\r\n\013ObjectAvoid\"\202\001\n\014ObjectStatus\0226\n\013m"
      "otion_type\030\001 \001(\0132!.apollo.planning.Objec"
      "tMotionType\022:\n\rdecision_type\030\002 \001(\0132#.apo"
      "llo.planning.ObjectDecisionType\"\016\n\014Objec"
      "tStatic\"\017\n\rObjectDynamic\"\204\001\n\020ObjectMotio"
      "nType\022/\n\006static\030\001 \001(\0132\035.apollo.planning."
      "ObjectStaticH\000\0221\n\007dynamic\030\002 \001(\0132\036.apollo"
      ".planning.ObjectDynamicH\000B\014\n\nmotion_tag\""
      "\251\003\n\022ObjectDecisionType\022/\n\006ignore\030\001 \001(\0132\035"
      ".apollo.planning.ObjectIgnoreH\000\022+\n\004stop\030"
      "\002 \001(\0132\033.apollo.planning.ObjectStopH\000\022/\n\006"
      "follow\030\003 \001(\0132\035.apollo.planning.ObjectFol"
      "lowH\000\022-\n\005yield\030\004 \001(\0132\034.apollo.planning.O"
      "bjectYieldH\000\0223\n\010overtake\030\005 \001(\0132\037.apollo."
      "planning.ObjectOvertakeH\000\022-\n\005nudge\030\006 \001(\013"
      "2\034.apollo.planning.ObjectNudgeH\000\022-\n\005avoi"
      "d\030\007 \001(\0132\034.apollo.planning.ObjectAvoidH\000\022"
      "4\n\tside_pass\030\010 \001(\0132\037.apollo.planning.Obj"
      "ectSidePassH\000B\014\n\nobject_tag\"q\n\016ObjectDec"
      "ision\022\n\n\002id\030\001 \001(\t\022\025\n\rperception_id\030\002 \001(\005"
      "\022<\n\017object_decision\030\003 \003(\0132#.apollo.plann"
      "ing.ObjectDecisionType\"D\n\017ObjectDecision"
      "s\0221\n\010decision\030\001 \003(\0132\037.apollo.planning.Ob"
      "jectDecision\"\315\001\n\010MainStop\0224\n\013reason_code"
      "\030\001 \001(\0162\037.apollo.planning.StopReasonCode\022"
      "\016\n\006reason\030\002 \001(\t\022+\n\nstop_point\030\003 \001(\0132\027.ap"
      "ollo.common.PointENU\022\024\n\014stop_heading\030\004 \001"
      "(\001\0228\n\020change_lane_type\030\005 \001(\0162\036.apollo.ro"
      "uting.ChangeLaneType\"\030\n\026EmergencyStopHar"
      "dBrake\"\033\n\031EmergencyStopCruiseToStop\"\237\003\n\021"
      "MainEmergencyStop\022B\n\013reason_code\030\001 \001(\0162-"
      ".apollo.planning.MainEmergencyStop.Reaso"
      "nCode\022\016\n\006reason\030\002 \001(\t\022=\n\nhard_brake\030\003 \001("
      "\0132\'.apollo.planning.EmergencyStopHardBra"
      "keH\000\022D\n\016cruise_to_stop\030\004 \001(\0132*.apollo.pl"
      "anning.EmergencyStopCruiseToStopH\000\"\250\001\n\nR"
      "easonCode\022\035\n\031ESTOP_REASON_INTERNAL_ERR\020\001"
      "\022\032\n\026ESTOP_REASON_COLLISION\020\002\022\035\n\031ESTOP_RE"
      "ASON_ST_FIND_PATH\020\003\022!\n\035ESTOP_REASON_ST_M"
      "AKE_DECISION\020\004\022\035\n\031ESTOP_REASON_SENSOR_ER"
      "ROR\020\005B\006\n\004task\"F\n\nMainCruise\0228\n\020change_la"
      "ne_type\030\001 \001(\0162\036.apollo.routing.ChangeLan"
      "eType\"\377\001\n\016MainChangeLane\0222\n\004type\030\001 \001(\0162$"
      ".apollo.planning.MainChangeLane.Type\0221\n\014"
      "default_lane\030\002 \003(\0132\033.apollo.planning.Tar"
      "getLane\0224\n\021default_lane_stop\030\003 \001(\0132\031.apo"
      "llo.planning.MainStop\0223\n\020target_lane_sto"
      "p\030\004 \001(\0132\031.apollo.planning.MainStop\"\033\n\004Ty"
      "pe\022\010\n\004LEFT\020\001\022\t\n\005RIGHT\020\002\"X\n\023MainMissionCo"
      "mplete\022+\n\nstop_point\030\001 \001(\0132\027.apollo.comm"
      "on.PointENU\022\024\n\014stop_heading\030\002 \001(\001\"\036\n\014Mai"
      "nNotReady\022\016\n\006reason\030\001 \001(\t\"j\n\013MainParking"
      "\022:\n\006status\030\001 \001(\0162*.apollo.planning.MainP"
      "arking.ParkingStatus\"\037\n\rParkingStatus\022\016\n"
      "\nIN_PARKING\020\001\"\276\003\n\014MainDecision\022-\n\006cruise"
      "\030\001 \001(\0132\033.apollo.planning.MainCruiseH\000\022)\n"
      "\004stop\030\002 \001(\0132\031.apollo.planning.MainStopH\000"
      "\0223\n\005estop\030\003 \001(\0132\".apollo.planning.MainEm"
      "ergencyStopH\000\022:\n\013change_lane\030\004 \001(\0132\037.apo"
      "llo.planning.MainChangeLaneB\002\030\001H\000\022@\n\020mis"
      "sion_complete\030\006 \001(\0132$.apollo.planning.Ma"
      "inMissionCompleteH\000\0222\n\tnot_ready\030\007 \001(\0132\035"
      ".apollo.planning.MainNotReadyH\000\022/\n\007parki"
      "ng\030\010 \001(\0132\034.apollo.planning.MainParkingH\000"
      "\0224\n\013target_lane\030\005 \003(\0132\033.apollo.planning."
      "TargetLaneB\002\030\001B\006\n\004task\"\267\001\n\016DecisionResul"
      "t\0224\n\rmain_decision\030\001 \001(\0132\035.apollo.planni"
      "ng.MainDecision\0229\n\017object_decision\030\002 \001(\013"
      "2 .apollo.planning.ObjectDecisions\0224\n\016ve"
      "hicle_signal\030\003 \001(\0132\034.apollo.common.Vehic"
      "leSignal*\236\004\n\016StopReasonCode\022\034\n\030STOP_REAS"
      "ON_HEAD_VEHICLE\020\001\022\033\n\027STOP_REASON_DESTINA"
      "TION\020\002\022\032\n\026STOP_REASON_PEDESTRIAN\020\003\022\030\n\024ST"
      "OP_REASON_OBSTACLE\020\004\022\032\n\026STOP_REASON_PREP"
      "ARKING\020\005\022\026\n\022STOP_REASON_SIGNAL\020d\022\031\n\025STOP"
      "_REASON_STOP_SIGN\020e\022\032\n\026STOP_REASON_YIELD"
      "_SIGN\020f\022\032\n\026STOP_REASON_CLEAR_ZONE\020g\022\031\n\025S"
      "TOP_REASON_CROSSWALK\020h\022\027\n\023STOP_REASON_CR"
      "EEPER\020i\022\035\n\031STOP_REASON_REFERENCE_END\020j\022\035"
      "\n\031STOP_REASON_YELLOW_SIGNAL\020k\022\031\n\025STOP_RE"
      "ASON_PULL_OVER\020l\022\037\n\033STOP_REASON_SIDEPASS"
      "_SAFETY\020m\022$\n\037STOP_REASON_PRE_OPEN_SPACE_"
      "STOP\020\310\001\022$\n\037STOP_REASON_LANE_CHANGE_URGEN"
      "CY\020\311\001\022\032\n\025STOP_REASON_EMERGENCY\020\312\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4433);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/planning/proto/decision.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::AddDescriptors();
  ::protobuf_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto::AddDescriptors();
  ::protobuf_modules_2frouting_2fproto_2frouting_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fplanning_2fproto_2fdecision_2eproto
namespace apollo {
namespace planning {
const ::google::protobuf::EnumDescriptor* ObjectNudge_Type_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_enum_descriptors[0];
}
bool ObjectNudge_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObjectNudge_Type ObjectNudge::LEFT_NUDGE;
const ObjectNudge_Type ObjectNudge::RIGHT_NUDGE;
const ObjectNudge_Type ObjectNudge::DYNAMIC_LEFT_NUDGE;
const ObjectNudge_Type ObjectNudge::DYNAMIC_RIGHT_NUDGE;
const ObjectNudge_Type ObjectNudge::Type_MIN;
const ObjectNudge_Type ObjectNudge::Type_MAX;
const int ObjectNudge::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ObjectSidePass_Type_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_enum_descriptors[1];
}
bool ObjectSidePass_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObjectSidePass_Type ObjectSidePass::LEFT;
const ObjectSidePass_Type ObjectSidePass::RIGHT;
const ObjectSidePass_Type ObjectSidePass::Type_MIN;
const ObjectSidePass_Type ObjectSidePass::Type_MAX;
const int ObjectSidePass::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MainEmergencyStop_ReasonCode_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_enum_descriptors[2];
}
bool MainEmergencyStop_ReasonCode_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_INTERNAL_ERR;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_COLLISION;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_ST_FIND_PATH;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_ST_MAKE_DECISION;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_SENSOR_ERROR;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ReasonCode_MIN;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ReasonCode_MAX;
const int MainEmergencyStop::ReasonCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MainChangeLane_Type_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_enum_descriptors[3];
}
bool MainChangeLane_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MainChangeLane_Type MainChangeLane::LEFT;
const MainChangeLane_Type MainChangeLane::RIGHT;
const MainChangeLane_Type MainChangeLane::Type_MIN;
const MainChangeLane_Type MainChangeLane::Type_MAX;
const int MainChangeLane::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MainParking_ParkingStatus_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_enum_descriptors[4];
}
bool MainParking_ParkingStatus_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MainParking_ParkingStatus MainParking::IN_PARKING;
const MainParking_ParkingStatus MainParking::ParkingStatus_MIN;
const MainParking_ParkingStatus MainParking::ParkingStatus_MAX;
const int MainParking::ParkingStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StopReasonCode_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_enum_descriptors[5];
}
bool StopReasonCode_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 200:
    case 201:
    case 202:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TargetLane::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetLane::kIdFieldNumber;
const int TargetLane::kStartSFieldNumber;
const int TargetLane::kEndSFieldNumber;
const int TargetLane::kSpeedLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetLane::TargetLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_TargetLane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.TargetLane)
}
TargetLane::TargetLane(const TargetLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&start_s_, &from.start_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_limit_) -
    reinterpret_cast<char*>(&start_s_)) + sizeof(speed_limit_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.TargetLane)
}

void TargetLane::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_limit_) -
      reinterpret_cast<char*>(&start_s_)) + sizeof(speed_limit_));
}

TargetLane::~TargetLane() {
  // @@protoc_insertion_point(destructor:apollo.planning.TargetLane)
  SharedDtor();
}

void TargetLane::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargetLane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetLane::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetLane& TargetLane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_TargetLane.base);
  return *internal_default_instance();
}


void TargetLane::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.TargetLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&start_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&speed_limit_) -
        reinterpret_cast<char*>(&start_s_)) + sizeof(speed_limit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TargetLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.TargetLane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.TargetLane.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double start_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_start_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_end_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double speed_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_speed_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.TargetLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.TargetLane)
  return false;
#undef DO_
}

void TargetLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.TargetLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.TargetLane.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional double start_s = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->start_s(), output);
  }

  // optional double end_s = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->end_s(), output);
  }

  // optional double speed_limit = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->speed_limit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.TargetLane)
}

::google::protobuf::uint8* TargetLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.TargetLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.TargetLane.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional double start_s = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->start_s(), target);
  }

  // optional double end_s = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->end_s(), target);
  }

  // optional double speed_limit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->speed_limit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.TargetLane)
  return target;
}

size_t TargetLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.TargetLane)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional double start_s = 2;
    if (has_start_s()) {
      total_size += 1 + 8;
    }

    // optional double end_s = 3;
    if (has_end_s()) {
      total_size += 1 + 8;
    }

    // optional double speed_limit = 4;
    if (has_speed_limit()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.TargetLane)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.TargetLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.TargetLane)
    MergeFrom(*source);
  }
}

void TargetLane::MergeFrom(const TargetLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.TargetLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      start_s_ = from.start_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      end_s_ = from.end_s_;
    }
    if (cached_has_bits & 0x00000008u) {
      speed_limit_ = from.speed_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TargetLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.TargetLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetLane::CopyFrom(const TargetLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.TargetLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetLane::IsInitialized() const {
  return true;
}

void TargetLane::Swap(TargetLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetLane::InternalSwap(TargetLane* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_s_, other->start_s_);
  swap(end_s_, other->end_s_);
  swap(speed_limit_, other->speed_limit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetLane::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectIgnore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectIgnore::ObjectIgnore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectIgnore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectIgnore)
}
ObjectIgnore::ObjectIgnore(const ObjectIgnore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectIgnore)
}

void ObjectIgnore::SharedCtor() {
}

ObjectIgnore::~ObjectIgnore() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectIgnore)
  SharedDtor();
}

void ObjectIgnore::SharedDtor() {
}

void ObjectIgnore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectIgnore::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectIgnore& ObjectIgnore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectIgnore.base);
  return *internal_default_instance();
}


void ObjectIgnore::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectIgnore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectIgnore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectIgnore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectIgnore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectIgnore)
  return false;
#undef DO_
}

void ObjectIgnore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectIgnore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectIgnore)
}

::google::protobuf::uint8* ObjectIgnore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectIgnore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectIgnore)
  return target;
}

size_t ObjectIgnore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectIgnore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectIgnore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectIgnore)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectIgnore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectIgnore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectIgnore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectIgnore)
    MergeFrom(*source);
  }
}

void ObjectIgnore::MergeFrom(const ObjectIgnore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectIgnore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjectIgnore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectIgnore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectIgnore::CopyFrom(const ObjectIgnore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectIgnore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectIgnore::IsInitialized() const {
  return true;
}

void ObjectIgnore::Swap(ObjectIgnore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectIgnore::InternalSwap(ObjectIgnore* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectIgnore::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectStop::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectStop_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectStop::clear_stop_point() {
  if (stop_point_ != NULL) stop_point_->Clear();
  clear_has_stop_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectStop::kReasonCodeFieldNumber;
const int ObjectStop::kDistanceSFieldNumber;
const int ObjectStop::kStopPointFieldNumber;
const int ObjectStop::kStopHeadingFieldNumber;
const int ObjectStop::kWaitForObstacleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectStop::ObjectStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectStop)
}
ObjectStop::ObjectStop(const ObjectStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      wait_for_obstacle_(from.wait_for_obstacle_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stop_point()) {
    stop_point_ = new ::apollo::common::PointENU(*from.stop_point_);
  } else {
    stop_point_ = NULL;
  }
  ::memcpy(&distance_s_, &from.distance_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_code_) -
    reinterpret_cast<char*>(&distance_s_)) + sizeof(reason_code_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectStop)
}

void ObjectStop::SharedCtor() {
  ::memset(&stop_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_heading_) -
      reinterpret_cast<char*>(&stop_point_)) + sizeof(stop_heading_));
  reason_code_ = 1;
}

ObjectStop::~ObjectStop() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectStop)
  SharedDtor();
}

void ObjectStop::SharedDtor() {
  if (this != internal_default_instance()) delete stop_point_;
}

void ObjectStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectStop::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectStop& ObjectStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStop.base);
  return *internal_default_instance();
}


void ObjectStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wait_for_obstacle_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(stop_point_ != NULL);
    stop_point_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&distance_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stop_heading_) -
        reinterpret_cast<char*>(&distance_s_)) + sizeof(stop_heading_));
    reason_code_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.StopReasonCode reason_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::StopReasonCode_IsValid(value)) {
            set_reason_code(static_cast< ::apollo::planning::StopReasonCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.PointENU stop_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double stop_heading = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_stop_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stop_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string wait_for_obstacle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_wait_for_obstacle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wait_for_obstacle(this->wait_for_obstacle_size() - 1).data(),
            static_cast<int>(this->wait_for_obstacle(this->wait_for_obstacle_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.ObjectStop.wait_for_obstacle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectStop)
  return false;
#undef DO_
}

void ObjectStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.StopReasonCode reason_code = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason_code(), output);
  }

  // optional double distance_s = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance_s(), output);
  }

  // optional .apollo.common.PointENU stop_point = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_stop_point(), output);
  }

  // optional double stop_heading = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->stop_heading(), output);
  }

  // repeated string wait_for_obstacle = 5;
  for (int i = 0, n = this->wait_for_obstacle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wait_for_obstacle(i).data(), static_cast<int>(this->wait_for_obstacle(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.ObjectStop.wait_for_obstacle");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->wait_for_obstacle(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectStop)
}

::google::protobuf::uint8* ObjectStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.StopReasonCode reason_code = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason_code(), target);
  }

  // optional double distance_s = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance_s(), target);
  }

  // optional .apollo.common.PointENU stop_point = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_stop_point(), deterministic, target);
  }

  // optional double stop_heading = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->stop_heading(), target);
  }

  // repeated string wait_for_obstacle = 5;
  for (int i = 0, n = this->wait_for_obstacle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wait_for_obstacle(i).data(), static_cast<int>(this->wait_for_obstacle(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.ObjectStop.wait_for_obstacle");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->wait_for_obstacle(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectStop)
  return target;
}

size_t ObjectStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string wait_for_obstacle = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->wait_for_obstacle_size());
  for (int i = 0, n = this->wait_for_obstacle_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->wait_for_obstacle(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.common.PointENU stop_point = 3;
    if (has_stop_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stop_point_);
    }

    // optional double distance_s = 2;
    if (has_distance_s()) {
      total_size += 1 + 8;
    }

    // optional double stop_heading = 4;
    if (has_stop_heading()) {
      total_size += 1 + 8;
    }

    // optional .apollo.planning.StopReasonCode reason_code = 1;
    if (has_reason_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectStop)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectStop)
    MergeFrom(*source);
  }
}

void ObjectStop::MergeFrom(const ObjectStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wait_for_obstacle_.MergeFrom(from.wait_for_obstacle_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stop_point()->::apollo::common::PointENU::MergeFrom(from.stop_point());
    }
    if (cached_has_bits & 0x00000002u) {
      distance_s_ = from.distance_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      stop_heading_ = from.stop_heading_;
    }
    if (cached_has_bits & 0x00000008u) {
      reason_code_ = from.reason_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectStop::CopyFrom(const ObjectStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectStop::IsInitialized() const {
  return true;
}

void ObjectStop::Swap(ObjectStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectStop::InternalSwap(ObjectStop* other) {
  using std::swap;
  wait_for_obstacle_.InternalSwap(CastToBase(&other->wait_for_obstacle_));
  swap(stop_point_, other->stop_point_);
  swap(distance_s_, other->distance_s_);
  swap(stop_heading_, other->stop_heading_);
  swap(reason_code_, other->reason_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectStop::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectNudge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectNudge::kTypeFieldNumber;
const int ObjectNudge::kDistanceLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectNudge::ObjectNudge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectNudge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectNudge)
}
ObjectNudge::ObjectNudge(const ObjectNudge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&distance_l_, &from.distance_l_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&distance_l_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectNudge)
}

void ObjectNudge::SharedCtor() {
  distance_l_ = 0;
  type_ = 1;
}

ObjectNudge::~ObjectNudge() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectNudge)
  SharedDtor();
}

void ObjectNudge::SharedDtor() {
}

void ObjectNudge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectNudge::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectNudge& ObjectNudge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectNudge.base);
  return *internal_default_instance();
}


void ObjectNudge::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectNudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    distance_l_ = 0;
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectNudge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectNudge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.ObjectNudge.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::ObjectNudge_Type_IsValid(value)) {
            set_type(static_cast< ::apollo::planning::ObjectNudge_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance_l = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectNudge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectNudge)
  return false;
#undef DO_
}

void ObjectNudge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectNudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ObjectNudge.Type type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional double distance_l = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance_l(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectNudge)
}

::google::protobuf::uint8* ObjectNudge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectNudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ObjectNudge.Type type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional double distance_l = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance_l(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectNudge)
  return target;
}

size_t ObjectNudge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectNudge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double distance_l = 2;
    if (has_distance_l()) {
      total_size += 1 + 8;
    }

    // optional .apollo.planning.ObjectNudge.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectNudge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectNudge)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectNudge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectNudge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectNudge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectNudge)
    MergeFrom(*source);
  }
}

void ObjectNudge::MergeFrom(const ObjectNudge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectNudge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      distance_l_ = from.distance_l_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectNudge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectNudge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectNudge::CopyFrom(const ObjectNudge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectNudge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectNudge::IsInitialized() const {
  return true;
}

void ObjectNudge::Swap(ObjectNudge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectNudge::InternalSwap(ObjectNudge* other) {
  using std::swap;
  swap(distance_l_, other->distance_l_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectNudge::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectYield::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectYield_default_instance_._instance.get_mutable()->fence_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectYield::clear_fence_point() {
  if (fence_point_ != NULL) fence_point_->Clear();
  clear_has_fence_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectYield::kDistanceSFieldNumber;
const int ObjectYield::kFencePointFieldNumber;
const int ObjectYield::kFenceHeadingFieldNumber;
const int ObjectYield::kTimeBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectYield::ObjectYield()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectYield.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectYield)
}
ObjectYield::ObjectYield(const ObjectYield& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fence_point()) {
    fence_point_ = new ::apollo::common::PointENU(*from.fence_point_);
  } else {
    fence_point_ = NULL;
  }
  ::memcpy(&distance_s_, &from.distance_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_buffer_) -
    reinterpret_cast<char*>(&distance_s_)) + sizeof(time_buffer_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectYield)
}

void ObjectYield::SharedCtor() {
  ::memset(&fence_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_buffer_) -
      reinterpret_cast<char*>(&fence_point_)) + sizeof(time_buffer_));
}

ObjectYield::~ObjectYield() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectYield)
  SharedDtor();
}

void ObjectYield::SharedDtor() {
  if (this != internal_default_instance()) delete fence_point_;
}

void ObjectYield::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectYield::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectYield& ObjectYield::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectYield.base);
  return *internal_default_instance();
}


void ObjectYield::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectYield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fence_point_ != NULL);
    fence_point_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&distance_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_buffer_) -
        reinterpret_cast<char*>(&distance_s_)) + sizeof(time_buffer_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectYield::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectYield)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_distance_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.PointENU fence_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fence_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double fence_heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_fence_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fence_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double time_buffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_time_buffer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectYield)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectYield)
  return false;
#undef DO_
}

void ObjectYield::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectYield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distance_s = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // optional .apollo.common.PointENU fence_point = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fence_point(), output);
  }

  // optional double fence_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->fence_heading(), output);
  }

  // optional double time_buffer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->time_buffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectYield)
}

::google::protobuf::uint8* ObjectYield::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectYield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distance_s = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // optional .apollo.common.PointENU fence_point = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fence_point(), deterministic, target);
  }

  // optional double fence_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->fence_heading(), target);
  }

  // optional double time_buffer = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->time_buffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectYield)
  return target;
}

size_t ObjectYield::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectYield)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.common.PointENU fence_point = 2;
    if (has_fence_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fence_point_);
    }

    // optional double distance_s = 1;
    if (has_distance_s()) {
      total_size += 1 + 8;
    }

    // optional double fence_heading = 3;
    if (has_fence_heading()) {
      total_size += 1 + 8;
    }

    // optional double time_buffer = 4;
    if (has_time_buffer()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectYield::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectYield)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectYield* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectYield>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectYield)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectYield)
    MergeFrom(*source);
  }
}

void ObjectYield::MergeFrom(const ObjectYield& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectYield)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fence_point()->::apollo::common::PointENU::MergeFrom(from.fence_point());
    }
    if (cached_has_bits & 0x00000002u) {
      distance_s_ = from.distance_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      fence_heading_ = from.fence_heading_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_buffer_ = from.time_buffer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectYield::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectYield)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectYield::CopyFrom(const ObjectYield& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectYield)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectYield::IsInitialized() const {
  return true;
}

void ObjectYield::Swap(ObjectYield* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectYield::InternalSwap(ObjectYield* other) {
  using std::swap;
  swap(fence_point_, other->fence_point_);
  swap(distance_s_, other->distance_s_);
  swap(fence_heading_, other->fence_heading_);
  swap(time_buffer_, other->time_buffer_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectYield::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectFollow::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectFollow_default_instance_._instance.get_mutable()->fence_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectFollow::clear_fence_point() {
  if (fence_point_ != NULL) fence_point_->Clear();
  clear_has_fence_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectFollow::kDistanceSFieldNumber;
const int ObjectFollow::kFencePointFieldNumber;
const int ObjectFollow::kFenceHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectFollow::ObjectFollow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectFollow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectFollow)
}
ObjectFollow::ObjectFollow(const ObjectFollow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fence_point()) {
    fence_point_ = new ::apollo::common::PointENU(*from.fence_point_);
  } else {
    fence_point_ = NULL;
  }
  ::memcpy(&distance_s_, &from.distance_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&fence_heading_) -
    reinterpret_cast<char*>(&distance_s_)) + sizeof(fence_heading_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectFollow)
}

void ObjectFollow::SharedCtor() {
  ::memset(&fence_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fence_heading_) -
      reinterpret_cast<char*>(&fence_point_)) + sizeof(fence_heading_));
}

ObjectFollow::~ObjectFollow() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectFollow)
  SharedDtor();
}

void ObjectFollow::SharedDtor() {
  if (this != internal_default_instance()) delete fence_point_;
}

void ObjectFollow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectFollow::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectFollow& ObjectFollow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectFollow.base);
  return *internal_default_instance();
}


void ObjectFollow::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectFollow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fence_point_ != NULL);
    fence_point_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&distance_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fence_heading_) -
        reinterpret_cast<char*>(&distance_s_)) + sizeof(fence_heading_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectFollow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectFollow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_distance_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.PointENU fence_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fence_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double fence_heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_fence_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fence_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectFollow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectFollow)
  return false;
#undef DO_
}

void ObjectFollow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectFollow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distance_s = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // optional .apollo.common.PointENU fence_point = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fence_point(), output);
  }

  // optional double fence_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->fence_heading(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectFollow)
}

::google::protobuf::uint8* ObjectFollow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectFollow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distance_s = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // optional .apollo.common.PointENU fence_point = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fence_point(), deterministic, target);
  }

  // optional double fence_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->fence_heading(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectFollow)
  return target;
}

size_t ObjectFollow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectFollow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.common.PointENU fence_point = 2;
    if (has_fence_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fence_point_);
    }

    // optional double distance_s = 1;
    if (has_distance_s()) {
      total_size += 1 + 8;
    }

    // optional double fence_heading = 3;
    if (has_fence_heading()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectFollow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectFollow)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectFollow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectFollow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectFollow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectFollow)
    MergeFrom(*source);
  }
}

void ObjectFollow::MergeFrom(const ObjectFollow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectFollow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fence_point()->::apollo::common::PointENU::MergeFrom(from.fence_point());
    }
    if (cached_has_bits & 0x00000002u) {
      distance_s_ = from.distance_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      fence_heading_ = from.fence_heading_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectFollow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectFollow::CopyFrom(const ObjectFollow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectFollow::IsInitialized() const {
  return true;
}

void ObjectFollow::Swap(ObjectFollow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectFollow::InternalSwap(ObjectFollow* other) {
  using std::swap;
  swap(fence_point_, other->fence_point_);
  swap(distance_s_, other->distance_s_);
  swap(fence_heading_, other->fence_heading_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectFollow::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectOvertake::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectOvertake_default_instance_._instance.get_mutable()->fence_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectOvertake::clear_fence_point() {
  if (fence_point_ != NULL) fence_point_->Clear();
  clear_has_fence_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectOvertake::kDistanceSFieldNumber;
const int ObjectOvertake::kFencePointFieldNumber;
const int ObjectOvertake::kFenceHeadingFieldNumber;
const int ObjectOvertake::kTimeBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectOvertake::ObjectOvertake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectOvertake.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectOvertake)
}
ObjectOvertake::ObjectOvertake(const ObjectOvertake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fence_point()) {
    fence_point_ = new ::apollo::common::PointENU(*from.fence_point_);
  } else {
    fence_point_ = NULL;
  }
  ::memcpy(&distance_s_, &from.distance_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_buffer_) -
    reinterpret_cast<char*>(&distance_s_)) + sizeof(time_buffer_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectOvertake)
}

void ObjectOvertake::SharedCtor() {
  ::memset(&fence_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_buffer_) -
      reinterpret_cast<char*>(&fence_point_)) + sizeof(time_buffer_));
}

ObjectOvertake::~ObjectOvertake() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectOvertake)
  SharedDtor();
}

void ObjectOvertake::SharedDtor() {
  if (this != internal_default_instance()) delete fence_point_;
}

void ObjectOvertake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectOvertake::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectOvertake& ObjectOvertake::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectOvertake.base);
  return *internal_default_instance();
}


void ObjectOvertake::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectOvertake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fence_point_ != NULL);
    fence_point_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&distance_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_buffer_) -
        reinterpret_cast<char*>(&distance_s_)) + sizeof(time_buffer_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectOvertake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectOvertake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_distance_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.PointENU fence_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fence_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double fence_heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_fence_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fence_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double time_buffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_time_buffer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectOvertake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectOvertake)
  return false;
#undef DO_
}

void ObjectOvertake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectOvertake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distance_s = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // optional .apollo.common.PointENU fence_point = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fence_point(), output);
  }

  // optional double fence_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->fence_heading(), output);
  }

  // optional double time_buffer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->time_buffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectOvertake)
}

::google::protobuf::uint8* ObjectOvertake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectOvertake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distance_s = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // optional .apollo.common.PointENU fence_point = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fence_point(), deterministic, target);
  }

  // optional double fence_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->fence_heading(), target);
  }

  // optional double time_buffer = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->time_buffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectOvertake)
  return target;
}

size_t ObjectOvertake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectOvertake)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.common.PointENU fence_point = 2;
    if (has_fence_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fence_point_);
    }

    // optional double distance_s = 1;
    if (has_distance_s()) {
      total_size += 1 + 8;
    }

    // optional double fence_heading = 3;
    if (has_fence_heading()) {
      total_size += 1 + 8;
    }

    // optional double time_buffer = 4;
    if (has_time_buffer()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectOvertake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectOvertake)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectOvertake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectOvertake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectOvertake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectOvertake)
    MergeFrom(*source);
  }
}

void ObjectOvertake::MergeFrom(const ObjectOvertake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectOvertake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fence_point()->::apollo::common::PointENU::MergeFrom(from.fence_point());
    }
    if (cached_has_bits & 0x00000002u) {
      distance_s_ = from.distance_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      fence_heading_ = from.fence_heading_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_buffer_ = from.time_buffer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectOvertake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectOvertake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectOvertake::CopyFrom(const ObjectOvertake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectOvertake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectOvertake::IsInitialized() const {
  return true;
}

void ObjectOvertake::Swap(ObjectOvertake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectOvertake::InternalSwap(ObjectOvertake* other) {
  using std::swap;
  swap(fence_point_, other->fence_point_);
  swap(distance_s_, other->distance_s_);
  swap(fence_heading_, other->fence_heading_);
  swap(time_buffer_, other->time_buffer_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectOvertake::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectSidePass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectSidePass::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectSidePass::ObjectSidePass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectSidePass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectSidePass)
}
ObjectSidePass::ObjectSidePass(const ObjectSidePass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectSidePass)
}

void ObjectSidePass::SharedCtor() {
  type_ = 1;
}

ObjectSidePass::~ObjectSidePass() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectSidePass)
  SharedDtor();
}

void ObjectSidePass::SharedDtor() {
}

void ObjectSidePass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectSidePass::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectSidePass& ObjectSidePass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectSidePass.base);
  return *internal_default_instance();
}


void ObjectSidePass::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectSidePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectSidePass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectSidePass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.ObjectSidePass.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::ObjectSidePass_Type_IsValid(value)) {
            set_type(static_cast< ::apollo::planning::ObjectSidePass_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectSidePass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectSidePass)
  return false;
#undef DO_
}

void ObjectSidePass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectSidePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ObjectSidePass.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectSidePass)
}

::google::protobuf::uint8* ObjectSidePass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectSidePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ObjectSidePass.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectSidePass)
  return target;
}

size_t ObjectSidePass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectSidePass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.planning.ObjectSidePass.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectSidePass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectSidePass)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectSidePass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectSidePass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectSidePass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectSidePass)
    MergeFrom(*source);
  }
}

void ObjectSidePass::MergeFrom(const ObjectSidePass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectSidePass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void ObjectSidePass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectSidePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectSidePass::CopyFrom(const ObjectSidePass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectSidePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectSidePass::IsInitialized() const {
  return true;
}

void ObjectSidePass::Swap(ObjectSidePass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectSidePass::InternalSwap(ObjectSidePass* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectSidePass::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectAvoid::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectAvoid::ObjectAvoid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectAvoid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectAvoid)
}
ObjectAvoid::ObjectAvoid(const ObjectAvoid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectAvoid)
}

void ObjectAvoid::SharedCtor() {
}

ObjectAvoid::~ObjectAvoid() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectAvoid)
  SharedDtor();
}

void ObjectAvoid::SharedDtor() {
}

void ObjectAvoid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectAvoid::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectAvoid& ObjectAvoid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectAvoid.base);
  return *internal_default_instance();
}


void ObjectAvoid::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectAvoid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectAvoid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectAvoid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectAvoid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectAvoid)
  return false;
#undef DO_
}

void ObjectAvoid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectAvoid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectAvoid)
}

::google::protobuf::uint8* ObjectAvoid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectAvoid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectAvoid)
  return target;
}

size_t ObjectAvoid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectAvoid)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectAvoid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectAvoid)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectAvoid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectAvoid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectAvoid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectAvoid)
    MergeFrom(*source);
  }
}

void ObjectAvoid::MergeFrom(const ObjectAvoid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectAvoid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjectAvoid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectAvoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectAvoid::CopyFrom(const ObjectAvoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectAvoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectAvoid::IsInitialized() const {
  return true;
}

void ObjectAvoid::Swap(ObjectAvoid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectAvoid::InternalSwap(ObjectAvoid* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectAvoid::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectStatus::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectStatus_default_instance_._instance.get_mutable()->motion_type_ = const_cast< ::apollo::planning::ObjectMotionType*>(
      ::apollo::planning::ObjectMotionType::internal_default_instance());
  ::apollo::planning::_ObjectStatus_default_instance_._instance.get_mutable()->decision_type_ = const_cast< ::apollo::planning::ObjectDecisionType*>(
      ::apollo::planning::ObjectDecisionType::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectStatus::kMotionTypeFieldNumber;
const int ObjectStatus::kDecisionTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectStatus::ObjectStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectStatus)
}
ObjectStatus::ObjectStatus(const ObjectStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motion_type()) {
    motion_type_ = new ::apollo::planning::ObjectMotionType(*from.motion_type_);
  } else {
    motion_type_ = NULL;
  }
  if (from.has_decision_type()) {
    decision_type_ = new ::apollo::planning::ObjectDecisionType(*from.decision_type_);
  } else {
    decision_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectStatus)
}

void ObjectStatus::SharedCtor() {
  ::memset(&motion_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&decision_type_) -
      reinterpret_cast<char*>(&motion_type_)) + sizeof(decision_type_));
}

ObjectStatus::~ObjectStatus() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectStatus)
  SharedDtor();
}

void ObjectStatus::SharedDtor() {
  if (this != internal_default_instance()) delete motion_type_;
  if (this != internal_default_instance()) delete decision_type_;
}

void ObjectStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectStatus::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectStatus& ObjectStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStatus.base);
  return *internal_default_instance();
}


void ObjectStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(motion_type_ != NULL);
      motion_type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(decision_type_ != NULL);
      decision_type_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.ObjectMotionType motion_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motion_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectDecisionType decision_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decision_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectStatus)
  return false;
#undef DO_
}

void ObjectStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ObjectMotionType motion_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_motion_type(), output);
  }

  // optional .apollo.planning.ObjectDecisionType decision_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_decision_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectStatus)
}

::google::protobuf::uint8* ObjectStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ObjectMotionType motion_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_motion_type(), deterministic, target);
  }

  // optional .apollo.planning.ObjectDecisionType decision_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_decision_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectStatus)
  return target;
}

size_t ObjectStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.planning.ObjectMotionType motion_type = 1;
    if (has_motion_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *motion_type_);
    }

    // optional .apollo.planning.ObjectDecisionType decision_type = 2;
    if (has_decision_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *decision_type_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectStatus)
    MergeFrom(*source);
  }
}

void ObjectStatus::MergeFrom(const ObjectStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_motion_type()->::apollo::planning::ObjectMotionType::MergeFrom(from.motion_type());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_decision_type()->::apollo::planning::ObjectDecisionType::MergeFrom(from.decision_type());
    }
  }
}

void ObjectStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectStatus::CopyFrom(const ObjectStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectStatus::IsInitialized() const {
  return true;
}

void ObjectStatus::Swap(ObjectStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectStatus::InternalSwap(ObjectStatus* other) {
  using std::swap;
  swap(motion_type_, other->motion_type_);
  swap(decision_type_, other->decision_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectStatus::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectStatic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectStatic::ObjectStatic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStatic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectStatic)
}
ObjectStatic::ObjectStatic(const ObjectStatic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectStatic)
}

void ObjectStatic::SharedCtor() {
}

ObjectStatic::~ObjectStatic() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectStatic)
  SharedDtor();
}

void ObjectStatic::SharedDtor() {
}

void ObjectStatic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectStatic::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectStatic& ObjectStatic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectStatic.base);
  return *internal_default_instance();
}


void ObjectStatic::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectStatic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectStatic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectStatic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectStatic)
  return false;
#undef DO_
}

void ObjectStatic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectStatic)
}

::google::protobuf::uint8* ObjectStatic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectStatic)
  return target;
}

size_t ObjectStatic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectStatic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectStatic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectStatic)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectStatic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectStatic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectStatic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectStatic)
    MergeFrom(*source);
  }
}

void ObjectStatic::MergeFrom(const ObjectStatic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectStatic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjectStatic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectStatic::CopyFrom(const ObjectStatic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectStatic::IsInitialized() const {
  return true;
}

void ObjectStatic::Swap(ObjectStatic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectStatic::InternalSwap(ObjectStatic* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectStatic::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDynamic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDynamic::ObjectDynamic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDynamic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectDynamic)
}
ObjectDynamic::ObjectDynamic(const ObjectDynamic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectDynamic)
}

void ObjectDynamic::SharedCtor() {
}

ObjectDynamic::~ObjectDynamic() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectDynamic)
  SharedDtor();
}

void ObjectDynamic::SharedDtor() {
}

void ObjectDynamic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDynamic::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDynamic& ObjectDynamic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDynamic.base);
  return *internal_default_instance();
}


void ObjectDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectDynamic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDynamic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectDynamic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectDynamic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectDynamic)
  return false;
#undef DO_
}

void ObjectDynamic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectDynamic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectDynamic)
}

::google::protobuf::uint8* ObjectDynamic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectDynamic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectDynamic)
  return target;
}

size_t ObjectDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectDynamic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDynamic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectDynamic)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDynamic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDynamic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectDynamic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectDynamic)
    MergeFrom(*source);
  }
}

void ObjectDynamic::MergeFrom(const ObjectDynamic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectDynamic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjectDynamic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDynamic::CopyFrom(const ObjectDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDynamic::IsInitialized() const {
  return true;
}

void ObjectDynamic::Swap(ObjectDynamic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDynamic::InternalSwap(ObjectDynamic* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDynamic::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectMotionType::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectMotionType_default_instance_.static__ = const_cast< ::apollo::planning::ObjectStatic*>(
      ::apollo::planning::ObjectStatic::internal_default_instance());
  ::apollo::planning::_ObjectMotionType_default_instance_.dynamic_ = const_cast< ::apollo::planning::ObjectDynamic*>(
      ::apollo::planning::ObjectDynamic::internal_default_instance());
}
void ObjectMotionType::set_allocated_static_(::apollo::planning::ObjectStatic* static_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_motion_tag();
  if (static_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      static_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, static_, submessage_arena);
    }
    set_has_static_();
    motion_tag_.static__ = static_;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectMotionType.static)
}
void ObjectMotionType::set_allocated_dynamic(::apollo::planning::ObjectDynamic* dynamic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_motion_tag();
  if (dynamic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dynamic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dynamic, submessage_arena);
    }
    set_has_dynamic();
    motion_tag_.dynamic_ = dynamic;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectMotionType.dynamic)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectMotionType::kStaticFieldNumber;
const int ObjectMotionType::kDynamicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectMotionType::ObjectMotionType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectMotionType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectMotionType)
}
ObjectMotionType::ObjectMotionType(const ObjectMotionType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_motion_tag();
  switch (from.motion_tag_case()) {
    case kStatic: {
      mutable_static_()->::apollo::planning::ObjectStatic::MergeFrom(from.static_());
      break;
    }
    case kDynamic: {
      mutable_dynamic()->::apollo::planning::ObjectDynamic::MergeFrom(from.dynamic());
      break;
    }
    case MOTION_TAG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectMotionType)
}

void ObjectMotionType::SharedCtor() {
  clear_has_motion_tag();
}

ObjectMotionType::~ObjectMotionType() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectMotionType)
  SharedDtor();
}

void ObjectMotionType::SharedDtor() {
  if (has_motion_tag()) {
    clear_motion_tag();
  }
}

void ObjectMotionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectMotionType::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectMotionType& ObjectMotionType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectMotionType.base);
  return *internal_default_instance();
}


void ObjectMotionType::clear_motion_tag() {
// @@protoc_insertion_point(one_of_clear_start:apollo.planning.ObjectMotionType)
  switch (motion_tag_case()) {
    case kStatic: {
      delete motion_tag_.static__;
      break;
    }
    case kDynamic: {
      delete motion_tag_.dynamic_;
      break;
    }
    case MOTION_TAG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MOTION_TAG_NOT_SET;
}


void ObjectMotionType::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectMotionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_motion_tag();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectMotionType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectMotionType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.ObjectStatic static = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_static_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectDynamic dynamic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dynamic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectMotionType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectMotionType)
  return false;
#undef DO_
}

void ObjectMotionType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectMotionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (motion_tag_case()) {
    case kStatic:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_static_(), output);
      break;
    case kDynamic:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_dynamic(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectMotionType)
}

::google::protobuf::uint8* ObjectMotionType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectMotionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (motion_tag_case()) {
    case kStatic:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_static_(), deterministic, target);
      break;
    case kDynamic:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_dynamic(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectMotionType)
  return target;
}

size_t ObjectMotionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectMotionType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (motion_tag_case()) {
    // optional .apollo.planning.ObjectStatic static = 1;
    case kStatic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *motion_tag_.static__);
      break;
    }
    // optional .apollo.planning.ObjectDynamic dynamic = 2;
    case kDynamic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *motion_tag_.dynamic_);
      break;
    }
    case MOTION_TAG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectMotionType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectMotionType)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectMotionType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectMotionType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectMotionType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectMotionType)
    MergeFrom(*source);
  }
}

void ObjectMotionType::MergeFrom(const ObjectMotionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectMotionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.motion_tag_case()) {
    case kStatic: {
      mutable_static_()->::apollo::planning::ObjectStatic::MergeFrom(from.static_());
      break;
    }
    case kDynamic: {
      mutable_dynamic()->::apollo::planning::ObjectDynamic::MergeFrom(from.dynamic());
      break;
    }
    case MOTION_TAG_NOT_SET: {
      break;
    }
  }
}

void ObjectMotionType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectMotionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectMotionType::CopyFrom(const ObjectMotionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectMotionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectMotionType::IsInitialized() const {
  return true;
}

void ObjectMotionType::Swap(ObjectMotionType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectMotionType::InternalSwap(ObjectMotionType* other) {
  using std::swap;
  swap(motion_tag_, other->motion_tag_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectMotionType::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDecisionType::InitAsDefaultInstance() {
  ::apollo::planning::_ObjectDecisionType_default_instance_.ignore_ = const_cast< ::apollo::planning::ObjectIgnore*>(
      ::apollo::planning::ObjectIgnore::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.stop_ = const_cast< ::apollo::planning::ObjectStop*>(
      ::apollo::planning::ObjectStop::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.follow_ = const_cast< ::apollo::planning::ObjectFollow*>(
      ::apollo::planning::ObjectFollow::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.yield_ = const_cast< ::apollo::planning::ObjectYield*>(
      ::apollo::planning::ObjectYield::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.overtake_ = const_cast< ::apollo::planning::ObjectOvertake*>(
      ::apollo::planning::ObjectOvertake::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.nudge_ = const_cast< ::apollo::planning::ObjectNudge*>(
      ::apollo::planning::ObjectNudge::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.avoid_ = const_cast< ::apollo::planning::ObjectAvoid*>(
      ::apollo::planning::ObjectAvoid::internal_default_instance());
  ::apollo::planning::_ObjectDecisionType_default_instance_.side_pass_ = const_cast< ::apollo::planning::ObjectSidePass*>(
      ::apollo::planning::ObjectSidePass::internal_default_instance());
}
void ObjectDecisionType::set_allocated_ignore(::apollo::planning::ObjectIgnore* ignore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (ignore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ignore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ignore, submessage_arena);
    }
    set_has_ignore();
    object_tag_.ignore_ = ignore;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.ignore)
}
void ObjectDecisionType::set_allocated_stop(::apollo::planning::ObjectStop* stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stop, submessage_arena);
    }
    set_has_stop();
    object_tag_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.stop)
}
void ObjectDecisionType::set_allocated_follow(::apollo::planning::ObjectFollow* follow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (follow) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      follow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, follow, submessage_arena);
    }
    set_has_follow();
    object_tag_.follow_ = follow;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.follow)
}
void ObjectDecisionType::set_allocated_yield(::apollo::planning::ObjectYield* yield) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (yield) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      yield = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, yield, submessage_arena);
    }
    set_has_yield();
    object_tag_.yield_ = yield;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.yield)
}
void ObjectDecisionType::set_allocated_overtake(::apollo::planning::ObjectOvertake* overtake) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (overtake) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      overtake = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, overtake, submessage_arena);
    }
    set_has_overtake();
    object_tag_.overtake_ = overtake;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.overtake)
}
void ObjectDecisionType::set_allocated_nudge(::apollo::planning::ObjectNudge* nudge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (nudge) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nudge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nudge, submessage_arena);
    }
    set_has_nudge();
    object_tag_.nudge_ = nudge;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.nudge)
}
void ObjectDecisionType::set_allocated_avoid(::apollo::planning::ObjectAvoid* avoid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (avoid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avoid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avoid, submessage_arena);
    }
    set_has_avoid();
    object_tag_.avoid_ = avoid;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.avoid)
}
void ObjectDecisionType::set_allocated_side_pass(::apollo::planning::ObjectSidePass* side_pass) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (side_pass) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      side_pass = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, side_pass, submessage_arena);
    }
    set_has_side_pass();
    object_tag_.side_pass_ = side_pass;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.ObjectDecisionType.side_pass)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDecisionType::kIgnoreFieldNumber;
const int ObjectDecisionType::kStopFieldNumber;
const int ObjectDecisionType::kFollowFieldNumber;
const int ObjectDecisionType::kYieldFieldNumber;
const int ObjectDecisionType::kOvertakeFieldNumber;
const int ObjectDecisionType::kNudgeFieldNumber;
const int ObjectDecisionType::kAvoidFieldNumber;
const int ObjectDecisionType::kSidePassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDecisionType::ObjectDecisionType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisionType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectDecisionType)
}
ObjectDecisionType::ObjectDecisionType(const ObjectDecisionType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_object_tag();
  switch (from.object_tag_case()) {
    case kIgnore: {
      mutable_ignore()->::apollo::planning::ObjectIgnore::MergeFrom(from.ignore());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::planning::ObjectStop::MergeFrom(from.stop());
      break;
    }
    case kFollow: {
      mutable_follow()->::apollo::planning::ObjectFollow::MergeFrom(from.follow());
      break;
    }
    case kYield: {
      mutable_yield()->::apollo::planning::ObjectYield::MergeFrom(from.yield());
      break;
    }
    case kOvertake: {
      mutable_overtake()->::apollo::planning::ObjectOvertake::MergeFrom(from.overtake());
      break;
    }
    case kNudge: {
      mutable_nudge()->::apollo::planning::ObjectNudge::MergeFrom(from.nudge());
      break;
    }
    case kAvoid: {
      mutable_avoid()->::apollo::planning::ObjectAvoid::MergeFrom(from.avoid());
      break;
    }
    case kSidePass: {
      mutable_side_pass()->::apollo::planning::ObjectSidePass::MergeFrom(from.side_pass());
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectDecisionType)
}

void ObjectDecisionType::SharedCtor() {
  clear_has_object_tag();
}

ObjectDecisionType::~ObjectDecisionType() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectDecisionType)
  SharedDtor();
}

void ObjectDecisionType::SharedDtor() {
  if (has_object_tag()) {
    clear_object_tag();
  }
}

void ObjectDecisionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDecisionType::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDecisionType& ObjectDecisionType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisionType.base);
  return *internal_default_instance();
}


void ObjectDecisionType::clear_object_tag() {
// @@protoc_insertion_point(one_of_clear_start:apollo.planning.ObjectDecisionType)
  switch (object_tag_case()) {
    case kIgnore: {
      delete object_tag_.ignore_;
      break;
    }
    case kStop: {
      delete object_tag_.stop_;
      break;
    }
    case kFollow: {
      delete object_tag_.follow_;
      break;
    }
    case kYield: {
      delete object_tag_.yield_;
      break;
    }
    case kOvertake: {
      delete object_tag_.overtake_;
      break;
    }
    case kNudge: {
      delete object_tag_.nudge_;
      break;
    }
    case kAvoid: {
      delete object_tag_.avoid_;
      break;
    }
    case kSidePass: {
      delete object_tag_.side_pass_;
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OBJECT_TAG_NOT_SET;
}


void ObjectDecisionType::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectDecisionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_object_tag();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDecisionType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectDecisionType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.ObjectIgnore ignore = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ignore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectStop stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectFollow follow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_follow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectYield yield = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yield()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectOvertake overtake = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_overtake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectNudge nudge = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nudge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectAvoid avoid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avoid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectSidePass side_pass = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_side_pass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectDecisionType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectDecisionType)
  return false;
#undef DO_
}

void ObjectDecisionType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectDecisionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (object_tag_case()) {
    case kIgnore:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_ignore(), output);
      break;
    case kStop:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_stop(), output);
      break;
    case kFollow:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_follow(), output);
      break;
    case kYield:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_yield(), output);
      break;
    case kOvertake:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_overtake(), output);
      break;
    case kNudge:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_nudge(), output);
      break;
    case kAvoid:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_avoid(), output);
      break;
    case kSidePass:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_side_pass(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectDecisionType)
}

::google::protobuf::uint8* ObjectDecisionType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectDecisionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (object_tag_case()) {
    case kIgnore:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_ignore(), deterministic, target);
      break;
    case kStop:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_stop(), deterministic, target);
      break;
    case kFollow:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_follow(), deterministic, target);
      break;
    case kYield:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_yield(), deterministic, target);
      break;
    case kOvertake:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_overtake(), deterministic, target);
      break;
    case kNudge:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_nudge(), deterministic, target);
      break;
    case kAvoid:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_avoid(), deterministic, target);
      break;
    case kSidePass:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_side_pass(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectDecisionType)
  return target;
}

size_t ObjectDecisionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectDecisionType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (object_tag_case()) {
    // optional .apollo.planning.ObjectIgnore ignore = 1;
    case kIgnore: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.ignore_);
      break;
    }
    // optional .apollo.planning.ObjectStop stop = 2;
    case kStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.stop_);
      break;
    }
    // optional .apollo.planning.ObjectFollow follow = 3;
    case kFollow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.follow_);
      break;
    }
    // optional .apollo.planning.ObjectYield yield = 4;
    case kYield: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.yield_);
      break;
    }
    // optional .apollo.planning.ObjectOvertake overtake = 5;
    case kOvertake: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.overtake_);
      break;
    }
    // optional .apollo.planning.ObjectNudge nudge = 6;
    case kNudge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.nudge_);
      break;
    }
    // optional .apollo.planning.ObjectAvoid avoid = 7;
    case kAvoid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.avoid_);
      break;
    }
    // optional .apollo.planning.ObjectSidePass side_pass = 8;
    case kSidePass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.side_pass_);
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDecisionType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectDecisionType)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDecisionType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDecisionType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectDecisionType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectDecisionType)
    MergeFrom(*source);
  }
}

void ObjectDecisionType::MergeFrom(const ObjectDecisionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectDecisionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.object_tag_case()) {
    case kIgnore: {
      mutable_ignore()->::apollo::planning::ObjectIgnore::MergeFrom(from.ignore());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::planning::ObjectStop::MergeFrom(from.stop());
      break;
    }
    case kFollow: {
      mutable_follow()->::apollo::planning::ObjectFollow::MergeFrom(from.follow());
      break;
    }
    case kYield: {
      mutable_yield()->::apollo::planning::ObjectYield::MergeFrom(from.yield());
      break;
    }
    case kOvertake: {
      mutable_overtake()->::apollo::planning::ObjectOvertake::MergeFrom(from.overtake());
      break;
    }
    case kNudge: {
      mutable_nudge()->::apollo::planning::ObjectNudge::MergeFrom(from.nudge());
      break;
    }
    case kAvoid: {
      mutable_avoid()->::apollo::planning::ObjectAvoid::MergeFrom(from.avoid());
      break;
    }
    case kSidePass: {
      mutable_side_pass()->::apollo::planning::ObjectSidePass::MergeFrom(from.side_pass());
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
}

void ObjectDecisionType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectDecisionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDecisionType::CopyFrom(const ObjectDecisionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectDecisionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDecisionType::IsInitialized() const {
  return true;
}

void ObjectDecisionType::Swap(ObjectDecisionType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDecisionType::InternalSwap(ObjectDecisionType* other) {
  using std::swap;
  swap(object_tag_, other->object_tag_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDecisionType::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDecision::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDecision::kIdFieldNumber;
const int ObjectDecision::kPerceptionIdFieldNumber;
const int ObjectDecision::kObjectDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDecision::ObjectDecision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecision.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectDecision)
}
ObjectDecision::ObjectDecision(const ObjectDecision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      object_decision_(from.object_decision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  perception_id_ = from.perception_id_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectDecision)
}

void ObjectDecision::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perception_id_ = 0;
}

ObjectDecision::~ObjectDecision() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectDecision)
  SharedDtor();
}

void ObjectDecision::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectDecision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDecision::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDecision& ObjectDecision::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecision.base);
  return *internal_default_instance();
}


void ObjectDecision::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_decision_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  perception_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDecision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectDecision)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.ObjectDecision.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 perception_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_perception_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perception_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning.ObjectDecisionType object_decision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_object_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectDecision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectDecision)
  return false;
#undef DO_
}

void ObjectDecision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.ObjectDecision.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional int32 perception_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->perception_id(), output);
  }

  // repeated .apollo.planning.ObjectDecisionType object_decision = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_decision_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->object_decision(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectDecision)
}

::google::protobuf::uint8* ObjectDecision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.ObjectDecision.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional int32 perception_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->perception_id(), target);
  }

  // repeated .apollo.planning.ObjectDecisionType object_decision = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_decision_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->object_decision(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectDecision)
  return target;
}

size_t ObjectDecision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectDecision)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning.ObjectDecisionType object_decision = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->object_decision_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object_decision(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional int32 perception_id = 2;
    if (has_perception_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->perception_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDecision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectDecision)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDecision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDecision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectDecision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectDecision)
    MergeFrom(*source);
  }
}

void ObjectDecision::MergeFrom(const ObjectDecision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectDecision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_decision_.MergeFrom(from.object_decision_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      perception_id_ = from.perception_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDecision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDecision::CopyFrom(const ObjectDecision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDecision::IsInitialized() const {
  return true;
}

void ObjectDecision::Swap(ObjectDecision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDecision::InternalSwap(ObjectDecision* other) {
  using std::swap;
  CastToBase(&object_decision_)->InternalSwap(CastToBase(&other->object_decision_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(perception_id_, other->perception_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDecision::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDecisions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDecisions::kDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDecisions::ObjectDecisions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.ObjectDecisions)
}
ObjectDecisions::ObjectDecisions(const ObjectDecisions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      decision_(from.decision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.ObjectDecisions)
}

void ObjectDecisions::SharedCtor() {
}

ObjectDecisions::~ObjectDecisions() {
  // @@protoc_insertion_point(destructor:apollo.planning.ObjectDecisions)
  SharedDtor();
}

void ObjectDecisions::SharedDtor() {
}

void ObjectDecisions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDecisions::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDecisions& ObjectDecisions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisions.base);
  return *internal_default_instance();
}


void ObjectDecisions::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.ObjectDecisions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decision_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDecisions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.ObjectDecisions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.planning.ObjectDecision decision = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.ObjectDecisions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.ObjectDecisions)
  return false;
#undef DO_
}

void ObjectDecisions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.ObjectDecisions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.planning.ObjectDecision decision = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->decision(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.ObjectDecisions)
}

::google::protobuf::uint8* ObjectDecisions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.ObjectDecisions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.planning.ObjectDecision decision = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->decision(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.ObjectDecisions)
  return target;
}

size_t ObjectDecisions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.ObjectDecisions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning.ObjectDecision decision = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->decision_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->decision(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDecisions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.ObjectDecisions)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDecisions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDecisions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.ObjectDecisions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.ObjectDecisions)
    MergeFrom(*source);
  }
}

void ObjectDecisions::MergeFrom(const ObjectDecisions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.ObjectDecisions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  decision_.MergeFrom(from.decision_);
}

void ObjectDecisions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.ObjectDecisions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDecisions::CopyFrom(const ObjectDecisions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.ObjectDecisions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDecisions::IsInitialized() const {
  return true;
}

void ObjectDecisions::Swap(ObjectDecisions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDecisions::InternalSwap(ObjectDecisions* other) {
  using std::swap;
  CastToBase(&decision_)->InternalSwap(CastToBase(&other->decision_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDecisions::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainStop::InitAsDefaultInstance() {
  ::apollo::planning::_MainStop_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void MainStop::clear_stop_point() {
  if (stop_point_ != NULL) stop_point_->Clear();
  clear_has_stop_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainStop::kReasonCodeFieldNumber;
const int MainStop::kReasonFieldNumber;
const int MainStop::kStopPointFieldNumber;
const int MainStop::kStopHeadingFieldNumber;
const int MainStop::kChangeLaneTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainStop::MainStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainStop)
}
MainStop::MainStop(const MainStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_stop_point()) {
    stop_point_ = new ::apollo::common::PointENU(*from.stop_point_);
  } else {
    stop_point_ = NULL;
  }
  ::memcpy(&stop_heading_, &from.stop_heading_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_code_) -
    reinterpret_cast<char*>(&stop_heading_)) + sizeof(reason_code_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainStop)
}

void MainStop::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stop_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_lane_type_) -
      reinterpret_cast<char*>(&stop_point_)) + sizeof(change_lane_type_));
  reason_code_ = 1;
}

MainStop::~MainStop() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainStop)
  SharedDtor();
}

void MainStop::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stop_point_;
}

void MainStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainStop::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainStop& MainStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainStop.base);
  return *internal_default_instance();
}


void MainStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      reason_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stop_point_ != NULL);
      stop_point_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&stop_heading_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&change_lane_type_) -
        reinterpret_cast<char*>(&stop_heading_)) + sizeof(change_lane_type_));
    reason_code_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.StopReasonCode reason_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::StopReasonCode_IsValid(value)) {
            set_reason_code(static_cast< ::apollo::planning::StopReasonCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.MainStop.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.PointENU stop_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double stop_heading = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_stop_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stop_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.routing.ChangeLaneType change_lane_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::routing::ChangeLaneType_IsValid(value)) {
            set_change_lane_type(static_cast< ::apollo::routing::ChangeLaneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainStop)
  return false;
#undef DO_
}

void MainStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.StopReasonCode reason_code = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason_code(), output);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.MainStop.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // optional .apollo.common.PointENU stop_point = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_stop_point(), output);
  }

  // optional double stop_heading = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->stop_heading(), output);
  }

  // optional .apollo.routing.ChangeLaneType change_lane_type = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->change_lane_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainStop)
}

::google::protobuf::uint8* MainStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.StopReasonCode reason_code = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason_code(), target);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.MainStop.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // optional .apollo.common.PointENU stop_point = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_stop_point(), deterministic, target);
  }

  // optional double stop_heading = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->stop_heading(), target);
  }

  // optional .apollo.routing.ChangeLaneType change_lane_type = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->change_lane_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainStop)
  return target;
}

size_t MainStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional .apollo.common.PointENU stop_point = 3;
    if (has_stop_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stop_point_);
    }

    // optional double stop_heading = 4;
    if (has_stop_heading()) {
      total_size += 1 + 8;
    }

    // optional .apollo.routing.ChangeLaneType change_lane_type = 5;
    if (has_change_lane_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_lane_type());
    }

    // optional .apollo.planning.StopReasonCode reason_code = 1;
    if (has_reason_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainStop)
  GOOGLE_DCHECK_NE(&from, this);
  const MainStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainStop)
    MergeFrom(*source);
  }
}

void MainStop::MergeFrom(const MainStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stop_point()->::apollo::common::PointENU::MergeFrom(from.stop_point());
    }
    if (cached_has_bits & 0x00000004u) {
      stop_heading_ = from.stop_heading_;
    }
    if (cached_has_bits & 0x00000008u) {
      change_lane_type_ = from.change_lane_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      reason_code_ = from.reason_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MainStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainStop::CopyFrom(const MainStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainStop::IsInitialized() const {
  return true;
}

void MainStop::Swap(MainStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainStop::InternalSwap(MainStop* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stop_point_, other->stop_point_);
  swap(stop_heading_, other->stop_heading_);
  swap(change_lane_type_, other->change_lane_type_);
  swap(reason_code_, other->reason_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainStop::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmergencyStopHardBrake::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmergencyStopHardBrake::EmergencyStopHardBrake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_EmergencyStopHardBrake.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.EmergencyStopHardBrake)
}
EmergencyStopHardBrake::EmergencyStopHardBrake(const EmergencyStopHardBrake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.EmergencyStopHardBrake)
}

void EmergencyStopHardBrake::SharedCtor() {
}

EmergencyStopHardBrake::~EmergencyStopHardBrake() {
  // @@protoc_insertion_point(destructor:apollo.planning.EmergencyStopHardBrake)
  SharedDtor();
}

void EmergencyStopHardBrake::SharedDtor() {
}

void EmergencyStopHardBrake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmergencyStopHardBrake::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmergencyStopHardBrake& EmergencyStopHardBrake::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_EmergencyStopHardBrake.base);
  return *internal_default_instance();
}


void EmergencyStopHardBrake::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.EmergencyStopHardBrake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmergencyStopHardBrake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.EmergencyStopHardBrake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.EmergencyStopHardBrake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.EmergencyStopHardBrake)
  return false;
#undef DO_
}

void EmergencyStopHardBrake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.EmergencyStopHardBrake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.EmergencyStopHardBrake)
}

::google::protobuf::uint8* EmergencyStopHardBrake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.EmergencyStopHardBrake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.EmergencyStopHardBrake)
  return target;
}

size_t EmergencyStopHardBrake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.EmergencyStopHardBrake)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmergencyStopHardBrake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.EmergencyStopHardBrake)
  GOOGLE_DCHECK_NE(&from, this);
  const EmergencyStopHardBrake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmergencyStopHardBrake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.EmergencyStopHardBrake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.EmergencyStopHardBrake)
    MergeFrom(*source);
  }
}

void EmergencyStopHardBrake::MergeFrom(const EmergencyStopHardBrake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.EmergencyStopHardBrake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmergencyStopHardBrake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.EmergencyStopHardBrake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmergencyStopHardBrake::CopyFrom(const EmergencyStopHardBrake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.EmergencyStopHardBrake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmergencyStopHardBrake::IsInitialized() const {
  return true;
}

void EmergencyStopHardBrake::Swap(EmergencyStopHardBrake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmergencyStopHardBrake::InternalSwap(EmergencyStopHardBrake* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmergencyStopHardBrake::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmergencyStopCruiseToStop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmergencyStopCruiseToStop::EmergencyStopCruiseToStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_EmergencyStopCruiseToStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.EmergencyStopCruiseToStop)
}
EmergencyStopCruiseToStop::EmergencyStopCruiseToStop(const EmergencyStopCruiseToStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.EmergencyStopCruiseToStop)
}

void EmergencyStopCruiseToStop::SharedCtor() {
}

EmergencyStopCruiseToStop::~EmergencyStopCruiseToStop() {
  // @@protoc_insertion_point(destructor:apollo.planning.EmergencyStopCruiseToStop)
  SharedDtor();
}

void EmergencyStopCruiseToStop::SharedDtor() {
}

void EmergencyStopCruiseToStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmergencyStopCruiseToStop::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmergencyStopCruiseToStop& EmergencyStopCruiseToStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_EmergencyStopCruiseToStop.base);
  return *internal_default_instance();
}


void EmergencyStopCruiseToStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.EmergencyStopCruiseToStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmergencyStopCruiseToStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.EmergencyStopCruiseToStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.EmergencyStopCruiseToStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.EmergencyStopCruiseToStop)
  return false;
#undef DO_
}

void EmergencyStopCruiseToStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.EmergencyStopCruiseToStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.EmergencyStopCruiseToStop)
}

::google::protobuf::uint8* EmergencyStopCruiseToStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.EmergencyStopCruiseToStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.EmergencyStopCruiseToStop)
  return target;
}

size_t EmergencyStopCruiseToStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.EmergencyStopCruiseToStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmergencyStopCruiseToStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.EmergencyStopCruiseToStop)
  GOOGLE_DCHECK_NE(&from, this);
  const EmergencyStopCruiseToStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmergencyStopCruiseToStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.EmergencyStopCruiseToStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.EmergencyStopCruiseToStop)
    MergeFrom(*source);
  }
}

void EmergencyStopCruiseToStop::MergeFrom(const EmergencyStopCruiseToStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.EmergencyStopCruiseToStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmergencyStopCruiseToStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.EmergencyStopCruiseToStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmergencyStopCruiseToStop::CopyFrom(const EmergencyStopCruiseToStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.EmergencyStopCruiseToStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmergencyStopCruiseToStop::IsInitialized() const {
  return true;
}

void EmergencyStopCruiseToStop::Swap(EmergencyStopCruiseToStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmergencyStopCruiseToStop::InternalSwap(EmergencyStopCruiseToStop* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmergencyStopCruiseToStop::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainEmergencyStop::InitAsDefaultInstance() {
  ::apollo::planning::_MainEmergencyStop_default_instance_.hard_brake_ = const_cast< ::apollo::planning::EmergencyStopHardBrake*>(
      ::apollo::planning::EmergencyStopHardBrake::internal_default_instance());
  ::apollo::planning::_MainEmergencyStop_default_instance_.cruise_to_stop_ = const_cast< ::apollo::planning::EmergencyStopCruiseToStop*>(
      ::apollo::planning::EmergencyStopCruiseToStop::internal_default_instance());
}
void MainEmergencyStop::set_allocated_hard_brake(::apollo::planning::EmergencyStopHardBrake* hard_brake) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (hard_brake) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hard_brake = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hard_brake, submessage_arena);
    }
    set_has_hard_brake();
    task_.hard_brake_ = hard_brake;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainEmergencyStop.hard_brake)
}
void MainEmergencyStop::set_allocated_cruise_to_stop(::apollo::planning::EmergencyStopCruiseToStop* cruise_to_stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (cruise_to_stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cruise_to_stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cruise_to_stop, submessage_arena);
    }
    set_has_cruise_to_stop();
    task_.cruise_to_stop_ = cruise_to_stop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainEmergencyStop.cruise_to_stop)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainEmergencyStop::kReasonCodeFieldNumber;
const int MainEmergencyStop::kReasonFieldNumber;
const int MainEmergencyStop::kHardBrakeFieldNumber;
const int MainEmergencyStop::kCruiseToStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainEmergencyStop::MainEmergencyStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainEmergencyStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainEmergencyStop)
}
MainEmergencyStop::MainEmergencyStop(const MainEmergencyStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  reason_code_ = from.reason_code_;
  clear_has_task();
  switch (from.task_case()) {
    case kHardBrake: {
      mutable_hard_brake()->::apollo::planning::EmergencyStopHardBrake::MergeFrom(from.hard_brake());
      break;
    }
    case kCruiseToStop: {
      mutable_cruise_to_stop()->::apollo::planning::EmergencyStopCruiseToStop::MergeFrom(from.cruise_to_stop());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainEmergencyStop)
}

void MainEmergencyStop::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_code_ = 1;
  clear_has_task();
}

MainEmergencyStop::~MainEmergencyStop() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainEmergencyStop)
  SharedDtor();
}

void MainEmergencyStop::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_task()) {
    clear_task();
  }
}

void MainEmergencyStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainEmergencyStop::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainEmergencyStop& MainEmergencyStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainEmergencyStop.base);
  return *internal_default_instance();
}


void MainEmergencyStop::clear_task() {
// @@protoc_insertion_point(one_of_clear_start:apollo.planning.MainEmergencyStop)
  switch (task_case()) {
    case kHardBrake: {
      delete task_.hard_brake_;
      break;
    }
    case kCruiseToStop: {
      delete task_.cruise_to_stop_;
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TASK_NOT_SET;
}


void MainEmergencyStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainEmergencyStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      reason_.ClearNonDefaultToEmptyNoArena();
    }
    reason_code_ = 1;
  }
  clear_task();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainEmergencyStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainEmergencyStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.MainEmergencyStop.ReasonCode reason_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::MainEmergencyStop_ReasonCode_IsValid(value)) {
            set_reason_code(static_cast< ::apollo::planning::MainEmergencyStop_ReasonCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.MainEmergencyStop.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.EmergencyStopHardBrake hard_brake = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hard_brake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.EmergencyStopCruiseToStop cruise_to_stop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cruise_to_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainEmergencyStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainEmergencyStop)
  return false;
#undef DO_
}

void MainEmergencyStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainEmergencyStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainEmergencyStop.ReasonCode reason_code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason_code(), output);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.MainEmergencyStop.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  switch (task_case()) {
    case kHardBrake:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_hard_brake(), output);
      break;
    case kCruiseToStop:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_cruise_to_stop(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainEmergencyStop)
}

::google::protobuf::uint8* MainEmergencyStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainEmergencyStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainEmergencyStop.ReasonCode reason_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason_code(), target);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.MainEmergencyStop.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  switch (task_case()) {
    case kHardBrake:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_hard_brake(), deterministic, target);
      break;
    case kCruiseToStop:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_cruise_to_stop(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainEmergencyStop)
  return target;
}

size_t MainEmergencyStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainEmergencyStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional .apollo.planning.MainEmergencyStop.ReasonCode reason_code = 1;
    if (has_reason_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason_code());
    }

  }
  switch (task_case()) {
    // optional .apollo.planning.EmergencyStopHardBrake hard_brake = 3;
    case kHardBrake: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.hard_brake_);
      break;
    }
    // optional .apollo.planning.EmergencyStopCruiseToStop cruise_to_stop = 4;
    case kCruiseToStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.cruise_to_stop_);
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainEmergencyStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainEmergencyStop)
  GOOGLE_DCHECK_NE(&from, this);
  const MainEmergencyStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainEmergencyStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainEmergencyStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainEmergencyStop)
    MergeFrom(*source);
  }
}

void MainEmergencyStop::MergeFrom(const MainEmergencyStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainEmergencyStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000002u) {
      reason_code_ = from.reason_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.task_case()) {
    case kHardBrake: {
      mutable_hard_brake()->::apollo::planning::EmergencyStopHardBrake::MergeFrom(from.hard_brake());
      break;
    }
    case kCruiseToStop: {
      mutable_cruise_to_stop()->::apollo::planning::EmergencyStopCruiseToStop::MergeFrom(from.cruise_to_stop());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
}

void MainEmergencyStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainEmergencyStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainEmergencyStop::CopyFrom(const MainEmergencyStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainEmergencyStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainEmergencyStop::IsInitialized() const {
  return true;
}

void MainEmergencyStop::Swap(MainEmergencyStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainEmergencyStop::InternalSwap(MainEmergencyStop* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reason_code_, other->reason_code_);
  swap(task_, other->task_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainEmergencyStop::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainCruise::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainCruise::kChangeLaneTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainCruise::MainCruise()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainCruise.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainCruise)
}
MainCruise::MainCruise(const MainCruise& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  change_lane_type_ = from.change_lane_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainCruise)
}

void MainCruise::SharedCtor() {
  change_lane_type_ = 0;
}

MainCruise::~MainCruise() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainCruise)
  SharedDtor();
}

void MainCruise::SharedDtor() {
}

void MainCruise::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainCruise::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainCruise& MainCruise::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainCruise.base);
  return *internal_default_instance();
}


void MainCruise::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainCruise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  change_lane_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainCruise::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainCruise)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.routing.ChangeLaneType change_lane_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::routing::ChangeLaneType_IsValid(value)) {
            set_change_lane_type(static_cast< ::apollo::routing::ChangeLaneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainCruise)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainCruise)
  return false;
#undef DO_
}

void MainCruise::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainCruise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.routing.ChangeLaneType change_lane_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->change_lane_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainCruise)
}

::google::protobuf::uint8* MainCruise::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainCruise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.routing.ChangeLaneType change_lane_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->change_lane_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainCruise)
  return target;
}

size_t MainCruise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainCruise)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.routing.ChangeLaneType change_lane_type = 1;
  if (has_change_lane_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_lane_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainCruise::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainCruise)
  GOOGLE_DCHECK_NE(&from, this);
  const MainCruise* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainCruise>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainCruise)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainCruise)
    MergeFrom(*source);
  }
}

void MainCruise::MergeFrom(const MainCruise& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainCruise)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_change_lane_type()) {
    set_change_lane_type(from.change_lane_type());
  }
}

void MainCruise::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainCruise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCruise::CopyFrom(const MainCruise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainCruise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCruise::IsInitialized() const {
  return true;
}

void MainCruise::Swap(MainCruise* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainCruise::InternalSwap(MainCruise* other) {
  using std::swap;
  swap(change_lane_type_, other->change_lane_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainCruise::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainChangeLane::InitAsDefaultInstance() {
  ::apollo::planning::_MainChangeLane_default_instance_._instance.get_mutable()->default_lane_stop_ = const_cast< ::apollo::planning::MainStop*>(
      ::apollo::planning::MainStop::internal_default_instance());
  ::apollo::planning::_MainChangeLane_default_instance_._instance.get_mutable()->target_lane_stop_ = const_cast< ::apollo::planning::MainStop*>(
      ::apollo::planning::MainStop::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainChangeLane::kTypeFieldNumber;
const int MainChangeLane::kDefaultLaneFieldNumber;
const int MainChangeLane::kDefaultLaneStopFieldNumber;
const int MainChangeLane::kTargetLaneStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainChangeLane::MainChangeLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainChangeLane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainChangeLane)
}
MainChangeLane::MainChangeLane(const MainChangeLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      default_lane_(from.default_lane_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_default_lane_stop()) {
    default_lane_stop_ = new ::apollo::planning::MainStop(*from.default_lane_stop_);
  } else {
    default_lane_stop_ = NULL;
  }
  if (from.has_target_lane_stop()) {
    target_lane_stop_ = new ::apollo::planning::MainStop(*from.target_lane_stop_);
  } else {
    target_lane_stop_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainChangeLane)
}

void MainChangeLane::SharedCtor() {
  ::memset(&default_lane_stop_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_lane_stop_) -
      reinterpret_cast<char*>(&default_lane_stop_)) + sizeof(target_lane_stop_));
  type_ = 1;
}

MainChangeLane::~MainChangeLane() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainChangeLane)
  SharedDtor();
}

void MainChangeLane::SharedDtor() {
  if (this != internal_default_instance()) delete default_lane_stop_;
  if (this != internal_default_instance()) delete target_lane_stop_;
}

void MainChangeLane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainChangeLane::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainChangeLane& MainChangeLane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainChangeLane.base);
  return *internal_default_instance();
}


void MainChangeLane::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainChangeLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  default_lane_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_lane_stop_ != NULL);
      default_lane_stop_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(target_lane_stop_ != NULL);
      target_lane_stop_->Clear();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainChangeLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainChangeLane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.MainChangeLane.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::MainChangeLane_Type_IsValid(value)) {
            set_type(static_cast< ::apollo::planning::MainChangeLane_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning.TargetLane default_lane = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_default_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainStop default_lane_stop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_lane_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainStop target_lane_stop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_lane_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainChangeLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainChangeLane)
  return false;
#undef DO_
}

void MainChangeLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainChangeLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainChangeLane.Type type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .apollo.planning.TargetLane default_lane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->default_lane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->default_lane(static_cast<int>(i)),
      output);
  }

  // optional .apollo.planning.MainStop default_lane_stop = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_default_lane_stop(), output);
  }

  // optional .apollo.planning.MainStop target_lane_stop = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_target_lane_stop(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainChangeLane)
}

::google::protobuf::uint8* MainChangeLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainChangeLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainChangeLane.Type type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .apollo.planning.TargetLane default_lane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->default_lane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->default_lane(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.planning.MainStop default_lane_stop = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_default_lane_stop(), deterministic, target);
  }

  // optional .apollo.planning.MainStop target_lane_stop = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_target_lane_stop(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainChangeLane)
  return target;
}

size_t MainChangeLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainChangeLane)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning.TargetLane default_lane = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->default_lane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->default_lane(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.planning.MainStop default_lane_stop = 3;
    if (has_default_lane_stop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_lane_stop_);
    }

    // optional .apollo.planning.MainStop target_lane_stop = 4;
    if (has_target_lane_stop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *target_lane_stop_);
    }

    // optional .apollo.planning.MainChangeLane.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainChangeLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainChangeLane)
  GOOGLE_DCHECK_NE(&from, this);
  const MainChangeLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainChangeLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainChangeLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainChangeLane)
    MergeFrom(*source);
  }
}

void MainChangeLane::MergeFrom(const MainChangeLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainChangeLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  default_lane_.MergeFrom(from.default_lane_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_default_lane_stop()->::apollo::planning::MainStop::MergeFrom(from.default_lane_stop());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_target_lane_stop()->::apollo::planning::MainStop::MergeFrom(from.target_lane_stop());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MainChangeLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainChangeLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainChangeLane::CopyFrom(const MainChangeLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainChangeLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainChangeLane::IsInitialized() const {
  return true;
}

void MainChangeLane::Swap(MainChangeLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainChangeLane::InternalSwap(MainChangeLane* other) {
  using std::swap;
  CastToBase(&default_lane_)->InternalSwap(CastToBase(&other->default_lane_));
  swap(default_lane_stop_, other->default_lane_stop_);
  swap(target_lane_stop_, other->target_lane_stop_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainChangeLane::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainMissionComplete::InitAsDefaultInstance() {
  ::apollo::planning::_MainMissionComplete_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void MainMissionComplete::clear_stop_point() {
  if (stop_point_ != NULL) stop_point_->Clear();
  clear_has_stop_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainMissionComplete::kStopPointFieldNumber;
const int MainMissionComplete::kStopHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainMissionComplete::MainMissionComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainMissionComplete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainMissionComplete)
}
MainMissionComplete::MainMissionComplete(const MainMissionComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stop_point()) {
    stop_point_ = new ::apollo::common::PointENU(*from.stop_point_);
  } else {
    stop_point_ = NULL;
  }
  stop_heading_ = from.stop_heading_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainMissionComplete)
}

void MainMissionComplete::SharedCtor() {
  ::memset(&stop_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_heading_) -
      reinterpret_cast<char*>(&stop_point_)) + sizeof(stop_heading_));
}

MainMissionComplete::~MainMissionComplete() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainMissionComplete)
  SharedDtor();
}

void MainMissionComplete::SharedDtor() {
  if (this != internal_default_instance()) delete stop_point_;
}

void MainMissionComplete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainMissionComplete::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainMissionComplete& MainMissionComplete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainMissionComplete.base);
  return *internal_default_instance();
}


void MainMissionComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainMissionComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(stop_point_ != NULL);
    stop_point_->Clear();
  }
  stop_heading_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainMissionComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainMissionComplete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.PointENU stop_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double stop_heading = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_stop_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stop_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainMissionComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainMissionComplete)
  return false;
#undef DO_
}

void MainMissionComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainMissionComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.PointENU stop_point = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_stop_point(), output);
  }

  // optional double stop_heading = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->stop_heading(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainMissionComplete)
}

::google::protobuf::uint8* MainMissionComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainMissionComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.PointENU stop_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_stop_point(), deterministic, target);
  }

  // optional double stop_heading = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->stop_heading(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainMissionComplete)
  return target;
}

size_t MainMissionComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainMissionComplete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.common.PointENU stop_point = 1;
    if (has_stop_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stop_point_);
    }

    // optional double stop_heading = 2;
    if (has_stop_heading()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainMissionComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainMissionComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const MainMissionComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainMissionComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainMissionComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainMissionComplete)
    MergeFrom(*source);
  }
}

void MainMissionComplete::MergeFrom(const MainMissionComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainMissionComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stop_point()->::apollo::common::PointENU::MergeFrom(from.stop_point());
    }
    if (cached_has_bits & 0x00000002u) {
      stop_heading_ = from.stop_heading_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MainMissionComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainMissionComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainMissionComplete::CopyFrom(const MainMissionComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainMissionComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainMissionComplete::IsInitialized() const {
  return true;
}

void MainMissionComplete::Swap(MainMissionComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainMissionComplete::InternalSwap(MainMissionComplete* other) {
  using std::swap;
  swap(stop_point_, other->stop_point_);
  swap(stop_heading_, other->stop_heading_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainMissionComplete::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainNotReady::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainNotReady::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainNotReady::MainNotReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainNotReady.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainNotReady)
}
MainNotReady::MainNotReady(const MainNotReady& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainNotReady)
}

void MainNotReady::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MainNotReady::~MainNotReady() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainNotReady)
  SharedDtor();
}

void MainNotReady::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MainNotReady::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainNotReady::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainNotReady& MainNotReady::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainNotReady.base);
  return *internal_default_instance();
}


void MainNotReady::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainNotReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reason_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainNotReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainNotReady)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.MainNotReady.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainNotReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainNotReady)
  return false;
#undef DO_
}

void MainNotReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainNotReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string reason = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.MainNotReady.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainNotReady)
}

::google::protobuf::uint8* MainNotReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainNotReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string reason = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.MainNotReady.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainNotReady)
  return target;
}

size_t MainNotReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainNotReady)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string reason = 1;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainNotReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainNotReady)
  GOOGLE_DCHECK_NE(&from, this);
  const MainNotReady* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainNotReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainNotReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainNotReady)
    MergeFrom(*source);
  }
}

void MainNotReady::MergeFrom(const MainNotReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainNotReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reason()) {
    set_has_reason();
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
}

void MainNotReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainNotReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainNotReady::CopyFrom(const MainNotReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainNotReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainNotReady::IsInitialized() const {
  return true;
}

void MainNotReady::Swap(MainNotReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainNotReady::InternalSwap(MainNotReady* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainNotReady::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainParking::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainParking::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainParking::MainParking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainParking.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainParking)
}
MainParking::MainParking(const MainParking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainParking)
}

void MainParking::SharedCtor() {
  status_ = 1;
}

MainParking::~MainParking() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainParking)
  SharedDtor();
}

void MainParking::SharedDtor() {
}

void MainParking::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainParking::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainParking& MainParking::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainParking.base);
  return *internal_default_instance();
}


void MainParking::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainParking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainParking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainParking)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.MainParking.ParkingStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::MainParking_ParkingStatus_IsValid(value)) {
            set_status(static_cast< ::apollo::planning::MainParking_ParkingStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainParking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainParking)
  return false;
#undef DO_
}

void MainParking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainParking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainParking.ParkingStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainParking)
}

::google::protobuf::uint8* MainParking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainParking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainParking.ParkingStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainParking)
  return target;
}

size_t MainParking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainParking)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.planning.MainParking.ParkingStatus status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainParking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainParking)
  GOOGLE_DCHECK_NE(&from, this);
  const MainParking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainParking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainParking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainParking)
    MergeFrom(*source);
  }
}

void MainParking::MergeFrom(const MainParking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainParking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void MainParking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainParking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainParking::CopyFrom(const MainParking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainParking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainParking::IsInitialized() const {
  return true;
}

void MainParking::Swap(MainParking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainParking::InternalSwap(MainParking* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainParking::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainDecision::InitAsDefaultInstance() {
  ::apollo::planning::_MainDecision_default_instance_.cruise_ = const_cast< ::apollo::planning::MainCruise*>(
      ::apollo::planning::MainCruise::internal_default_instance());
  ::apollo::planning::_MainDecision_default_instance_.stop_ = const_cast< ::apollo::planning::MainStop*>(
      ::apollo::planning::MainStop::internal_default_instance());
  ::apollo::planning::_MainDecision_default_instance_.estop_ = const_cast< ::apollo::planning::MainEmergencyStop*>(
      ::apollo::planning::MainEmergencyStop::internal_default_instance());
  ::apollo::planning::_MainDecision_default_instance_.change_lane_ = const_cast< ::apollo::planning::MainChangeLane*>(
      ::apollo::planning::MainChangeLane::internal_default_instance());
  ::apollo::planning::_MainDecision_default_instance_.mission_complete_ = const_cast< ::apollo::planning::MainMissionComplete*>(
      ::apollo::planning::MainMissionComplete::internal_default_instance());
  ::apollo::planning::_MainDecision_default_instance_.not_ready_ = const_cast< ::apollo::planning::MainNotReady*>(
      ::apollo::planning::MainNotReady::internal_default_instance());
  ::apollo::planning::_MainDecision_default_instance_.parking_ = const_cast< ::apollo::planning::MainParking*>(
      ::apollo::planning::MainParking::internal_default_instance());
}
void MainDecision::set_allocated_cruise(::apollo::planning::MainCruise* cruise) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (cruise) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cruise = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cruise, submessage_arena);
    }
    set_has_cruise();
    task_.cruise_ = cruise;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.cruise)
}
void MainDecision::set_allocated_stop(::apollo::planning::MainStop* stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stop, submessage_arena);
    }
    set_has_stop();
    task_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.stop)
}
void MainDecision::set_allocated_estop(::apollo::planning::MainEmergencyStop* estop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (estop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      estop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, estop, submessage_arena);
    }
    set_has_estop();
    task_.estop_ = estop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.estop)
}
void MainDecision::set_allocated_change_lane(::apollo::planning::MainChangeLane* change_lane) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (change_lane) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      change_lane = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, change_lane, submessage_arena);
    }
    set_has_change_lane();
    task_.change_lane_ = change_lane;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.change_lane)
}
void MainDecision::set_allocated_mission_complete(::apollo::planning::MainMissionComplete* mission_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (mission_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mission_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mission_complete, submessage_arena);
    }
    set_has_mission_complete();
    task_.mission_complete_ = mission_complete;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.mission_complete)
}
void MainDecision::set_allocated_not_ready(::apollo::planning::MainNotReady* not_ready) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (not_ready) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      not_ready = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, not_ready, submessage_arena);
    }
    set_has_not_ready();
    task_.not_ready_ = not_ready;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.not_ready)
}
void MainDecision::set_allocated_parking(::apollo::planning::MainParking* parking) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (parking) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parking = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parking, submessage_arena);
    }
    set_has_parking();
    task_.parking_ = parking;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.MainDecision.parking)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainDecision::kCruiseFieldNumber;
const int MainDecision::kStopFieldNumber;
const int MainDecision::kEstopFieldNumber;
const int MainDecision::kChangeLaneFieldNumber;
const int MainDecision::kMissionCompleteFieldNumber;
const int MainDecision::kNotReadyFieldNumber;
const int MainDecision::kParkingFieldNumber;
const int MainDecision::kTargetLaneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainDecision::MainDecision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainDecision.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.MainDecision)
}
MainDecision::MainDecision(const MainDecision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      target_lane_(from.target_lane_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_task();
  switch (from.task_case()) {
    case kCruise: {
      mutable_cruise()->::apollo::planning::MainCruise::MergeFrom(from.cruise());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::planning::MainStop::MergeFrom(from.stop());
      break;
    }
    case kEstop: {
      mutable_estop()->::apollo::planning::MainEmergencyStop::MergeFrom(from.estop());
      break;
    }
    case kChangeLane: {
      mutable_change_lane()->::apollo::planning::MainChangeLane::MergeFrom(from.change_lane());
      break;
    }
    case kMissionComplete: {
      mutable_mission_complete()->::apollo::planning::MainMissionComplete::MergeFrom(from.mission_complete());
      break;
    }
    case kNotReady: {
      mutable_not_ready()->::apollo::planning::MainNotReady::MergeFrom(from.not_ready());
      break;
    }
    case kParking: {
      mutable_parking()->::apollo::planning::MainParking::MergeFrom(from.parking());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.MainDecision)
}

void MainDecision::SharedCtor() {
  clear_has_task();
}

MainDecision::~MainDecision() {
  // @@protoc_insertion_point(destructor:apollo.planning.MainDecision)
  SharedDtor();
}

void MainDecision::SharedDtor() {
  if (has_task()) {
    clear_task();
  }
}

void MainDecision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainDecision::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainDecision& MainDecision::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_MainDecision.base);
  return *internal_default_instance();
}


void MainDecision::clear_task() {
// @@protoc_insertion_point(one_of_clear_start:apollo.planning.MainDecision)
  switch (task_case()) {
    case kCruise: {
      delete task_.cruise_;
      break;
    }
    case kStop: {
      delete task_.stop_;
      break;
    }
    case kEstop: {
      delete task_.estop_;
      break;
    }
    case kChangeLane: {
      delete task_.change_lane_;
      break;
    }
    case kMissionComplete: {
      delete task_.mission_complete_;
      break;
    }
    case kNotReady: {
      delete task_.not_ready_;
      break;
    }
    case kParking: {
      delete task_.parking_;
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TASK_NOT_SET;
}


void MainDecision::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.MainDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_lane_.Clear();
  clear_task();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainDecision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.MainDecision)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.MainCruise cruise = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cruise()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainStop stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainEmergencyStop estop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_estop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainChangeLane change_lane = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_change_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning.TargetLane target_lane = 5 [deprecated = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_target_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainMissionComplete mission_complete = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mission_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainNotReady not_ready = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_not_ready()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.MainParking parking = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parking()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.MainDecision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.MainDecision)
  return false;
#undef DO_
}

void MainDecision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.MainDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (task_case()) {
    case kCruise:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_cruise(), output);
      break;
    case kStop:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_stop(), output);
      break;
    case kEstop:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_estop(), output);
      break;
    case kChangeLane:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_change_lane(), output);
      break;
    default: ;
  }
  // repeated .apollo.planning.TargetLane target_lane = 5 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_lane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->target_lane(static_cast<int>(i)),
      output);
  }

  switch (task_case()) {
    case kMissionComplete:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_mission_complete(), output);
      break;
    case kNotReady:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_not_ready(), output);
      break;
    case kParking:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_parking(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.MainDecision)
}

::google::protobuf::uint8* MainDecision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.MainDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (task_case()) {
    case kCruise:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_cruise(), deterministic, target);
      break;
    case kStop:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_stop(), deterministic, target);
      break;
    case kEstop:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_estop(), deterministic, target);
      break;
    case kChangeLane:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_change_lane(), deterministic, target);
      break;
    default: ;
  }
  // repeated .apollo.planning.TargetLane target_lane = 5 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_lane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->target_lane(static_cast<int>(i)), deterministic, target);
  }

  switch (task_case()) {
    case kMissionComplete:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_mission_complete(), deterministic, target);
      break;
    case kNotReady:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_not_ready(), deterministic, target);
      break;
    case kParking:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_parking(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.MainDecision)
  return target;
}

size_t MainDecision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.MainDecision)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning.TargetLane target_lane = 5 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->target_lane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->target_lane(static_cast<int>(i)));
    }
  }

  switch (task_case()) {
    // optional .apollo.planning.MainCruise cruise = 1;
    case kCruise: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.cruise_);
      break;
    }
    // optional .apollo.planning.MainStop stop = 2;
    case kStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.stop_);
      break;
    }
    // optional .apollo.planning.MainEmergencyStop estop = 3;
    case kEstop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.estop_);
      break;
    }
    // optional .apollo.planning.MainChangeLane change_lane = 4 [deprecated = true];
    case kChangeLane: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.change_lane_);
      break;
    }
    // optional .apollo.planning.MainMissionComplete mission_complete = 6;
    case kMissionComplete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.mission_complete_);
      break;
    }
    // optional .apollo.planning.MainNotReady not_ready = 7;
    case kNotReady: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.not_ready_);
      break;
    }
    // optional .apollo.planning.MainParking parking = 8;
    case kParking: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.parking_);
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainDecision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.MainDecision)
  GOOGLE_DCHECK_NE(&from, this);
  const MainDecision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainDecision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.MainDecision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.MainDecision)
    MergeFrom(*source);
  }
}

void MainDecision::MergeFrom(const MainDecision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.MainDecision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_lane_.MergeFrom(from.target_lane_);
  switch (from.task_case()) {
    case kCruise: {
      mutable_cruise()->::apollo::planning::MainCruise::MergeFrom(from.cruise());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::planning::MainStop::MergeFrom(from.stop());
      break;
    }
    case kEstop: {
      mutable_estop()->::apollo::planning::MainEmergencyStop::MergeFrom(from.estop());
      break;
    }
    case kChangeLane: {
      mutable_change_lane()->::apollo::planning::MainChangeLane::MergeFrom(from.change_lane());
      break;
    }
    case kMissionComplete: {
      mutable_mission_complete()->::apollo::planning::MainMissionComplete::MergeFrom(from.mission_complete());
      break;
    }
    case kNotReady: {
      mutable_not_ready()->::apollo::planning::MainNotReady::MergeFrom(from.not_ready());
      break;
    }
    case kParking: {
      mutable_parking()->::apollo::planning::MainParking::MergeFrom(from.parking());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
}

void MainDecision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.MainDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainDecision::CopyFrom(const MainDecision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.MainDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainDecision::IsInitialized() const {
  return true;
}

void MainDecision::Swap(MainDecision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainDecision::InternalSwap(MainDecision* other) {
  using std::swap;
  CastToBase(&target_lane_)->InternalSwap(CastToBase(&other->target_lane_));
  swap(task_, other->task_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainDecision::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecisionResult::InitAsDefaultInstance() {
  ::apollo::planning::_DecisionResult_default_instance_._instance.get_mutable()->main_decision_ = const_cast< ::apollo::planning::MainDecision*>(
      ::apollo::planning::MainDecision::internal_default_instance());
  ::apollo::planning::_DecisionResult_default_instance_._instance.get_mutable()->object_decision_ = const_cast< ::apollo::planning::ObjectDecisions*>(
      ::apollo::planning::ObjectDecisions::internal_default_instance());
  ::apollo::planning::_DecisionResult_default_instance_._instance.get_mutable()->vehicle_signal_ = const_cast< ::apollo::common::VehicleSignal*>(
      ::apollo::common::VehicleSignal::internal_default_instance());
}
void DecisionResult::clear_vehicle_signal() {
  if (vehicle_signal_ != NULL) vehicle_signal_->Clear();
  clear_has_vehicle_signal();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecisionResult::kMainDecisionFieldNumber;
const int DecisionResult::kObjectDecisionFieldNumber;
const int DecisionResult::kVehicleSignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecisionResult::DecisionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_DecisionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.DecisionResult)
}
DecisionResult::DecisionResult(const DecisionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_main_decision()) {
    main_decision_ = new ::apollo::planning::MainDecision(*from.main_decision_);
  } else {
    main_decision_ = NULL;
  }
  if (from.has_object_decision()) {
    object_decision_ = new ::apollo::planning::ObjectDecisions(*from.object_decision_);
  } else {
    object_decision_ = NULL;
  }
  if (from.has_vehicle_signal()) {
    vehicle_signal_ = new ::apollo::common::VehicleSignal(*from.vehicle_signal_);
  } else {
    vehicle_signal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning.DecisionResult)
}

void DecisionResult::SharedCtor() {
  ::memset(&main_decision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vehicle_signal_) -
      reinterpret_cast<char*>(&main_decision_)) + sizeof(vehicle_signal_));
}

DecisionResult::~DecisionResult() {
  // @@protoc_insertion_point(destructor:apollo.planning.DecisionResult)
  SharedDtor();
}

void DecisionResult::SharedDtor() {
  if (this != internal_default_instance()) delete main_decision_;
  if (this != internal_default_instance()) delete object_decision_;
  if (this != internal_default_instance()) delete vehicle_signal_;
}

void DecisionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecisionResult::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecisionResult& DecisionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_DecisionResult.base);
  return *internal_default_instance();
}


void DecisionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.DecisionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(main_decision_ != NULL);
      main_decision_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(object_decision_ != NULL);
      object_decision_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(vehicle_signal_ != NULL);
      vehicle_signal_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DecisionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.DecisionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.MainDecision main_decision = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_main_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectDecisions object_decision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.VehicleSignal vehicle_signal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.DecisionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.DecisionResult)
  return false;
#undef DO_
}

void DecisionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.DecisionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainDecision main_decision = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_main_decision(), output);
  }

  // optional .apollo.planning.ObjectDecisions object_decision = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_object_decision(), output);
  }

  // optional .apollo.common.VehicleSignal vehicle_signal = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_vehicle_signal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.DecisionResult)
}

::google::protobuf::uint8* DecisionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.DecisionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.MainDecision main_decision = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_main_decision(), deterministic, target);
  }

  // optional .apollo.planning.ObjectDecisions object_decision = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_object_decision(), deterministic, target);
  }

  // optional .apollo.common.VehicleSignal vehicle_signal = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_vehicle_signal(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.DecisionResult)
  return target;
}

size_t DecisionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.DecisionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.planning.MainDecision main_decision = 1;
    if (has_main_decision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *main_decision_);
    }

    // optional .apollo.planning.ObjectDecisions object_decision = 2;
    if (has_object_decision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_decision_);
    }

    // optional .apollo.common.VehicleSignal vehicle_signal = 3;
    if (has_vehicle_signal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vehicle_signal_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecisionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.DecisionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DecisionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecisionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.DecisionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.DecisionResult)
    MergeFrom(*source);
  }
}

void DecisionResult::MergeFrom(const DecisionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.DecisionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_main_decision()->::apollo::planning::MainDecision::MergeFrom(from.main_decision());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_object_decision()->::apollo::planning::ObjectDecisions::MergeFrom(from.object_decision());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_vehicle_signal()->::apollo::common::VehicleSignal::MergeFrom(from.vehicle_signal());
    }
  }
}

void DecisionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.DecisionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecisionResult::CopyFrom(const DecisionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.DecisionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecisionResult::IsInitialized() const {
  return true;
}

void DecisionResult::Swap(DecisionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecisionResult::InternalSwap(DecisionResult* other) {
  using std::swap;
  swap(main_decision_, other->main_decision_);
  swap(object_decision_, other->object_decision_);
  swap(vehicle_signal_, other->vehicle_signal_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecisionResult::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::TargetLane* Arena::CreateMaybeMessage< ::apollo::planning::TargetLane >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::TargetLane >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectIgnore* Arena::CreateMaybeMessage< ::apollo::planning::ObjectIgnore >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectIgnore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectStop* Arena::CreateMaybeMessage< ::apollo::planning::ObjectStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectNudge* Arena::CreateMaybeMessage< ::apollo::planning::ObjectNudge >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectNudge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectYield* Arena::CreateMaybeMessage< ::apollo::planning::ObjectYield >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectYield >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectFollow* Arena::CreateMaybeMessage< ::apollo::planning::ObjectFollow >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectFollow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectOvertake* Arena::CreateMaybeMessage< ::apollo::planning::ObjectOvertake >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectOvertake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectSidePass* Arena::CreateMaybeMessage< ::apollo::planning::ObjectSidePass >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectSidePass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectAvoid* Arena::CreateMaybeMessage< ::apollo::planning::ObjectAvoid >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectAvoid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectStatus* Arena::CreateMaybeMessage< ::apollo::planning::ObjectStatus >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectStatic* Arena::CreateMaybeMessage< ::apollo::planning::ObjectStatic >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectStatic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectDynamic* Arena::CreateMaybeMessage< ::apollo::planning::ObjectDynamic >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectDynamic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectMotionType* Arena::CreateMaybeMessage< ::apollo::planning::ObjectMotionType >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectMotionType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectDecisionType* Arena::CreateMaybeMessage< ::apollo::planning::ObjectDecisionType >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectDecisionType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectDecision* Arena::CreateMaybeMessage< ::apollo::planning::ObjectDecision >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectDecision >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::ObjectDecisions* Arena::CreateMaybeMessage< ::apollo::planning::ObjectDecisions >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::ObjectDecisions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainStop* Arena::CreateMaybeMessage< ::apollo::planning::MainStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::EmergencyStopHardBrake* Arena::CreateMaybeMessage< ::apollo::planning::EmergencyStopHardBrake >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::EmergencyStopHardBrake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::EmergencyStopCruiseToStop* Arena::CreateMaybeMessage< ::apollo::planning::EmergencyStopCruiseToStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::EmergencyStopCruiseToStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainEmergencyStop* Arena::CreateMaybeMessage< ::apollo::planning::MainEmergencyStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainEmergencyStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainCruise* Arena::CreateMaybeMessage< ::apollo::planning::MainCruise >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainCruise >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainChangeLane* Arena::CreateMaybeMessage< ::apollo::planning::MainChangeLane >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainChangeLane >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainMissionComplete* Arena::CreateMaybeMessage< ::apollo::planning::MainMissionComplete >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainMissionComplete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainNotReady* Arena::CreateMaybeMessage< ::apollo::planning::MainNotReady >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainNotReady >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainParking* Arena::CreateMaybeMessage< ::apollo::planning::MainParking >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainParking >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::MainDecision* Arena::CreateMaybeMessage< ::apollo::planning::MainDecision >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::MainDecision >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::DecisionResult* Arena::CreateMaybeMessage< ::apollo::planning::DecisionResult >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::DecisionResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

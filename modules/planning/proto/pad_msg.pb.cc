// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/pad_msg.proto

#include "modules/planning/proto/pad_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace apollo {
namespace planning {
class PadMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PadMessage>
      _instance;
} _PadMessage_default_instance_;
}  // namespace planning
}  // namespace apollo
namespace protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto {
static void InitDefaultsPadMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning::_PadMessage_default_instance_;
    new (ptr) ::apollo::planning::PadMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning::PadMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PadMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPadMessage}, {
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PadMessage.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::PadMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::PadMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::PadMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning::PadMessage, action_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::planning::PadMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning::_PadMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/planning/proto/pad_msg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$modules/planning/proto/pad_msg.proto\022\017"
      "apollo.planning\032!modules/common/proto/he"
      "ader.proto\"c\n\nPadMessage\022%\n\006header\030\001 \001(\013"
      "2\025.apollo.common.Header\022.\n\006action\030\002 \001(\0162"
      "\036.apollo.planning.DrivingAction*t\n\rDrivi"
      "ngAction\022\010\n\004NONE\020d\022\n\n\006FOLLOW\020\000\022\017\n\013CHANGE"
      "_LEFT\020\001\022\020\n\014CHANGE_RIGHT\020\002\022\r\n\tPULL_OVER\020\003"
      "\022\010\n\004STOP\020\004\022\021\n\rRESUME_CRUISE\020\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 309);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/planning/proto/pad_msg.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto
namespace apollo {
namespace planning {
const ::google::protobuf::EnumDescriptor* DrivingAction_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::file_level_enum_descriptors[0];
}
bool DrivingAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 100:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PadMessage::InitAsDefaultInstance() {
  ::apollo::planning::_PadMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
}
void PadMessage::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PadMessage::kHeaderFieldNumber;
const int PadMessage::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PadMessage::PadMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::scc_info_PadMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.PadMessage)
}
PadMessage::PadMessage(const PadMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning.PadMessage)
}

void PadMessage::SharedCtor() {
  header_ = NULL;
  action_ = 100;
}

PadMessage::~PadMessage() {
  // @@protoc_insertion_point(destructor:apollo.planning.PadMessage)
  SharedDtor();
}

void PadMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void PadMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PadMessage::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PadMessage& PadMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::scc_info_PadMessage.base);
  return *internal_default_instance();
}


void PadMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.PadMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    action_ = 100;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PadMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.PadMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.DrivingAction action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::DrivingAction_IsValid(value)) {
            set_action(static_cast< ::apollo::planning::DrivingAction >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.PadMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.PadMessage)
  return false;
#undef DO_
}

void PadMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.PadMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // optional .apollo.planning.DrivingAction action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.PadMessage)
}

::google::protobuf::uint8* PadMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.PadMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // optional .apollo.planning.DrivingAction action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.PadMessage)
  return target;
}

size_t PadMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.PadMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional .apollo.planning.DrivingAction action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PadMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.PadMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PadMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PadMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.PadMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.PadMessage)
    MergeFrom(*source);
  }
}

void PadMessage::MergeFrom(const PadMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.PadMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PadMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.PadMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PadMessage::CopyFrom(const PadMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.PadMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PadMessage::IsInitialized() const {
  return true;
}

void PadMessage::Swap(PadMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PadMessage::InternalSwap(PadMessage* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PadMessage::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning::PadMessage* Arena::CreateMaybeMessage< ::apollo::planning::PadMessage >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning::PadMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/planning_internal.proto

#include "modules/planning/proto/planning_internal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcanbus_2fproto_2fchassis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcanbus_2fproto_2fchassis_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_Chassis;
}  // namespace protobuf_modules_2fcanbus_2fproto_2fchassis_2eproto
namespace protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointENU;
}  // namespace protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto
namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SLPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SpeedPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Path;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Trajectory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VehicleMotion;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TrajectoryPoint;
}  // namespace protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto
namespace protobuf_modules_2fdreamview_2fproto_2fchart_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fdreamview_2fproto_2fchart_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Chart;
}  // namespace protobuf_modules_2fdreamview_2fproto_2fchart_2eproto
namespace protobuf_modules_2flocalization_2fproto_2flocalization_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2flocalization_2fproto_2flocalization_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_LocalizationEstimate;
}  // namespace protobuf_modules_2flocalization_2fproto_2flocalization_2eproto
namespace protobuf_modules_2fmap_2frelative_5fmap_2fproto_2fnavigation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fmap_2frelative_5fmap_2fproto_2fnavigation_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_MapMsg;
}  // namespace protobuf_modules_2fmap_2frelative_5fmap_2fproto_2fnavigation_2eproto
namespace protobuf_modules_2fplanning_2fproto_2fdecision_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_ObjectDecisionType;
}  // namespace protobuf_modules_2fplanning_2fproto_2fdecision_2eproto
namespace protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CostComponents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LatticeStPixel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReferenceLineDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STGraphDebug_STGraphKernelCuiseRef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STGraphDebug_STGraphKernelFollowRef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STGraphDebug_STGraphSpeedConstraint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScenarioDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SignalLightDebug_SignalDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SmootherDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AutoTuningTrainingData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DecisionTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HybridModelDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LatticeStTraining;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PullOverDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SLFrameDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SampleLayerDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SignalLightDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SpeedPlan;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StGraphBoundaryDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Trajectories;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<22> scc_info_PlanningData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DpPolyGraphDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObstacleDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_OpenSpaceDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_STGraphDebug;
}  // namespace protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto
namespace protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SLBoundary;
}  // namespace protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto
namespace protobuf_modules_2frouting_2fproto_2frouting_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2frouting_2fproto_2frouting_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LaneSegment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2frouting_2fproto_2frouting_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_RoutingResponse;
}  // namespace protobuf_modules_2frouting_2fproto_2frouting_2eproto
namespace apollo {
namespace planning_internal {
class DebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Debug>
      _instance;
} _Debug_default_instance_;
class SpeedPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpeedPlan>
      _instance;
} _SpeedPlan_default_instance_;
class StGraphBoundaryDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StGraphBoundaryDebug>
      _instance;
} _StGraphBoundaryDebug_default_instance_;
class SLFrameDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLFrameDebug>
      _instance;
} _SLFrameDebug_default_instance_;
class STGraphDebug_STGraphSpeedConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphSpeedConstraint>
      _instance;
} _STGraphDebug_STGraphSpeedConstraint_default_instance_;
class STGraphDebug_STGraphKernelCuiseRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphKernelCuiseRef>
      _instance;
} _STGraphDebug_STGraphKernelCuiseRef_default_instance_;
class STGraphDebug_STGraphKernelFollowRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphKernelFollowRef>
      _instance;
} _STGraphDebug_STGraphKernelFollowRef_default_instance_;
class STGraphDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug>
      _instance;
} _STGraphDebug_default_instance_;
class SignalLightDebug_SignalDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignalLightDebug_SignalDebug>
      _instance;
} _SignalLightDebug_SignalDebug_default_instance_;
class SignalLightDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignalLightDebug>
      _instance;
} _SignalLightDebug_default_instance_;
class DecisionTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecisionTag>
      _instance;
} _DecisionTag_default_instance_;
class ObstacleDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObstacleDebug>
      _instance;
} _ObstacleDebug_default_instance_;
class ReferenceLineDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferenceLineDebug>
      _instance;
} _ReferenceLineDebug_default_instance_;
class SampleLayerDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SampleLayerDebug>
      _instance;
} _SampleLayerDebug_default_instance_;
class DpPolyGraphDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DpPolyGraphDebug>
      _instance;
} _DpPolyGraphDebug_default_instance_;
class ScenarioDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScenarioDebug>
      _instance;
} _ScenarioDebug_default_instance_;
class TrajectoriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trajectories>
      _instance;
} _Trajectories_default_instance_;
class OpenSpaceDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenSpaceDebug>
      _instance;
} _OpenSpaceDebug_default_instance_;
class SmootherDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SmootherDebug>
      _instance;
} _SmootherDebug_default_instance_;
class PullOverDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullOverDebug>
      _instance;
} _PullOverDebug_default_instance_;
class PlanningDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanningData>
      _instance;
} _PlanningData_default_instance_;
class LatticeStPixelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatticeStPixel>
      _instance;
} _LatticeStPixel_default_instance_;
class LatticeStTrainingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatticeStTraining>
      _instance;
} _LatticeStTraining_default_instance_;
class CostComponentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CostComponents>
      _instance;
} _CostComponents_default_instance_;
class AutoTuningTrainingDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoTuningTrainingData>
      _instance;
} _AutoTuningTrainingData_default_instance_;
class CloudReferenceLineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudReferenceLineRequest>
      _instance;
} _CloudReferenceLineRequest_default_instance_;
class CloudReferenceLineRoutingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudReferenceLineRoutingRequest>
      _instance;
} _CloudReferenceLineRoutingRequest_default_instance_;
class CloudReferenceLineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudReferenceLineResponse>
      _instance;
} _CloudReferenceLineResponse_default_instance_;
class HybridModelDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HybridModelDebug>
      _instance;
} _HybridModelDebug_default_instance_;
}  // namespace planning_internal
}  // namespace apollo
namespace protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto {
static void InitDefaultsDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_Debug_default_instance_;
    new (ptr) ::apollo::planning_internal::Debug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::Debug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Debug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDebug}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_PlanningData.base,}};

static void InitDefaultsSpeedPlan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_SpeedPlan_default_instance_;
    new (ptr) ::apollo::planning_internal::SpeedPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::SpeedPlan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SpeedPlan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSpeedPlan}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_SpeedPoint.base,}};

static void InitDefaultsStGraphBoundaryDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_StGraphBoundaryDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::StGraphBoundaryDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::StGraphBoundaryDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StGraphBoundaryDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStGraphBoundaryDebug}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_SpeedPoint.base,}};

static void InitDefaultsSLFrameDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_SLFrameDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::SLFrameDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::SLFrameDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SLFrameDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSLFrameDebug}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_SLPoint.base,}};

static void InitDefaultsSTGraphDebug_STGraphSpeedConstraint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_STGraphDebug_STGraphSpeedConstraint_default_instance_;
    new (ptr) ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STGraphDebug_STGraphSpeedConstraint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTGraphDebug_STGraphSpeedConstraint}, {}};

static void InitDefaultsSTGraphDebug_STGraphKernelCuiseRef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_STGraphDebug_STGraphKernelCuiseRef_default_instance_;
    new (ptr) ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STGraphDebug_STGraphKernelCuiseRef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTGraphDebug_STGraphKernelCuiseRef}, {}};

static void InitDefaultsSTGraphDebug_STGraphKernelFollowRef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_STGraphDebug_STGraphKernelFollowRef_default_instance_;
    new (ptr) ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STGraphDebug_STGraphKernelFollowRef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTGraphDebug_STGraphKernelFollowRef}, {}};

static void InitDefaultsSTGraphDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_STGraphDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::STGraphDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::STGraphDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_STGraphDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsSTGraphDebug}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_StGraphBoundaryDebug.base,
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_SpeedPoint.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphSpeedConstraint.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphKernelCuiseRef.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphKernelFollowRef.base,}};

static void InitDefaultsSignalLightDebug_SignalDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_SignalLightDebug_SignalDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::SignalLightDebug_SignalDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::SignalLightDebug_SignalDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignalLightDebug_SignalDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignalLightDebug_SignalDebug}, {}};

static void InitDefaultsSignalLightDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_SignalLightDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::SignalLightDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::SignalLightDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SignalLightDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignalLightDebug}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SignalLightDebug_SignalDebug.base,}};

static void InitDefaultsDecisionTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_DecisionTag_default_instance_;
    new (ptr) ::apollo::planning_internal::DecisionTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::DecisionTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DecisionTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDecisionTag}, {
      &protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::scc_info_ObjectDecisionType.base,}};

static void InitDefaultsObstacleDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_ObstacleDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::ObstacleDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::ObstacleDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObstacleDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObstacleDebug}, {
      &protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::scc_info_SLBoundary.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_DecisionTag.base,}};

static void InitDefaultsReferenceLineDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_ReferenceLineDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::ReferenceLineDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::ReferenceLineDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReferenceLineDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReferenceLineDebug}, {}};

static void InitDefaultsSampleLayerDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_SampleLayerDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::SampleLayerDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::SampleLayerDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SampleLayerDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSampleLayerDebug}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_SLPoint.base,}};

static void InitDefaultsDpPolyGraphDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_DpPolyGraphDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::DpPolyGraphDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::DpPolyGraphDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DpPolyGraphDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDpPolyGraphDebug}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SampleLayerDebug.base,
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_SLPoint.base,}};

static void InitDefaultsScenarioDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_ScenarioDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::ScenarioDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::ScenarioDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScenarioDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScenarioDebug}, {}};

static void InitDefaultsTrajectories() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_Trajectories_default_instance_;
    new (ptr) ::apollo::planning_internal::Trajectories();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::Trajectories::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Trajectories =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTrajectories}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_Trajectory.base,}};

static void InitDefaultsOpenSpaceDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_OpenSpaceDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::OpenSpaceDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::OpenSpaceDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_OpenSpaceDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsOpenSpaceDebug}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_Trajectories.base,
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_VehicleMotion.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ObstacleDebug.base,
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_TrajectoryPoint.base,
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsSmootherDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_SmootherDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::SmootherDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::SmootherDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SmootherDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSmootherDebug}, {}};

static void InitDefaultsPullOverDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_PullOverDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::PullOverDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::PullOverDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PullOverDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPullOverDebug}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsPlanningData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_PlanningData_default_instance_;
    new (ptr) ::apollo::planning_internal::PlanningData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::PlanningData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<22> scc_info_PlanningData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 22, InitDefaultsPlanningData}, {
      &protobuf_modules_2flocalization_2fproto_2flocalization_2eproto::scc_info_LocalizationEstimate.base,
      &protobuf_modules_2fcanbus_2fproto_2fchassis_2eproto::scc_info_Chassis.base,
      &protobuf_modules_2frouting_2fproto_2frouting_2eproto::scc_info_RoutingResponse.base,
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_TrajectoryPoint.base,
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_Path.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SpeedPlan.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SLFrameDebug.base,
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SignalLightDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ObstacleDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ReferenceLineDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_DpPolyGraphDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_LatticeStTraining.base,
      &protobuf_modules_2fmap_2frelative_5fmap_2fproto_2fnavigation_2eproto::scc_info_MapMsg.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_AutoTuningTrainingData.base,
      &protobuf_modules_2fdreamview_2fproto_2fchart_2eproto::scc_info_Chart.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ScenarioDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_OpenSpaceDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SmootherDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_PullOverDebug.base,
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_HybridModelDebug.base,}};

static void InitDefaultsLatticeStPixel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_LatticeStPixel_default_instance_;
    new (ptr) ::apollo::planning_internal::LatticeStPixel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::LatticeStPixel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LatticeStPixel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLatticeStPixel}, {}};

static void InitDefaultsLatticeStTraining() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_LatticeStTraining_default_instance_;
    new (ptr) ::apollo::planning_internal::LatticeStTraining();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::LatticeStTraining::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LatticeStTraining =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLatticeStTraining}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_LatticeStPixel.base,}};

static void InitDefaultsCostComponents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_CostComponents_default_instance_;
    new (ptr) ::apollo::planning_internal::CostComponents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::CostComponents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CostComponents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCostComponents}, {}};

static void InitDefaultsAutoTuningTrainingData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_AutoTuningTrainingData_default_instance_;
    new (ptr) ::apollo::planning_internal::AutoTuningTrainingData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::AutoTuningTrainingData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AutoTuningTrainingData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAutoTuningTrainingData}, {
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CostComponents.base,}};

static void InitDefaultsCloudReferenceLineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_CloudReferenceLineRequest_default_instance_;
    new (ptr) ::apollo::planning_internal::CloudReferenceLineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::CloudReferenceLineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloudReferenceLineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCloudReferenceLineRequest}, {
      &protobuf_modules_2frouting_2fproto_2frouting_2eproto::scc_info_LaneSegment.base,}};

static void InitDefaultsCloudReferenceLineRoutingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_CloudReferenceLineRoutingRequest_default_instance_;
    new (ptr) ::apollo::planning_internal::CloudReferenceLineRoutingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::CloudReferenceLineRoutingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloudReferenceLineRoutingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCloudReferenceLineRoutingRequest}, {
      &protobuf_modules_2frouting_2fproto_2frouting_2eproto::scc_info_RoutingResponse.base,}};

static void InitDefaultsCloudReferenceLineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_CloudReferenceLineResponse_default_instance_;
    new (ptr) ::apollo::planning_internal::CloudReferenceLineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::CloudReferenceLineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloudReferenceLineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCloudReferenceLineResponse}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_Path.base,}};

static void InitDefaultsHybridModelDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_HybridModelDebug_default_instance_;
    new (ptr) ::apollo::planning_internal::HybridModelDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::HybridModelDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HybridModelDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHybridModelDebug}, {
      &protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::scc_info_Path.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Debug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SpeedPlan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StGraphBoundaryDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLFrameDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STGraphDebug_STGraphSpeedConstraint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STGraphDebug_STGraphKernelCuiseRef.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STGraphDebug_STGraphKernelFollowRef.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STGraphDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignalLightDebug_SignalDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignalLightDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecisionTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObstacleDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReferenceLineDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SampleLayerDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DpPolyGraphDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScenarioDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trajectories.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenSpaceDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SmootherDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullOverDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanningData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LatticeStPixel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LatticeStTraining.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CostComponents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoTuningTrainingData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloudReferenceLineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloudReferenceLineRoutingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloudReferenceLineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HybridModelDebug.base);
}

::google::protobuf::Metadata file_level_metadata[29];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, planning_data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SpeedPlan, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SpeedPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SpeedPlan, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SpeedPlan, speed_point_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::StGraphBoundaryDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::StGraphBoundaryDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::StGraphBoundaryDebug, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::StGraphBoundaryDebug, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::StGraphBoundaryDebug, type_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, sampled_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, static_obstacle_lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, dynamic_obstacle_lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, static_obstacle_upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, dynamic_obstacle_upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, map_lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, map_upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, sl_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, aggregated_boundary_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, aggregated_boundary_low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SLFrameDebug, aggregated_boundary_high_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint, upper_bound_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef, cruise_line_s_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef, follow_line_s_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, speed_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, speed_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, speed_constraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, kernel_cruise_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::STGraphDebug, kernel_follow_ref_),
  0,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, light_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, light_stop_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, adc_stop_deceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug_SignalDebug, is_stop_wall_created_),
  0,
  2,
  1,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug, adc_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug, adc_front_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SignalLightDebug, signal_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DecisionTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DecisionTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DecisionTag, decider_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DecisionTag, decision_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, sl_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, decision_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, vertices_x_coords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ObstacleDebug, vertices_y_coords_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, is_change_lane_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, is_drivable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, is_protected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, is_offroad_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, minimum_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, average_kappa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, average_dkappa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, kappa_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, dkappa_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, kappa_max_abs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, dkappa_max_abs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ReferenceLineDebug, average_offset_),
  0,
  1,
  2,
  11,
  12,
  13,
  14,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SampleLayerDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SampleLayerDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SampleLayerDebug, sl_point_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DpPolyGraphDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DpPolyGraphDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DpPolyGraphDebug, sample_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::DpPolyGraphDebug, min_cost_point_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ScenarioDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ScenarioDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ScenarioDebug, scenario_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ScenarioDebug, stage_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::ScenarioDebug, msg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Trajectories, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Trajectories, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Trajectories, trajectory_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, trajectories_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, warm_start_trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, smoothed_trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, warm_start_dual_lambda_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, warm_start_dual_miu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, optimized_dual_lambda_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, optimized_dual_miu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, xy_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, obstacles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, roi_shift_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, end_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, partitioned_trajectories_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, chosen_trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, is_fallback_trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, fallback_trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, trajectory_stitching_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, future_collision_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, time_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, origin_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::OpenSpaceDebug, origin_heading_rad_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  4,
  5,
  6,
  13,
  7,
  8,
  9,
  11,
  10,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SmootherDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SmootherDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SmootherDebug, is_smoothed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SmootherDebug, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::SmootherDebug, reason_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, length_front_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, length_back_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, width_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PullOverDebug, width_right_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, adc_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, chassis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, init_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, speed_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, st_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, sl_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, prediction_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, signal_light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, reference_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, dp_poly_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, lattice_st_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, relative_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, auto_tuning_training_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, front_clear_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, chart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, scenario_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, open_space_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, smoother_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, pull_over_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, hybrid_model_),
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  4,
  5,
  ~0u,
  ~0u,
  6,
  7,
  8,
  9,
  15,
  ~0u,
  10,
  11,
  12,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStPixel, b_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, pixel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, num_s_grids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, num_t_grids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, s_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::LatticeStTraining, t_resolution_),
  ~0u,
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CostComponents, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CostComponents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CostComponents, cost_component_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::AutoTuningTrainingData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::AutoTuningTrainingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::AutoTuningTrainingData, teacher_component_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::AutoTuningTrainingData, student_component_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineRequest, lane_segment_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineRoutingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineRoutingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineRoutingRequest, routing_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::CloudReferenceLineResponse, segment_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::HybridModelDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::HybridModelDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::HybridModelDebug, using_learning_model_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::HybridModelDebug, learning_model_output_usage_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::HybridModelDebug, learning_model_output_fail_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::HybridModelDebug, evaluated_path_reference_),
  3,
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::apollo::planning_internal::Debug)},
  { 7, 14, sizeof(::apollo::planning_internal::SpeedPlan)},
  { 16, 24, sizeof(::apollo::planning_internal::StGraphBoundaryDebug)},
  { 27, 44, sizeof(::apollo::planning_internal::SLFrameDebug)},
  { 56, 64, sizeof(::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint)},
  { 67, 74, sizeof(::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef)},
  { 76, 83, sizeof(::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef)},
  { 85, 97, sizeof(::apollo::planning_internal::STGraphDebug)},
  { 104, 114, sizeof(::apollo::planning_internal::SignalLightDebug_SignalDebug)},
  { 119, 127, sizeof(::apollo::planning_internal::SignalLightDebug)},
  { 130, 137, sizeof(::apollo::planning_internal::DecisionTag)},
  { 139, 149, sizeof(::apollo::planning_internal::ObstacleDebug)},
  { 154, 174, sizeof(::apollo::planning_internal::ReferenceLineDebug)},
  { 189, 195, sizeof(::apollo::planning_internal::SampleLayerDebug)},
  { 196, 203, sizeof(::apollo::planning_internal::DpPolyGraphDebug)},
  { 205, 213, sizeof(::apollo::planning_internal::ScenarioDebug)},
  { 216, 222, sizeof(::apollo::planning_internal::Trajectories)},
  { 223, 248, sizeof(::apollo::planning_internal::OpenSpaceDebug)},
  { 268, 276, sizeof(::apollo::planning_internal::SmootherDebug)},
  { 279, 290, sizeof(::apollo::planning_internal::PullOverDebug)},
  { 296, 324, sizeof(::apollo::planning_internal::PlanningData)},
  { 347, 357, sizeof(::apollo::planning_internal::LatticeStPixel)},
  { 362, 374, sizeof(::apollo::planning_internal::LatticeStTraining)},
  { 381, 387, sizeof(::apollo::planning_internal::CostComponents)},
  { 388, 395, sizeof(::apollo::planning_internal::AutoTuningTrainingData)},
  { 397, 403, sizeof(::apollo::planning_internal::CloudReferenceLineRequest)},
  { 404, 410, sizeof(::apollo::planning_internal::CloudReferenceLineRoutingRequest)},
  { 411, 417, sizeof(::apollo::planning_internal::CloudReferenceLineResponse)},
  { 418, 427, sizeof(::apollo::planning_internal::HybridModelDebug)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_Debug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_SpeedPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_StGraphBoundaryDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_SLFrameDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_STGraphDebug_STGraphSpeedConstraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_STGraphDebug_STGraphKernelCuiseRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_STGraphDebug_STGraphKernelFollowRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_STGraphDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_SignalLightDebug_SignalDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_SignalLightDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_DecisionTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_ObstacleDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_ReferenceLineDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_SampleLayerDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_DpPolyGraphDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_ScenarioDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_Trajectories_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_OpenSpaceDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_SmootherDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_PullOverDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_PlanningData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_LatticeStPixel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_LatticeStTraining_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_CostComponents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_AutoTuningTrainingData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_CloudReferenceLineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_CloudReferenceLineRoutingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_CloudReferenceLineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_HybridModelDebug_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/planning/proto/planning_internal.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.modules/planning/proto/planning_intern"
      "al.proto\022\030apollo.planning_internal\032#modu"
      "les/common/proto/geometry.proto\032!modules"
      "/common/proto/header.proto\032\"modules/canb"
      "us/proto/chassis.proto\032$modules/common/p"
      "roto/pnc_point.proto\032-modules/localizati"
      "on/proto/localization.proto\032#modules/dre"
      "amview/proto/chart.proto\032/modules/map/re"
      "lative_map/proto/navigation.proto\032#modul"
      "es/routing/proto/routing.proto\0326modules/"
      "perception/proto/traffic_light_detection"
      ".proto\032(modules/planning/proto/sl_bounda"
      "ry.proto\032%modules/planning/proto/decisio"
      "n.proto\032,modules/planning/proto/planning"
      "_config.proto\"F\n\005Debug\022=\n\rplanning_data\030"
      "\002 \001(\0132&.apollo.planning_internal.Plannin"
      "gData\"I\n\tSpeedPlan\022\014\n\004name\030\001 \001(\t\022.\n\013spee"
      "d_point\030\002 \003(\0132\031.apollo.common.SpeedPoint"
      "\"\206\003\n\024StGraphBoundaryDebug\022\014\n\004name\030\001 \001(\t\022"
      "(\n\005point\030\002 \003(\0132\031.apollo.common.SpeedPoin"
      "t\022K\n\004type\030\003 \001(\0162=.apollo.planning_intern"
      "al.StGraphBoundaryDebug.StBoundaryType\"\350"
      "\001\n\016StBoundaryType\022\034\n\030ST_BOUNDARY_TYPE_UN"
      "KNOWN\020\001\022\031\n\025ST_BOUNDARY_TYPE_STOP\020\002\022\033\n\027ST"
      "_BOUNDARY_TYPE_FOLLOW\020\003\022\032\n\026ST_BOUNDARY_T"
      "YPE_YIELD\020\004\022\035\n\031ST_BOUNDARY_TYPE_OVERTAKE"
      "\020\005\022\037\n\033ST_BOUNDARY_TYPE_KEEP_CLEAR\020\006\022$\n S"
      "T_BOUNDARY_TYPE_DRIVABLE_REGION\020\007\"\202\003\n\014SL"
      "FrameDebug\022\014\n\004name\030\001 \001(\t\022\021\n\tsampled_s\030\002 "
      "\003(\001\022#\n\033static_obstacle_lower_bound\030\003 \003(\001"
      "\022$\n\034dynamic_obstacle_lower_bound\030\004 \003(\001\022#"
      "\n\033static_obstacle_upper_bound\030\005 \003(\001\022$\n\034d"
      "ynamic_obstacle_upper_bound\030\006 \003(\001\022\027\n\017map"
      "_lower_bound\030\007 \003(\001\022\027\n\017map_upper_bound\030\010 "
      "\003(\001\022\'\n\007sl_path\030\t \003(\0132\026.apollo.common.SLP"
      "oint\022\035\n\025aggregated_boundary_s\030\n \003(\001\022\037\n\027a"
      "ggregated_boundary_low\030\013 \003(\001\022 \n\030aggregat"
      "ed_boundary_high\030\014 \003(\001\"\222\005\n\014STGraphDebug\022"
      "\014\n\004name\030\001 \001(\t\022@\n\010boundary\030\002 \003(\0132..apollo"
      ".planning_internal.StGraphBoundaryDebug\022"
      ".\n\013speed_limit\030\003 \003(\0132\031.apollo.common.Spe"
      "edPoint\0220\n\rspeed_profile\030\004 \003(\0132\031.apollo."
      "common.SpeedPoint\022W\n\020speed_constraint\030\005 "
      "\001(\0132=.apollo.planning_internal.STGraphDe"
      "bug.STGraphSpeedConstraint\022W\n\021kernel_cru"
      "ise_ref\030\006 \001(\0132<.apollo.planning_internal"
      ".STGraphDebug.STGraphKernelCuiseRef\022X\n\021k"
      "ernel_follow_ref\030\007 \001(\0132=.apollo.planning"
      "_internal.STGraphDebug.STGraphKernelFoll"
      "owRef\032M\n\026STGraphSpeedConstraint\022\t\n\001t\030\001 \003"
      "(\001\022\023\n\013lower_bound\030\002 \003(\001\022\023\n\013upper_bound\030\003"
      " \003(\001\0329\n\025STGraphKernelCuiseRef\022\t\n\001t\030\001 \003(\001"
      "\022\025\n\rcruise_line_s\030\002 \003(\001\032:\n\026STGraphKernel"
      "FollowRef\022\t\n\001t\030\001 \003(\001\022\025\n\rfollow_line_s\030\002 "
      "\003(\001\"\255\002\n\020SignalLightDebug\022\021\n\tadc_speed\030\001 "
      "\001(\001\022\023\n\013adc_front_s\030\002 \001(\001\022F\n\006signal\030\003 \003(\013"
      "26.apollo.planning_internal.SignalLightD"
      "ebug.SignalDebug\032\250\001\n\013SignalDebug\022\020\n\010ligh"
      "t_id\030\001 \001(\t\0224\n\005color\030\002 \001(\0162%.apollo.perce"
      "ption.TrafficLight.Color\022\024\n\014light_stop_s"
      "\030\003 \001(\001\022\035\n\025adc_stop_deceleration\030\004 \001(\001\022\034\n"
      "\024is_stop_wall_created\030\005 \001(\010\"Y\n\013DecisionT"
      "ag\022\023\n\013decider_tag\030\001 \001(\t\0225\n\010decision\030\002 \001("
      "\0132#.apollo.planning.ObjectDecisionType\"\300"
      "\001\n\rObstacleDebug\022\n\n\002id\030\001 \001(\t\0220\n\013sl_bound"
      "ary\030\002 \001(\0132\033.apollo.planning.SLBoundary\022;"
      "\n\014decision_tag\030\003 \003(\0132%.apollo.planning_i"
      "nternal.DecisionTag\022\031\n\021vertices_x_coords"
      "\030\004 \003(\001\022\031\n\021vertices_y_coords\030\005 \003(\001\"\331\002\n\022Re"
      "ferenceLineDebug\022\n\n\002id\030\001 \001(\t\022\016\n\006length\030\002"
      " \001(\001\022\014\n\004cost\030\003 \001(\001\022\033\n\023is_change_lane_pat"
      "h\030\004 \001(\010\022\023\n\013is_drivable\030\005 \001(\010\022\024\n\014is_prote"
      "cted\030\006 \001(\010\022\022\n\nis_offroad\030\007 \001(\010\022\030\n\020minimu"
      "m_boundary\030\010 \001(\001\022\031\n\raverage_kappa\030\t \001(\001B"
      "\002\030\001\022\032\n\016average_dkappa\030\n \001(\001B\002\030\001\022\021\n\tkappa"
      "_rms\030\013 \001(\001\022\022\n\ndkappa_rms\030\014 \001(\001\022\025\n\rkappa_"
      "max_abs\030\r \001(\001\022\026\n\016dkappa_max_abs\030\016 \001(\001\022\026\n"
      "\016average_offset\030\017 \001(\001\"<\n\020SampleLayerDebu"
      "g\022(\n\010sl_point\030\001 \003(\0132\026.apollo.common.SLPo"
      "int\"\204\001\n\020DpPolyGraphDebug\022@\n\014sample_layer"
      "\030\001 \003(\0132*.apollo.planning_internal.Sample"
      "LayerDebug\022.\n\016min_cost_point\030\002 \003(\0132\026.apo"
      "llo.common.SLPoint\"\240\001\n\rScenarioDebug\022C\n\r"
      "scenario_type\030\001 \001(\0162,.apollo.planning.Sc"
      "enarioConfig.ScenarioType\022=\n\nstage_type\030"
      "\002 \001(\0162).apollo.planning.ScenarioConfig.S"
      "tageType\022\013\n\003msg\030\003 \001(\t\"=\n\014Trajectories\022-\n"
      "\ntrajectory\030\001 \003(\0132\031.apollo.common.Trajec"
      "tory\"\325\007\n\016OpenSpaceDebug\022<\n\014trajectories\030"
      "\001 \001(\0132&.apollo.planning_internal.Traject"
      "ories\022;\n\025warm_start_trajectory\030\002 \001(\0132\034.a"
      "pollo.common.VehicleMotion\0229\n\023smoothed_t"
      "rajectory\030\003 \001(\0132\034.apollo.common.VehicleM"
      "otion\022\036\n\026warm_start_dual_lambda\030\004 \003(\001\022\033\n"
      "\023warm_start_dual_miu\030\005 \003(\001\022\035\n\025optimized_"
      "dual_lambda\030\006 \003(\001\022\032\n\022optimized_dual_miu\030"
      "\007 \003(\001\022\023\n\013xy_boundary\030\010 \003(\001\022:\n\tobstacles\030"
      "\t \003(\0132\'.apollo.planning_internal.Obstacl"
      "eDebug\0227\n\017roi_shift_point\030\n \001(\0132\036.apollo"
      ".common.TrajectoryPoint\0221\n\tend_point\030\013 \001"
      "(\0132\036.apollo.common.TrajectoryPoint\022H\n\030pa"
      "rtitioned_trajectories\030\014 \001(\0132&.apollo.pl"
      "anning_internal.Trajectories\022A\n\021chosen_t"
      "rajectory\030\r \001(\0132&.apollo.planning_intern"
      "al.Trajectories\022\036\n\026is_fallback_trajector"
      "y\030\016 \001(\010\022C\n\023fallback_trajectory\030\017 \001(\0132&.a"
      "pollo.planning_internal.Trajectories\022B\n\032"
      "trajectory_stitching_point\030\020 \001(\0132\036.apoll"
      "o.common.TrajectoryPoint\022>\n\026future_colli"
      "sion_point\030\021 \001(\0132\036.apollo.common.Traject"
      "oryPoint\022\027\n\014time_latency\030\022 \001(\001:\0010\022-\n\014ori"
      "gin_point\030\023 \001(\0132\027.apollo.common.PointENU"
      "\022\032\n\022origin_heading_rad\030\024 \001(\001\"\303\001\n\rSmoothe"
      "rDebug\022\023\n\013is_smoothed\030\001 \001(\010\022Q\n\004type\030\002 \001("
      "\01624.apollo.planning_internal.SmootherDeb"
      "ug.SmootherType:\rSMOOTHER_NONE\022\016\n\006reason"
      "\030\003 \001(\t\":\n\014SmootherType\022\021\n\rSMOOTHER_NONE\020"
      "\001\022\027\n\023SMOOTHER_CLOSE_STOP\020\002\"\235\001\n\rPullOverD"
      "ebug\022)\n\010position\030\001 \001(\0132\027.apollo.common.P"
      "ointENU\022\r\n\005theta\030\002 \001(\001\022\024\n\014length_front\030\003"
      " \001(\001\022\023\n\013length_back\030\004 \001(\001\022\022\n\nwidth_left\030"
      "\005 \001(\001\022\023\n\013width_right\030\006 \001(\001\"\255\n\n\014PlanningD"
      "ata\022\?\n\014adc_position\030\007 \001(\0132).apollo.local"
      "ization.LocalizationEstimate\022\'\n\007chassis\030"
      "\010 \001(\0132\026.apollo.canbus.Chassis\0220\n\007routing"
      "\030\t \001(\0132\037.apollo.routing.RoutingResponse\022"
      "2\n\ninit_point\030\n \001(\0132\036.apollo.common.Traj"
      "ectoryPoint\022!\n\004path\030\006 \003(\0132\023.apollo.commo"
      "n.Path\0227\n\nspeed_plan\030\r \003(\0132#.apollo.plan"
      "ning_internal.SpeedPlan\0228\n\010st_graph\030\016 \003("
      "\0132&.apollo.planning_internal.STGraphDebu"
      "g\0228\n\010sl_frame\030\017 \003(\0132&.apollo.planning_in"
      "ternal.SLFrameDebug\0220\n\021prediction_header"
      "\030\020 \001(\0132\025.apollo.common.Header\022@\n\014signal_"
      "light\030\021 \001(\0132*.apollo.planning_internal.S"
      "ignalLightDebug\0229\n\010obstacle\030\022 \003(\0132\'.apol"
      "lo.planning_internal.ObstacleDebug\022D\n\016re"
      "ference_line\030\023 \003(\0132,.apollo.planning_int"
      "ernal.ReferenceLineDebug\022A\n\rdp_poly_grap"
      "h\030\024 \001(\0132*.apollo.planning_internal.DpPol"
      "yGraphDebug\022E\n\020lattice_st_image\030\025 \001(\0132+."
      "apollo.planning_internal.LatticeStTraini"
      "ng\0221\n\014relative_map\030\026 \001(\0132\033.apollo.relati"
      "ve_map.MapMsg\022S\n\031auto_tuning_training_da"
      "ta\030\027 \001(\01320.apollo.planning_internal.Auto"
      "TuningTrainingData\022\034\n\024front_clear_distan"
      "ce\030\030 \001(\001\022&\n\005chart\030\031 \003(\0132\027.apollo.dreamvi"
      "ew.Chart\0229\n\010scenario\030\032 \001(\0132\'.apollo.plan"
      "ning_internal.ScenarioDebug\022<\n\nopen_spac"
      "e\030\033 \001(\0132(.apollo.planning_internal.OpenS"
      "paceDebug\0229\n\010smoother\030\034 \001(\0132\'.apollo.pla"
      "nning_internal.SmootherDebug\022:\n\tpull_ove"
      "r\030\035 \001(\0132\'.apollo.planning_internal.PullO"
      "verDebug\022@\n\014hybrid_model\030\036 \001(\0132*.apollo."
      "planning_internal.HybridModelDebug\"G\n\016La"
      "tticeStPixel\022\t\n\001s\030\001 \001(\005\022\t\n\001t\030\002 \001(\005\022\t\n\001r\030"
      "\003 \001(\r\022\t\n\001g\030\004 \001(\r\022\t\n\001b\030\005 \001(\r\"\311\001\n\021LatticeS"
      "tTraining\0227\n\005pixel\030\001 \003(\0132(.apollo.planni"
      "ng_internal.LatticeStPixel\022\021\n\ttimestamp\030"
      "\002 \001(\001\022\022\n\nannotation\030\003 \001(\t\022\023\n\013num_s_grids"
      "\030\004 \001(\r\022\023\n\013num_t_grids\030\005 \001(\r\022\024\n\014s_resolut"
      "ion\030\006 \001(\001\022\024\n\014t_resolution\030\007 \001(\001\"(\n\016CostC"
      "omponents\022\026\n\016cost_component\030\001 \003(\001\"\242\001\n\026Au"
      "toTuningTrainingData\022C\n\021teacher_componen"
      "t\030\001 \001(\0132(.apollo.planning_internal.CostC"
      "omponents\022C\n\021student_component\030\002 \001(\0132(.a"
      "pollo.planning_internal.CostComponents\"N"
      "\n\031CloudReferenceLineRequest\0221\n\014lane_segm"
      "ent\030\001 \003(\0132\033.apollo.routing.LaneSegment\"T"
      "\n CloudReferenceLineRoutingRequest\0220\n\007ro"
      "uting\030\001 \001(\0132\037.apollo.routing.RoutingResp"
      "onse\"B\n\032CloudReferenceLineResponse\022$\n\007se"
      "gment\030\001 \003(\0132\023.apollo.common.Path\"\313\001\n\020Hyb"
      "ridModelDebug\022*\n\033using_learning_model_ou"
      "tput\030\001 \001(\010:\005false\022)\n!learning_model_outp"
      "ut_usage_ratio\030\002 \001(\001\022)\n!learning_model_o"
      "utput_fail_reason\030\003 \001(\t\0225\n\030evaluated_pat"
      "h_reference\030\004 \001(\0132\023.apollo.common.Path"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7118);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/planning/proto/planning_internal.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::AddDescriptors();
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
  ::protobuf_modules_2fcanbus_2fproto_2fchassis_2eproto::AddDescriptors();
  ::protobuf_modules_2fcommon_2fproto_2fpnc_5fpoint_2eproto::AddDescriptors();
  ::protobuf_modules_2flocalization_2fproto_2flocalization_2eproto::AddDescriptors();
  ::protobuf_modules_2fdreamview_2fproto_2fchart_2eproto::AddDescriptors();
  ::protobuf_modules_2fmap_2frelative_5fmap_2fproto_2fnavigation_2eproto::AddDescriptors();
  ::protobuf_modules_2frouting_2fproto_2frouting_2eproto::AddDescriptors();
  ::protobuf_modules_2fperception_2fproto_2ftraffic_5flight_5fdetection_2eproto::AddDescriptors();
  ::protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::AddDescriptors();
  ::protobuf_modules_2fplanning_2fproto_2fdecision_2eproto::AddDescriptors();
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto
namespace apollo {
namespace planning_internal {
const ::google::protobuf::EnumDescriptor* StGraphBoundaryDebug_StBoundaryType_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_enum_descriptors[0];
}
bool StGraphBoundaryDebug_StBoundaryType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_UNKNOWN;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_STOP;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_FOLLOW;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_YIELD;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_OVERTAKE;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_KEEP_CLEAR;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_DRIVABLE_REGION;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::StBoundaryType_MIN;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::StBoundaryType_MAX;
const int StGraphBoundaryDebug::StBoundaryType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SmootherDebug_SmootherType_descriptor() {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_enum_descriptors[1];
}
bool SmootherDebug_SmootherType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SmootherDebug_SmootherType SmootherDebug::SMOOTHER_NONE;
const SmootherDebug_SmootherType SmootherDebug::SMOOTHER_CLOSE_STOP;
const SmootherDebug_SmootherType SmootherDebug::SmootherType_MIN;
const SmootherDebug_SmootherType SmootherDebug::SmootherType_MAX;
const int SmootherDebug::SmootherType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Debug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_Debug_default_instance_._instance.get_mutable()->planning_data_ = const_cast< ::apollo::planning_internal::PlanningData*>(
      ::apollo::planning_internal::PlanningData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Debug::kPlanningDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Debug::Debug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_Debug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.Debug)
}
Debug::Debug(const Debug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_planning_data()) {
    planning_data_ = new ::apollo::planning_internal::PlanningData(*from.planning_data_);
  } else {
    planning_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.Debug)
}

void Debug::SharedCtor() {
  planning_data_ = NULL;
}

Debug::~Debug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.Debug)
  SharedDtor();
}

void Debug::SharedDtor() {
  if (this != internal_default_instance()) delete planning_data_;
}

void Debug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Debug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Debug& Debug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_Debug.base);
  return *internal_default_instance();
}


void Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(planning_data_ != NULL);
    planning_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Debug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.Debug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning_internal.PlanningData planning_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_planning_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.Debug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.Debug)
  return false;
#undef DO_
}

void Debug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning_internal.PlanningData planning_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_planning_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.Debug)
}

::google::protobuf::uint8* Debug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning_internal.PlanningData planning_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_planning_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.Debug)
  return target;
}

size_t Debug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.Debug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.planning_internal.PlanningData planning_data = 2;
  if (has_planning_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *planning_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Debug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  const Debug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Debug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.Debug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.Debug)
    MergeFrom(*source);
  }
}

void Debug::MergeFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_planning_data()) {
    mutable_planning_data()->::apollo::planning_internal::PlanningData::MergeFrom(from.planning_data());
  }
}

void Debug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Debug::CopyFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Debug::IsInitialized() const {
  return true;
}

void Debug::Swap(Debug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Debug::InternalSwap(Debug* other) {
  using std::swap;
  swap(planning_data_, other->planning_data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Debug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SpeedPlan::InitAsDefaultInstance() {
}
void SpeedPlan::clear_speed_point() {
  speed_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeedPlan::kNameFieldNumber;
const int SpeedPlan::kSpeedPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeedPlan::SpeedPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SpeedPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.SpeedPlan)
}
SpeedPlan::SpeedPlan(const SpeedPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      speed_point_(from.speed_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.SpeedPlan)
}

void SpeedPlan::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SpeedPlan::~SpeedPlan() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.SpeedPlan)
  SharedDtor();
}

void SpeedPlan::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SpeedPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpeedPlan::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpeedPlan& SpeedPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SpeedPlan.base);
  return *internal_default_instance();
}


void SpeedPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.SpeedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speed_point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SpeedPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.SpeedPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.SpeedPlan.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.SpeedPoint speed_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.SpeedPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.SpeedPlan)
  return false;
#undef DO_
}

void SpeedPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.SpeedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SpeedPlan.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .apollo.common.SpeedPoint speed_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->speed_point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.SpeedPlan)
}

::google::protobuf::uint8* SpeedPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.SpeedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SpeedPlan.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .apollo.common.SpeedPoint speed_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->speed_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.SpeedPlan)
  return target;
}

size_t SpeedPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.SpeedPlan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.SpeedPoint speed_point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_point(static_cast<int>(i)));
    }
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeedPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.SpeedPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeedPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpeedPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.SpeedPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.SpeedPlan)
    MergeFrom(*source);
  }
}

void SpeedPlan::MergeFrom(const SpeedPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.SpeedPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  speed_point_.MergeFrom(from.speed_point_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SpeedPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.SpeedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedPlan::CopyFrom(const SpeedPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.SpeedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedPlan::IsInitialized() const {
  return true;
}

void SpeedPlan::Swap(SpeedPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedPlan::InternalSwap(SpeedPlan* other) {
  using std::swap;
  CastToBase(&speed_point_)->InternalSwap(CastToBase(&other->speed_point_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpeedPlan::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StGraphBoundaryDebug::InitAsDefaultInstance() {
}
void StGraphBoundaryDebug::clear_point() {
  point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StGraphBoundaryDebug::kNameFieldNumber;
const int StGraphBoundaryDebug::kPointFieldNumber;
const int StGraphBoundaryDebug::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StGraphBoundaryDebug::StGraphBoundaryDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_StGraphBoundaryDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.StGraphBoundaryDebug)
}
StGraphBoundaryDebug::StGraphBoundaryDebug(const StGraphBoundaryDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.StGraphBoundaryDebug)
}

void StGraphBoundaryDebug::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
}

StGraphBoundaryDebug::~StGraphBoundaryDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.StGraphBoundaryDebug)
  SharedDtor();
}

void StGraphBoundaryDebug::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StGraphBoundaryDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StGraphBoundaryDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StGraphBoundaryDebug& StGraphBoundaryDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_StGraphBoundaryDebug.base);
  return *internal_default_instance();
}


void StGraphBoundaryDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StGraphBoundaryDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.StGraphBoundaryDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.StGraphBoundaryDebug.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.SpeedPoint point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning_internal::StGraphBoundaryDebug_StBoundaryType_IsValid(value)) {
            set_type(static_cast< ::apollo::planning_internal::StGraphBoundaryDebug_StBoundaryType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.StGraphBoundaryDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.StGraphBoundaryDebug)
  return false;
#undef DO_
}

void StGraphBoundaryDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.StGraphBoundaryDebug.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .apollo.common.SpeedPoint point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->point(static_cast<int>(i)),
      output);
  }

  // optional .apollo.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.StGraphBoundaryDebug)
}

::google::protobuf::uint8* StGraphBoundaryDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.StGraphBoundaryDebug.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .apollo.common.SpeedPoint point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->point(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.StGraphBoundaryDebug)
  return target;
}

size_t StGraphBoundaryDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.StGraphBoundaryDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.SpeedPoint point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .apollo.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StGraphBoundaryDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.StGraphBoundaryDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const StGraphBoundaryDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StGraphBoundaryDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.StGraphBoundaryDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.StGraphBoundaryDebug)
    MergeFrom(*source);
  }
}

void StGraphBoundaryDebug::MergeFrom(const StGraphBoundaryDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.StGraphBoundaryDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StGraphBoundaryDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.StGraphBoundaryDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StGraphBoundaryDebug::CopyFrom(const StGraphBoundaryDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.StGraphBoundaryDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StGraphBoundaryDebug::IsInitialized() const {
  return true;
}

void StGraphBoundaryDebug::Swap(StGraphBoundaryDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StGraphBoundaryDebug::InternalSwap(StGraphBoundaryDebug* other) {
  using std::swap;
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StGraphBoundaryDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLFrameDebug::InitAsDefaultInstance() {
}
void SLFrameDebug::clear_sl_path() {
  sl_path_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLFrameDebug::kNameFieldNumber;
const int SLFrameDebug::kSampledSFieldNumber;
const int SLFrameDebug::kStaticObstacleLowerBoundFieldNumber;
const int SLFrameDebug::kDynamicObstacleLowerBoundFieldNumber;
const int SLFrameDebug::kStaticObstacleUpperBoundFieldNumber;
const int SLFrameDebug::kDynamicObstacleUpperBoundFieldNumber;
const int SLFrameDebug::kMapLowerBoundFieldNumber;
const int SLFrameDebug::kMapUpperBoundFieldNumber;
const int SLFrameDebug::kSlPathFieldNumber;
const int SLFrameDebug::kAggregatedBoundarySFieldNumber;
const int SLFrameDebug::kAggregatedBoundaryLowFieldNumber;
const int SLFrameDebug::kAggregatedBoundaryHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLFrameDebug::SLFrameDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SLFrameDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.SLFrameDebug)
}
SLFrameDebug::SLFrameDebug(const SLFrameDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sampled_s_(from.sampled_s_),
      static_obstacle_lower_bound_(from.static_obstacle_lower_bound_),
      dynamic_obstacle_lower_bound_(from.dynamic_obstacle_lower_bound_),
      static_obstacle_upper_bound_(from.static_obstacle_upper_bound_),
      dynamic_obstacle_upper_bound_(from.dynamic_obstacle_upper_bound_),
      map_lower_bound_(from.map_lower_bound_),
      map_upper_bound_(from.map_upper_bound_),
      sl_path_(from.sl_path_),
      aggregated_boundary_s_(from.aggregated_boundary_s_),
      aggregated_boundary_low_(from.aggregated_boundary_low_),
      aggregated_boundary_high_(from.aggregated_boundary_high_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.SLFrameDebug)
}

void SLFrameDebug::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SLFrameDebug::~SLFrameDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.SLFrameDebug)
  SharedDtor();
}

void SLFrameDebug::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLFrameDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLFrameDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLFrameDebug& SLFrameDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SLFrameDebug.base);
  return *internal_default_instance();
}


void SLFrameDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.SLFrameDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sampled_s_.Clear();
  static_obstacle_lower_bound_.Clear();
  dynamic_obstacle_lower_bound_.Clear();
  static_obstacle_upper_bound_.Clear();
  dynamic_obstacle_upper_bound_.Clear();
  map_lower_bound_.Clear();
  map_upper_bound_.Clear();
  sl_path_.Clear();
  aggregated_boundary_s_.Clear();
  aggregated_boundary_low_.Clear();
  aggregated_boundary_high_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SLFrameDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.SLFrameDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.SLFrameDebug.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double sampled_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_sampled_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_sampled_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double static_obstacle_lower_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_static_obstacle_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_static_obstacle_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double dynamic_obstacle_lower_bound = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33u, input, this->mutable_dynamic_obstacle_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dynamic_obstacle_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double static_obstacle_upper_bound = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41u, input, this->mutable_static_obstacle_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_static_obstacle_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double dynamic_obstacle_upper_bound = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49u, input, this->mutable_dynamic_obstacle_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dynamic_obstacle_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double map_lower_bound = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57u, input, this->mutable_map_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_map_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double map_upper_bound = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65u, input, this->mutable_map_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_map_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.SLPoint sl_path = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sl_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double aggregated_boundary_s = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 81u, input, this->mutable_aggregated_boundary_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_aggregated_boundary_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double aggregated_boundary_low = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 89u, input, this->mutable_aggregated_boundary_low())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_aggregated_boundary_low())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double aggregated_boundary_high = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 97u, input, this->mutable_aggregated_boundary_high())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_aggregated_boundary_high())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.SLFrameDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.SLFrameDebug)
  return false;
#undef DO_
}

void SLFrameDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.SLFrameDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SLFrameDebug.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated double sampled_s = 2;
  for (int i = 0, n = this->sampled_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->sampled_s(i), output);
  }

  // repeated double static_obstacle_lower_bound = 3;
  for (int i = 0, n = this->static_obstacle_lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->static_obstacle_lower_bound(i), output);
  }

  // repeated double dynamic_obstacle_lower_bound = 4;
  for (int i = 0, n = this->dynamic_obstacle_lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->dynamic_obstacle_lower_bound(i), output);
  }

  // repeated double static_obstacle_upper_bound = 5;
  for (int i = 0, n = this->static_obstacle_upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->static_obstacle_upper_bound(i), output);
  }

  // repeated double dynamic_obstacle_upper_bound = 6;
  for (int i = 0, n = this->dynamic_obstacle_upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->dynamic_obstacle_upper_bound(i), output);
  }

  // repeated double map_lower_bound = 7;
  for (int i = 0, n = this->map_lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->map_lower_bound(i), output);
  }

  // repeated double map_upper_bound = 8;
  for (int i = 0, n = this->map_upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->map_upper_bound(i), output);
  }

  // repeated .apollo.common.SLPoint sl_path = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->sl_path(static_cast<int>(i)),
      output);
  }

  // repeated double aggregated_boundary_s = 10;
  for (int i = 0, n = this->aggregated_boundary_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      10, this->aggregated_boundary_s(i), output);
  }

  // repeated double aggregated_boundary_low = 11;
  for (int i = 0, n = this->aggregated_boundary_low_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      11, this->aggregated_boundary_low(i), output);
  }

  // repeated double aggregated_boundary_high = 12;
  for (int i = 0, n = this->aggregated_boundary_high_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      12, this->aggregated_boundary_high(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.SLFrameDebug)
}

::google::protobuf::uint8* SLFrameDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.SLFrameDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SLFrameDebug.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated double sampled_s = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->sampled_s_, target);

  // repeated double static_obstacle_lower_bound = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->static_obstacle_lower_bound_, target);

  // repeated double dynamic_obstacle_lower_bound = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(4, this->dynamic_obstacle_lower_bound_, target);

  // repeated double static_obstacle_upper_bound = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(5, this->static_obstacle_upper_bound_, target);

  // repeated double dynamic_obstacle_upper_bound = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(6, this->dynamic_obstacle_upper_bound_, target);

  // repeated double map_lower_bound = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(7, this->map_lower_bound_, target);

  // repeated double map_upper_bound = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(8, this->map_upper_bound_, target);

  // repeated .apollo.common.SLPoint sl_path = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->sl_path(static_cast<int>(i)), deterministic, target);
  }

  // repeated double aggregated_boundary_s = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(10, this->aggregated_boundary_s_, target);

  // repeated double aggregated_boundary_low = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(11, this->aggregated_boundary_low_, target);

  // repeated double aggregated_boundary_high = 12;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(12, this->aggregated_boundary_high_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.SLFrameDebug)
  return target;
}

size_t SLFrameDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.SLFrameDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double sampled_s = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sampled_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sampled_s_size());
    total_size += data_size;
  }

  // repeated double static_obstacle_lower_bound = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->static_obstacle_lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->static_obstacle_lower_bound_size());
    total_size += data_size;
  }

  // repeated double dynamic_obstacle_lower_bound = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_obstacle_lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dynamic_obstacle_lower_bound_size());
    total_size += data_size;
  }

  // repeated double static_obstacle_upper_bound = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->static_obstacle_upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->static_obstacle_upper_bound_size());
    total_size += data_size;
  }

  // repeated double dynamic_obstacle_upper_bound = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_obstacle_upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dynamic_obstacle_upper_bound_size());
    total_size += data_size;
  }

  // repeated double map_lower_bound = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->map_lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->map_lower_bound_size());
    total_size += data_size;
  }

  // repeated double map_upper_bound = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->map_upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->map_upper_bound_size());
    total_size += data_size;
  }

  // repeated .apollo.common.SLPoint sl_path = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl_path(static_cast<int>(i)));
    }
  }

  // repeated double aggregated_boundary_s = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregated_boundary_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aggregated_boundary_s_size());
    total_size += data_size;
  }

  // repeated double aggregated_boundary_low = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregated_boundary_low_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aggregated_boundary_low_size());
    total_size += data_size;
  }

  // repeated double aggregated_boundary_high = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregated_boundary_high_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aggregated_boundary_high_size());
    total_size += data_size;
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLFrameDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.SLFrameDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SLFrameDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLFrameDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.SLFrameDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.SLFrameDebug)
    MergeFrom(*source);
  }
}

void SLFrameDebug::MergeFrom(const SLFrameDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.SLFrameDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sampled_s_.MergeFrom(from.sampled_s_);
  static_obstacle_lower_bound_.MergeFrom(from.static_obstacle_lower_bound_);
  dynamic_obstacle_lower_bound_.MergeFrom(from.dynamic_obstacle_lower_bound_);
  static_obstacle_upper_bound_.MergeFrom(from.static_obstacle_upper_bound_);
  dynamic_obstacle_upper_bound_.MergeFrom(from.dynamic_obstacle_upper_bound_);
  map_lower_bound_.MergeFrom(from.map_lower_bound_);
  map_upper_bound_.MergeFrom(from.map_upper_bound_);
  sl_path_.MergeFrom(from.sl_path_);
  aggregated_boundary_s_.MergeFrom(from.aggregated_boundary_s_);
  aggregated_boundary_low_.MergeFrom(from.aggregated_boundary_low_);
  aggregated_boundary_high_.MergeFrom(from.aggregated_boundary_high_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SLFrameDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.SLFrameDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLFrameDebug::CopyFrom(const SLFrameDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.SLFrameDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLFrameDebug::IsInitialized() const {
  return true;
}

void SLFrameDebug::Swap(SLFrameDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLFrameDebug::InternalSwap(SLFrameDebug* other) {
  using std::swap;
  sampled_s_.InternalSwap(&other->sampled_s_);
  static_obstacle_lower_bound_.InternalSwap(&other->static_obstacle_lower_bound_);
  dynamic_obstacle_lower_bound_.InternalSwap(&other->dynamic_obstacle_lower_bound_);
  static_obstacle_upper_bound_.InternalSwap(&other->static_obstacle_upper_bound_);
  dynamic_obstacle_upper_bound_.InternalSwap(&other->dynamic_obstacle_upper_bound_);
  map_lower_bound_.InternalSwap(&other->map_lower_bound_);
  map_upper_bound_.InternalSwap(&other->map_upper_bound_);
  CastToBase(&sl_path_)->InternalSwap(CastToBase(&other->sl_path_));
  aggregated_boundary_s_.InternalSwap(&other->aggregated_boundary_s_);
  aggregated_boundary_low_.InternalSwap(&other->aggregated_boundary_low_);
  aggregated_boundary_high_.InternalSwap(&other->aggregated_boundary_high_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLFrameDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphSpeedConstraint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphSpeedConstraint::kTFieldNumber;
const int STGraphDebug_STGraphSpeedConstraint::kLowerBoundFieldNumber;
const int STGraphDebug_STGraphSpeedConstraint::kUpperBoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphSpeedConstraint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}
STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint(const STGraphDebug_STGraphSpeedConstraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      t_(from.t_),
      lower_bound_(from.lower_bound_),
      upper_bound_(from.upper_bound_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}

void STGraphDebug_STGraphSpeedConstraint::SharedCtor() {
}

STGraphDebug_STGraphSpeedConstraint::~STGraphDebug_STGraphSpeedConstraint() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  SharedDtor();
}

void STGraphDebug_STGraphSpeedConstraint::SharedDtor() {
}

void STGraphDebug_STGraphSpeedConstraint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphSpeedConstraint::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphSpeedConstraint& STGraphDebug_STGraphSpeedConstraint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphSpeedConstraint.base);
  return *internal_default_instance();
}


void STGraphDebug_STGraphSpeedConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  lower_bound_.Clear();
  upper_bound_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphSpeedConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double lower_bound = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double upper_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return false;
#undef DO_
}

void STGraphDebug_STGraphSpeedConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double lower_bound = 2;
  for (int i = 0, n = this->lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->lower_bound(i), output);
  }

  // repeated double upper_bound = 3;
  for (int i = 0, n = this->upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->upper_bound(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}

::google::protobuf::uint8* STGraphDebug_STGraphSpeedConstraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double lower_bound = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->lower_bound_, target);

  // repeated double upper_bound = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->upper_bound_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return target;
}

size_t STGraphDebug_STGraphSpeedConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double lower_bound = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lower_bound_size());
    total_size += data_size;
  }

  // repeated double upper_bound = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->upper_bound_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STGraphDebug_STGraphSpeedConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphSpeedConstraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphSpeedConstraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphSpeedConstraint::MergeFrom(const STGraphDebug_STGraphSpeedConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  lower_bound_.MergeFrom(from.lower_bound_);
  upper_bound_.MergeFrom(from.upper_bound_);
}

void STGraphDebug_STGraphSpeedConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphSpeedConstraint::CopyFrom(const STGraphDebug_STGraphSpeedConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphSpeedConstraint::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphSpeedConstraint::Swap(STGraphDebug_STGraphSpeedConstraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphSpeedConstraint::InternalSwap(STGraphDebug_STGraphSpeedConstraint* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  lower_bound_.InternalSwap(&other->lower_bound_);
  upper_bound_.InternalSwap(&other->upper_bound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STGraphDebug_STGraphSpeedConstraint::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphKernelCuiseRef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphKernelCuiseRef::kTFieldNumber;
const int STGraphDebug_STGraphKernelCuiseRef::kCruiseLineSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphKernelCuiseRef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}
STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef(const STGraphDebug_STGraphKernelCuiseRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      t_(from.t_),
      cruise_line_s_(from.cruise_line_s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}

void STGraphDebug_STGraphKernelCuiseRef::SharedCtor() {
}

STGraphDebug_STGraphKernelCuiseRef::~STGraphDebug_STGraphKernelCuiseRef() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  SharedDtor();
}

void STGraphDebug_STGraphKernelCuiseRef::SharedDtor() {
}

void STGraphDebug_STGraphKernelCuiseRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphKernelCuiseRef::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphKernelCuiseRef& STGraphDebug_STGraphKernelCuiseRef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphKernelCuiseRef.base);
  return *internal_default_instance();
}


void STGraphDebug_STGraphKernelCuiseRef::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  cruise_line_s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphKernelCuiseRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double cruise_line_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_cruise_line_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_cruise_line_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return false;
#undef DO_
}

void STGraphDebug_STGraphKernelCuiseRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double cruise_line_s = 2;
  for (int i = 0, n = this->cruise_line_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->cruise_line_s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}

::google::protobuf::uint8* STGraphDebug_STGraphKernelCuiseRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double cruise_line_s = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->cruise_line_s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return target;
}

size_t STGraphDebug_STGraphKernelCuiseRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double cruise_line_s = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cruise_line_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cruise_line_s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STGraphDebug_STGraphKernelCuiseRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphKernelCuiseRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphKernelCuiseRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphKernelCuiseRef::MergeFrom(const STGraphDebug_STGraphKernelCuiseRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  cruise_line_s_.MergeFrom(from.cruise_line_s_);
}

void STGraphDebug_STGraphKernelCuiseRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphKernelCuiseRef::CopyFrom(const STGraphDebug_STGraphKernelCuiseRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphKernelCuiseRef::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphKernelCuiseRef::Swap(STGraphDebug_STGraphKernelCuiseRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphKernelCuiseRef::InternalSwap(STGraphDebug_STGraphKernelCuiseRef* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  cruise_line_s_.InternalSwap(&other->cruise_line_s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STGraphDebug_STGraphKernelCuiseRef::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphKernelFollowRef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphKernelFollowRef::kTFieldNumber;
const int STGraphDebug_STGraphKernelFollowRef::kFollowLineSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphKernelFollowRef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}
STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef(const STGraphDebug_STGraphKernelFollowRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      t_(from.t_),
      follow_line_s_(from.follow_line_s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}

void STGraphDebug_STGraphKernelFollowRef::SharedCtor() {
}

STGraphDebug_STGraphKernelFollowRef::~STGraphDebug_STGraphKernelFollowRef() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  SharedDtor();
}

void STGraphDebug_STGraphKernelFollowRef::SharedDtor() {
}

void STGraphDebug_STGraphKernelFollowRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphKernelFollowRef::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphKernelFollowRef& STGraphDebug_STGraphKernelFollowRef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug_STGraphKernelFollowRef.base);
  return *internal_default_instance();
}


void STGraphDebug_STGraphKernelFollowRef::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  follow_line_s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphKernelFollowRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double follow_line_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_follow_line_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_follow_line_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return false;
#undef DO_
}

void STGraphDebug_STGraphKernelFollowRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double follow_line_s = 2;
  for (int i = 0, n = this->follow_line_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->follow_line_s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}

::google::protobuf::uint8* STGraphDebug_STGraphKernelFollowRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double follow_line_s = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->follow_line_s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return target;
}

size_t STGraphDebug_STGraphKernelFollowRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double follow_line_s = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->follow_line_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->follow_line_s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STGraphDebug_STGraphKernelFollowRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphKernelFollowRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphKernelFollowRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphKernelFollowRef::MergeFrom(const STGraphDebug_STGraphKernelFollowRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  follow_line_s_.MergeFrom(from.follow_line_s_);
}

void STGraphDebug_STGraphKernelFollowRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphKernelFollowRef::CopyFrom(const STGraphDebug_STGraphKernelFollowRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphKernelFollowRef::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphKernelFollowRef::Swap(STGraphDebug_STGraphKernelFollowRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphKernelFollowRef::InternalSwap(STGraphDebug_STGraphKernelFollowRef* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  follow_line_s_.InternalSwap(&other->follow_line_s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STGraphDebug_STGraphKernelFollowRef::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->speed_constraint_ = const_cast< ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint*>(
      ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint::internal_default_instance());
  ::apollo::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->kernel_cruise_ref_ = const_cast< ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef*>(
      ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef::internal_default_instance());
  ::apollo::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->kernel_follow_ref_ = const_cast< ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef*>(
      ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef::internal_default_instance());
}
void STGraphDebug::clear_speed_limit() {
  speed_limit_.Clear();
}
void STGraphDebug::clear_speed_profile() {
  speed_profile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug::kNameFieldNumber;
const int STGraphDebug::kBoundaryFieldNumber;
const int STGraphDebug::kSpeedLimitFieldNumber;
const int STGraphDebug::kSpeedProfileFieldNumber;
const int STGraphDebug::kSpeedConstraintFieldNumber;
const int STGraphDebug::kKernelCruiseRefFieldNumber;
const int STGraphDebug::kKernelFollowRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug::STGraphDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.STGraphDebug)
}
STGraphDebug::STGraphDebug(const STGraphDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      boundary_(from.boundary_),
      speed_limit_(from.speed_limit_),
      speed_profile_(from.speed_profile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_speed_constraint()) {
    speed_constraint_ = new ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint(*from.speed_constraint_);
  } else {
    speed_constraint_ = NULL;
  }
  if (from.has_kernel_cruise_ref()) {
    kernel_cruise_ref_ = new ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef(*from.kernel_cruise_ref_);
  } else {
    kernel_cruise_ref_ = NULL;
  }
  if (from.has_kernel_follow_ref()) {
    kernel_follow_ref_ = new ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef(*from.kernel_follow_ref_);
  } else {
    kernel_follow_ref_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.STGraphDebug)
}

void STGraphDebug::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&speed_constraint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kernel_follow_ref_) -
      reinterpret_cast<char*>(&speed_constraint_)) + sizeof(kernel_follow_ref_));
}

STGraphDebug::~STGraphDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.STGraphDebug)
  SharedDtor();
}

void STGraphDebug::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete speed_constraint_;
  if (this != internal_default_instance()) delete kernel_cruise_ref_;
  if (this != internal_default_instance()) delete kernel_follow_ref_;
}

void STGraphDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STGraphDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug& STGraphDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_STGraphDebug.base);
  return *internal_default_instance();
}


void STGraphDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.STGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boundary_.Clear();
  speed_limit_.Clear();
  speed_profile_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(speed_constraint_ != NULL);
      speed_constraint_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(kernel_cruise_ref_ != NULL);
      kernel_cruise_ref_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(kernel_follow_ref_ != NULL);
      kernel_follow_ref_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.STGraphDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.STGraphDebug.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.StGraphBoundaryDebug boundary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.SpeedPoint speed_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.SpeedPoint speed_profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speed_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kernel_cruise_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kernel_follow_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.STGraphDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.STGraphDebug)
  return false;
#undef DO_
}

void STGraphDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.STGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.STGraphDebug.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .apollo.planning_internal.StGraphBoundaryDebug boundary = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->boundary(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.common.SpeedPoint speed_limit = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_limit_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->speed_limit(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.common.SpeedPoint speed_profile = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_profile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->speed_profile(static_cast<int>(i)),
      output);
  }

  // optional .apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_speed_constraint(), output);
  }

  // optional .apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_kernel_cruise_ref(), output);
  }

  // optional .apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_kernel_follow_ref(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.STGraphDebug)
}

::google::protobuf::uint8* STGraphDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.STGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.STGraphDebug.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .apollo.planning_internal.StGraphBoundaryDebug boundary = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->boundary(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.common.SpeedPoint speed_limit = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_limit_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->speed_limit(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.common.SpeedPoint speed_profile = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_profile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->speed_profile(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_speed_constraint(), deterministic, target);
  }

  // optional .apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_kernel_cruise_ref(), deterministic, target);
  }

  // optional .apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_kernel_follow_ref(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.STGraphDebug)
  return target;
}

size_t STGraphDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.STGraphDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning_internal.StGraphBoundaryDebug boundary = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary(static_cast<int>(i)));
    }
  }

  // repeated .apollo.common.SpeedPoint speed_limit = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_limit_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_limit(static_cast<int>(i)));
    }
  }

  // repeated .apollo.common.SpeedPoint speed_profile = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_profile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_profile(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
    if (has_speed_constraint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *speed_constraint_);
    }

    // optional .apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
    if (has_kernel_cruise_ref()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kernel_cruise_ref_);
    }

    // optional .apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
    if (has_kernel_follow_ref()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kernel_follow_ref_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STGraphDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.STGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.STGraphDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.STGraphDebug)
    MergeFrom(*source);
  }
}

void STGraphDebug::MergeFrom(const STGraphDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.STGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boundary_.MergeFrom(from.boundary_);
  speed_limit_.MergeFrom(from.speed_limit_);
  speed_profile_.MergeFrom(from.speed_profile_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_speed_constraint()->::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint::MergeFrom(from.speed_constraint());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_kernel_cruise_ref()->::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef::MergeFrom(from.kernel_cruise_ref());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_kernel_follow_ref()->::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef::MergeFrom(from.kernel_follow_ref());
    }
  }
}

void STGraphDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.STGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug::CopyFrom(const STGraphDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.STGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug::IsInitialized() const {
  return true;
}

void STGraphDebug::Swap(STGraphDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug::InternalSwap(STGraphDebug* other) {
  using std::swap;
  CastToBase(&boundary_)->InternalSwap(CastToBase(&other->boundary_));
  CastToBase(&speed_limit_)->InternalSwap(CastToBase(&other->speed_limit_));
  CastToBase(&speed_profile_)->InternalSwap(CastToBase(&other->speed_profile_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(speed_constraint_, other->speed_constraint_);
  swap(kernel_cruise_ref_, other->kernel_cruise_ref_);
  swap(kernel_follow_ref_, other->kernel_follow_ref_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STGraphDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignalLightDebug_SignalDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignalLightDebug_SignalDebug::kLightIdFieldNumber;
const int SignalLightDebug_SignalDebug::kColorFieldNumber;
const int SignalLightDebug_SignalDebug::kLightStopSFieldNumber;
const int SignalLightDebug_SignalDebug::kAdcStopDecelerationFieldNumber;
const int SignalLightDebug_SignalDebug::kIsStopWallCreatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignalLightDebug_SignalDebug::SignalLightDebug_SignalDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SignalLightDebug_SignalDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.SignalLightDebug.SignalDebug)
}
SignalLightDebug_SignalDebug::SignalLightDebug_SignalDebug(const SignalLightDebug_SignalDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  light_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_light_id()) {
    light_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.light_id_);
  }
  ::memcpy(&light_stop_s_, &from.light_stop_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&adc_stop_deceleration_) -
    reinterpret_cast<char*>(&light_stop_s_)) + sizeof(adc_stop_deceleration_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.SignalLightDebug.SignalDebug)
}

void SignalLightDebug_SignalDebug::SharedCtor() {
  light_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&light_stop_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adc_stop_deceleration_) -
      reinterpret_cast<char*>(&light_stop_s_)) + sizeof(adc_stop_deceleration_));
}

SignalLightDebug_SignalDebug::~SignalLightDebug_SignalDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.SignalLightDebug.SignalDebug)
  SharedDtor();
}

void SignalLightDebug_SignalDebug::SharedDtor() {
  light_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignalLightDebug_SignalDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignalLightDebug_SignalDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignalLightDebug_SignalDebug& SignalLightDebug_SignalDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SignalLightDebug_SignalDebug.base);
  return *internal_default_instance();
}


void SignalLightDebug_SignalDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    light_id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&light_stop_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_stop_deceleration_) -
        reinterpret_cast<char*>(&light_stop_s_)) + sizeof(adc_stop_deceleration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SignalLightDebug_SignalDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string light_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_light_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->light_id().data(), static_cast<int>(this->light_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.SignalLightDebug.SignalDebug.light_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.perception.TrafficLight.Color color = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::perception::TrafficLight_Color_IsValid(value)) {
            set_color(static_cast< ::apollo::perception::TrafficLight_Color >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double light_stop_s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_light_stop_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &light_stop_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adc_stop_deceleration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_adc_stop_deceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_stop_deceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_stop_wall_created = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_stop_wall_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_stop_wall_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.SignalLightDebug.SignalDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.SignalLightDebug.SignalDebug)
  return false;
#undef DO_
}

void SignalLightDebug_SignalDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string light_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->light_id().data(), static_cast<int>(this->light_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SignalLightDebug.SignalDebug.light_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->light_id(), output);
  }

  // optional .apollo.perception.TrafficLight.Color color = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->color(), output);
  }

  // optional double light_stop_s = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->light_stop_s(), output);
  }

  // optional double adc_stop_deceleration = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->adc_stop_deceleration(), output);
  }

  // optional bool is_stop_wall_created = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_stop_wall_created(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.SignalLightDebug.SignalDebug)
}

::google::protobuf::uint8* SignalLightDebug_SignalDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string light_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->light_id().data(), static_cast<int>(this->light_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SignalLightDebug.SignalDebug.light_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->light_id(), target);
  }

  // optional .apollo.perception.TrafficLight.Color color = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->color(), target);
  }

  // optional double light_stop_s = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->light_stop_s(), target);
  }

  // optional double adc_stop_deceleration = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->adc_stop_deceleration(), target);
  }

  // optional bool is_stop_wall_created = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_stop_wall_created(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.SignalLightDebug.SignalDebug)
  return target;
}

size_t SignalLightDebug_SignalDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string light_id = 1;
    if (has_light_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->light_id());
    }

    // optional double light_stop_s = 3;
    if (has_light_stop_s()) {
      total_size += 1 + 8;
    }

    // optional .apollo.perception.TrafficLight.Color color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->color());
    }

    // optional bool is_stop_wall_created = 5;
    if (has_is_stop_wall_created()) {
      total_size += 1 + 1;
    }

    // optional double adc_stop_deceleration = 4;
    if (has_adc_stop_deceleration()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignalLightDebug_SignalDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SignalLightDebug_SignalDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignalLightDebug_SignalDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.SignalLightDebug.SignalDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.SignalLightDebug.SignalDebug)
    MergeFrom(*source);
  }
}

void SignalLightDebug_SignalDebug::MergeFrom(const SignalLightDebug_SignalDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_light_id();
      light_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.light_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      light_stop_s_ = from.light_stop_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_stop_wall_created_ = from.is_stop_wall_created_;
    }
    if (cached_has_bits & 0x00000010u) {
      adc_stop_deceleration_ = from.adc_stop_deceleration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SignalLightDebug_SignalDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignalLightDebug_SignalDebug::CopyFrom(const SignalLightDebug_SignalDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.SignalLightDebug.SignalDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalLightDebug_SignalDebug::IsInitialized() const {
  return true;
}

void SignalLightDebug_SignalDebug::Swap(SignalLightDebug_SignalDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignalLightDebug_SignalDebug::InternalSwap(SignalLightDebug_SignalDebug* other) {
  using std::swap;
  light_id_.Swap(&other->light_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(light_stop_s_, other->light_stop_s_);
  swap(color_, other->color_);
  swap(is_stop_wall_created_, other->is_stop_wall_created_);
  swap(adc_stop_deceleration_, other->adc_stop_deceleration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignalLightDebug_SignalDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignalLightDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignalLightDebug::kAdcSpeedFieldNumber;
const int SignalLightDebug::kAdcFrontSFieldNumber;
const int SignalLightDebug::kSignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignalLightDebug::SignalLightDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SignalLightDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.SignalLightDebug)
}
SignalLightDebug::SignalLightDebug(const SignalLightDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      signal_(from.signal_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adc_speed_, &from.adc_speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&adc_front_s_) -
    reinterpret_cast<char*>(&adc_speed_)) + sizeof(adc_front_s_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.SignalLightDebug)
}

void SignalLightDebug::SharedCtor() {
  ::memset(&adc_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adc_front_s_) -
      reinterpret_cast<char*>(&adc_speed_)) + sizeof(adc_front_s_));
}

SignalLightDebug::~SignalLightDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.SignalLightDebug)
  SharedDtor();
}

void SignalLightDebug::SharedDtor() {
}

void SignalLightDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignalLightDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignalLightDebug& SignalLightDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SignalLightDebug.base);
  return *internal_default_instance();
}


void SignalLightDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.SignalLightDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signal_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&adc_speed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adc_front_s_) -
        reinterpret_cast<char*>(&adc_speed_)) + sizeof(adc_front_s_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SignalLightDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.SignalLightDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double adc_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_adc_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adc_front_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_adc_front_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_front_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.SignalLightDebug.SignalDebug signal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.SignalLightDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.SignalLightDebug)
  return false;
#undef DO_
}

void SignalLightDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.SignalLightDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double adc_speed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->adc_speed(), output);
  }

  // optional double adc_front_s = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->adc_front_s(), output);
  }

  // repeated .apollo.planning_internal.SignalLightDebug.SignalDebug signal = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->signal(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.SignalLightDebug)
}

::google::protobuf::uint8* SignalLightDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.SignalLightDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double adc_speed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->adc_speed(), target);
  }

  // optional double adc_front_s = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->adc_front_s(), target);
  }

  // repeated .apollo.planning_internal.SignalLightDebug.SignalDebug signal = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signal_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->signal(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.SignalLightDebug)
  return target;
}

size_t SignalLightDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.SignalLightDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning_internal.SignalLightDebug.SignalDebug signal = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->signal_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->signal(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional double adc_speed = 1;
    if (has_adc_speed()) {
      total_size += 1 + 8;
    }

    // optional double adc_front_s = 2;
    if (has_adc_front_s()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignalLightDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.SignalLightDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SignalLightDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignalLightDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.SignalLightDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.SignalLightDebug)
    MergeFrom(*source);
  }
}

void SignalLightDebug::MergeFrom(const SignalLightDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.SignalLightDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signal_.MergeFrom(from.signal_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      adc_speed_ = from.adc_speed_;
    }
    if (cached_has_bits & 0x00000002u) {
      adc_front_s_ = from.adc_front_s_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SignalLightDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.SignalLightDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignalLightDebug::CopyFrom(const SignalLightDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.SignalLightDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalLightDebug::IsInitialized() const {
  return true;
}

void SignalLightDebug::Swap(SignalLightDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignalLightDebug::InternalSwap(SignalLightDebug* other) {
  using std::swap;
  CastToBase(&signal_)->InternalSwap(CastToBase(&other->signal_));
  swap(adc_speed_, other->adc_speed_);
  swap(adc_front_s_, other->adc_front_s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignalLightDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecisionTag::InitAsDefaultInstance() {
  ::apollo::planning_internal::_DecisionTag_default_instance_._instance.get_mutable()->decision_ = const_cast< ::apollo::planning::ObjectDecisionType*>(
      ::apollo::planning::ObjectDecisionType::internal_default_instance());
}
void DecisionTag::clear_decision() {
  if (decision_ != NULL) decision_->Clear();
  clear_has_decision();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecisionTag::kDeciderTagFieldNumber;
const int DecisionTag::kDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecisionTag::DecisionTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_DecisionTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.DecisionTag)
}
DecisionTag::DecisionTag(const DecisionTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  decider_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_decider_tag()) {
    decider_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decider_tag_);
  }
  if (from.has_decision()) {
    decision_ = new ::apollo::planning::ObjectDecisionType(*from.decision_);
  } else {
    decision_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.DecisionTag)
}

void DecisionTag::SharedCtor() {
  decider_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decision_ = NULL;
}

DecisionTag::~DecisionTag() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.DecisionTag)
  SharedDtor();
}

void DecisionTag::SharedDtor() {
  decider_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete decision_;
}

void DecisionTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecisionTag::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecisionTag& DecisionTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_DecisionTag.base);
  return *internal_default_instance();
}


void DecisionTag::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.DecisionTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      decider_tag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(decision_ != NULL);
      decision_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DecisionTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.DecisionTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string decider_tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decider_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->decider_tag().data(), static_cast<int>(this->decider_tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.DecisionTag.decider_tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ObjectDecisionType decision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.DecisionTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.DecisionTag)
  return false;
#undef DO_
}

void DecisionTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.DecisionTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string decider_tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->decider_tag().data(), static_cast<int>(this->decider_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.DecisionTag.decider_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->decider_tag(), output);
  }

  // optional .apollo.planning.ObjectDecisionType decision = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_decision(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.DecisionTag)
}

::google::protobuf::uint8* DecisionTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.DecisionTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string decider_tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->decider_tag().data(), static_cast<int>(this->decider_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.DecisionTag.decider_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->decider_tag(), target);
  }

  // optional .apollo.planning.ObjectDecisionType decision = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_decision(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.DecisionTag)
  return target;
}

size_t DecisionTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.DecisionTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string decider_tag = 1;
    if (has_decider_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->decider_tag());
    }

    // optional .apollo.planning.ObjectDecisionType decision = 2;
    if (has_decision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *decision_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecisionTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.DecisionTag)
  GOOGLE_DCHECK_NE(&from, this);
  const DecisionTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecisionTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.DecisionTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.DecisionTag)
    MergeFrom(*source);
  }
}

void DecisionTag::MergeFrom(const DecisionTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.DecisionTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_decider_tag();
      decider_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decider_tag_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_decision()->::apollo::planning::ObjectDecisionType::MergeFrom(from.decision());
    }
  }
}

void DecisionTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.DecisionTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecisionTag::CopyFrom(const DecisionTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.DecisionTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecisionTag::IsInitialized() const {
  return true;
}

void DecisionTag::Swap(DecisionTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecisionTag::InternalSwap(DecisionTag* other) {
  using std::swap;
  decider_tag_.Swap(&other->decider_tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(decision_, other->decision_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecisionTag::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObstacleDebug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_ObstacleDebug_default_instance_._instance.get_mutable()->sl_boundary_ = const_cast< ::apollo::planning::SLBoundary*>(
      ::apollo::planning::SLBoundary::internal_default_instance());
}
void ObstacleDebug::clear_sl_boundary() {
  if (sl_boundary_ != NULL) sl_boundary_->Clear();
  clear_has_sl_boundary();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObstacleDebug::kIdFieldNumber;
const int ObstacleDebug::kSlBoundaryFieldNumber;
const int ObstacleDebug::kDecisionTagFieldNumber;
const int ObstacleDebug::kVerticesXCoordsFieldNumber;
const int ObstacleDebug::kVerticesYCoordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObstacleDebug::ObstacleDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ObstacleDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.ObstacleDebug)
}
ObstacleDebug::ObstacleDebug(const ObstacleDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      decision_tag_(from.decision_tag_),
      vertices_x_coords_(from.vertices_x_coords_),
      vertices_y_coords_(from.vertices_y_coords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_sl_boundary()) {
    sl_boundary_ = new ::apollo::planning::SLBoundary(*from.sl_boundary_);
  } else {
    sl_boundary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.ObstacleDebug)
}

void ObstacleDebug::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sl_boundary_ = NULL;
}

ObstacleDebug::~ObstacleDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.ObstacleDebug)
  SharedDtor();
}

void ObstacleDebug::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sl_boundary_;
}

void ObstacleDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObstacleDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObstacleDebug& ObstacleDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ObstacleDebug.base);
  return *internal_default_instance();
}


void ObstacleDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.ObstacleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decision_tag_.Clear();
  vertices_x_coords_.Clear();
  vertices_y_coords_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(sl_boundary_ != NULL);
      sl_boundary_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObstacleDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.ObstacleDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.ObstacleDebug.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.SLBoundary sl_boundary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sl_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.DecisionTag decision_tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_decision_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double vertices_x_coords = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33u, input, this->mutable_vertices_x_coords())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_vertices_x_coords())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double vertices_y_coords = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41u, input, this->mutable_vertices_y_coords())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_vertices_y_coords())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.ObstacleDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.ObstacleDebug)
  return false;
#undef DO_
}

void ObstacleDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.ObstacleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.ObstacleDebug.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .apollo.planning.SLBoundary sl_boundary = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sl_boundary(), output);
  }

  // repeated .apollo.planning_internal.DecisionTag decision_tag = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_tag_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->decision_tag(static_cast<int>(i)),
      output);
  }

  // repeated double vertices_x_coords = 4;
  for (int i = 0, n = this->vertices_x_coords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->vertices_x_coords(i), output);
  }

  // repeated double vertices_y_coords = 5;
  for (int i = 0, n = this->vertices_y_coords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->vertices_y_coords(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.ObstacleDebug)
}

::google::protobuf::uint8* ObstacleDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.ObstacleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.ObstacleDebug.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .apollo.planning.SLBoundary sl_boundary = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sl_boundary(), deterministic, target);
  }

  // repeated .apollo.planning_internal.DecisionTag decision_tag = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_tag_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->decision_tag(static_cast<int>(i)), deterministic, target);
  }

  // repeated double vertices_x_coords = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(4, this->vertices_x_coords_, target);

  // repeated double vertices_y_coords = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(5, this->vertices_y_coords_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.ObstacleDebug)
  return target;
}

size_t ObstacleDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.ObstacleDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning_internal.DecisionTag decision_tag = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->decision_tag_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->decision_tag(static_cast<int>(i)));
    }
  }

  // repeated double vertices_x_coords = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->vertices_x_coords_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->vertices_x_coords_size());
    total_size += data_size;
  }

  // repeated double vertices_y_coords = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vertices_y_coords_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->vertices_y_coords_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .apollo.planning.SLBoundary sl_boundary = 2;
    if (has_sl_boundary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sl_boundary_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObstacleDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.ObstacleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ObstacleDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObstacleDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.ObstacleDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.ObstacleDebug)
    MergeFrom(*source);
  }
}

void ObstacleDebug::MergeFrom(const ObstacleDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.ObstacleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  decision_tag_.MergeFrom(from.decision_tag_);
  vertices_x_coords_.MergeFrom(from.vertices_x_coords_);
  vertices_y_coords_.MergeFrom(from.vertices_y_coords_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_sl_boundary()->::apollo::planning::SLBoundary::MergeFrom(from.sl_boundary());
    }
  }
}

void ObstacleDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.ObstacleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObstacleDebug::CopyFrom(const ObstacleDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.ObstacleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleDebug::IsInitialized() const {
  return true;
}

void ObstacleDebug::Swap(ObstacleDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObstacleDebug::InternalSwap(ObstacleDebug* other) {
  using std::swap;
  CastToBase(&decision_tag_)->InternalSwap(CastToBase(&other->decision_tag_));
  vertices_x_coords_.InternalSwap(&other->vertices_x_coords_);
  vertices_y_coords_.InternalSwap(&other->vertices_y_coords_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sl_boundary_, other->sl_boundary_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObstacleDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferenceLineDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferenceLineDebug::kIdFieldNumber;
const int ReferenceLineDebug::kLengthFieldNumber;
const int ReferenceLineDebug::kCostFieldNumber;
const int ReferenceLineDebug::kIsChangeLanePathFieldNumber;
const int ReferenceLineDebug::kIsDrivableFieldNumber;
const int ReferenceLineDebug::kIsProtectedFieldNumber;
const int ReferenceLineDebug::kIsOffroadFieldNumber;
const int ReferenceLineDebug::kMinimumBoundaryFieldNumber;
const int ReferenceLineDebug::kAverageKappaFieldNumber;
const int ReferenceLineDebug::kAverageDkappaFieldNumber;
const int ReferenceLineDebug::kKappaRmsFieldNumber;
const int ReferenceLineDebug::kDkappaRmsFieldNumber;
const int ReferenceLineDebug::kKappaMaxAbsFieldNumber;
const int ReferenceLineDebug::kDkappaMaxAbsFieldNumber;
const int ReferenceLineDebug::kAverageOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferenceLineDebug::ReferenceLineDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ReferenceLineDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.ReferenceLineDebug)
}
ReferenceLineDebug::ReferenceLineDebug(const ReferenceLineDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_offroad_) -
    reinterpret_cast<char*>(&length_)) + sizeof(is_offroad_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.ReferenceLineDebug)
}

void ReferenceLineDebug::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_offroad_) -
      reinterpret_cast<char*>(&length_)) + sizeof(is_offroad_));
}

ReferenceLineDebug::~ReferenceLineDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.ReferenceLineDebug)
  SharedDtor();
}

void ReferenceLineDebug::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReferenceLineDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferenceLineDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferenceLineDebug& ReferenceLineDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ReferenceLineDebug.base);
  return *internal_default_instance();
}


void ReferenceLineDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.ReferenceLineDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dkappa_rms_) -
        reinterpret_cast<char*>(&length_)) + sizeof(dkappa_rms_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&kappa_max_abs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_offroad_) -
        reinterpret_cast<char*>(&kappa_max_abs_)) + sizeof(is_offroad_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReferenceLineDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.ReferenceLineDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.ReferenceLineDebug.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double cost = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_change_lane_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_change_lane_path();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_change_lane_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_drivable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_drivable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_drivable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_protected = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_protected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_protected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_offroad = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_offroad();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_offroad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double minimum_boundary = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_minimum_boundary();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_boundary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double average_kappa = 9 [deprecated = true];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_average_kappa();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_kappa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double average_dkappa = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_average_dkappa();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_dkappa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double kappa_rms = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_kappa_rms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kappa_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double dkappa_rms = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_dkappa_rms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dkappa_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double kappa_max_abs = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_kappa_max_abs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kappa_max_abs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double dkappa_max_abs = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_dkappa_max_abs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dkappa_max_abs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double average_offset = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_average_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.ReferenceLineDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.ReferenceLineDebug)
  return false;
#undef DO_
}

void ReferenceLineDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.ReferenceLineDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.ReferenceLineDebug.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional double length = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->length(), output);
  }

  // optional double cost = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->cost(), output);
  }

  // optional bool is_change_lane_path = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_change_lane_path(), output);
  }

  // optional bool is_drivable = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_drivable(), output);
  }

  // optional bool is_protected = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_protected(), output);
  }

  // optional bool is_offroad = 7;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_offroad(), output);
  }

  // optional double minimum_boundary = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->minimum_boundary(), output);
  }

  // optional double average_kappa = 9 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->average_kappa(), output);
  }

  // optional double average_dkappa = 10 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->average_dkappa(), output);
  }

  // optional double kappa_rms = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->kappa_rms(), output);
  }

  // optional double dkappa_rms = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->dkappa_rms(), output);
  }

  // optional double kappa_max_abs = 13;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->kappa_max_abs(), output);
  }

  // optional double dkappa_max_abs = 14;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->dkappa_max_abs(), output);
  }

  // optional double average_offset = 15;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->average_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.ReferenceLineDebug)
}

::google::protobuf::uint8* ReferenceLineDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.ReferenceLineDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.ReferenceLineDebug.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional double length = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->length(), target);
  }

  // optional double cost = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->cost(), target);
  }

  // optional bool is_change_lane_path = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_change_lane_path(), target);
  }

  // optional bool is_drivable = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_drivable(), target);
  }

  // optional bool is_protected = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_protected(), target);
  }

  // optional bool is_offroad = 7;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_offroad(), target);
  }

  // optional double minimum_boundary = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->minimum_boundary(), target);
  }

  // optional double average_kappa = 9 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->average_kappa(), target);
  }

  // optional double average_dkappa = 10 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->average_dkappa(), target);
  }

  // optional double kappa_rms = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->kappa_rms(), target);
  }

  // optional double dkappa_rms = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->dkappa_rms(), target);
  }

  // optional double kappa_max_abs = 13;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->kappa_max_abs(), target);
  }

  // optional double dkappa_max_abs = 14;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->dkappa_max_abs(), target);
  }

  // optional double average_offset = 15;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->average_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.ReferenceLineDebug)
  return target;
}

size_t ReferenceLineDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.ReferenceLineDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional double length = 2;
    if (has_length()) {
      total_size += 1 + 8;
    }

    // optional double cost = 3;
    if (has_cost()) {
      total_size += 1 + 8;
    }

    // optional double minimum_boundary = 8;
    if (has_minimum_boundary()) {
      total_size += 1 + 8;
    }

    // optional double average_kappa = 9 [deprecated = true];
    if (has_average_kappa()) {
      total_size += 1 + 8;
    }

    // optional double average_dkappa = 10 [deprecated = true];
    if (has_average_dkappa()) {
      total_size += 1 + 8;
    }

    // optional double kappa_rms = 11;
    if (has_kappa_rms()) {
      total_size += 1 + 8;
    }

    // optional double dkappa_rms = 12;
    if (has_dkappa_rms()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional double kappa_max_abs = 13;
    if (has_kappa_max_abs()) {
      total_size += 1 + 8;
    }

    // optional double dkappa_max_abs = 14;
    if (has_dkappa_max_abs()) {
      total_size += 1 + 8;
    }

    // optional double average_offset = 15;
    if (has_average_offset()) {
      total_size += 1 + 8;
    }

    // optional bool is_change_lane_path = 4;
    if (has_is_change_lane_path()) {
      total_size += 1 + 1;
    }

    // optional bool is_drivable = 5;
    if (has_is_drivable()) {
      total_size += 1 + 1;
    }

    // optional bool is_protected = 6;
    if (has_is_protected()) {
      total_size += 1 + 1;
    }

    // optional bool is_offroad = 7;
    if (has_is_offroad()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceLineDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.ReferenceLineDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceLineDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferenceLineDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.ReferenceLineDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.ReferenceLineDebug)
    MergeFrom(*source);
  }
}

void ReferenceLineDebug::MergeFrom(const ReferenceLineDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.ReferenceLineDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000004u) {
      cost_ = from.cost_;
    }
    if (cached_has_bits & 0x00000008u) {
      minimum_boundary_ = from.minimum_boundary_;
    }
    if (cached_has_bits & 0x00000010u) {
      average_kappa_ = from.average_kappa_;
    }
    if (cached_has_bits & 0x00000020u) {
      average_dkappa_ = from.average_dkappa_;
    }
    if (cached_has_bits & 0x00000040u) {
      kappa_rms_ = from.kappa_rms_;
    }
    if (cached_has_bits & 0x00000080u) {
      dkappa_rms_ = from.dkappa_rms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      kappa_max_abs_ = from.kappa_max_abs_;
    }
    if (cached_has_bits & 0x00000200u) {
      dkappa_max_abs_ = from.dkappa_max_abs_;
    }
    if (cached_has_bits & 0x00000400u) {
      average_offset_ = from.average_offset_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_change_lane_path_ = from.is_change_lane_path_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_drivable_ = from.is_drivable_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_protected_ = from.is_protected_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_offroad_ = from.is_offroad_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReferenceLineDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.ReferenceLineDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceLineDebug::CopyFrom(const ReferenceLineDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.ReferenceLineDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceLineDebug::IsInitialized() const {
  return true;
}

void ReferenceLineDebug::Swap(ReferenceLineDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReferenceLineDebug::InternalSwap(ReferenceLineDebug* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(cost_, other->cost_);
  swap(minimum_boundary_, other->minimum_boundary_);
  swap(average_kappa_, other->average_kappa_);
  swap(average_dkappa_, other->average_dkappa_);
  swap(kappa_rms_, other->kappa_rms_);
  swap(dkappa_rms_, other->dkappa_rms_);
  swap(kappa_max_abs_, other->kappa_max_abs_);
  swap(dkappa_max_abs_, other->dkappa_max_abs_);
  swap(average_offset_, other->average_offset_);
  swap(is_change_lane_path_, other->is_change_lane_path_);
  swap(is_drivable_, other->is_drivable_);
  swap(is_protected_, other->is_protected_);
  swap(is_offroad_, other->is_offroad_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferenceLineDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SampleLayerDebug::InitAsDefaultInstance() {
}
void SampleLayerDebug::clear_sl_point() {
  sl_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampleLayerDebug::kSlPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampleLayerDebug::SampleLayerDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SampleLayerDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.SampleLayerDebug)
}
SampleLayerDebug::SampleLayerDebug(const SampleLayerDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sl_point_(from.sl_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.SampleLayerDebug)
}

void SampleLayerDebug::SharedCtor() {
}

SampleLayerDebug::~SampleLayerDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.SampleLayerDebug)
  SharedDtor();
}

void SampleLayerDebug::SharedDtor() {
}

void SampleLayerDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SampleLayerDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampleLayerDebug& SampleLayerDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SampleLayerDebug.base);
  return *internal_default_instance();
}


void SampleLayerDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.SampleLayerDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sl_point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SampleLayerDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.SampleLayerDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.SLPoint sl_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sl_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.SampleLayerDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.SampleLayerDebug)
  return false;
#undef DO_
}

void SampleLayerDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.SampleLayerDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.SLPoint sl_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sl_point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.SampleLayerDebug)
}

::google::protobuf::uint8* SampleLayerDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.SampleLayerDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.SLPoint sl_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sl_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.SampleLayerDebug)
  return target;
}

size_t SampleLayerDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.SampleLayerDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.SLPoint sl_point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl_point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SampleLayerDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.SampleLayerDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SampleLayerDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampleLayerDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.SampleLayerDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.SampleLayerDebug)
    MergeFrom(*source);
  }
}

void SampleLayerDebug::MergeFrom(const SampleLayerDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.SampleLayerDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sl_point_.MergeFrom(from.sl_point_);
}

void SampleLayerDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.SampleLayerDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampleLayerDebug::CopyFrom(const SampleLayerDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.SampleLayerDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleLayerDebug::IsInitialized() const {
  return true;
}

void SampleLayerDebug::Swap(SampleLayerDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampleLayerDebug::InternalSwap(SampleLayerDebug* other) {
  using std::swap;
  CastToBase(&sl_point_)->InternalSwap(CastToBase(&other->sl_point_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SampleLayerDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DpPolyGraphDebug::InitAsDefaultInstance() {
}
void DpPolyGraphDebug::clear_min_cost_point() {
  min_cost_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DpPolyGraphDebug::kSampleLayerFieldNumber;
const int DpPolyGraphDebug::kMinCostPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DpPolyGraphDebug::DpPolyGraphDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_DpPolyGraphDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.DpPolyGraphDebug)
}
DpPolyGraphDebug::DpPolyGraphDebug(const DpPolyGraphDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sample_layer_(from.sample_layer_),
      min_cost_point_(from.min_cost_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.DpPolyGraphDebug)
}

void DpPolyGraphDebug::SharedCtor() {
}

DpPolyGraphDebug::~DpPolyGraphDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.DpPolyGraphDebug)
  SharedDtor();
}

void DpPolyGraphDebug::SharedDtor() {
}

void DpPolyGraphDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DpPolyGraphDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DpPolyGraphDebug& DpPolyGraphDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_DpPolyGraphDebug.base);
  return *internal_default_instance();
}


void DpPolyGraphDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sample_layer_.Clear();
  min_cost_point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DpPolyGraphDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.DpPolyGraphDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.planning_internal.SampleLayerDebug sample_layer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sample_layer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.SLPoint min_cost_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_min_cost_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.DpPolyGraphDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.DpPolyGraphDebug)
  return false;
#undef DO_
}

void DpPolyGraphDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.planning_internal.SampleLayerDebug sample_layer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sample_layer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sample_layer(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.common.SLPoint min_cost_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->min_cost_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->min_cost_point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.DpPolyGraphDebug)
}

::google::protobuf::uint8* DpPolyGraphDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.planning_internal.SampleLayerDebug sample_layer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sample_layer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sample_layer(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.common.SLPoint min_cost_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->min_cost_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->min_cost_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.DpPolyGraphDebug)
  return target;
}

size_t DpPolyGraphDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.DpPolyGraphDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning_internal.SampleLayerDebug sample_layer = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sample_layer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sample_layer(static_cast<int>(i)));
    }
  }

  // repeated .apollo.common.SLPoint min_cost_point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->min_cost_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->min_cost_point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DpPolyGraphDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.DpPolyGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const DpPolyGraphDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DpPolyGraphDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.DpPolyGraphDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.DpPolyGraphDebug)
    MergeFrom(*source);
  }
}

void DpPolyGraphDebug::MergeFrom(const DpPolyGraphDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.DpPolyGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sample_layer_.MergeFrom(from.sample_layer_);
  min_cost_point_.MergeFrom(from.min_cost_point_);
}

void DpPolyGraphDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.DpPolyGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DpPolyGraphDebug::CopyFrom(const DpPolyGraphDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.DpPolyGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DpPolyGraphDebug::IsInitialized() const {
  return true;
}

void DpPolyGraphDebug::Swap(DpPolyGraphDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DpPolyGraphDebug::InternalSwap(DpPolyGraphDebug* other) {
  using std::swap;
  CastToBase(&sample_layer_)->InternalSwap(CastToBase(&other->sample_layer_));
  CastToBase(&min_cost_point_)->InternalSwap(CastToBase(&other->min_cost_point_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DpPolyGraphDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScenarioDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenarioDebug::kScenarioTypeFieldNumber;
const int ScenarioDebug::kStageTypeFieldNumber;
const int ScenarioDebug::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenarioDebug::ScenarioDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ScenarioDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.ScenarioDebug)
}
ScenarioDebug::ScenarioDebug(const ScenarioDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&scenario_type_, &from.scenario_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&stage_type_) -
    reinterpret_cast<char*>(&scenario_type_)) + sizeof(stage_type_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.ScenarioDebug)
}

void ScenarioDebug::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scenario_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_type_) -
      reinterpret_cast<char*>(&scenario_type_)) + sizeof(stage_type_));
}

ScenarioDebug::~ScenarioDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.ScenarioDebug)
  SharedDtor();
}

void ScenarioDebug::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScenarioDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScenarioDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenarioDebug& ScenarioDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_ScenarioDebug.base);
  return *internal_default_instance();
}


void ScenarioDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.ScenarioDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&scenario_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stage_type_) -
        reinterpret_cast<char*>(&scenario_type_)) + sizeof(stage_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScenarioDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.ScenarioDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.ScenarioConfig.ScenarioType scenario_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::ScenarioConfig_ScenarioType_IsValid(value)) {
            set_scenario_type(static_cast< ::apollo::planning::ScenarioConfig_ScenarioType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning.ScenarioConfig.StageType stage_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning::ScenarioConfig_StageType_IsValid(value)) {
            set_stage_type(static_cast< ::apollo::planning::ScenarioConfig_StageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.ScenarioDebug.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.ScenarioDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.ScenarioDebug)
  return false;
#undef DO_
}

void ScenarioDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.ScenarioDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ScenarioConfig.ScenarioType scenario_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scenario_type(), output);
  }

  // optional .apollo.planning.ScenarioConfig.StageType stage_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stage_type(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.ScenarioDebug.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.ScenarioDebug)
}

::google::protobuf::uint8* ScenarioDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.ScenarioDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.ScenarioConfig.ScenarioType scenario_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->scenario_type(), target);
  }

  // optional .apollo.planning.ScenarioConfig.StageType stage_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stage_type(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.ScenarioDebug.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.ScenarioDebug)
  return target;
}

size_t ScenarioDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.ScenarioDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .apollo.planning.ScenarioConfig.ScenarioType scenario_type = 1;
    if (has_scenario_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scenario_type());
    }

    // optional .apollo.planning.ScenarioConfig.StageType stage_type = 2;
    if (has_stage_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stage_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScenarioDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.ScenarioDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenarioDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenarioDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.ScenarioDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.ScenarioDebug)
    MergeFrom(*source);
  }
}

void ScenarioDebug::MergeFrom(const ScenarioDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.ScenarioDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      scenario_type_ = from.scenario_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      stage_type_ = from.stage_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScenarioDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.ScenarioDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenarioDebug::CopyFrom(const ScenarioDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.ScenarioDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenarioDebug::IsInitialized() const {
  return true;
}

void ScenarioDebug::Swap(ScenarioDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenarioDebug::InternalSwap(ScenarioDebug* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scenario_type_, other->scenario_type_);
  swap(stage_type_, other->stage_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScenarioDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trajectories::InitAsDefaultInstance() {
}
void Trajectories::clear_trajectory() {
  trajectory_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trajectories::kTrajectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trajectories::Trajectories()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_Trajectories.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.Trajectories)
}
Trajectories::Trajectories(const Trajectories& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      trajectory_(from.trajectory_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.Trajectories)
}

void Trajectories::SharedCtor() {
}

Trajectories::~Trajectories() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.Trajectories)
  SharedDtor();
}

void Trajectories::SharedDtor() {
}

void Trajectories::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trajectories::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trajectories& Trajectories::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_Trajectories.base);
  return *internal_default_instance();
}


void Trajectories::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.Trajectories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trajectory_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trajectories::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.Trajectories)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.Trajectory trajectory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.Trajectories)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.Trajectories)
  return false;
#undef DO_
}

void Trajectories::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.Trajectories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Trajectory trajectory = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->trajectory(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.Trajectories)
}

::google::protobuf::uint8* Trajectories::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.Trajectories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Trajectory trajectory = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->trajectory(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.Trajectories)
  return target;
}

size_t Trajectories::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.Trajectories)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.Trajectory trajectory = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->trajectory_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trajectory(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trajectories::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.Trajectories)
  GOOGLE_DCHECK_NE(&from, this);
  const Trajectories* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trajectories>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.Trajectories)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.Trajectories)
    MergeFrom(*source);
  }
}

void Trajectories::MergeFrom(const Trajectories& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.Trajectories)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trajectory_.MergeFrom(from.trajectory_);
}

void Trajectories::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.Trajectories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trajectories::CopyFrom(const Trajectories& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.Trajectories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trajectories::IsInitialized() const {
  return true;
}

void Trajectories::Swap(Trajectories* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trajectories::InternalSwap(Trajectories* other) {
  using std::swap;
  CastToBase(&trajectory_)->InternalSwap(CastToBase(&other->trajectory_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trajectories::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenSpaceDebug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->trajectories_ = const_cast< ::apollo::planning_internal::Trajectories*>(
      ::apollo::planning_internal::Trajectories::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->warm_start_trajectory_ = const_cast< ::apollo::common::VehicleMotion*>(
      ::apollo::common::VehicleMotion::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->smoothed_trajectory_ = const_cast< ::apollo::common::VehicleMotion*>(
      ::apollo::common::VehicleMotion::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->roi_shift_point_ = const_cast< ::apollo::common::TrajectoryPoint*>(
      ::apollo::common::TrajectoryPoint::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->end_point_ = const_cast< ::apollo::common::TrajectoryPoint*>(
      ::apollo::common::TrajectoryPoint::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->partitioned_trajectories_ = const_cast< ::apollo::planning_internal::Trajectories*>(
      ::apollo::planning_internal::Trajectories::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->chosen_trajectory_ = const_cast< ::apollo::planning_internal::Trajectories*>(
      ::apollo::planning_internal::Trajectories::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->fallback_trajectory_ = const_cast< ::apollo::planning_internal::Trajectories*>(
      ::apollo::planning_internal::Trajectories::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->trajectory_stitching_point_ = const_cast< ::apollo::common::TrajectoryPoint*>(
      ::apollo::common::TrajectoryPoint::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->future_collision_point_ = const_cast< ::apollo::common::TrajectoryPoint*>(
      ::apollo::common::TrajectoryPoint::internal_default_instance());
  ::apollo::planning_internal::_OpenSpaceDebug_default_instance_._instance.get_mutable()->origin_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void OpenSpaceDebug::clear_warm_start_trajectory() {
  if (warm_start_trajectory_ != NULL) warm_start_trajectory_->Clear();
  clear_has_warm_start_trajectory();
}
void OpenSpaceDebug::clear_smoothed_trajectory() {
  if (smoothed_trajectory_ != NULL) smoothed_trajectory_->Clear();
  clear_has_smoothed_trajectory();
}
void OpenSpaceDebug::clear_roi_shift_point() {
  if (roi_shift_point_ != NULL) roi_shift_point_->Clear();
  clear_has_roi_shift_point();
}
void OpenSpaceDebug::clear_end_point() {
  if (end_point_ != NULL) end_point_->Clear();
  clear_has_end_point();
}
void OpenSpaceDebug::clear_trajectory_stitching_point() {
  if (trajectory_stitching_point_ != NULL) trajectory_stitching_point_->Clear();
  clear_has_trajectory_stitching_point();
}
void OpenSpaceDebug::clear_future_collision_point() {
  if (future_collision_point_ != NULL) future_collision_point_->Clear();
  clear_has_future_collision_point();
}
void OpenSpaceDebug::clear_origin_point() {
  if (origin_point_ != NULL) origin_point_->Clear();
  clear_has_origin_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenSpaceDebug::kTrajectoriesFieldNumber;
const int OpenSpaceDebug::kWarmStartTrajectoryFieldNumber;
const int OpenSpaceDebug::kSmoothedTrajectoryFieldNumber;
const int OpenSpaceDebug::kWarmStartDualLambdaFieldNumber;
const int OpenSpaceDebug::kWarmStartDualMiuFieldNumber;
const int OpenSpaceDebug::kOptimizedDualLambdaFieldNumber;
const int OpenSpaceDebug::kOptimizedDualMiuFieldNumber;
const int OpenSpaceDebug::kXyBoundaryFieldNumber;
const int OpenSpaceDebug::kObstaclesFieldNumber;
const int OpenSpaceDebug::kRoiShiftPointFieldNumber;
const int OpenSpaceDebug::kEndPointFieldNumber;
const int OpenSpaceDebug::kPartitionedTrajectoriesFieldNumber;
const int OpenSpaceDebug::kChosenTrajectoryFieldNumber;
const int OpenSpaceDebug::kIsFallbackTrajectoryFieldNumber;
const int OpenSpaceDebug::kFallbackTrajectoryFieldNumber;
const int OpenSpaceDebug::kTrajectoryStitchingPointFieldNumber;
const int OpenSpaceDebug::kFutureCollisionPointFieldNumber;
const int OpenSpaceDebug::kTimeLatencyFieldNumber;
const int OpenSpaceDebug::kOriginPointFieldNumber;
const int OpenSpaceDebug::kOriginHeadingRadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenSpaceDebug::OpenSpaceDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_OpenSpaceDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.OpenSpaceDebug)
}
OpenSpaceDebug::OpenSpaceDebug(const OpenSpaceDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      warm_start_dual_lambda_(from.warm_start_dual_lambda_),
      warm_start_dual_miu_(from.warm_start_dual_miu_),
      optimized_dual_lambda_(from.optimized_dual_lambda_),
      optimized_dual_miu_(from.optimized_dual_miu_),
      xy_boundary_(from.xy_boundary_),
      obstacles_(from.obstacles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_trajectories()) {
    trajectories_ = new ::apollo::planning_internal::Trajectories(*from.trajectories_);
  } else {
    trajectories_ = NULL;
  }
  if (from.has_warm_start_trajectory()) {
    warm_start_trajectory_ = new ::apollo::common::VehicleMotion(*from.warm_start_trajectory_);
  } else {
    warm_start_trajectory_ = NULL;
  }
  if (from.has_smoothed_trajectory()) {
    smoothed_trajectory_ = new ::apollo::common::VehicleMotion(*from.smoothed_trajectory_);
  } else {
    smoothed_trajectory_ = NULL;
  }
  if (from.has_roi_shift_point()) {
    roi_shift_point_ = new ::apollo::common::TrajectoryPoint(*from.roi_shift_point_);
  } else {
    roi_shift_point_ = NULL;
  }
  if (from.has_end_point()) {
    end_point_ = new ::apollo::common::TrajectoryPoint(*from.end_point_);
  } else {
    end_point_ = NULL;
  }
  if (from.has_partitioned_trajectories()) {
    partitioned_trajectories_ = new ::apollo::planning_internal::Trajectories(*from.partitioned_trajectories_);
  } else {
    partitioned_trajectories_ = NULL;
  }
  if (from.has_chosen_trajectory()) {
    chosen_trajectory_ = new ::apollo::planning_internal::Trajectories(*from.chosen_trajectory_);
  } else {
    chosen_trajectory_ = NULL;
  }
  if (from.has_fallback_trajectory()) {
    fallback_trajectory_ = new ::apollo::planning_internal::Trajectories(*from.fallback_trajectory_);
  } else {
    fallback_trajectory_ = NULL;
  }
  if (from.has_trajectory_stitching_point()) {
    trajectory_stitching_point_ = new ::apollo::common::TrajectoryPoint(*from.trajectory_stitching_point_);
  } else {
    trajectory_stitching_point_ = NULL;
  }
  if (from.has_future_collision_point()) {
    future_collision_point_ = new ::apollo::common::TrajectoryPoint(*from.future_collision_point_);
  } else {
    future_collision_point_ = NULL;
  }
  if (from.has_origin_point()) {
    origin_point_ = new ::apollo::common::PointENU(*from.origin_point_);
  } else {
    origin_point_ = NULL;
  }
  ::memcpy(&time_latency_, &from.time_latency_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_fallback_trajectory_) -
    reinterpret_cast<char*>(&time_latency_)) + sizeof(is_fallback_trajectory_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.OpenSpaceDebug)
}

void OpenSpaceDebug::SharedCtor() {
  ::memset(&trajectories_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_fallback_trajectory_) -
      reinterpret_cast<char*>(&trajectories_)) + sizeof(is_fallback_trajectory_));
}

OpenSpaceDebug::~OpenSpaceDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.OpenSpaceDebug)
  SharedDtor();
}

void OpenSpaceDebug::SharedDtor() {
  if (this != internal_default_instance()) delete trajectories_;
  if (this != internal_default_instance()) delete warm_start_trajectory_;
  if (this != internal_default_instance()) delete smoothed_trajectory_;
  if (this != internal_default_instance()) delete roi_shift_point_;
  if (this != internal_default_instance()) delete end_point_;
  if (this != internal_default_instance()) delete partitioned_trajectories_;
  if (this != internal_default_instance()) delete chosen_trajectory_;
  if (this != internal_default_instance()) delete fallback_trajectory_;
  if (this != internal_default_instance()) delete trajectory_stitching_point_;
  if (this != internal_default_instance()) delete future_collision_point_;
  if (this != internal_default_instance()) delete origin_point_;
}

void OpenSpaceDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpenSpaceDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenSpaceDebug& OpenSpaceDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_OpenSpaceDebug.base);
  return *internal_default_instance();
}


void OpenSpaceDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.OpenSpaceDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  warm_start_dual_lambda_.Clear();
  warm_start_dual_miu_.Clear();
  optimized_dual_lambda_.Clear();
  optimized_dual_miu_.Clear();
  xy_boundary_.Clear();
  obstacles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(trajectories_ != NULL);
      trajectories_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(warm_start_trajectory_ != NULL);
      warm_start_trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(smoothed_trajectory_ != NULL);
      smoothed_trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(roi_shift_point_ != NULL);
      roi_shift_point_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(end_point_ != NULL);
      end_point_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(partitioned_trajectories_ != NULL);
      partitioned_trajectories_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(chosen_trajectory_ != NULL);
      chosen_trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(fallback_trajectory_ != NULL);
      fallback_trajectory_->Clear();
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(trajectory_stitching_point_ != NULL);
      trajectory_stitching_point_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(future_collision_point_ != NULL);
      future_collision_point_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(origin_point_ != NULL);
      origin_point_->Clear();
    }
  }
  if (cached_has_bits & 14336u) {
    ::memset(&time_latency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_fallback_trajectory_) -
        reinterpret_cast<char*>(&time_latency_)) + sizeof(is_fallback_trajectory_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpenSpaceDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.OpenSpaceDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning_internal.Trajectories trajectories = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trajectories()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.VehicleMotion warm_start_trajectory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_warm_start_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.VehicleMotion smoothed_trajectory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smoothed_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double warm_start_dual_lambda = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33u, input, this->mutable_warm_start_dual_lambda())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_warm_start_dual_lambda())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double warm_start_dual_miu = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41u, input, this->mutable_warm_start_dual_miu())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_warm_start_dual_miu())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double optimized_dual_lambda = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49u, input, this->mutable_optimized_dual_lambda())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_optimized_dual_lambda())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double optimized_dual_miu = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57u, input, this->mutable_optimized_dual_miu())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_optimized_dual_miu())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double xy_boundary = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65u, input, this->mutable_xy_boundary())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_xy_boundary())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.ObstacleDebug obstacles = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_obstacles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.TrajectoryPoint roi_shift_point = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roi_shift_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.TrajectoryPoint end_point = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.Trajectories partitioned_trajectories = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partitioned_trajectories()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.Trajectories chosen_trajectory = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chosen_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_fallback_trajectory = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_is_fallback_trajectory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fallback_trajectory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.Trajectories fallback_trajectory = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fallback_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.TrajectoryPoint trajectory_stitching_point = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trajectory_stitching_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.TrajectoryPoint future_collision_point = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_future_collision_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double time_latency = 18 [default = 0];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {
          set_has_time_latency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.PointENU origin_point = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double origin_heading_rad = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {
          set_has_origin_heading_rad();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &origin_heading_rad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.OpenSpaceDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.OpenSpaceDebug)
  return false;
#undef DO_
}

void OpenSpaceDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.OpenSpaceDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning_internal.Trajectories trajectories = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_trajectories(), output);
  }

  // optional .apollo.common.VehicleMotion warm_start_trajectory = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_warm_start_trajectory(), output);
  }

  // optional .apollo.common.VehicleMotion smoothed_trajectory = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_smoothed_trajectory(), output);
  }

  // repeated double warm_start_dual_lambda = 4;
  for (int i = 0, n = this->warm_start_dual_lambda_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->warm_start_dual_lambda(i), output);
  }

  // repeated double warm_start_dual_miu = 5;
  for (int i = 0, n = this->warm_start_dual_miu_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->warm_start_dual_miu(i), output);
  }

  // repeated double optimized_dual_lambda = 6;
  for (int i = 0, n = this->optimized_dual_lambda_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->optimized_dual_lambda(i), output);
  }

  // repeated double optimized_dual_miu = 7;
  for (int i = 0, n = this->optimized_dual_miu_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->optimized_dual_miu(i), output);
  }

  // repeated double xy_boundary = 8;
  for (int i = 0, n = this->xy_boundary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->xy_boundary(i), output);
  }

  // repeated .apollo.planning_internal.ObstacleDebug obstacles = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->obstacles(static_cast<int>(i)),
      output);
  }

  // optional .apollo.common.TrajectoryPoint roi_shift_point = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_roi_shift_point(), output);
  }

  // optional .apollo.common.TrajectoryPoint end_point = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_end_point(), output);
  }

  // optional .apollo.planning_internal.Trajectories partitioned_trajectories = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_partitioned_trajectories(), output);
  }

  // optional .apollo.planning_internal.Trajectories chosen_trajectory = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_chosen_trajectory(), output);
  }

  // optional bool is_fallback_trajectory = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_fallback_trajectory(), output);
  }

  // optional .apollo.planning_internal.Trajectories fallback_trajectory = 15;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_fallback_trajectory(), output);
  }

  // optional .apollo.common.TrajectoryPoint trajectory_stitching_point = 16;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_trajectory_stitching_point(), output);
  }

  // optional .apollo.common.TrajectoryPoint future_collision_point = 17;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_future_collision_point(), output);
  }

  // optional double time_latency = 18 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->time_latency(), output);
  }

  // optional .apollo.common.PointENU origin_point = 19;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_origin_point(), output);
  }

  // optional double origin_heading_rad = 20;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->origin_heading_rad(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.OpenSpaceDebug)
}

::google::protobuf::uint8* OpenSpaceDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.OpenSpaceDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning_internal.Trajectories trajectories = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_trajectories(), deterministic, target);
  }

  // optional .apollo.common.VehicleMotion warm_start_trajectory = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_warm_start_trajectory(), deterministic, target);
  }

  // optional .apollo.common.VehicleMotion smoothed_trajectory = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_smoothed_trajectory(), deterministic, target);
  }

  // repeated double warm_start_dual_lambda = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(4, this->warm_start_dual_lambda_, target);

  // repeated double warm_start_dual_miu = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(5, this->warm_start_dual_miu_, target);

  // repeated double optimized_dual_lambda = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(6, this->optimized_dual_lambda_, target);

  // repeated double optimized_dual_miu = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(7, this->optimized_dual_miu_, target);

  // repeated double xy_boundary = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(8, this->xy_boundary_, target);

  // repeated .apollo.planning_internal.ObstacleDebug obstacles = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->obstacles(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.common.TrajectoryPoint roi_shift_point = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_roi_shift_point(), deterministic, target);
  }

  // optional .apollo.common.TrajectoryPoint end_point = 11;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_end_point(), deterministic, target);
  }

  // optional .apollo.planning_internal.Trajectories partitioned_trajectories = 12;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_partitioned_trajectories(), deterministic, target);
  }

  // optional .apollo.planning_internal.Trajectories chosen_trajectory = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_chosen_trajectory(), deterministic, target);
  }

  // optional bool is_fallback_trajectory = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_fallback_trajectory(), target);
  }

  // optional .apollo.planning_internal.Trajectories fallback_trajectory = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_fallback_trajectory(), deterministic, target);
  }

  // optional .apollo.common.TrajectoryPoint trajectory_stitching_point = 16;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_trajectory_stitching_point(), deterministic, target);
  }

  // optional .apollo.common.TrajectoryPoint future_collision_point = 17;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_future_collision_point(), deterministic, target);
  }

  // optional double time_latency = 18 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->time_latency(), target);
  }

  // optional .apollo.common.PointENU origin_point = 19;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_origin_point(), deterministic, target);
  }

  // optional double origin_heading_rad = 20;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->origin_heading_rad(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.OpenSpaceDebug)
  return target;
}

size_t OpenSpaceDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.OpenSpaceDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double warm_start_dual_lambda = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->warm_start_dual_lambda_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->warm_start_dual_lambda_size());
    total_size += data_size;
  }

  // repeated double warm_start_dual_miu = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->warm_start_dual_miu_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->warm_start_dual_miu_size());
    total_size += data_size;
  }

  // repeated double optimized_dual_lambda = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->optimized_dual_lambda_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->optimized_dual_lambda_size());
    total_size += data_size;
  }

  // repeated double optimized_dual_miu = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->optimized_dual_miu_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->optimized_dual_miu_size());
    total_size += data_size;
  }

  // repeated double xy_boundary = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->xy_boundary_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->xy_boundary_size());
    total_size += data_size;
  }

  // repeated .apollo.planning_internal.ObstacleDebug obstacles = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->obstacles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->obstacles(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.planning_internal.Trajectories trajectories = 1;
    if (has_trajectories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *trajectories_);
    }

    // optional .apollo.common.VehicleMotion warm_start_trajectory = 2;
    if (has_warm_start_trajectory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *warm_start_trajectory_);
    }

    // optional .apollo.common.VehicleMotion smoothed_trajectory = 3;
    if (has_smoothed_trajectory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *smoothed_trajectory_);
    }

    // optional .apollo.common.TrajectoryPoint roi_shift_point = 10;
    if (has_roi_shift_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *roi_shift_point_);
    }

    // optional .apollo.common.TrajectoryPoint end_point = 11;
    if (has_end_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *end_point_);
    }

    // optional .apollo.planning_internal.Trajectories partitioned_trajectories = 12;
    if (has_partitioned_trajectories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *partitioned_trajectories_);
    }

    // optional .apollo.planning_internal.Trajectories chosen_trajectory = 13;
    if (has_chosen_trajectory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chosen_trajectory_);
    }

    // optional .apollo.planning_internal.Trajectories fallback_trajectory = 15;
    if (has_fallback_trajectory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fallback_trajectory_);
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional .apollo.common.TrajectoryPoint trajectory_stitching_point = 16;
    if (has_trajectory_stitching_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *trajectory_stitching_point_);
    }

    // optional .apollo.common.TrajectoryPoint future_collision_point = 17;
    if (has_future_collision_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *future_collision_point_);
    }

    // optional .apollo.common.PointENU origin_point = 19;
    if (has_origin_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_point_);
    }

    // optional double time_latency = 18 [default = 0];
    if (has_time_latency()) {
      total_size += 2 + 8;
    }

    // optional double origin_heading_rad = 20;
    if (has_origin_heading_rad()) {
      total_size += 2 + 8;
    }

    // optional bool is_fallback_trajectory = 14;
    if (has_is_fallback_trajectory()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenSpaceDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.OpenSpaceDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenSpaceDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenSpaceDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.OpenSpaceDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.OpenSpaceDebug)
    MergeFrom(*source);
  }
}

void OpenSpaceDebug::MergeFrom(const OpenSpaceDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.OpenSpaceDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  warm_start_dual_lambda_.MergeFrom(from.warm_start_dual_lambda_);
  warm_start_dual_miu_.MergeFrom(from.warm_start_dual_miu_);
  optimized_dual_lambda_.MergeFrom(from.optimized_dual_lambda_);
  optimized_dual_miu_.MergeFrom(from.optimized_dual_miu_);
  xy_boundary_.MergeFrom(from.xy_boundary_);
  obstacles_.MergeFrom(from.obstacles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_trajectories()->::apollo::planning_internal::Trajectories::MergeFrom(from.trajectories());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_warm_start_trajectory()->::apollo::common::VehicleMotion::MergeFrom(from.warm_start_trajectory());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_smoothed_trajectory()->::apollo::common::VehicleMotion::MergeFrom(from.smoothed_trajectory());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_roi_shift_point()->::apollo::common::TrajectoryPoint::MergeFrom(from.roi_shift_point());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_end_point()->::apollo::common::TrajectoryPoint::MergeFrom(from.end_point());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_partitioned_trajectories()->::apollo::planning_internal::Trajectories::MergeFrom(from.partitioned_trajectories());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_chosen_trajectory()->::apollo::planning_internal::Trajectories::MergeFrom(from.chosen_trajectory());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_fallback_trajectory()->::apollo::planning_internal::Trajectories::MergeFrom(from.fallback_trajectory());
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_trajectory_stitching_point()->::apollo::common::TrajectoryPoint::MergeFrom(from.trajectory_stitching_point());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_future_collision_point()->::apollo::common::TrajectoryPoint::MergeFrom(from.future_collision_point());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_origin_point()->::apollo::common::PointENU::MergeFrom(from.origin_point());
    }
    if (cached_has_bits & 0x00000800u) {
      time_latency_ = from.time_latency_;
    }
    if (cached_has_bits & 0x00001000u) {
      origin_heading_rad_ = from.origin_heading_rad_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_fallback_trajectory_ = from.is_fallback_trajectory_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpenSpaceDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.OpenSpaceDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenSpaceDebug::CopyFrom(const OpenSpaceDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.OpenSpaceDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenSpaceDebug::IsInitialized() const {
  return true;
}

void OpenSpaceDebug::Swap(OpenSpaceDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenSpaceDebug::InternalSwap(OpenSpaceDebug* other) {
  using std::swap;
  warm_start_dual_lambda_.InternalSwap(&other->warm_start_dual_lambda_);
  warm_start_dual_miu_.InternalSwap(&other->warm_start_dual_miu_);
  optimized_dual_lambda_.InternalSwap(&other->optimized_dual_lambda_);
  optimized_dual_miu_.InternalSwap(&other->optimized_dual_miu_);
  xy_boundary_.InternalSwap(&other->xy_boundary_);
  CastToBase(&obstacles_)->InternalSwap(CastToBase(&other->obstacles_));
  swap(trajectories_, other->trajectories_);
  swap(warm_start_trajectory_, other->warm_start_trajectory_);
  swap(smoothed_trajectory_, other->smoothed_trajectory_);
  swap(roi_shift_point_, other->roi_shift_point_);
  swap(end_point_, other->end_point_);
  swap(partitioned_trajectories_, other->partitioned_trajectories_);
  swap(chosen_trajectory_, other->chosen_trajectory_);
  swap(fallback_trajectory_, other->fallback_trajectory_);
  swap(trajectory_stitching_point_, other->trajectory_stitching_point_);
  swap(future_collision_point_, other->future_collision_point_);
  swap(origin_point_, other->origin_point_);
  swap(time_latency_, other->time_latency_);
  swap(origin_heading_rad_, other->origin_heading_rad_);
  swap(is_fallback_trajectory_, other->is_fallback_trajectory_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpenSpaceDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SmootherDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmootherDebug::kIsSmoothedFieldNumber;
const int SmootherDebug::kTypeFieldNumber;
const int SmootherDebug::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmootherDebug::SmootherDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SmootherDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.SmootherDebug)
}
SmootherDebug::SmootherDebug(const SmootherDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&is_smoothed_, &from.is_smoothed_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&is_smoothed_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.SmootherDebug)
}

void SmootherDebug::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_smoothed_ = false;
  type_ = 1;
}

SmootherDebug::~SmootherDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.SmootherDebug)
  SharedDtor();
}

void SmootherDebug::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SmootherDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SmootherDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SmootherDebug& SmootherDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_SmootherDebug.base);
  return *internal_default_instance();
}


void SmootherDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.SmootherDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reason_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    is_smoothed_ = false;
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SmootherDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.SmootherDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_smoothed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_smoothed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_smoothed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::planning_internal::SmootherDebug_SmootherType_IsValid(value)) {
            set_type(static_cast< ::apollo::planning_internal::SmootherDebug_SmootherType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.SmootherDebug.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.SmootherDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.SmootherDebug)
  return false;
#undef DO_
}

void SmootherDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.SmootherDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_smoothed = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_smoothed(), output);
  }

  // optional .apollo.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SmootherDebug.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.SmootherDebug)
}

::google::protobuf::uint8* SmootherDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.SmootherDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_smoothed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_smoothed(), target);
  }

  // optional .apollo.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.SmootherDebug.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.SmootherDebug)
  return target;
}

size_t SmootherDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.SmootherDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string reason = 3;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional bool is_smoothed = 1;
    if (has_is_smoothed()) {
      total_size += 1 + 1;
    }

    // optional .apollo.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmootherDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.SmootherDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SmootherDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SmootherDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.SmootherDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.SmootherDebug)
    MergeFrom(*source);
  }
}

void SmootherDebug::MergeFrom(const SmootherDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.SmootherDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_smoothed_ = from.is_smoothed_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SmootherDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.SmootherDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmootherDebug::CopyFrom(const SmootherDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.SmootherDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmootherDebug::IsInitialized() const {
  return true;
}

void SmootherDebug::Swap(SmootherDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmootherDebug::InternalSwap(SmootherDebug* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_smoothed_, other->is_smoothed_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SmootherDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullOverDebug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_PullOverDebug_default_instance_._instance.get_mutable()->position_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void PullOverDebug::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullOverDebug::kPositionFieldNumber;
const int PullOverDebug::kThetaFieldNumber;
const int PullOverDebug::kLengthFrontFieldNumber;
const int PullOverDebug::kLengthBackFieldNumber;
const int PullOverDebug::kWidthLeftFieldNumber;
const int PullOverDebug::kWidthRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullOverDebug::PullOverDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_PullOverDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.PullOverDebug)
}
PullOverDebug::PullOverDebug(const PullOverDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::apollo::common::PointENU(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&theta_, &from.theta_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_right_) -
    reinterpret_cast<char*>(&theta_)) + sizeof(width_right_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.PullOverDebug)
}

void PullOverDebug::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_right_) -
      reinterpret_cast<char*>(&position_)) + sizeof(width_right_));
}

PullOverDebug::~PullOverDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.PullOverDebug)
  SharedDtor();
}

void PullOverDebug::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void PullOverDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullOverDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullOverDebug& PullOverDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_PullOverDebug.base);
  return *internal_default_instance();
}


void PullOverDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.PullOverDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&theta_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_right_) -
        reinterpret_cast<char*>(&theta_)) + sizeof(width_right_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PullOverDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.PullOverDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.PointENU position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double theta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_theta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double length_front = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_length_front();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_front_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double length_back = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_length_back();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_back_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double width_left = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_width_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double width_right = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_width_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.PullOverDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.PullOverDebug)
  return false;
#undef DO_
}

void PullOverDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.PullOverDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.PointENU position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // optional double theta = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->theta(), output);
  }

  // optional double length_front = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->length_front(), output);
  }

  // optional double length_back = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->length_back(), output);
  }

  // optional double width_left = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->width_left(), output);
  }

  // optional double width_right = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->width_right(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.PullOverDebug)
}

::google::protobuf::uint8* PullOverDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.PullOverDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.PointENU position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // optional double theta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->theta(), target);
  }

  // optional double length_front = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->length_front(), target);
  }

  // optional double length_back = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->length_back(), target);
  }

  // optional double width_left = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->width_left(), target);
  }

  // optional double width_right = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->width_right(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.PullOverDebug)
  return target;
}

size_t PullOverDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.PullOverDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .apollo.common.PointENU position = 1;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional double theta = 2;
    if (has_theta()) {
      total_size += 1 + 8;
    }

    // optional double length_front = 3;
    if (has_length_front()) {
      total_size += 1 + 8;
    }

    // optional double length_back = 4;
    if (has_length_back()) {
      total_size += 1 + 8;
    }

    // optional double width_left = 5;
    if (has_width_left()) {
      total_size += 1 + 8;
    }

    // optional double width_right = 6;
    if (has_width_right()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullOverDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.PullOverDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const PullOverDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullOverDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.PullOverDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.PullOverDebug)
    MergeFrom(*source);
  }
}

void PullOverDebug::MergeFrom(const PullOverDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.PullOverDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::apollo::common::PointENU::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      theta_ = from.theta_;
    }
    if (cached_has_bits & 0x00000004u) {
      length_front_ = from.length_front_;
    }
    if (cached_has_bits & 0x00000008u) {
      length_back_ = from.length_back_;
    }
    if (cached_has_bits & 0x00000010u) {
      width_left_ = from.width_left_;
    }
    if (cached_has_bits & 0x00000020u) {
      width_right_ = from.width_right_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PullOverDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.PullOverDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullOverDebug::CopyFrom(const PullOverDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.PullOverDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullOverDebug::IsInitialized() const {
  return true;
}

void PullOverDebug::Swap(PullOverDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullOverDebug::InternalSwap(PullOverDebug* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(theta_, other->theta_);
  swap(length_front_, other->length_front_);
  swap(length_back_, other->length_back_);
  swap(width_left_, other->width_left_);
  swap(width_right_, other->width_right_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullOverDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanningData::InitAsDefaultInstance() {
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->adc_position_ = const_cast< ::apollo::localization::LocalizationEstimate*>(
      ::apollo::localization::LocalizationEstimate::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->chassis_ = const_cast< ::apollo::canbus::Chassis*>(
      ::apollo::canbus::Chassis::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->routing_ = const_cast< ::apollo::routing::RoutingResponse*>(
      ::apollo::routing::RoutingResponse::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->init_point_ = const_cast< ::apollo::common::TrajectoryPoint*>(
      ::apollo::common::TrajectoryPoint::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->prediction_header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->signal_light_ = const_cast< ::apollo::planning_internal::SignalLightDebug*>(
      ::apollo::planning_internal::SignalLightDebug::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->dp_poly_graph_ = const_cast< ::apollo::planning_internal::DpPolyGraphDebug*>(
      ::apollo::planning_internal::DpPolyGraphDebug::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->lattice_st_image_ = const_cast< ::apollo::planning_internal::LatticeStTraining*>(
      ::apollo::planning_internal::LatticeStTraining::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->relative_map_ = const_cast< ::apollo::relative_map::MapMsg*>(
      ::apollo::relative_map::MapMsg::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->auto_tuning_training_data_ = const_cast< ::apollo::planning_internal::AutoTuningTrainingData*>(
      ::apollo::planning_internal::AutoTuningTrainingData::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::apollo::planning_internal::ScenarioDebug*>(
      ::apollo::planning_internal::ScenarioDebug::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->open_space_ = const_cast< ::apollo::planning_internal::OpenSpaceDebug*>(
      ::apollo::planning_internal::OpenSpaceDebug::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->smoother_ = const_cast< ::apollo::planning_internal::SmootherDebug*>(
      ::apollo::planning_internal::SmootherDebug::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->pull_over_ = const_cast< ::apollo::planning_internal::PullOverDebug*>(
      ::apollo::planning_internal::PullOverDebug::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->hybrid_model_ = const_cast< ::apollo::planning_internal::HybridModelDebug*>(
      ::apollo::planning_internal::HybridModelDebug::internal_default_instance());
}
void PlanningData::clear_adc_position() {
  if (adc_position_ != NULL) adc_position_->Clear();
  clear_has_adc_position();
}
void PlanningData::clear_chassis() {
  if (chassis_ != NULL) chassis_->Clear();
  clear_has_chassis();
}
void PlanningData::clear_routing() {
  if (routing_ != NULL) routing_->Clear();
  clear_has_routing();
}
void PlanningData::clear_init_point() {
  if (init_point_ != NULL) init_point_->Clear();
  clear_has_init_point();
}
void PlanningData::clear_path() {
  path_.Clear();
}
void PlanningData::clear_prediction_header() {
  if (prediction_header_ != NULL) prediction_header_->Clear();
  clear_has_prediction_header();
}
void PlanningData::clear_relative_map() {
  if (relative_map_ != NULL) relative_map_->Clear();
  clear_has_relative_map();
}
void PlanningData::clear_chart() {
  chart_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanningData::kAdcPositionFieldNumber;
const int PlanningData::kChassisFieldNumber;
const int PlanningData::kRoutingFieldNumber;
const int PlanningData::kInitPointFieldNumber;
const int PlanningData::kPathFieldNumber;
const int PlanningData::kSpeedPlanFieldNumber;
const int PlanningData::kStGraphFieldNumber;
const int PlanningData::kSlFrameFieldNumber;
const int PlanningData::kPredictionHeaderFieldNumber;
const int PlanningData::kSignalLightFieldNumber;
const int PlanningData::kObstacleFieldNumber;
const int PlanningData::kReferenceLineFieldNumber;
const int PlanningData::kDpPolyGraphFieldNumber;
const int PlanningData::kLatticeStImageFieldNumber;
const int PlanningData::kRelativeMapFieldNumber;
const int PlanningData::kAutoTuningTrainingDataFieldNumber;
const int PlanningData::kFrontClearDistanceFieldNumber;
const int PlanningData::kChartFieldNumber;
const int PlanningData::kScenarioFieldNumber;
const int PlanningData::kOpenSpaceFieldNumber;
const int PlanningData::kSmootherFieldNumber;
const int PlanningData::kPullOverFieldNumber;
const int PlanningData::kHybridModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanningData::PlanningData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_PlanningData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.PlanningData)
}
PlanningData::PlanningData(const PlanningData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      path_(from.path_),
      speed_plan_(from.speed_plan_),
      st_graph_(from.st_graph_),
      sl_frame_(from.sl_frame_),
      obstacle_(from.obstacle_),
      reference_line_(from.reference_line_),
      chart_(from.chart_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_adc_position()) {
    adc_position_ = new ::apollo::localization::LocalizationEstimate(*from.adc_position_);
  } else {
    adc_position_ = NULL;
  }
  if (from.has_chassis()) {
    chassis_ = new ::apollo::canbus::Chassis(*from.chassis_);
  } else {
    chassis_ = NULL;
  }
  if (from.has_routing()) {
    routing_ = new ::apollo::routing::RoutingResponse(*from.routing_);
  } else {
    routing_ = NULL;
  }
  if (from.has_init_point()) {
    init_point_ = new ::apollo::common::TrajectoryPoint(*from.init_point_);
  } else {
    init_point_ = NULL;
  }
  if (from.has_prediction_header()) {
    prediction_header_ = new ::apollo::common::Header(*from.prediction_header_);
  } else {
    prediction_header_ = NULL;
  }
  if (from.has_signal_light()) {
    signal_light_ = new ::apollo::planning_internal::SignalLightDebug(*from.signal_light_);
  } else {
    signal_light_ = NULL;
  }
  if (from.has_dp_poly_graph()) {
    dp_poly_graph_ = new ::apollo::planning_internal::DpPolyGraphDebug(*from.dp_poly_graph_);
  } else {
    dp_poly_graph_ = NULL;
  }
  if (from.has_lattice_st_image()) {
    lattice_st_image_ = new ::apollo::planning_internal::LatticeStTraining(*from.lattice_st_image_);
  } else {
    lattice_st_image_ = NULL;
  }
  if (from.has_relative_map()) {
    relative_map_ = new ::apollo::relative_map::MapMsg(*from.relative_map_);
  } else {
    relative_map_ = NULL;
  }
  if (from.has_auto_tuning_training_data()) {
    auto_tuning_training_data_ = new ::apollo::planning_internal::AutoTuningTrainingData(*from.auto_tuning_training_data_);
  } else {
    auto_tuning_training_data_ = NULL;
  }
  if (from.has_scenario()) {
    scenario_ = new ::apollo::planning_internal::ScenarioDebug(*from.scenario_);
  } else {
    scenario_ = NULL;
  }
  if (from.has_open_space()) {
    open_space_ = new ::apollo::planning_internal::OpenSpaceDebug(*from.open_space_);
  } else {
    open_space_ = NULL;
  }
  if (from.has_smoother()) {
    smoother_ = new ::apollo::planning_internal::SmootherDebug(*from.smoother_);
  } else {
    smoother_ = NULL;
  }
  if (from.has_pull_over()) {
    pull_over_ = new ::apollo::planning_internal::PullOverDebug(*from.pull_over_);
  } else {
    pull_over_ = NULL;
  }
  if (from.has_hybrid_model()) {
    hybrid_model_ = new ::apollo::planning_internal::HybridModelDebug(*from.hybrid_model_);
  } else {
    hybrid_model_ = NULL;
  }
  front_clear_distance_ = from.front_clear_distance_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.PlanningData)
}

void PlanningData::SharedCtor() {
  ::memset(&adc_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&front_clear_distance_) -
      reinterpret_cast<char*>(&adc_position_)) + sizeof(front_clear_distance_));
}

PlanningData::~PlanningData() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.PlanningData)
  SharedDtor();
}

void PlanningData::SharedDtor() {
  if (this != internal_default_instance()) delete adc_position_;
  if (this != internal_default_instance()) delete chassis_;
  if (this != internal_default_instance()) delete routing_;
  if (this != internal_default_instance()) delete init_point_;
  if (this != internal_default_instance()) delete prediction_header_;
  if (this != internal_default_instance()) delete signal_light_;
  if (this != internal_default_instance()) delete dp_poly_graph_;
  if (this != internal_default_instance()) delete lattice_st_image_;
  if (this != internal_default_instance()) delete relative_map_;
  if (this != internal_default_instance()) delete auto_tuning_training_data_;
  if (this != internal_default_instance()) delete scenario_;
  if (this != internal_default_instance()) delete open_space_;
  if (this != internal_default_instance()) delete smoother_;
  if (this != internal_default_instance()) delete pull_over_;
  if (this != internal_default_instance()) delete hybrid_model_;
}

void PlanningData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanningData::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanningData& PlanningData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_PlanningData.base);
  return *internal_default_instance();
}


void PlanningData::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  speed_plan_.Clear();
  st_graph_.Clear();
  sl_frame_.Clear();
  obstacle_.Clear();
  reference_line_.Clear();
  chart_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(adc_position_ != NULL);
      adc_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(chassis_ != NULL);
      chassis_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(routing_ != NULL);
      routing_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(init_point_ != NULL);
      init_point_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(prediction_header_ != NULL);
      prediction_header_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(signal_light_ != NULL);
      signal_light_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(dp_poly_graph_ != NULL);
      dp_poly_graph_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(lattice_st_image_ != NULL);
      lattice_st_image_->Clear();
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(relative_map_ != NULL);
      relative_map_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(auto_tuning_training_data_ != NULL);
      auto_tuning_training_data_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(scenario_ != NULL);
      scenario_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(open_space_ != NULL);
      open_space_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(smoother_ != NULL);
      smoother_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(pull_over_ != NULL);
      pull_over_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(hybrid_model_ != NULL);
      hybrid_model_->Clear();
    }
  }
  front_clear_distance_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlanningData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.PlanningData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.Path path = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.localization.LocalizationEstimate adc_position = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adc_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Chassis chassis = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chassis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.routing.RoutingResponse routing = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.TrajectoryPoint init_point = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.SpeedPlan speed_plan = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.STGraphDebug st_graph = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_st_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.SLFrameDebug sl_frame = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sl_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.Header prediction_header = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prediction_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.SignalLightDebug signal_light = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signal_light()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.ObstacleDebug obstacle = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.ReferenceLineDebug reference_line = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reference_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dp_poly_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.LatticeStTraining lattice_st_image = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lattice_st_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.relative_map.MapMsg relative_map = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auto_tuning_training_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double front_clear_distance = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_front_clear_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &front_clear_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.dreamview.Chart chart = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_chart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.ScenarioDebug scenario = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scenario()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.OpenSpaceDebug open_space = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_open_space()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.SmootherDebug smoother = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smoother()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.PullOverDebug pull_over = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pull_over()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.HybridModelDebug hybrid_model = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hybrid_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.PlanningData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.PlanningData)
  return false;
#undef DO_
}

void PlanningData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Path path = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->path(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .apollo.localization.LocalizationEstimate adc_position = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_adc_position(), output);
  }

  // optional .apollo.canbus.Chassis chassis = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_chassis(), output);
  }

  // optional .apollo.routing.RoutingResponse routing = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_routing(), output);
  }

  // optional .apollo.common.TrajectoryPoint init_point = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_init_point(), output);
  }

  // repeated .apollo.planning_internal.SpeedPlan speed_plan = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_plan_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->speed_plan(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.planning_internal.STGraphDebug st_graph = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_graph_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->st_graph(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.planning_internal.SLFrameDebug sl_frame = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_frame_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->sl_frame(static_cast<int>(i)),
      output);
  }

  // optional .apollo.common.Header prediction_header = 16;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_prediction_header(), output);
  }

  // optional .apollo.planning_internal.SignalLightDebug signal_light = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_signal_light(), output);
  }

  // repeated .apollo.planning_internal.ObstacleDebug obstacle = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->obstacle(static_cast<int>(i)),
      output);
  }

  // repeated .apollo.planning_internal.ReferenceLineDebug reference_line = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_line_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->reference_line(static_cast<int>(i)),
      output);
  }

  // optional .apollo.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_dp_poly_graph(), output);
  }

  // optional .apollo.planning_internal.LatticeStTraining lattice_st_image = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_lattice_st_image(), output);
  }

  // optional .apollo.relative_map.MapMsg relative_map = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_relative_map(), output);
  }

  // optional .apollo.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_auto_tuning_training_data(), output);
  }

  // optional double front_clear_distance = 24;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->front_clear_distance(), output);
  }

  // repeated .apollo.dreamview.Chart chart = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chart_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->chart(static_cast<int>(i)),
      output);
  }

  // optional .apollo.planning_internal.ScenarioDebug scenario = 26;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_scenario(), output);
  }

  // optional .apollo.planning_internal.OpenSpaceDebug open_space = 27;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_open_space(), output);
  }

  // optional .apollo.planning_internal.SmootherDebug smoother = 28;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_smoother(), output);
  }

  // optional .apollo.planning_internal.PullOverDebug pull_over = 29;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_pull_over(), output);
  }

  // optional .apollo.planning_internal.HybridModelDebug hybrid_model = 30;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_hybrid_model(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.PlanningData)
}

::google::protobuf::uint8* PlanningData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Path path = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->path(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .apollo.localization.LocalizationEstimate adc_position = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_adc_position(), deterministic, target);
  }

  // optional .apollo.canbus.Chassis chassis = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_chassis(), deterministic, target);
  }

  // optional .apollo.routing.RoutingResponse routing = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_routing(), deterministic, target);
  }

  // optional .apollo.common.TrajectoryPoint init_point = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_init_point(), deterministic, target);
  }

  // repeated .apollo.planning_internal.SpeedPlan speed_plan = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_plan_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->speed_plan(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.planning_internal.STGraphDebug st_graph = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_graph_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->st_graph(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.planning_internal.SLFrameDebug sl_frame = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_frame_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->sl_frame(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.common.Header prediction_header = 16;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_prediction_header(), deterministic, target);
  }

  // optional .apollo.planning_internal.SignalLightDebug signal_light = 17;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_signal_light(), deterministic, target);
  }

  // repeated .apollo.planning_internal.ObstacleDebug obstacle = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->obstacle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .apollo.planning_internal.ReferenceLineDebug reference_line = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_line_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->reference_line(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_dp_poly_graph(), deterministic, target);
  }

  // optional .apollo.planning_internal.LatticeStTraining lattice_st_image = 21;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_lattice_st_image(), deterministic, target);
  }

  // optional .apollo.relative_map.MapMsg relative_map = 22;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_relative_map(), deterministic, target);
  }

  // optional .apollo.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_auto_tuning_training_data(), deterministic, target);
  }

  // optional double front_clear_distance = 24;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->front_clear_distance(), target);
  }

  // repeated .apollo.dreamview.Chart chart = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chart_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->chart(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.planning_internal.ScenarioDebug scenario = 26;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_scenario(), deterministic, target);
  }

  // optional .apollo.planning_internal.OpenSpaceDebug open_space = 27;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_open_space(), deterministic, target);
  }

  // optional .apollo.planning_internal.SmootherDebug smoother = 28;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_smoother(), deterministic, target);
  }

  // optional .apollo.planning_internal.PullOverDebug pull_over = 29;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_pull_over(), deterministic, target);
  }

  // optional .apollo.planning_internal.HybridModelDebug hybrid_model = 30;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_hybrid_model(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.PlanningData)
  return target;
}

size_t PlanningData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.PlanningData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.Path path = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  // repeated .apollo.planning_internal.SpeedPlan speed_plan = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_plan_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_plan(static_cast<int>(i)));
    }
  }

  // repeated .apollo.planning_internal.STGraphDebug st_graph = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->st_graph_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->st_graph(static_cast<int>(i)));
    }
  }

  // repeated .apollo.planning_internal.SLFrameDebug sl_frame = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_frame_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl_frame(static_cast<int>(i)));
    }
  }

  // repeated .apollo.planning_internal.ObstacleDebug obstacle = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->obstacle_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->obstacle(static_cast<int>(i)));
    }
  }

  // repeated .apollo.planning_internal.ReferenceLineDebug reference_line = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->reference_line_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reference_line(static_cast<int>(i)));
    }
  }

  // repeated .apollo.dreamview.Chart chart = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->chart_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->chart(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.localization.LocalizationEstimate adc_position = 7;
    if (has_adc_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *adc_position_);
    }

    // optional .apollo.canbus.Chassis chassis = 8;
    if (has_chassis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chassis_);
    }

    // optional .apollo.routing.RoutingResponse routing = 9;
    if (has_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *routing_);
    }

    // optional .apollo.common.TrajectoryPoint init_point = 10;
    if (has_init_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *init_point_);
    }

    // optional .apollo.common.Header prediction_header = 16;
    if (has_prediction_header()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *prediction_header_);
    }

    // optional .apollo.planning_internal.SignalLightDebug signal_light = 17;
    if (has_signal_light()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *signal_light_);
    }

    // optional .apollo.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
    if (has_dp_poly_graph()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dp_poly_graph_);
    }

    // optional .apollo.planning_internal.LatticeStTraining lattice_st_image = 21;
    if (has_lattice_st_image()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *lattice_st_image_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .apollo.relative_map.MapMsg relative_map = 22;
    if (has_relative_map()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *relative_map_);
    }

    // optional .apollo.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
    if (has_auto_tuning_training_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *auto_tuning_training_data_);
    }

    // optional .apollo.planning_internal.ScenarioDebug scenario = 26;
    if (has_scenario()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scenario_);
    }

    // optional .apollo.planning_internal.OpenSpaceDebug open_space = 27;
    if (has_open_space()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *open_space_);
    }

    // optional .apollo.planning_internal.SmootherDebug smoother = 28;
    if (has_smoother()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *smoother_);
    }

    // optional .apollo.planning_internal.PullOverDebug pull_over = 29;
    if (has_pull_over()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pull_over_);
    }

    // optional .apollo.planning_internal.HybridModelDebug hybrid_model = 30;
    if (has_hybrid_model()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *hybrid_model_);
    }

    // optional double front_clear_distance = 24;
    if (has_front_clear_distance()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanningData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.PlanningData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanningData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.PlanningData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.PlanningData)
    MergeFrom(*source);
  }
}

void PlanningData::MergeFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.PlanningData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  speed_plan_.MergeFrom(from.speed_plan_);
  st_graph_.MergeFrom(from.st_graph_);
  sl_frame_.MergeFrom(from.sl_frame_);
  obstacle_.MergeFrom(from.obstacle_);
  reference_line_.MergeFrom(from.reference_line_);
  chart_.MergeFrom(from.chart_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_adc_position()->::apollo::localization::LocalizationEstimate::MergeFrom(from.adc_position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_chassis()->::apollo::canbus::Chassis::MergeFrom(from.chassis());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_routing()->::apollo::routing::RoutingResponse::MergeFrom(from.routing());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_init_point()->::apollo::common::TrajectoryPoint::MergeFrom(from.init_point());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_prediction_header()->::apollo::common::Header::MergeFrom(from.prediction_header());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_signal_light()->::apollo::planning_internal::SignalLightDebug::MergeFrom(from.signal_light());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_dp_poly_graph()->::apollo::planning_internal::DpPolyGraphDebug::MergeFrom(from.dp_poly_graph());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_lattice_st_image()->::apollo::planning_internal::LatticeStTraining::MergeFrom(from.lattice_st_image());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_relative_map()->::apollo::relative_map::MapMsg::MergeFrom(from.relative_map());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_auto_tuning_training_data()->::apollo::planning_internal::AutoTuningTrainingData::MergeFrom(from.auto_tuning_training_data());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_scenario()->::apollo::planning_internal::ScenarioDebug::MergeFrom(from.scenario());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_open_space()->::apollo::planning_internal::OpenSpaceDebug::MergeFrom(from.open_space());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_smoother()->::apollo::planning_internal::SmootherDebug::MergeFrom(from.smoother());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_pull_over()->::apollo::planning_internal::PullOverDebug::MergeFrom(from.pull_over());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_hybrid_model()->::apollo::planning_internal::HybridModelDebug::MergeFrom(from.hybrid_model());
    }
    if (cached_has_bits & 0x00008000u) {
      front_clear_distance_ = from.front_clear_distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlanningData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningData::CopyFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningData::IsInitialized() const {
  return true;
}

void PlanningData::Swap(PlanningData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanningData::InternalSwap(PlanningData* other) {
  using std::swap;
  CastToBase(&path_)->InternalSwap(CastToBase(&other->path_));
  CastToBase(&speed_plan_)->InternalSwap(CastToBase(&other->speed_plan_));
  CastToBase(&st_graph_)->InternalSwap(CastToBase(&other->st_graph_));
  CastToBase(&sl_frame_)->InternalSwap(CastToBase(&other->sl_frame_));
  CastToBase(&obstacle_)->InternalSwap(CastToBase(&other->obstacle_));
  CastToBase(&reference_line_)->InternalSwap(CastToBase(&other->reference_line_));
  CastToBase(&chart_)->InternalSwap(CastToBase(&other->chart_));
  swap(adc_position_, other->adc_position_);
  swap(chassis_, other->chassis_);
  swap(routing_, other->routing_);
  swap(init_point_, other->init_point_);
  swap(prediction_header_, other->prediction_header_);
  swap(signal_light_, other->signal_light_);
  swap(dp_poly_graph_, other->dp_poly_graph_);
  swap(lattice_st_image_, other->lattice_st_image_);
  swap(relative_map_, other->relative_map_);
  swap(auto_tuning_training_data_, other->auto_tuning_training_data_);
  swap(scenario_, other->scenario_);
  swap(open_space_, other->open_space_);
  swap(smoother_, other->smoother_);
  swap(pull_over_, other->pull_over_);
  swap(hybrid_model_, other->hybrid_model_);
  swap(front_clear_distance_, other->front_clear_distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanningData::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatticeStPixel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatticeStPixel::kSFieldNumber;
const int LatticeStPixel::kTFieldNumber;
const int LatticeStPixel::kRFieldNumber;
const int LatticeStPixel::kGFieldNumber;
const int LatticeStPixel::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatticeStPixel::LatticeStPixel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_LatticeStPixel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.LatticeStPixel)
}
LatticeStPixel::LatticeStPixel(const LatticeStPixel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&s_, &from.s_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&s_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.LatticeStPixel)
}

void LatticeStPixel::SharedCtor() {
  ::memset(&s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&s_)) + sizeof(b_));
}

LatticeStPixel::~LatticeStPixel() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.LatticeStPixel)
  SharedDtor();
}

void LatticeStPixel::SharedDtor() {
}

void LatticeStPixel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LatticeStPixel::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatticeStPixel& LatticeStPixel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_LatticeStPixel.base);
  return *internal_default_instance();
}


void LatticeStPixel::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.LatticeStPixel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&b_) -
        reinterpret_cast<char*>(&s_)) + sizeof(b_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatticeStPixel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.LatticeStPixel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 t = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 r = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 g = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 b = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.LatticeStPixel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.LatticeStPixel)
  return false;
#undef DO_
}

void LatticeStPixel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.LatticeStPixel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->s(), output);
  }

  // optional int32 t = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->t(), output);
  }

  // optional uint32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->r(), output);
  }

  // optional uint32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->g(), output);
  }

  // optional uint32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.LatticeStPixel)
}

::google::protobuf::uint8* LatticeStPixel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.LatticeStPixel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->s(), target);
  }

  // optional int32 t = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->t(), target);
  }

  // optional uint32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->r(), target);
  }

  // optional uint32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->g(), target);
  }

  // optional uint32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.LatticeStPixel)
  return target;
}

size_t LatticeStPixel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.LatticeStPixel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 s = 1;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->s());
    }

    // optional int32 t = 2;
    if (has_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->t());
    }

    // optional uint32 r = 3;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r());
    }

    // optional uint32 g = 4;
    if (has_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->g());
    }

    // optional uint32 b = 5;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->b());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatticeStPixel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.LatticeStPixel)
  GOOGLE_DCHECK_NE(&from, this);
  const LatticeStPixel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatticeStPixel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.LatticeStPixel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.LatticeStPixel)
    MergeFrom(*source);
  }
}

void LatticeStPixel::MergeFrom(const LatticeStPixel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.LatticeStPixel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      s_ = from.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      t_ = from.t_;
    }
    if (cached_has_bits & 0x00000004u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000008u) {
      g_ = from.g_;
    }
    if (cached_has_bits & 0x00000010u) {
      b_ = from.b_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LatticeStPixel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.LatticeStPixel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatticeStPixel::CopyFrom(const LatticeStPixel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.LatticeStPixel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatticeStPixel::IsInitialized() const {
  return true;
}

void LatticeStPixel::Swap(LatticeStPixel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatticeStPixel::InternalSwap(LatticeStPixel* other) {
  using std::swap;
  swap(s_, other->s_);
  swap(t_, other->t_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LatticeStPixel::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatticeStTraining::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatticeStTraining::kPixelFieldNumber;
const int LatticeStTraining::kTimestampFieldNumber;
const int LatticeStTraining::kAnnotationFieldNumber;
const int LatticeStTraining::kNumSGridsFieldNumber;
const int LatticeStTraining::kNumTGridsFieldNumber;
const int LatticeStTraining::kSResolutionFieldNumber;
const int LatticeStTraining::kTResolutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatticeStTraining::LatticeStTraining()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_LatticeStTraining.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.LatticeStTraining)
}
LatticeStTraining::LatticeStTraining(const LatticeStTraining& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pixel_(from.pixel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_annotation()) {
    annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&t_resolution_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(t_resolution_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.LatticeStTraining)
}

void LatticeStTraining::SharedCtor() {
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_resolution_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(t_resolution_));
}

LatticeStTraining::~LatticeStTraining() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.LatticeStTraining)
  SharedDtor();
}

void LatticeStTraining::SharedDtor() {
  annotation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LatticeStTraining::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LatticeStTraining::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatticeStTraining& LatticeStTraining::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_LatticeStTraining.base);
  return *internal_default_instance();
}


void LatticeStTraining::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.LatticeStTraining)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pixel_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    annotation_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&t_resolution_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(t_resolution_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatticeStTraining::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.LatticeStTraining)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.planning_internal.LatticeStPixel pixel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pixel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string annotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_annotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->annotation().data(), static_cast<int>(this->annotation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.LatticeStTraining.annotation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_s_grids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num_s_grids();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_s_grids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_t_grids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_num_t_grids();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_t_grids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double s_resolution = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_s_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double t_resolution = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_t_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.LatticeStTraining)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.LatticeStTraining)
  return false;
#undef DO_
}

void LatticeStTraining::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.LatticeStTraining)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.planning_internal.LatticeStPixel pixel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pixel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pixel(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->timestamp(), output);
  }

  // optional string annotation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.LatticeStTraining.annotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->annotation(), output);
  }

  // optional uint32 num_s_grids = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_s_grids(), output);
  }

  // optional uint32 num_t_grids = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_t_grids(), output);
  }

  // optional double s_resolution = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->s_resolution(), output);
  }

  // optional double t_resolution = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->t_resolution(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.LatticeStTraining)
}

::google::protobuf::uint8* LatticeStTraining::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.LatticeStTraining)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.planning_internal.LatticeStPixel pixel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pixel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pixel(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->timestamp(), target);
  }

  // optional string annotation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.LatticeStTraining.annotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->annotation(), target);
  }

  // optional uint32 num_s_grids = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_s_grids(), target);
  }

  // optional uint32 num_t_grids = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_t_grids(), target);
  }

  // optional double s_resolution = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->s_resolution(), target);
  }

  // optional double t_resolution = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->t_resolution(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.LatticeStTraining)
  return target;
}

size_t LatticeStTraining::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.LatticeStTraining)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.planning_internal.LatticeStPixel pixel = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pixel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pixel(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string annotation = 3;
    if (has_annotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->annotation());
    }

    // optional double timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional uint32 num_s_grids = 4;
    if (has_num_s_grids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_s_grids());
    }

    // optional uint32 num_t_grids = 5;
    if (has_num_t_grids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_t_grids());
    }

    // optional double s_resolution = 6;
    if (has_s_resolution()) {
      total_size += 1 + 8;
    }

    // optional double t_resolution = 7;
    if (has_t_resolution()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatticeStTraining::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.LatticeStTraining)
  GOOGLE_DCHECK_NE(&from, this);
  const LatticeStTraining* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatticeStTraining>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.LatticeStTraining)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.LatticeStTraining)
    MergeFrom(*source);
  }
}

void LatticeStTraining::MergeFrom(const LatticeStTraining& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.LatticeStTraining)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pixel_.MergeFrom(from.pixel_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_annotation();
      annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_s_grids_ = from.num_s_grids_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_t_grids_ = from.num_t_grids_;
    }
    if (cached_has_bits & 0x00000010u) {
      s_resolution_ = from.s_resolution_;
    }
    if (cached_has_bits & 0x00000020u) {
      t_resolution_ = from.t_resolution_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LatticeStTraining::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.LatticeStTraining)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatticeStTraining::CopyFrom(const LatticeStTraining& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.LatticeStTraining)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatticeStTraining::IsInitialized() const {
  return true;
}

void LatticeStTraining::Swap(LatticeStTraining* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatticeStTraining::InternalSwap(LatticeStTraining* other) {
  using std::swap;
  CastToBase(&pixel_)->InternalSwap(CastToBase(&other->pixel_));
  annotation_.Swap(&other->annotation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(num_s_grids_, other->num_s_grids_);
  swap(num_t_grids_, other->num_t_grids_);
  swap(s_resolution_, other->s_resolution_);
  swap(t_resolution_, other->t_resolution_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LatticeStTraining::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CostComponents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostComponents::kCostComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostComponents::CostComponents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CostComponents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.CostComponents)
}
CostComponents::CostComponents(const CostComponents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cost_component_(from.cost_component_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.CostComponents)
}

void CostComponents::SharedCtor() {
}

CostComponents::~CostComponents() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.CostComponents)
  SharedDtor();
}

void CostComponents::SharedDtor() {
}

void CostComponents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CostComponents::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CostComponents& CostComponents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CostComponents.base);
  return *internal_default_instance();
}


void CostComponents::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.CostComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cost_component_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CostComponents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.CostComponents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double cost_component = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_cost_component())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_cost_component())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.CostComponents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.CostComponents)
  return false;
#undef DO_
}

void CostComponents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.CostComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double cost_component = 1;
  for (int i = 0, n = this->cost_component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->cost_component(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.CostComponents)
}

::google::protobuf::uint8* CostComponents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.CostComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double cost_component = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->cost_component_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.CostComponents)
  return target;
}

size_t CostComponents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.CostComponents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double cost_component = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cost_component_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cost_component_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CostComponents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.CostComponents)
  GOOGLE_DCHECK_NE(&from, this);
  const CostComponents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostComponents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.CostComponents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.CostComponents)
    MergeFrom(*source);
  }
}

void CostComponents::MergeFrom(const CostComponents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.CostComponents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cost_component_.MergeFrom(from.cost_component_);
}

void CostComponents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.CostComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostComponents::CopyFrom(const CostComponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.CostComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostComponents::IsInitialized() const {
  return true;
}

void CostComponents::Swap(CostComponents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CostComponents::InternalSwap(CostComponents* other) {
  using std::swap;
  cost_component_.InternalSwap(&other->cost_component_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CostComponents::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutoTuningTrainingData::InitAsDefaultInstance() {
  ::apollo::planning_internal::_AutoTuningTrainingData_default_instance_._instance.get_mutable()->teacher_component_ = const_cast< ::apollo::planning_internal::CostComponents*>(
      ::apollo::planning_internal::CostComponents::internal_default_instance());
  ::apollo::planning_internal::_AutoTuningTrainingData_default_instance_._instance.get_mutable()->student_component_ = const_cast< ::apollo::planning_internal::CostComponents*>(
      ::apollo::planning_internal::CostComponents::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoTuningTrainingData::kTeacherComponentFieldNumber;
const int AutoTuningTrainingData::kStudentComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoTuningTrainingData::AutoTuningTrainingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_AutoTuningTrainingData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.AutoTuningTrainingData)
}
AutoTuningTrainingData::AutoTuningTrainingData(const AutoTuningTrainingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_teacher_component()) {
    teacher_component_ = new ::apollo::planning_internal::CostComponents(*from.teacher_component_);
  } else {
    teacher_component_ = NULL;
  }
  if (from.has_student_component()) {
    student_component_ = new ::apollo::planning_internal::CostComponents(*from.student_component_);
  } else {
    student_component_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.AutoTuningTrainingData)
}

void AutoTuningTrainingData::SharedCtor() {
  ::memset(&teacher_component_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&student_component_) -
      reinterpret_cast<char*>(&teacher_component_)) + sizeof(student_component_));
}

AutoTuningTrainingData::~AutoTuningTrainingData() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.AutoTuningTrainingData)
  SharedDtor();
}

void AutoTuningTrainingData::SharedDtor() {
  if (this != internal_default_instance()) delete teacher_component_;
  if (this != internal_default_instance()) delete student_component_;
}

void AutoTuningTrainingData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutoTuningTrainingData::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoTuningTrainingData& AutoTuningTrainingData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_AutoTuningTrainingData.base);
  return *internal_default_instance();
}


void AutoTuningTrainingData::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(teacher_component_ != NULL);
      teacher_component_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(student_component_ != NULL);
      student_component_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AutoTuningTrainingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.AutoTuningTrainingData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning_internal.CostComponents teacher_component = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_teacher_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.planning_internal.CostComponents student_component = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_student_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.AutoTuningTrainingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.AutoTuningTrainingData)
  return false;
#undef DO_
}

void AutoTuningTrainingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning_internal.CostComponents teacher_component = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_teacher_component(), output);
  }

  // optional .apollo.planning_internal.CostComponents student_component = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_student_component(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.AutoTuningTrainingData)
}

::google::protobuf::uint8* AutoTuningTrainingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning_internal.CostComponents teacher_component = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_teacher_component(), deterministic, target);
  }

  // optional .apollo.planning_internal.CostComponents student_component = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_student_component(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.AutoTuningTrainingData)
  return target;
}

size_t AutoTuningTrainingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.AutoTuningTrainingData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.planning_internal.CostComponents teacher_component = 1;
    if (has_teacher_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *teacher_component_);
    }

    // optional .apollo.planning_internal.CostComponents student_component = 2;
    if (has_student_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *student_component_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoTuningTrainingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.AutoTuningTrainingData)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoTuningTrainingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoTuningTrainingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.AutoTuningTrainingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.AutoTuningTrainingData)
    MergeFrom(*source);
  }
}

void AutoTuningTrainingData::MergeFrom(const AutoTuningTrainingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.AutoTuningTrainingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_teacher_component()->::apollo::planning_internal::CostComponents::MergeFrom(from.teacher_component());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_student_component()->::apollo::planning_internal::CostComponents::MergeFrom(from.student_component());
    }
  }
}

void AutoTuningTrainingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.AutoTuningTrainingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoTuningTrainingData::CopyFrom(const AutoTuningTrainingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.AutoTuningTrainingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoTuningTrainingData::IsInitialized() const {
  return true;
}

void AutoTuningTrainingData::Swap(AutoTuningTrainingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoTuningTrainingData::InternalSwap(AutoTuningTrainingData* other) {
  using std::swap;
  swap(teacher_component_, other->teacher_component_);
  swap(student_component_, other->student_component_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutoTuningTrainingData::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloudReferenceLineRequest::InitAsDefaultInstance() {
}
void CloudReferenceLineRequest::clear_lane_segment() {
  lane_segment_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudReferenceLineRequest::kLaneSegmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudReferenceLineRequest::CloudReferenceLineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CloudReferenceLineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.CloudReferenceLineRequest)
}
CloudReferenceLineRequest::CloudReferenceLineRequest(const CloudReferenceLineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lane_segment_(from.lane_segment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.CloudReferenceLineRequest)
}

void CloudReferenceLineRequest::SharedCtor() {
}

CloudReferenceLineRequest::~CloudReferenceLineRequest() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.CloudReferenceLineRequest)
  SharedDtor();
}

void CloudReferenceLineRequest::SharedDtor() {
}

void CloudReferenceLineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloudReferenceLineRequest::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloudReferenceLineRequest& CloudReferenceLineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CloudReferenceLineRequest.base);
  return *internal_default_instance();
}


void CloudReferenceLineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.CloudReferenceLineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_segment_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloudReferenceLineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.CloudReferenceLineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.routing.LaneSegment lane_segment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.CloudReferenceLineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.CloudReferenceLineRequest)
  return false;
#undef DO_
}

void CloudReferenceLineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.CloudReferenceLineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.routing.LaneSegment lane_segment = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_segment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->lane_segment(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.CloudReferenceLineRequest)
}

::google::protobuf::uint8* CloudReferenceLineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.CloudReferenceLineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.routing.LaneSegment lane_segment = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_segment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lane_segment(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.CloudReferenceLineRequest)
  return target;
}

size_t CloudReferenceLineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.CloudReferenceLineRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.routing.LaneSegment lane_segment = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_segment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_segment(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudReferenceLineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.CloudReferenceLineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudReferenceLineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudReferenceLineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.CloudReferenceLineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.CloudReferenceLineRequest)
    MergeFrom(*source);
  }
}

void CloudReferenceLineRequest::MergeFrom(const CloudReferenceLineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.CloudReferenceLineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_segment_.MergeFrom(from.lane_segment_);
}

void CloudReferenceLineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.CloudReferenceLineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudReferenceLineRequest::CopyFrom(const CloudReferenceLineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.CloudReferenceLineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudReferenceLineRequest::IsInitialized() const {
  return true;
}

void CloudReferenceLineRequest::Swap(CloudReferenceLineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudReferenceLineRequest::InternalSwap(CloudReferenceLineRequest* other) {
  using std::swap;
  CastToBase(&lane_segment_)->InternalSwap(CastToBase(&other->lane_segment_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloudReferenceLineRequest::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloudReferenceLineRoutingRequest::InitAsDefaultInstance() {
  ::apollo::planning_internal::_CloudReferenceLineRoutingRequest_default_instance_._instance.get_mutable()->routing_ = const_cast< ::apollo::routing::RoutingResponse*>(
      ::apollo::routing::RoutingResponse::internal_default_instance());
}
void CloudReferenceLineRoutingRequest::clear_routing() {
  if (routing_ != NULL) routing_->Clear();
  clear_has_routing();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudReferenceLineRoutingRequest::kRoutingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudReferenceLineRoutingRequest::CloudReferenceLineRoutingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CloudReferenceLineRoutingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.CloudReferenceLineRoutingRequest)
}
CloudReferenceLineRoutingRequest::CloudReferenceLineRoutingRequest(const CloudReferenceLineRoutingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_routing()) {
    routing_ = new ::apollo::routing::RoutingResponse(*from.routing_);
  } else {
    routing_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.CloudReferenceLineRoutingRequest)
}

void CloudReferenceLineRoutingRequest::SharedCtor() {
  routing_ = NULL;
}

CloudReferenceLineRoutingRequest::~CloudReferenceLineRoutingRequest() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  SharedDtor();
}

void CloudReferenceLineRoutingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete routing_;
}

void CloudReferenceLineRoutingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloudReferenceLineRoutingRequest::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloudReferenceLineRoutingRequest& CloudReferenceLineRoutingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CloudReferenceLineRoutingRequest.base);
  return *internal_default_instance();
}


void CloudReferenceLineRoutingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(routing_ != NULL);
    routing_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloudReferenceLineRoutingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.routing.RoutingResponse routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  return false;
#undef DO_
}

void CloudReferenceLineRoutingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.routing.RoutingResponse routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_routing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.CloudReferenceLineRoutingRequest)
}

::google::protobuf::uint8* CloudReferenceLineRoutingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.routing.RoutingResponse routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_routing(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  return target;
}

size_t CloudReferenceLineRoutingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.routing.RoutingResponse routing = 1;
  if (has_routing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *routing_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudReferenceLineRoutingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudReferenceLineRoutingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudReferenceLineRoutingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.CloudReferenceLineRoutingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.CloudReferenceLineRoutingRequest)
    MergeFrom(*source);
  }
}

void CloudReferenceLineRoutingRequest::MergeFrom(const CloudReferenceLineRoutingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_routing()) {
    mutable_routing()->::apollo::routing::RoutingResponse::MergeFrom(from.routing());
  }
}

void CloudReferenceLineRoutingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudReferenceLineRoutingRequest::CopyFrom(const CloudReferenceLineRoutingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.CloudReferenceLineRoutingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudReferenceLineRoutingRequest::IsInitialized() const {
  return true;
}

void CloudReferenceLineRoutingRequest::Swap(CloudReferenceLineRoutingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudReferenceLineRoutingRequest::InternalSwap(CloudReferenceLineRoutingRequest* other) {
  using std::swap;
  swap(routing_, other->routing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloudReferenceLineRoutingRequest::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloudReferenceLineResponse::InitAsDefaultInstance() {
}
void CloudReferenceLineResponse::clear_segment() {
  segment_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudReferenceLineResponse::kSegmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudReferenceLineResponse::CloudReferenceLineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CloudReferenceLineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.CloudReferenceLineResponse)
}
CloudReferenceLineResponse::CloudReferenceLineResponse(const CloudReferenceLineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      segment_(from.segment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.CloudReferenceLineResponse)
}

void CloudReferenceLineResponse::SharedCtor() {
}

CloudReferenceLineResponse::~CloudReferenceLineResponse() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.CloudReferenceLineResponse)
  SharedDtor();
}

void CloudReferenceLineResponse::SharedDtor() {
}

void CloudReferenceLineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloudReferenceLineResponse::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloudReferenceLineResponse& CloudReferenceLineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_CloudReferenceLineResponse.base);
  return *internal_default_instance();
}


void CloudReferenceLineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.CloudReferenceLineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segment_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloudReferenceLineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.CloudReferenceLineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.Path segment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.CloudReferenceLineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.CloudReferenceLineResponse)
  return false;
#undef DO_
}

void CloudReferenceLineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.CloudReferenceLineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Path segment = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->segment(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.CloudReferenceLineResponse)
}

::google::protobuf::uint8* CloudReferenceLineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.CloudReferenceLineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Path segment = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->segment(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.CloudReferenceLineResponse)
  return target;
}

size_t CloudReferenceLineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.CloudReferenceLineResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.Path segment = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->segment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->segment(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudReferenceLineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.CloudReferenceLineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudReferenceLineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudReferenceLineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.CloudReferenceLineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.CloudReferenceLineResponse)
    MergeFrom(*source);
  }
}

void CloudReferenceLineResponse::MergeFrom(const CloudReferenceLineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.CloudReferenceLineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  segment_.MergeFrom(from.segment_);
}

void CloudReferenceLineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.CloudReferenceLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudReferenceLineResponse::CopyFrom(const CloudReferenceLineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.CloudReferenceLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudReferenceLineResponse::IsInitialized() const {
  return true;
}

void CloudReferenceLineResponse::Swap(CloudReferenceLineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudReferenceLineResponse::InternalSwap(CloudReferenceLineResponse* other) {
  using std::swap;
  CastToBase(&segment_)->InternalSwap(CastToBase(&other->segment_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloudReferenceLineResponse::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HybridModelDebug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_HybridModelDebug_default_instance_._instance.get_mutable()->evaluated_path_reference_ = const_cast< ::apollo::common::Path*>(
      ::apollo::common::Path::internal_default_instance());
}
void HybridModelDebug::clear_evaluated_path_reference() {
  if (evaluated_path_reference_ != NULL) evaluated_path_reference_->Clear();
  clear_has_evaluated_path_reference();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HybridModelDebug::kUsingLearningModelOutputFieldNumber;
const int HybridModelDebug::kLearningModelOutputUsageRatioFieldNumber;
const int HybridModelDebug::kLearningModelOutputFailReasonFieldNumber;
const int HybridModelDebug::kEvaluatedPathReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HybridModelDebug::HybridModelDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_HybridModelDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.HybridModelDebug)
}
HybridModelDebug::HybridModelDebug(const HybridModelDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  learning_model_output_fail_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_learning_model_output_fail_reason()) {
    learning_model_output_fail_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.learning_model_output_fail_reason_);
  }
  if (from.has_evaluated_path_reference()) {
    evaluated_path_reference_ = new ::apollo::common::Path(*from.evaluated_path_reference_);
  } else {
    evaluated_path_reference_ = NULL;
  }
  ::memcpy(&learning_model_output_usage_ratio_, &from.learning_model_output_usage_ratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&using_learning_model_output_) -
    reinterpret_cast<char*>(&learning_model_output_usage_ratio_)) + sizeof(using_learning_model_output_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.HybridModelDebug)
}

void HybridModelDebug::SharedCtor() {
  learning_model_output_fail_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&evaluated_path_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&using_learning_model_output_) -
      reinterpret_cast<char*>(&evaluated_path_reference_)) + sizeof(using_learning_model_output_));
}

HybridModelDebug::~HybridModelDebug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.HybridModelDebug)
  SharedDtor();
}

void HybridModelDebug::SharedDtor() {
  learning_model_output_fail_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete evaluated_path_reference_;
}

void HybridModelDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HybridModelDebug::descriptor() {
  ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HybridModelDebug& HybridModelDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::scc_info_HybridModelDebug.base);
  return *internal_default_instance();
}


void HybridModelDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.HybridModelDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      learning_model_output_fail_reason_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(evaluated_path_reference_ != NULL);
      evaluated_path_reference_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&learning_model_output_usage_ratio_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&using_learning_model_output_) -
        reinterpret_cast<char*>(&learning_model_output_usage_ratio_)) + sizeof(using_learning_model_output_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HybridModelDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.HybridModelDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool using_learning_model_output = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_using_learning_model_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &using_learning_model_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double learning_model_output_usage_ratio = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_learning_model_output_usage_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &learning_model_output_usage_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string learning_model_output_fail_reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_learning_model_output_fail_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->learning_model_output_fail_reason().data(), static_cast<int>(this->learning_model_output_fail_reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning_internal.HybridModelDebug.learning_model_output_fail_reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.Path evaluated_path_reference = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluated_path_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.HybridModelDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.HybridModelDebug)
  return false;
#undef DO_
}

void HybridModelDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.HybridModelDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool using_learning_model_output = 1 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->using_learning_model_output(), output);
  }

  // optional double learning_model_output_usage_ratio = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->learning_model_output_usage_ratio(), output);
  }

  // optional string learning_model_output_fail_reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->learning_model_output_fail_reason().data(), static_cast<int>(this->learning_model_output_fail_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.HybridModelDebug.learning_model_output_fail_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->learning_model_output_fail_reason(), output);
  }

  // optional .apollo.common.Path evaluated_path_reference = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_evaluated_path_reference(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.HybridModelDebug)
}

::google::protobuf::uint8* HybridModelDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.HybridModelDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool using_learning_model_output = 1 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->using_learning_model_output(), target);
  }

  // optional double learning_model_output_usage_ratio = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->learning_model_output_usage_ratio(), target);
  }

  // optional string learning_model_output_fail_reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->learning_model_output_fail_reason().data(), static_cast<int>(this->learning_model_output_fail_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning_internal.HybridModelDebug.learning_model_output_fail_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->learning_model_output_fail_reason(), target);
  }

  // optional .apollo.common.Path evaluated_path_reference = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_evaluated_path_reference(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.HybridModelDebug)
  return target;
}

size_t HybridModelDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.HybridModelDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string learning_model_output_fail_reason = 3;
    if (has_learning_model_output_fail_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->learning_model_output_fail_reason());
    }

    // optional .apollo.common.Path evaluated_path_reference = 4;
    if (has_evaluated_path_reference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *evaluated_path_reference_);
    }

    // optional double learning_model_output_usage_ratio = 2;
    if (has_learning_model_output_usage_ratio()) {
      total_size += 1 + 8;
    }

    // optional bool using_learning_model_output = 1 [default = false];
    if (has_using_learning_model_output()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HybridModelDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.HybridModelDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const HybridModelDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HybridModelDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.HybridModelDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.HybridModelDebug)
    MergeFrom(*source);
  }
}

void HybridModelDebug::MergeFrom(const HybridModelDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.HybridModelDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_learning_model_output_fail_reason();
      learning_model_output_fail_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.learning_model_output_fail_reason_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_evaluated_path_reference()->::apollo::common::Path::MergeFrom(from.evaluated_path_reference());
    }
    if (cached_has_bits & 0x00000004u) {
      learning_model_output_usage_ratio_ = from.learning_model_output_usage_ratio_;
    }
    if (cached_has_bits & 0x00000008u) {
      using_learning_model_output_ = from.using_learning_model_output_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HybridModelDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.HybridModelDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HybridModelDebug::CopyFrom(const HybridModelDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.HybridModelDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HybridModelDebug::IsInitialized() const {
  return true;
}

void HybridModelDebug::Swap(HybridModelDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HybridModelDebug::InternalSwap(HybridModelDebug* other) {
  using std::swap;
  learning_model_output_fail_reason_.Swap(&other->learning_model_output_fail_reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(evaluated_path_reference_, other->evaluated_path_reference_);
  swap(learning_model_output_usage_ratio_, other->learning_model_output_usage_ratio_);
  swap(using_learning_model_output_, other->using_learning_model_output_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HybridModelDebug::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fplanning_2fproto_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning_internal
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::Debug* Arena::CreateMaybeMessage< ::apollo::planning_internal::Debug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::Debug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::SpeedPlan* Arena::CreateMaybeMessage< ::apollo::planning_internal::SpeedPlan >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::SpeedPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::StGraphBoundaryDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::StGraphBoundaryDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::StGraphBoundaryDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::SLFrameDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::SLFrameDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::SLFrameDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint* Arena::CreateMaybeMessage< ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::STGraphDebug_STGraphSpeedConstraint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef* Arena::CreateMaybeMessage< ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::STGraphDebug_STGraphKernelCuiseRef >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef* Arena::CreateMaybeMessage< ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::STGraphDebug_STGraphKernelFollowRef >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::STGraphDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::STGraphDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::STGraphDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::SignalLightDebug_SignalDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::SignalLightDebug_SignalDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::SignalLightDebug_SignalDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::SignalLightDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::SignalLightDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::SignalLightDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::DecisionTag* Arena::CreateMaybeMessage< ::apollo::planning_internal::DecisionTag >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::DecisionTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::ObstacleDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::ObstacleDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::ObstacleDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::ReferenceLineDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::ReferenceLineDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::ReferenceLineDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::SampleLayerDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::SampleLayerDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::SampleLayerDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::DpPolyGraphDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::DpPolyGraphDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::DpPolyGraphDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::ScenarioDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::ScenarioDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::ScenarioDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::Trajectories* Arena::CreateMaybeMessage< ::apollo::planning_internal::Trajectories >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::Trajectories >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::OpenSpaceDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::OpenSpaceDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::OpenSpaceDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::SmootherDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::SmootherDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::SmootherDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::PullOverDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::PullOverDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::PullOverDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::PlanningData* Arena::CreateMaybeMessage< ::apollo::planning_internal::PlanningData >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::PlanningData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::LatticeStPixel* Arena::CreateMaybeMessage< ::apollo::planning_internal::LatticeStPixel >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::LatticeStPixel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::LatticeStTraining* Arena::CreateMaybeMessage< ::apollo::planning_internal::LatticeStTraining >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::LatticeStTraining >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::CostComponents* Arena::CreateMaybeMessage< ::apollo::planning_internal::CostComponents >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::CostComponents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::AutoTuningTrainingData* Arena::CreateMaybeMessage< ::apollo::planning_internal::AutoTuningTrainingData >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::AutoTuningTrainingData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::CloudReferenceLineRequest* Arena::CreateMaybeMessage< ::apollo::planning_internal::CloudReferenceLineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::CloudReferenceLineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::CloudReferenceLineRoutingRequest* Arena::CreateMaybeMessage< ::apollo::planning_internal::CloudReferenceLineRoutingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::CloudReferenceLineRoutingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::CloudReferenceLineResponse* Arena::CreateMaybeMessage< ::apollo::planning_internal::CloudReferenceLineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::CloudReferenceLineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::HybridModelDebug* Arena::CreateMaybeMessage< ::apollo::planning_internal::HybridModelDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::HybridModelDebug >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

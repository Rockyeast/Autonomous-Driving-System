// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/localization/proto/rtk_config.proto

#include "modules/localization/proto/rtk_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace apollo {
namespace localization {
namespace rtk_config {
class ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config>
      _instance;
} _Config_default_instance_;
}  // namespace rtk_config
}  // namespace localization
}  // namespace apollo
namespace protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto {
static void InitDefaultsConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::localization::rtk_config::_Config_default_instance_;
    new (ptr) ::apollo::localization::rtk_config::Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::localization::rtk_config::Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Config.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, localization_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, localization_status_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, imu_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, gps_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, gps_status_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, broadcast_tf_frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, broadcast_tf_child_frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, imu_list_max_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, gps_imu_time_diff_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, map_offset_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, map_offset_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::rtk_config::Config, map_offset_z_),
  0,
  5,
  1,
  2,
  6,
  3,
  4,
  11,
  7,
  8,
  9,
  10,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::apollo::localization::rtk_config::Config)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::localization::rtk_config::_Config_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/localization/proto/rtk_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+modules/localization/proto/rtk_config."
      "proto\022\036apollo.localization.rtk_config\"\315\002"
      "\n\006Config\022\032\n\022localization_topic\030\001 \001(\t\022!\n\031"
      "localization_status_topic\030\013 \001(\t\022\021\n\timu_t"
      "opic\030\002 \001(\t\022\021\n\tgps_topic\030\003 \001(\t\022\030\n\020gps_sta"
      "tus_topic\030\014 \001(\t\022\035\n\025broadcast_tf_frame_id"
      "\030\004 \001(\t\022#\n\033broadcast_tf_child_frame_id\030\005 "
      "\001(\t\022\031\n\021imu_list_max_size\030\006 \001(\005\022#\n\033gps_im"
      "u_time_diff_threshold\030\007 \001(\001\022\024\n\014map_offse"
      "t_x\030\010 \001(\001\022\024\n\014map_offset_y\030\t \001(\001\022\024\n\014map_o"
      "ffset_z\030\n \001(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 413);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/localization/proto/rtk_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto
namespace apollo {
namespace localization {
namespace rtk_config {

// ===================================================================

void Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kLocalizationTopicFieldNumber;
const int Config::kLocalizationStatusTopicFieldNumber;
const int Config::kImuTopicFieldNumber;
const int Config::kGpsTopicFieldNumber;
const int Config::kGpsStatusTopicFieldNumber;
const int Config::kBroadcastTfFrameIdFieldNumber;
const int Config::kBroadcastTfChildFrameIdFieldNumber;
const int Config::kImuListMaxSizeFieldNumber;
const int Config::kGpsImuTimeDiffThresholdFieldNumber;
const int Config::kMapOffsetXFieldNumber;
const int Config::kMapOffsetYFieldNumber;
const int Config::kMapOffsetZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto::scc_info_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.localization.rtk_config.Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  localization_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localization_topic()) {
    localization_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_topic_);
  }
  imu_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imu_topic()) {
    imu_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imu_topic_);
  }
  gps_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gps_topic()) {
    gps_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_topic_);
  }
  broadcast_tf_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_broadcast_tf_frame_id()) {
    broadcast_tf_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broadcast_tf_frame_id_);
  }
  broadcast_tf_child_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_broadcast_tf_child_frame_id()) {
    broadcast_tf_child_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broadcast_tf_child_frame_id_);
  }
  localization_status_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localization_status_topic()) {
    localization_status_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_status_topic_);
  }
  gps_status_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gps_status_topic()) {
    gps_status_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_status_topic_);
  }
  ::memcpy(&gps_imu_time_diff_threshold_, &from.gps_imu_time_diff_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&imu_list_max_size_) -
    reinterpret_cast<char*>(&gps_imu_time_diff_threshold_)) + sizeof(imu_list_max_size_));
  // @@protoc_insertion_point(copy_constructor:apollo.localization.rtk_config.Config)
}

void Config::SharedCtor() {
  localization_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imu_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_tf_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_tf_child_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localization_status_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_status_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gps_imu_time_diff_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imu_list_max_size_) -
      reinterpret_cast<char*>(&gps_imu_time_diff_threshold_)) + sizeof(imu_list_max_size_));
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:apollo.localization.rtk_config.Config)
  SharedDtor();
}

void Config::SharedDtor() {
  localization_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imu_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_tf_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broadcast_tf_child_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localization_status_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_status_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  ::protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Config& Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto::scc_info_Config.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.rtk_config.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      localization_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      imu_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      gps_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      broadcast_tf_frame_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      broadcast_tf_child_frame_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      localization_status_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      gps_status_topic_.ClearNonDefaultToEmptyNoArena();
    }
  }
  gps_imu_time_diff_threshold_ = 0;
  if (cached_has_bits & 3840u) {
    ::memset(&map_offset_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&imu_list_max_size_) -
        reinterpret_cast<char*>(&map_offset_x_)) + sizeof(imu_list_max_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.localization.rtk_config.Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string localization_topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localization_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localization_topic().data(), static_cast<int>(this->localization_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.localization_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imu_topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imu_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imu_topic().data(), static_cast<int>(this->imu_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.imu_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gps_topic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gps_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gps_topic().data(), static_cast<int>(this->gps_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.gps_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string broadcast_tf_frame_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broadcast_tf_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->broadcast_tf_frame_id().data(), static_cast<int>(this->broadcast_tf_frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.broadcast_tf_frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string broadcast_tf_child_frame_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broadcast_tf_child_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->broadcast_tf_child_frame_id().data(), static_cast<int>(this->broadcast_tf_child_frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.broadcast_tf_child_frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 imu_list_max_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_imu_list_max_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imu_list_max_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double gps_imu_time_diff_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_gps_imu_time_diff_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gps_imu_time_diff_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double map_offset_x = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_map_offset_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_offset_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double map_offset_y = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_map_offset_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_offset_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double map_offset_z = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_map_offset_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_offset_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localization_status_topic = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localization_status_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localization_status_topic().data(), static_cast<int>(this->localization_status_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.localization_status_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gps_status_topic = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gps_status_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gps_status_topic().data(), static_cast<int>(this->gps_status_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.localization.rtk_config.Config.gps_status_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.localization.rtk_config.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.localization.rtk_config.Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.localization.rtk_config.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string localization_topic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_topic().data(), static_cast<int>(this->localization_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.localization_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->localization_topic(), output);
  }

  // optional string imu_topic = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imu_topic().data(), static_cast<int>(this->imu_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.imu_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->imu_topic(), output);
  }

  // optional string gps_topic = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_topic().data(), static_cast<int>(this->gps_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.gps_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gps_topic(), output);
  }

  // optional string broadcast_tf_frame_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->broadcast_tf_frame_id().data(), static_cast<int>(this->broadcast_tf_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.broadcast_tf_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->broadcast_tf_frame_id(), output);
  }

  // optional string broadcast_tf_child_frame_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->broadcast_tf_child_frame_id().data(), static_cast<int>(this->broadcast_tf_child_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.broadcast_tf_child_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->broadcast_tf_child_frame_id(), output);
  }

  // optional int32 imu_list_max_size = 6;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->imu_list_max_size(), output);
  }

  // optional double gps_imu_time_diff_threshold = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->gps_imu_time_diff_threshold(), output);
  }

  // optional double map_offset_x = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->map_offset_x(), output);
  }

  // optional double map_offset_y = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->map_offset_y(), output);
  }

  // optional double map_offset_z = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->map_offset_z(), output);
  }

  // optional string localization_status_topic = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_status_topic().data(), static_cast<int>(this->localization_status_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.localization_status_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->localization_status_topic(), output);
  }

  // optional string gps_status_topic = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_status_topic().data(), static_cast<int>(this->gps_status_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.gps_status_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->gps_status_topic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.localization.rtk_config.Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.rtk_config.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string localization_topic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_topic().data(), static_cast<int>(this->localization_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.localization_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->localization_topic(), target);
  }

  // optional string imu_topic = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imu_topic().data(), static_cast<int>(this->imu_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.imu_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->imu_topic(), target);
  }

  // optional string gps_topic = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_topic().data(), static_cast<int>(this->gps_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.gps_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gps_topic(), target);
  }

  // optional string broadcast_tf_frame_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->broadcast_tf_frame_id().data(), static_cast<int>(this->broadcast_tf_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.broadcast_tf_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->broadcast_tf_frame_id(), target);
  }

  // optional string broadcast_tf_child_frame_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->broadcast_tf_child_frame_id().data(), static_cast<int>(this->broadcast_tf_child_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.broadcast_tf_child_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->broadcast_tf_child_frame_id(), target);
  }

  // optional int32 imu_list_max_size = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->imu_list_max_size(), target);
  }

  // optional double gps_imu_time_diff_threshold = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->gps_imu_time_diff_threshold(), target);
  }

  // optional double map_offset_x = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->map_offset_x(), target);
  }

  // optional double map_offset_y = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->map_offset_y(), target);
  }

  // optional double map_offset_z = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->map_offset_z(), target);
  }

  // optional string localization_status_topic = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_status_topic().data(), static_cast<int>(this->localization_status_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.localization_status_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->localization_status_topic(), target);
  }

  // optional string gps_status_topic = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_status_topic().data(), static_cast<int>(this->gps_status_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.localization.rtk_config.Config.gps_status_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->gps_status_topic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.rtk_config.Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.rtk_config.Config)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string localization_topic = 1;
    if (has_localization_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localization_topic());
    }

    // optional string imu_topic = 2;
    if (has_imu_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imu_topic());
    }

    // optional string gps_topic = 3;
    if (has_gps_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gps_topic());
    }

    // optional string broadcast_tf_frame_id = 4;
    if (has_broadcast_tf_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->broadcast_tf_frame_id());
    }

    // optional string broadcast_tf_child_frame_id = 5;
    if (has_broadcast_tf_child_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->broadcast_tf_child_frame_id());
    }

    // optional string localization_status_topic = 11;
    if (has_localization_status_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localization_status_topic());
    }

    // optional string gps_status_topic = 12;
    if (has_gps_status_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gps_status_topic());
    }

    // optional double gps_imu_time_diff_threshold = 7;
    if (has_gps_imu_time_diff_threshold()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional double map_offset_x = 8;
    if (has_map_offset_x()) {
      total_size += 1 + 8;
    }

    // optional double map_offset_y = 9;
    if (has_map_offset_y()) {
      total_size += 1 + 8;
    }

    // optional double map_offset_z = 10;
    if (has_map_offset_z()) {
      total_size += 1 + 8;
    }

    // optional int32 imu_list_max_size = 6;
    if (has_imu_list_max_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->imu_list_max_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.localization.rtk_config.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.localization.rtk_config.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.localization.rtk_config.Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.rtk_config.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_localization_topic();
      localization_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_topic_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_imu_topic();
      imu_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imu_topic_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_gps_topic();
      gps_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_topic_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_broadcast_tf_frame_id();
      broadcast_tf_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broadcast_tf_frame_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_broadcast_tf_child_frame_id();
      broadcast_tf_child_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broadcast_tf_child_frame_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_localization_status_topic();
      localization_status_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_status_topic_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_gps_status_topic();
      gps_status_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_status_topic_);
    }
    if (cached_has_bits & 0x00000080u) {
      gps_imu_time_diff_threshold_ = from.gps_imu_time_diff_threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      map_offset_x_ = from.map_offset_x_;
    }
    if (cached_has_bits & 0x00000200u) {
      map_offset_y_ = from.map_offset_y_;
    }
    if (cached_has_bits & 0x00000400u) {
      map_offset_z_ = from.map_offset_z_;
    }
    if (cached_has_bits & 0x00000800u) {
      imu_list_max_size_ = from.imu_list_max_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.localization.rtk_config.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.rtk_config.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  using std::swap;
  localization_topic_.Swap(&other->localization_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imu_topic_.Swap(&other->imu_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gps_topic_.Swap(&other->gps_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broadcast_tf_frame_id_.Swap(&other->broadcast_tf_frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broadcast_tf_child_frame_id_.Swap(&other->broadcast_tf_child_frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localization_status_topic_.Swap(&other->localization_status_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gps_status_topic_.Swap(&other->gps_status_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gps_imu_time_diff_threshold_, other->gps_imu_time_diff_threshold_);
  swap(map_offset_x_, other->map_offset_x_);
  swap(map_offset_y_, other->map_offset_y_);
  swap(map_offset_z_, other->map_offset_z_);
  swap(imu_list_max_size_, other->imu_list_max_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2flocalization_2fproto_2frtk_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rtk_config
}  // namespace localization
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::localization::rtk_config::Config* Arena::CreateMaybeMessage< ::apollo::localization::rtk_config::Config >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::localization::rtk_config::Config >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

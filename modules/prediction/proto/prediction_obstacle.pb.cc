// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_obstacle.proto

#include "modules/prediction/proto/prediction_obstacle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace protobuf_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_PerceptionObstacle;
}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto
namespace protobuf_modules_2fprediction_2fproto_2ffeature_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2ffeature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObstacleInteractiveTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2ffeature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObstaclePriority;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2ffeature_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Trajectory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2ffeature_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Feature;
}  // namespace protobuf_modules_2fprediction_2fproto_2ffeature_2eproto
namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Intent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObstacleIntent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_PredictionObstacle;
}  // namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto
namespace protobuf_modules_2fprediction_2fproto_2fscenario_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fscenario_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Scenario;
}  // namespace protobuf_modules_2fprediction_2fproto_2fscenario_2eproto
namespace apollo {
namespace prediction {
class ObstacleIntentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObstacleIntent>
      _instance;
} _ObstacleIntent_default_instance_;
class IntentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intent>
      _instance;
} _Intent_default_instance_;
class PredictionObstacleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionObstacle>
      _instance;
} _PredictionObstacle_default_instance_;
class PredictionObstaclesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionObstacles>
      _instance;
} _PredictionObstacles_default_instance_;
}  // namespace prediction
}  // namespace apollo
namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto {
static void InitDefaultsObstacleIntent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_ObstacleIntent_default_instance_;
    new (ptr) ::apollo::prediction::ObstacleIntent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::ObstacleIntent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObstacleIntent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObstacleIntent}, {}};

static void InitDefaultsIntent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_Intent_default_instance_;
    new (ptr) ::apollo::prediction::Intent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::Intent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Intent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntent}, {}};

static void InitDefaultsPredictionObstacle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_PredictionObstacle_default_instance_;
    new (ptr) ::apollo::prediction::PredictionObstacle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::PredictionObstacle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_PredictionObstacle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsPredictionObstacle}, {
      &protobuf_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto::scc_info_PerceptionObstacle.base,
      &protobuf_modules_2fprediction_2fproto_2ffeature_2eproto::scc_info_Trajectory.base,
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_ObstacleIntent.base,
      &protobuf_modules_2fprediction_2fproto_2ffeature_2eproto::scc_info_ObstaclePriority.base,
      &protobuf_modules_2fprediction_2fproto_2ffeature_2eproto::scc_info_ObstacleInteractiveTag.base,
      &protobuf_modules_2fprediction_2fproto_2ffeature_2eproto::scc_info_Feature.base,}};

static void InitDefaultsPredictionObstacles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_PredictionObstacles_default_instance_;
    new (ptr) ::apollo::prediction::PredictionObstacles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::PredictionObstacles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_PredictionObstacles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsPredictionObstacles}, {
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_PredictionObstacle.base,
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_Intent.base,
      &protobuf_modules_2fprediction_2fproto_2fscenario_2eproto::scc_info_Scenario.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ObstacleIntent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Intent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PredictionObstacle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PredictionObstacles.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleIntent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleIntent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleIntent, type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::Intent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::Intent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::Intent, type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, perception_obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, predicted_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, interactive_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, is_static_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacle, feature_),
  0,
  4,
  5,
  ~0u,
  1,
  2,
  3,
  6,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, prediction_obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, perception_error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, end_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionObstacles, scenario_),
  0,
  ~0u,
  5,
  3,
  4,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::apollo::prediction::ObstacleIntent)},
  { 7, 13, sizeof(::apollo::prediction::Intent)},
  { 14, 28, sizeof(::apollo::prediction::PredictionObstacle)},
  { 37, 49, sizeof(::apollo::prediction::PredictionObstacles)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_ObstacleIntent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_Intent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_PredictionObstacle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_PredictionObstacles_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/prediction/proto/prediction_obstacle.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2modules/prediction/proto/prediction_ob"
      "stacle.proto\022\021apollo.prediction\032%modules"
      "/common/proto/error_code.proto\032!modules/"
      "common/proto/header.proto\032\'modules/predi"
      "ction/proto/scenario.proto\0322modules/perc"
      "eption/proto/perception_obstacle.proto\032&"
      "modules/prediction/proto/feature.proto\"\366"
      "\001\n\016ObstacleIntent\022=\n\004type\030\001 \001(\0162&.apollo"
      ".prediction.ObstacleIntent.Type:\007UNKNOWN"
      "\"\244\001\n\004Type\022\013\n\007UNKNOWN\020\000\022\010\n\004STOP\020\001\022\016\n\nSTAT"
      "IONARY\020\002\022\n\n\006MOVING\020\003\022\017\n\013CHANGE_LANE\020\004\022\024\n"
      "\020LOW_ACCELERATION\020\005\022\025\n\021HIGH_ACCELERATION"
      "\020\006\022\024\n\020LOW_DECELERATION\020\007\022\025\n\021HIGH_DECELER"
      "ATION\020\010\"{\n\006Intent\0225\n\004type\030\001 \001(\0162\036.apollo"
      ".prediction.Intent.Type:\007UNKNOWN\":\n\004Type"
      "\022\013\n\007UNKNOWN\020\000\022\010\n\004STOP\020\001\022\n\n\006CRUISE\020\002\022\017\n\013C"
      "HANGE_LANE\020\003\"\255\003\n\022PredictionObstacle\022B\n\023p"
      "erception_obstacle\030\001 \001(\0132%.apollo.percep"
      "tion.PerceptionObstacle\022\021\n\ttimestamp\030\002 \001"
      "(\001\022\030\n\020predicted_period\030\003 \001(\001\0221\n\ntrajecto"
      "ry\030\004 \003(\0132\035.apollo.prediction.Trajectory\022"
      "1\n\006intent\030\005 \001(\0132!.apollo.prediction.Obst"
      "acleIntent\0225\n\010priority\030\006 \001(\0132#.apollo.pr"
      "ediction.ObstaclePriority\022B\n\017interactive"
      "_tag\030\t \001(\0132).apollo.prediction.ObstacleI"
      "nteractiveTag\022\030\n\tis_static\030\007 \001(\010:\005false\022"
      "+\n\007feature\030\010 \003(\0132\032.apollo.prediction.Fea"
      "ture\"\303\002\n\023PredictionObstacles\022%\n\006header\030\001"
      " \001(\0132\025.apollo.common.Header\022B\n\023predictio"
      "n_obstacle\030\002 \003(\0132%.apollo.prediction.Pre"
      "dictionObstacle\0227\n\025perception_error_code"
      "\030\003 \001(\0162\030.apollo.common.ErrorCode\022\027\n\017star"
      "t_timestamp\030\004 \001(\001\022\025\n\rend_timestamp\030\005 \001(\001"
      "\022)\n\006intent\030\006 \001(\0132\031.apollo.prediction.Int"
      "ent\022-\n\010scenario\030\007 \001(\0132\033.apollo.predictio"
      "n.Scenario"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1410);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/prediction/proto/prediction_obstacle.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2ferror_5fcode_2eproto::AddDescriptors();
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
  ::protobuf_modules_2fprediction_2fproto_2fscenario_2eproto::AddDescriptors();
  ::protobuf_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto::AddDescriptors();
  ::protobuf_modules_2fprediction_2fproto_2ffeature_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto
namespace apollo {
namespace prediction {
const ::google::protobuf::EnumDescriptor* ObstacleIntent_Type_descriptor() {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_enum_descriptors[0];
}
bool ObstacleIntent_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObstacleIntent_Type ObstacleIntent::UNKNOWN;
const ObstacleIntent_Type ObstacleIntent::STOP;
const ObstacleIntent_Type ObstacleIntent::STATIONARY;
const ObstacleIntent_Type ObstacleIntent::MOVING;
const ObstacleIntent_Type ObstacleIntent::CHANGE_LANE;
const ObstacleIntent_Type ObstacleIntent::LOW_ACCELERATION;
const ObstacleIntent_Type ObstacleIntent::HIGH_ACCELERATION;
const ObstacleIntent_Type ObstacleIntent::LOW_DECELERATION;
const ObstacleIntent_Type ObstacleIntent::HIGH_DECELERATION;
const ObstacleIntent_Type ObstacleIntent::Type_MIN;
const ObstacleIntent_Type ObstacleIntent::Type_MAX;
const int ObstacleIntent::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Intent_Type_descriptor() {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_enum_descriptors[1];
}
bool Intent_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Intent_Type Intent::UNKNOWN;
const Intent_Type Intent::STOP;
const Intent_Type Intent::CRUISE;
const Intent_Type Intent::CHANGE_LANE;
const Intent_Type Intent::Type_MIN;
const Intent_Type Intent::Type_MAX;
const int Intent::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ObstacleIntent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObstacleIntent::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObstacleIntent::ObstacleIntent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_ObstacleIntent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.ObstacleIntent)
}
ObstacleIntent::ObstacleIntent(const ObstacleIntent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ObstacleIntent)
}

void ObstacleIntent::SharedCtor() {
  type_ = 0;
}

ObstacleIntent::~ObstacleIntent() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ObstacleIntent)
  SharedDtor();
}

void ObstacleIntent::SharedDtor() {
}

void ObstacleIntent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObstacleIntent::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObstacleIntent& ObstacleIntent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_ObstacleIntent.base);
  return *internal_default_instance();
}


void ObstacleIntent::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ObstacleIntent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObstacleIntent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.ObstacleIntent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.prediction.ObstacleIntent.Type type = 1 [default = UNKNOWN];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::ObstacleIntent_Type_IsValid(value)) {
            set_type(static_cast< ::apollo::prediction::ObstacleIntent_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.ObstacleIntent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.ObstacleIntent)
  return false;
#undef DO_
}

void ObstacleIntent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.ObstacleIntent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.ObstacleIntent.Type type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.ObstacleIntent)
}

::google::protobuf::uint8* ObstacleIntent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ObstacleIntent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.ObstacleIntent.Type type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ObstacleIntent)
  return target;
}

size_t ObstacleIntent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ObstacleIntent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.prediction.ObstacleIntent.Type type = 1 [default = UNKNOWN];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObstacleIntent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.ObstacleIntent)
  GOOGLE_DCHECK_NE(&from, this);
  const ObstacleIntent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObstacleIntent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.ObstacleIntent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.ObstacleIntent)
    MergeFrom(*source);
  }
}

void ObstacleIntent::MergeFrom(const ObstacleIntent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ObstacleIntent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void ObstacleIntent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.ObstacleIntent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObstacleIntent::CopyFrom(const ObstacleIntent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ObstacleIntent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleIntent::IsInitialized() const {
  return true;
}

void ObstacleIntent::Swap(ObstacleIntent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObstacleIntent::InternalSwap(ObstacleIntent* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObstacleIntent::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intent::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intent::Intent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_Intent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Intent)
}
Intent::Intent(const Intent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Intent)
}

void Intent::SharedCtor() {
  type_ = 0;
}

Intent::~Intent() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Intent)
  SharedDtor();
}

void Intent::SharedDtor() {
}

void Intent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Intent::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intent& Intent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_Intent.base);
  return *internal_default_instance();
}


void Intent::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Intent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Intent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Intent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.prediction.Intent.Type type = 1 [default = UNKNOWN];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::Intent_Type_IsValid(value)) {
            set_type(static_cast< ::apollo::prediction::Intent_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Intent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Intent)
  return false;
#undef DO_
}

void Intent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Intent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.Intent.Type type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.Intent)
}

::google::protobuf::uint8* Intent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Intent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.Intent.Type type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Intent)
  return target;
}

size_t Intent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Intent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .apollo.prediction.Intent.Type type = 1 [default = UNKNOWN];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Intent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Intent)
  GOOGLE_DCHECK_NE(&from, this);
  const Intent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Intent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Intent)
    MergeFrom(*source);
  }
}

void Intent::MergeFrom(const Intent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Intent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void Intent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Intent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intent::CopyFrom(const Intent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Intent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent::IsInitialized() const {
  return true;
}

void Intent::Swap(Intent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Intent::InternalSwap(Intent* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Intent::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionObstacle::InitAsDefaultInstance() {
  ::apollo::prediction::_PredictionObstacle_default_instance_._instance.get_mutable()->perception_obstacle_ = const_cast< ::apollo::perception::PerceptionObstacle*>(
      ::apollo::perception::PerceptionObstacle::internal_default_instance());
  ::apollo::prediction::_PredictionObstacle_default_instance_._instance.get_mutable()->intent_ = const_cast< ::apollo::prediction::ObstacleIntent*>(
      ::apollo::prediction::ObstacleIntent::internal_default_instance());
  ::apollo::prediction::_PredictionObstacle_default_instance_._instance.get_mutable()->priority_ = const_cast< ::apollo::prediction::ObstaclePriority*>(
      ::apollo::prediction::ObstaclePriority::internal_default_instance());
  ::apollo::prediction::_PredictionObstacle_default_instance_._instance.get_mutable()->interactive_tag_ = const_cast< ::apollo::prediction::ObstacleInteractiveTag*>(
      ::apollo::prediction::ObstacleInteractiveTag::internal_default_instance());
}
void PredictionObstacle::clear_perception_obstacle() {
  if (perception_obstacle_ != NULL) perception_obstacle_->Clear();
  clear_has_perception_obstacle();
}
void PredictionObstacle::clear_trajectory() {
  trajectory_.Clear();
}
void PredictionObstacle::clear_priority() {
  if (priority_ != NULL) priority_->Clear();
  clear_has_priority();
}
void PredictionObstacle::clear_interactive_tag() {
  if (interactive_tag_ != NULL) interactive_tag_->Clear();
  clear_has_interactive_tag();
}
void PredictionObstacle::clear_feature() {
  feature_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionObstacle::kPerceptionObstacleFieldNumber;
const int PredictionObstacle::kTimestampFieldNumber;
const int PredictionObstacle::kPredictedPeriodFieldNumber;
const int PredictionObstacle::kTrajectoryFieldNumber;
const int PredictionObstacle::kIntentFieldNumber;
const int PredictionObstacle::kPriorityFieldNumber;
const int PredictionObstacle::kInteractiveTagFieldNumber;
const int PredictionObstacle::kIsStaticFieldNumber;
const int PredictionObstacle::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionObstacle::PredictionObstacle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_PredictionObstacle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionObstacle)
}
PredictionObstacle::PredictionObstacle(const PredictionObstacle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      trajectory_(from.trajectory_),
      feature_(from.feature_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_perception_obstacle()) {
    perception_obstacle_ = new ::apollo::perception::PerceptionObstacle(*from.perception_obstacle_);
  } else {
    perception_obstacle_ = NULL;
  }
  if (from.has_intent()) {
    intent_ = new ::apollo::prediction::ObstacleIntent(*from.intent_);
  } else {
    intent_ = NULL;
  }
  if (from.has_priority()) {
    priority_ = new ::apollo::prediction::ObstaclePriority(*from.priority_);
  } else {
    priority_ = NULL;
  }
  if (from.has_interactive_tag()) {
    interactive_tag_ = new ::apollo::prediction::ObstacleInteractiveTag(*from.interactive_tag_);
  } else {
    interactive_tag_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_static_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(is_static_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionObstacle)
}

void PredictionObstacle::SharedCtor() {
  ::memset(&perception_obstacle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_static_) -
      reinterpret_cast<char*>(&perception_obstacle_)) + sizeof(is_static_));
}

PredictionObstacle::~PredictionObstacle() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionObstacle)
  SharedDtor();
}

void PredictionObstacle::SharedDtor() {
  if (this != internal_default_instance()) delete perception_obstacle_;
  if (this != internal_default_instance()) delete intent_;
  if (this != internal_default_instance()) delete priority_;
  if (this != internal_default_instance()) delete interactive_tag_;
}

void PredictionObstacle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PredictionObstacle::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionObstacle& PredictionObstacle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_PredictionObstacle.base);
  return *internal_default_instance();
}


void PredictionObstacle::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trajectory_.Clear();
  feature_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(perception_obstacle_ != NULL);
      perception_obstacle_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(intent_ != NULL);
      intent_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(priority_ != NULL);
      priority_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(interactive_tag_ != NULL);
      interactive_tag_->Clear();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_static_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(is_static_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PredictionObstacle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.PredictionObstacle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_perception_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double predicted_period = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_predicted_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predicted_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.Trajectory trajectory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstacleIntent intent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstaclePriority priority = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_static = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_static();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_static_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.Feature feature = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstacleInteractiveTag interactive_tag = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interactive_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.PredictionObstacle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.PredictionObstacle)
  return false;
#undef DO_
}

void PredictionObstacle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.PredictionObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_perception_obstacle(), output);
  }

  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->timestamp(), output);
  }

  // optional double predicted_period = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->predicted_period(), output);
  }

  // repeated .apollo.prediction.Trajectory trajectory = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->trajectory(static_cast<int>(i)),
      output);
  }

  // optional .apollo.prediction.ObstacleIntent intent = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_intent(), output);
  }

  // optional .apollo.prediction.ObstaclePriority priority = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_priority(), output);
  }

  // optional bool is_static = 7 [default = false];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_static(), output);
  }

  // repeated .apollo.prediction.Feature feature = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->feature(static_cast<int>(i)),
      output);
  }

  // optional .apollo.prediction.ObstacleInteractiveTag interactive_tag = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_interactive_tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.PredictionObstacle)
}

::google::protobuf::uint8* PredictionObstacle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_perception_obstacle(), deterministic, target);
  }

  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->timestamp(), target);
  }

  // optional double predicted_period = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->predicted_period(), target);
  }

  // repeated .apollo.prediction.Trajectory trajectory = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->trajectory(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.prediction.ObstacleIntent intent = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_intent(), deterministic, target);
  }

  // optional .apollo.prediction.ObstaclePriority priority = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_priority(), deterministic, target);
  }

  // optional bool is_static = 7 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_static(), target);
  }

  // repeated .apollo.prediction.Feature feature = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->feature(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.prediction.ObstacleInteractiveTag interactive_tag = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_interactive_tag(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionObstacle)
  return target;
}

size_t PredictionObstacle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionObstacle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.prediction.Trajectory trajectory = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->trajectory_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trajectory(static_cast<int>(i)));
    }
  }

  // repeated .apollo.prediction.Feature feature = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feature(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
    if (has_perception_obstacle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *perception_obstacle_);
    }

    // optional .apollo.prediction.ObstacleIntent intent = 5;
    if (has_intent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *intent_);
    }

    // optional .apollo.prediction.ObstaclePriority priority = 6;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *priority_);
    }

    // optional .apollo.prediction.ObstacleInteractiveTag interactive_tag = 9;
    if (has_interactive_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *interactive_tag_);
    }

    // optional double timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional double predicted_period = 3;
    if (has_predicted_period()) {
      total_size += 1 + 8;
    }

    // optional bool is_static = 7 [default = false];
    if (has_is_static()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionObstacle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionObstacle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionObstacle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionObstacle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionObstacle)
    MergeFrom(*source);
  }
}

void PredictionObstacle::MergeFrom(const PredictionObstacle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trajectory_.MergeFrom(from.trajectory_);
  feature_.MergeFrom(from.feature_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_perception_obstacle()->::apollo::perception::PerceptionObstacle::MergeFrom(from.perception_obstacle());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_intent()->::apollo::prediction::ObstacleIntent::MergeFrom(from.intent());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_priority()->::apollo::prediction::ObstaclePriority::MergeFrom(from.priority());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_interactive_tag()->::apollo::prediction::ObstacleInteractiveTag::MergeFrom(from.interactive_tag());
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      predicted_period_ = from.predicted_period_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_static_ = from.is_static_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PredictionObstacle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionObstacle::CopyFrom(const PredictionObstacle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionObstacle::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->feature())) return false;
  return true;
}

void PredictionObstacle::Swap(PredictionObstacle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionObstacle::InternalSwap(PredictionObstacle* other) {
  using std::swap;
  CastToBase(&trajectory_)->InternalSwap(CastToBase(&other->trajectory_));
  CastToBase(&feature_)->InternalSwap(CastToBase(&other->feature_));
  swap(perception_obstacle_, other->perception_obstacle_);
  swap(intent_, other->intent_);
  swap(priority_, other->priority_);
  swap(interactive_tag_, other->interactive_tag_);
  swap(timestamp_, other->timestamp_);
  swap(predicted_period_, other->predicted_period_);
  swap(is_static_, other->is_static_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PredictionObstacle::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionObstacles::InitAsDefaultInstance() {
  ::apollo::prediction::_PredictionObstacles_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  ::apollo::prediction::_PredictionObstacles_default_instance_._instance.get_mutable()->intent_ = const_cast< ::apollo::prediction::Intent*>(
      ::apollo::prediction::Intent::internal_default_instance());
  ::apollo::prediction::_PredictionObstacles_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::apollo::prediction::Scenario*>(
      ::apollo::prediction::Scenario::internal_default_instance());
}
void PredictionObstacles::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
void PredictionObstacles::clear_scenario() {
  if (scenario_ != NULL) scenario_->Clear();
  clear_has_scenario();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionObstacles::kHeaderFieldNumber;
const int PredictionObstacles::kPredictionObstacleFieldNumber;
const int PredictionObstacles::kPerceptionErrorCodeFieldNumber;
const int PredictionObstacles::kStartTimestampFieldNumber;
const int PredictionObstacles::kEndTimestampFieldNumber;
const int PredictionObstacles::kIntentFieldNumber;
const int PredictionObstacles::kScenarioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionObstacles::PredictionObstacles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_PredictionObstacles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionObstacles)
}
PredictionObstacles::PredictionObstacles(const PredictionObstacles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      prediction_obstacle_(from.prediction_obstacle_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_intent()) {
    intent_ = new ::apollo::prediction::Intent(*from.intent_);
  } else {
    intent_ = NULL;
  }
  if (from.has_scenario()) {
    scenario_ = new ::apollo::prediction::Scenario(*from.scenario_);
  } else {
    scenario_ = NULL;
  }
  ::memcpy(&start_timestamp_, &from.start_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&perception_error_code_) -
    reinterpret_cast<char*>(&start_timestamp_)) + sizeof(perception_error_code_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionObstacles)
}

void PredictionObstacles::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&perception_error_code_) -
      reinterpret_cast<char*>(&header_)) + sizeof(perception_error_code_));
}

PredictionObstacles::~PredictionObstacles() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionObstacles)
  SharedDtor();
}

void PredictionObstacles::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete intent_;
  if (this != internal_default_instance()) delete scenario_;
}

void PredictionObstacles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PredictionObstacles::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionObstacles& PredictionObstacles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::scc_info_PredictionObstacles.base);
  return *internal_default_instance();
}


void PredictionObstacles::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionObstacles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prediction_obstacle_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(intent_ != NULL);
      intent_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(scenario_ != NULL);
      scenario_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&start_timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&perception_error_code_) -
        reinterpret_cast<char*>(&start_timestamp_)) + sizeof(perception_error_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PredictionObstacles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.PredictionObstacles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_prediction_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.ErrorCode perception_error_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::ErrorCode_IsValid(value)) {
            set_perception_error_code(static_cast< ::apollo::common::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double start_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_start_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_end_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.Intent intent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.Scenario scenario = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scenario()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.PredictionObstacles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.PredictionObstacles)
  return false;
#undef DO_
}

void PredictionObstacles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.PredictionObstacles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_obstacle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->prediction_obstacle(static_cast<int>(i)),
      output);
  }

  // optional .apollo.common.ErrorCode perception_error_code = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->perception_error_code(), output);
  }

  // optional double start_timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->start_timestamp(), output);
  }

  // optional double end_timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->end_timestamp(), output);
  }

  // optional .apollo.prediction.Intent intent = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_intent(), output);
  }

  // optional .apollo.prediction.Scenario scenario = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_scenario(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.PredictionObstacles)
}

::google::protobuf::uint8* PredictionObstacles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionObstacles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_obstacle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->prediction_obstacle(static_cast<int>(i)), deterministic, target);
  }

  // optional .apollo.common.ErrorCode perception_error_code = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->perception_error_code(), target);
  }

  // optional double start_timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->start_timestamp(), target);
  }

  // optional double end_timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->end_timestamp(), target);
  }

  // optional .apollo.prediction.Intent intent = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_intent(), deterministic, target);
  }

  // optional .apollo.prediction.Scenario scenario = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_scenario(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionObstacles)
  return target;
}

size_t PredictionObstacles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionObstacles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->prediction_obstacle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prediction_obstacle(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional .apollo.prediction.Intent intent = 6;
    if (has_intent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *intent_);
    }

    // optional .apollo.prediction.Scenario scenario = 7;
    if (has_scenario()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scenario_);
    }

    // optional double start_timestamp = 4;
    if (has_start_timestamp()) {
      total_size += 1 + 8;
    }

    // optional double end_timestamp = 5;
    if (has_end_timestamp()) {
      total_size += 1 + 8;
    }

    // optional .apollo.common.ErrorCode perception_error_code = 3;
    if (has_perception_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->perception_error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionObstacles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionObstacles)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionObstacles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionObstacles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionObstacles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionObstacles)
    MergeFrom(*source);
  }
}

void PredictionObstacles::MergeFrom(const PredictionObstacles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionObstacles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prediction_obstacle_.MergeFrom(from.prediction_obstacle_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_intent()->::apollo::prediction::Intent::MergeFrom(from.intent());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_scenario()->::apollo::prediction::Scenario::MergeFrom(from.scenario());
    }
    if (cached_has_bits & 0x00000008u) {
      start_timestamp_ = from.start_timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      end_timestamp_ = from.end_timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      perception_error_code_ = from.perception_error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PredictionObstacles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionObstacles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionObstacles::CopyFrom(const PredictionObstacles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionObstacles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionObstacles::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->prediction_obstacle())) return false;
  return true;
}

void PredictionObstacles::Swap(PredictionObstacles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionObstacles::InternalSwap(PredictionObstacles* other) {
  using std::swap;
  CastToBase(&prediction_obstacle_)->InternalSwap(CastToBase(&other->prediction_obstacle_));
  swap(header_, other->header_);
  swap(intent_, other->intent_);
  swap(scenario_, other->scenario_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(end_timestamp_, other->end_timestamp_);
  swap(perception_error_code_, other->perception_error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PredictionObstacles::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::ObstacleIntent* Arena::CreateMaybeMessage< ::apollo::prediction::ObstacleIntent >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::ObstacleIntent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::Intent* Arena::CreateMaybeMessage< ::apollo::prediction::Intent >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::Intent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::PredictionObstacle* Arena::CreateMaybeMessage< ::apollo::prediction::PredictionObstacle >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::PredictionObstacle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::PredictionObstacles* Arena::CreateMaybeMessage< ::apollo::prediction::PredictionObstacles >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::PredictionObstacles >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

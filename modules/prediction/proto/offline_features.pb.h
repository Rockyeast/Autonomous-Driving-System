// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/offline_features.proto

#ifndef PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto
#define PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/pnc_point.pb.h"
#include "modules/prediction/proto/feature.pb.h"
#include "modules/prediction/proto/prediction_conf.pb.h"
#include "modules/prediction/proto/scenario.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto 

namespace protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto
namespace apollo {
namespace prediction {
class DataForLearning;
class DataForLearningDefaultTypeInternal;
extern DataForLearningDefaultTypeInternal _DataForLearning_default_instance_;
class DataForTuning;
class DataForTuningDefaultTypeInternal;
extern DataForTuningDefaultTypeInternal _DataForTuning_default_instance_;
class Features;
class FeaturesDefaultTypeInternal;
extern FeaturesDefaultTypeInternal _Features_default_instance_;
class ListDataForLearning;
class ListDataForLearningDefaultTypeInternal;
extern ListDataForLearningDefaultTypeInternal _ListDataForLearning_default_instance_;
class ListDataForTuning;
class ListDataForTuningDefaultTypeInternal;
extern ListDataForTuningDefaultTypeInternal _ListDataForTuning_default_instance_;
class ListFrameEnv;
class ListFrameEnvDefaultTypeInternal;
extern ListFrameEnvDefaultTypeInternal _ListFrameEnv_default_instance_;
class ListPredictionResult;
class ListPredictionResultDefaultTypeInternal;
extern ListPredictionResultDefaultTypeInternal _ListPredictionResult_default_instance_;
class PredictionResult;
class PredictionResultDefaultTypeInternal;
extern PredictionResultDefaultTypeInternal _PredictionResult_default_instance_;
}  // namespace prediction
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::prediction::DataForLearning* Arena::CreateMaybeMessage<::apollo::prediction::DataForLearning>(Arena*);
template<> ::apollo::prediction::DataForTuning* Arena::CreateMaybeMessage<::apollo::prediction::DataForTuning>(Arena*);
template<> ::apollo::prediction::Features* Arena::CreateMaybeMessage<::apollo::prediction::Features>(Arena*);
template<> ::apollo::prediction::ListDataForLearning* Arena::CreateMaybeMessage<::apollo::prediction::ListDataForLearning>(Arena*);
template<> ::apollo::prediction::ListDataForTuning* Arena::CreateMaybeMessage<::apollo::prediction::ListDataForTuning>(Arena*);
template<> ::apollo::prediction::ListFrameEnv* Arena::CreateMaybeMessage<::apollo::prediction::ListFrameEnv>(Arena*);
template<> ::apollo::prediction::ListPredictionResult* Arena::CreateMaybeMessage<::apollo::prediction::ListPredictionResult>(Arena*);
template<> ::apollo::prediction::PredictionResult* Arena::CreateMaybeMessage<::apollo::prediction::PredictionResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace prediction {

// ===================================================================

class DataForLearning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.DataForLearning) */ {
 public:
  DataForLearning();
  virtual ~DataForLearning();

  DataForLearning(const DataForLearning& from);

  inline DataForLearning& operator=(const DataForLearning& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataForLearning(DataForLearning&& from) noexcept
    : DataForLearning() {
    *this = ::std::move(from);
  }

  inline DataForLearning& operator=(DataForLearning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataForLearning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataForLearning* internal_default_instance() {
    return reinterpret_cast<const DataForLearning*>(
               &_DataForLearning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DataForLearning* other);
  friend void swap(DataForLearning& a, DataForLearning& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataForLearning* New() const final {
    return CreateMaybeMessage<DataForLearning>(NULL);
  }

  DataForLearning* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataForLearning>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataForLearning& from);
  void MergeFrom(const DataForLearning& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataForLearning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double features_for_learning = 3;
  int features_for_learning_size() const;
  void clear_features_for_learning();
  static const int kFeaturesForLearningFieldNumber = 3;
  double features_for_learning(int index) const;
  void set_features_for_learning(int index, double value);
  void add_features_for_learning(double value);
  const ::google::protobuf::RepeatedField< double >&
      features_for_learning() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_features_for_learning();

  // repeated double labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  double labels(int index) const;
  void set_labels(int index, double value);
  void add_labels(double value);
  const ::google::protobuf::RepeatedField< double >&
      labels() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_labels();

  // repeated string string_features_for_learning = 7;
  int string_features_for_learning_size() const;
  void clear_string_features_for_learning();
  static const int kStringFeaturesForLearningFieldNumber = 7;
  const ::std::string& string_features_for_learning(int index) const;
  ::std::string* mutable_string_features_for_learning(int index);
  void set_string_features_for_learning(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_string_features_for_learning(int index, ::std::string&& value);
  #endif
  void set_string_features_for_learning(int index, const char* value);
  void set_string_features_for_learning(int index, const char* value, size_t size);
  ::std::string* add_string_features_for_learning();
  void add_string_features_for_learning(const ::std::string& value);
  #if LANG_CXX11
  void add_string_features_for_learning(::std::string&& value);
  #endif
  void add_string_features_for_learning(const char* value);
  void add_string_features_for_learning(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_features_for_learning() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_features_for_learning();

  // optional string category = 5;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 5;
  const ::std::string& category() const;
  void set_category(const ::std::string& value);
  #if LANG_CXX11
  void set_category(::std::string&& value);
  #endif
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  ::std::string* mutable_category();
  ::std::string* release_category();
  void set_allocated_category(::std::string* category);

  // optional double timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 lane_sequence_id = 6;
  bool has_lane_sequence_id() const;
  void clear_lane_sequence_id();
  static const int kLaneSequenceIdFieldNumber = 6;
  ::google::protobuf::int32 lane_sequence_id() const;
  void set_lane_sequence_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.DataForLearning)
 private:
  void set_has_category();
  void clear_has_category();
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_lane_sequence_id();
  void clear_has_lane_sequence_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< double > features_for_learning_;
  ::google::protobuf::RepeatedField< double > labels_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_features_for_learning_;
  ::google::protobuf::internal::ArenaStringPtr category_;
  double timestamp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lane_sequence_id_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDataForLearning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListDataForLearning) */ {
 public:
  ListDataForLearning();
  virtual ~ListDataForLearning();

  ListDataForLearning(const ListDataForLearning& from);

  inline ListDataForLearning& operator=(const ListDataForLearning& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDataForLearning(ListDataForLearning&& from) noexcept
    : ListDataForLearning() {
    *this = ::std::move(from);
  }

  inline ListDataForLearning& operator=(ListDataForLearning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDataForLearning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDataForLearning* internal_default_instance() {
    return reinterpret_cast<const ListDataForLearning*>(
               &_ListDataForLearning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ListDataForLearning* other);
  friend void swap(ListDataForLearning& a, ListDataForLearning& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDataForLearning* New() const final {
    return CreateMaybeMessage<ListDataForLearning>(NULL);
  }

  ListDataForLearning* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDataForLearning>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDataForLearning& from);
  void MergeFrom(const ListDataForLearning& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDataForLearning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.DataForLearning data_for_learning = 1;
  int data_for_learning_size() const;
  void clear_data_for_learning();
  static const int kDataForLearningFieldNumber = 1;
  ::apollo::prediction::DataForLearning* mutable_data_for_learning(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForLearning >*
      mutable_data_for_learning();
  const ::apollo::prediction::DataForLearning& data_for_learning(int index) const;
  ::apollo::prediction::DataForLearning* add_data_for_learning();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForLearning >&
      data_for_learning() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListDataForLearning)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForLearning > data_for_learning_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PredictionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.PredictionResult) */ {
 public:
  PredictionResult();
  virtual ~PredictionResult();

  PredictionResult(const PredictionResult& from);

  inline PredictionResult& operator=(const PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionResult(PredictionResult&& from) noexcept
    : PredictionResult() {
    *this = ::std::move(from);
  }

  inline PredictionResult& operator=(PredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionResult* internal_default_instance() {
    return reinterpret_cast<const PredictionResult*>(
               &_PredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PredictionResult* other);
  friend void swap(PredictionResult& a, PredictionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionResult* New() const final {
    return CreateMaybeMessage<PredictionResult>(NULL);
  }

  PredictionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PredictionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PredictionResult& from);
  void MergeFrom(const PredictionResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.Trajectory trajectory = 3;
  int trajectory_size() const;
  void clear_trajectory();
  static const int kTrajectoryFieldNumber = 3;
  ::apollo::prediction::Trajectory* mutable_trajectory(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >*
      mutable_trajectory();
  const ::apollo::prediction::Trajectory& trajectory(int index) const;
  ::apollo::prediction::Trajectory* add_trajectory();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >&
      trajectory() const;

  // optional .apollo.prediction.ObstacleConf obstacle_conf = 4;
  bool has_obstacle_conf() const;
  void clear_obstacle_conf();
  static const int kObstacleConfFieldNumber = 4;
  private:
  const ::apollo::prediction::ObstacleConf& _internal_obstacle_conf() const;
  public:
  const ::apollo::prediction::ObstacleConf& obstacle_conf() const;
  ::apollo::prediction::ObstacleConf* release_obstacle_conf();
  ::apollo::prediction::ObstacleConf* mutable_obstacle_conf();
  void set_allocated_obstacle_conf(::apollo::prediction::ObstacleConf* obstacle_conf);

  // optional .apollo.prediction.Scenario scenario = 5;
  bool has_scenario() const;
  void clear_scenario();
  static const int kScenarioFieldNumber = 5;
  private:
  const ::apollo::prediction::Scenario& _internal_scenario() const;
  public:
  const ::apollo::prediction::Scenario& scenario() const;
  ::apollo::prediction::Scenario* release_scenario();
  ::apollo::prediction::Scenario* mutable_scenario();
  void set_allocated_scenario(::apollo::prediction::Scenario* scenario);

  // optional double timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.PredictionResult)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_obstacle_conf();
  void clear_has_obstacle_conf();
  void set_has_scenario();
  void clear_has_scenario();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory > trajectory_;
  ::apollo::prediction::ObstacleConf* obstacle_conf_;
  ::apollo::prediction::Scenario* scenario_;
  double timestamp_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListPredictionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListPredictionResult) */ {
 public:
  ListPredictionResult();
  virtual ~ListPredictionResult();

  ListPredictionResult(const ListPredictionResult& from);

  inline ListPredictionResult& operator=(const ListPredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListPredictionResult(ListPredictionResult&& from) noexcept
    : ListPredictionResult() {
    *this = ::std::move(from);
  }

  inline ListPredictionResult& operator=(ListPredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListPredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListPredictionResult* internal_default_instance() {
    return reinterpret_cast<const ListPredictionResult*>(
               &_ListPredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListPredictionResult* other);
  friend void swap(ListPredictionResult& a, ListPredictionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListPredictionResult* New() const final {
    return CreateMaybeMessage<ListPredictionResult>(NULL);
  }

  ListPredictionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListPredictionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListPredictionResult& from);
  void MergeFrom(const ListPredictionResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListPredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.PredictionResult prediction_result = 1;
  int prediction_result_size() const;
  void clear_prediction_result();
  static const int kPredictionResultFieldNumber = 1;
  ::apollo::prediction::PredictionResult* mutable_prediction_result(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionResult >*
      mutable_prediction_result();
  const ::apollo::prediction::PredictionResult& prediction_result(int index) const;
  ::apollo::prediction::PredictionResult* add_prediction_result();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionResult >&
      prediction_result() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListPredictionResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionResult > prediction_result_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFrameEnv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListFrameEnv) */ {
 public:
  ListFrameEnv();
  virtual ~ListFrameEnv();

  ListFrameEnv(const ListFrameEnv& from);

  inline ListFrameEnv& operator=(const ListFrameEnv& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFrameEnv(ListFrameEnv&& from) noexcept
    : ListFrameEnv() {
    *this = ::std::move(from);
  }

  inline ListFrameEnv& operator=(ListFrameEnv&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFrameEnv& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFrameEnv* internal_default_instance() {
    return reinterpret_cast<const ListFrameEnv*>(
               &_ListFrameEnv_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ListFrameEnv* other);
  friend void swap(ListFrameEnv& a, ListFrameEnv& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFrameEnv* New() const final {
    return CreateMaybeMessage<ListFrameEnv>(NULL);
  }

  ListFrameEnv* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFrameEnv>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFrameEnv& from);
  void MergeFrom(const ListFrameEnv& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFrameEnv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.FrameEnv frame_env = 1;
  int frame_env_size() const;
  void clear_frame_env();
  static const int kFrameEnvFieldNumber = 1;
  ::apollo::prediction::FrameEnv* mutable_frame_env(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::FrameEnv >*
      mutable_frame_env();
  const ::apollo::prediction::FrameEnv& frame_env(int index) const;
  ::apollo::prediction::FrameEnv* add_frame_env();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::FrameEnv >&
      frame_env() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListFrameEnv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::FrameEnv > frame_env_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataForTuning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.DataForTuning) */ {
 public:
  DataForTuning();
  virtual ~DataForTuning();

  DataForTuning(const DataForTuning& from);

  inline DataForTuning& operator=(const DataForTuning& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataForTuning(DataForTuning&& from) noexcept
    : DataForTuning() {
    *this = ::std::move(from);
  }

  inline DataForTuning& operator=(DataForTuning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataForTuning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataForTuning* internal_default_instance() {
    return reinterpret_cast<const DataForTuning*>(
               &_DataForTuning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DataForTuning* other);
  friend void swap(DataForTuning& a, DataForTuning& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataForTuning* New() const final {
    return CreateMaybeMessage<DataForTuning>(NULL);
  }

  DataForTuning* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataForTuning>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataForTuning& from);
  void MergeFrom(const DataForTuning& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataForTuning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double values_for_tuning = 4;
  int values_for_tuning_size() const;
  void clear_values_for_tuning();
  static const int kValuesForTuningFieldNumber = 4;
  double values_for_tuning(int index) const;
  void set_values_for_tuning(int index, double value);
  void add_values_for_tuning(double value);
  const ::google::protobuf::RepeatedField< double >&
      values_for_tuning() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values_for_tuning();

  // repeated double real_cost_value = 5;
  int real_cost_value_size() const;
  void clear_real_cost_value();
  static const int kRealCostValueFieldNumber = 5;
  double real_cost_value(int index) const;
  void set_real_cost_value(int index, double value);
  void add_real_cost_value(double value);
  const ::google::protobuf::RepeatedField< double >&
      real_cost_value() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_real_cost_value();

  // repeated .apollo.common.TrajectoryPoint adc_trajectory_point = 7;
  int adc_trajectory_point_size() const;
  void clear_adc_trajectory_point();
  static const int kAdcTrajectoryPointFieldNumber = 7;
  ::apollo::common::TrajectoryPoint* mutable_adc_trajectory_point(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::common::TrajectoryPoint >*
      mutable_adc_trajectory_point();
  const ::apollo::common::TrajectoryPoint& adc_trajectory_point(int index) const;
  ::apollo::common::TrajectoryPoint* add_adc_trajectory_point();
  const ::google::protobuf::RepeatedPtrField< ::apollo::common::TrajectoryPoint >&
      adc_trajectory_point() const;

  // optional string category = 1;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  const ::std::string& category() const;
  void set_category(const ::std::string& value);
  #if LANG_CXX11
  void set_category(::std::string&& value);
  #endif
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  ::std::string* mutable_category();
  ::std::string* release_category();
  void set_allocated_category(::std::string* category);

  // optional double timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  double timestamp() const;
  void set_timestamp(double value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 lane_sequence_id = 6;
  bool has_lane_sequence_id() const;
  void clear_lane_sequence_id();
  static const int kLaneSequenceIdFieldNumber = 6;
  ::google::protobuf::int32 lane_sequence_id() const;
  void set_lane_sequence_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.DataForTuning)
 private:
  void set_has_category();
  void clear_has_category();
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_lane_sequence_id();
  void clear_has_lane_sequence_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< double > values_for_tuning_;
  ::google::protobuf::RepeatedField< double > real_cost_value_;
  ::google::protobuf::RepeatedPtrField< ::apollo::common::TrajectoryPoint > adc_trajectory_point_;
  ::google::protobuf::internal::ArenaStringPtr category_;
  double timestamp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lane_sequence_id_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDataForTuning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListDataForTuning) */ {
 public:
  ListDataForTuning();
  virtual ~ListDataForTuning();

  ListDataForTuning(const ListDataForTuning& from);

  inline ListDataForTuning& operator=(const ListDataForTuning& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDataForTuning(ListDataForTuning&& from) noexcept
    : ListDataForTuning() {
    *this = ::std::move(from);
  }

  inline ListDataForTuning& operator=(ListDataForTuning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDataForTuning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDataForTuning* internal_default_instance() {
    return reinterpret_cast<const ListDataForTuning*>(
               &_ListDataForTuning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ListDataForTuning* other);
  friend void swap(ListDataForTuning& a, ListDataForTuning& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDataForTuning* New() const final {
    return CreateMaybeMessage<ListDataForTuning>(NULL);
  }

  ListDataForTuning* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDataForTuning>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDataForTuning& from);
  void MergeFrom(const ListDataForTuning& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDataForTuning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.DataForTuning data_for_tuning = 1;
  int data_for_tuning_size() const;
  void clear_data_for_tuning();
  static const int kDataForTuningFieldNumber = 1;
  ::apollo::prediction::DataForTuning* mutable_data_for_tuning(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForTuning >*
      mutable_data_for_tuning();
  const ::apollo::prediction::DataForTuning& data_for_tuning(int index) const;
  ::apollo::prediction::DataForTuning* add_data_for_tuning();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForTuning >&
      data_for_tuning() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListDataForTuning)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForTuning > data_for_tuning_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Features : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.Features) */ {
 public:
  Features();
  virtual ~Features();

  Features(const Features& from);

  inline Features& operator=(const Features& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Features(Features&& from) noexcept
    : Features() {
    *this = ::std::move(from);
  }

  inline Features& operator=(Features&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Features& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Features* internal_default_instance() {
    return reinterpret_cast<const Features*>(
               &_Features_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Features* other);
  friend void swap(Features& a, Features& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Features* New() const final {
    return CreateMaybeMessage<Features>(NULL);
  }

  Features* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Features>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Features& from);
  void MergeFrom(const Features& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Features* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.Feature feature = 1;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 1;
  ::apollo::prediction::Feature* mutable_feature(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature >*
      mutable_feature();
  const ::apollo::prediction::Feature& feature(int index) const;
  ::apollo::prediction::Feature* add_feature();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature >&
      feature() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.Features)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature > feature_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataForLearning

// optional string category = 5;
inline bool DataForLearning::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataForLearning::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataForLearning::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataForLearning::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category();
}
inline const ::std::string& DataForLearning::category() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.category)
  return category_.GetNoArena();
}
inline void DataForLearning::set_category(const ::std::string& value) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.category)
}
#if LANG_CXX11
inline void DataForLearning::set_category(::std::string&& value) {
  set_has_category();
  category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.DataForLearning.category)
}
#endif
inline void DataForLearning::set_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DataForLearning.category)
}
inline void DataForLearning::set_category(const char* value, size_t size) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DataForLearning.category)
}
inline ::std::string* DataForLearning::mutable_category() {
  set_has_category();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForLearning.category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataForLearning::release_category() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DataForLearning.category)
  if (!has_category()) {
    return NULL;
  }
  clear_has_category();
  return category_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataForLearning::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    set_has_category();
  } else {
    clear_has_category();
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DataForLearning.category)
}

// optional int32 id = 1;
inline bool DataForLearning::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataForLearning::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataForLearning::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataForLearning::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DataForLearning::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.id)
  return id_;
}
inline void DataForLearning::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.id)
}

// optional double timestamp = 2;
inline bool DataForLearning::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataForLearning::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataForLearning::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataForLearning::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double DataForLearning::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.timestamp)
  return timestamp_;
}
inline void DataForLearning::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.timestamp)
}

// repeated double features_for_learning = 3;
inline int DataForLearning::features_for_learning_size() const {
  return features_for_learning_.size();
}
inline void DataForLearning::clear_features_for_learning() {
  features_for_learning_.Clear();
}
inline double DataForLearning::features_for_learning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.features_for_learning)
  return features_for_learning_.Get(index);
}
inline void DataForLearning::set_features_for_learning(int index, double value) {
  features_for_learning_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.features_for_learning)
}
inline void DataForLearning::add_features_for_learning(double value) {
  features_for_learning_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.features_for_learning)
}
inline const ::google::protobuf::RepeatedField< double >&
DataForLearning::features_for_learning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForLearning.features_for_learning)
  return features_for_learning_;
}
inline ::google::protobuf::RepeatedField< double >*
DataForLearning::mutable_features_for_learning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForLearning.features_for_learning)
  return &features_for_learning_;
}

// repeated string string_features_for_learning = 7;
inline int DataForLearning::string_features_for_learning_size() const {
  return string_features_for_learning_.size();
}
inline void DataForLearning::clear_string_features_for_learning() {
  string_features_for_learning_.Clear();
}
inline const ::std::string& DataForLearning::string_features_for_learning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.string_features_for_learning)
  return string_features_for_learning_.Get(index);
}
inline ::std::string* DataForLearning::mutable_string_features_for_learning(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForLearning.string_features_for_learning)
  return string_features_for_learning_.Mutable(index);
}
inline void DataForLearning::set_string_features_for_learning(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.string_features_for_learning)
  string_features_for_learning_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DataForLearning::set_string_features_for_learning(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.string_features_for_learning)
  string_features_for_learning_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DataForLearning::set_string_features_for_learning(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_features_for_learning_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline void DataForLearning::set_string_features_for_learning(int index, const char* value, size_t size) {
  string_features_for_learning_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline ::std::string* DataForLearning::add_string_features_for_learning() {
  // @@protoc_insertion_point(field_add_mutable:apollo.prediction.DataForLearning.string_features_for_learning)
  return string_features_for_learning_.Add();
}
inline void DataForLearning::add_string_features_for_learning(const ::std::string& value) {
  string_features_for_learning_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.string_features_for_learning)
}
#if LANG_CXX11
inline void DataForLearning::add_string_features_for_learning(::std::string&& value) {
  string_features_for_learning_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.string_features_for_learning)
}
#endif
inline void DataForLearning::add_string_features_for_learning(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_features_for_learning_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline void DataForLearning::add_string_features_for_learning(const char* value, size_t size) {
  string_features_for_learning_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DataForLearning::string_features_for_learning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForLearning.string_features_for_learning)
  return string_features_for_learning_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DataForLearning::mutable_string_features_for_learning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForLearning.string_features_for_learning)
  return &string_features_for_learning_;
}

// repeated double labels = 4;
inline int DataForLearning::labels_size() const {
  return labels_.size();
}
inline void DataForLearning::clear_labels() {
  labels_.Clear();
}
inline double DataForLearning::labels(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.labels)
  return labels_.Get(index);
}
inline void DataForLearning::set_labels(int index, double value) {
  labels_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.labels)
}
inline void DataForLearning::add_labels(double value) {
  labels_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.labels)
}
inline const ::google::protobuf::RepeatedField< double >&
DataForLearning::labels() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForLearning.labels)
  return labels_;
}
inline ::google::protobuf::RepeatedField< double >*
DataForLearning::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForLearning.labels)
  return &labels_;
}

// optional int32 lane_sequence_id = 6;
inline bool DataForLearning::has_lane_sequence_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataForLearning::set_has_lane_sequence_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataForLearning::clear_has_lane_sequence_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataForLearning::clear_lane_sequence_id() {
  lane_sequence_id_ = 0;
  clear_has_lane_sequence_id();
}
inline ::google::protobuf::int32 DataForLearning::lane_sequence_id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.lane_sequence_id)
  return lane_sequence_id_;
}
inline void DataForLearning::set_lane_sequence_id(::google::protobuf::int32 value) {
  set_has_lane_sequence_id();
  lane_sequence_id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.lane_sequence_id)
}

// -------------------------------------------------------------------

// ListDataForLearning

// repeated .apollo.prediction.DataForLearning data_for_learning = 1;
inline int ListDataForLearning::data_for_learning_size() const {
  return data_for_learning_.size();
}
inline void ListDataForLearning::clear_data_for_learning() {
  data_for_learning_.Clear();
}
inline ::apollo::prediction::DataForLearning* ListDataForLearning::mutable_data_for_learning(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListDataForLearning.data_for_learning)
  return data_for_learning_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForLearning >*
ListDataForLearning::mutable_data_for_learning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListDataForLearning.data_for_learning)
  return &data_for_learning_;
}
inline const ::apollo::prediction::DataForLearning& ListDataForLearning::data_for_learning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListDataForLearning.data_for_learning)
  return data_for_learning_.Get(index);
}
inline ::apollo::prediction::DataForLearning* ListDataForLearning::add_data_for_learning() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListDataForLearning.data_for_learning)
  return data_for_learning_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForLearning >&
ListDataForLearning::data_for_learning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListDataForLearning.data_for_learning)
  return data_for_learning_;
}

// -------------------------------------------------------------------

// PredictionResult

// optional int32 id = 1;
inline bool PredictionResult::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PredictionResult::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PredictionResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PredictionResult::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PredictionResult::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.id)
  return id_;
}
inline void PredictionResult::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionResult.id)
}

// optional double timestamp = 2;
inline bool PredictionResult::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PredictionResult::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PredictionResult::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PredictionResult::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double PredictionResult::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.timestamp)
  return timestamp_;
}
inline void PredictionResult::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionResult.timestamp)
}

// repeated .apollo.prediction.Trajectory trajectory = 3;
inline int PredictionResult::trajectory_size() const {
  return trajectory_.size();
}
inline ::apollo::prediction::Trajectory* PredictionResult::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionResult.trajectory)
  return trajectory_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >*
PredictionResult::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionResult.trajectory)
  return &trajectory_;
}
inline const ::apollo::prediction::Trajectory& PredictionResult::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.trajectory)
  return trajectory_.Get(index);
}
inline ::apollo::prediction::Trajectory* PredictionResult::add_trajectory() {
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionResult.trajectory)
  return trajectory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >&
PredictionResult::trajectory() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionResult.trajectory)
  return trajectory_;
}

// optional .apollo.prediction.ObstacleConf obstacle_conf = 4;
inline bool PredictionResult::has_obstacle_conf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PredictionResult::set_has_obstacle_conf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PredictionResult::clear_has_obstacle_conf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::apollo::prediction::ObstacleConf& PredictionResult::_internal_obstacle_conf() const {
  return *obstacle_conf_;
}
inline const ::apollo::prediction::ObstacleConf& PredictionResult::obstacle_conf() const {
  const ::apollo::prediction::ObstacleConf* p = obstacle_conf_;
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.obstacle_conf)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::prediction::ObstacleConf*>(
      &::apollo::prediction::_ObstacleConf_default_instance_);
}
inline ::apollo::prediction::ObstacleConf* PredictionResult::release_obstacle_conf() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionResult.obstacle_conf)
  clear_has_obstacle_conf();
  ::apollo::prediction::ObstacleConf* temp = obstacle_conf_;
  obstacle_conf_ = NULL;
  return temp;
}
inline ::apollo::prediction::ObstacleConf* PredictionResult::mutable_obstacle_conf() {
  set_has_obstacle_conf();
  if (obstacle_conf_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::prediction::ObstacleConf>(GetArenaNoVirtual());
    obstacle_conf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionResult.obstacle_conf)
  return obstacle_conf_;
}
inline void PredictionResult::set_allocated_obstacle_conf(::apollo::prediction::ObstacleConf* obstacle_conf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(obstacle_conf_);
  }
  if (obstacle_conf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      obstacle_conf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, obstacle_conf, submessage_arena);
    }
    set_has_obstacle_conf();
  } else {
    clear_has_obstacle_conf();
  }
  obstacle_conf_ = obstacle_conf;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionResult.obstacle_conf)
}

// optional .apollo.prediction.Scenario scenario = 5;
inline bool PredictionResult::has_scenario() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PredictionResult::set_has_scenario() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PredictionResult::clear_has_scenario() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::apollo::prediction::Scenario& PredictionResult::_internal_scenario() const {
  return *scenario_;
}
inline const ::apollo::prediction::Scenario& PredictionResult::scenario() const {
  const ::apollo::prediction::Scenario* p = scenario_;
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.scenario)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::prediction::Scenario*>(
      &::apollo::prediction::_Scenario_default_instance_);
}
inline ::apollo::prediction::Scenario* PredictionResult::release_scenario() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionResult.scenario)
  clear_has_scenario();
  ::apollo::prediction::Scenario* temp = scenario_;
  scenario_ = NULL;
  return temp;
}
inline ::apollo::prediction::Scenario* PredictionResult::mutable_scenario() {
  set_has_scenario();
  if (scenario_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::prediction::Scenario>(GetArenaNoVirtual());
    scenario_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionResult.scenario)
  return scenario_;
}
inline void PredictionResult::set_allocated_scenario(::apollo::prediction::Scenario* scenario) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scenario_);
  }
  if (scenario) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scenario = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scenario, submessage_arena);
    }
    set_has_scenario();
  } else {
    clear_has_scenario();
  }
  scenario_ = scenario;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionResult.scenario)
}

// -------------------------------------------------------------------

// ListPredictionResult

// repeated .apollo.prediction.PredictionResult prediction_result = 1;
inline int ListPredictionResult::prediction_result_size() const {
  return prediction_result_.size();
}
inline void ListPredictionResult::clear_prediction_result() {
  prediction_result_.Clear();
}
inline ::apollo::prediction::PredictionResult* ListPredictionResult::mutable_prediction_result(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListPredictionResult.prediction_result)
  return prediction_result_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionResult >*
ListPredictionResult::mutable_prediction_result() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListPredictionResult.prediction_result)
  return &prediction_result_;
}
inline const ::apollo::prediction::PredictionResult& ListPredictionResult::prediction_result(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListPredictionResult.prediction_result)
  return prediction_result_.Get(index);
}
inline ::apollo::prediction::PredictionResult* ListPredictionResult::add_prediction_result() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListPredictionResult.prediction_result)
  return prediction_result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionResult >&
ListPredictionResult::prediction_result() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListPredictionResult.prediction_result)
  return prediction_result_;
}

// -------------------------------------------------------------------

// ListFrameEnv

// repeated .apollo.prediction.FrameEnv frame_env = 1;
inline int ListFrameEnv::frame_env_size() const {
  return frame_env_.size();
}
inline ::apollo::prediction::FrameEnv* ListFrameEnv::mutable_frame_env(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListFrameEnv.frame_env)
  return frame_env_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::FrameEnv >*
ListFrameEnv::mutable_frame_env() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListFrameEnv.frame_env)
  return &frame_env_;
}
inline const ::apollo::prediction::FrameEnv& ListFrameEnv::frame_env(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListFrameEnv.frame_env)
  return frame_env_.Get(index);
}
inline ::apollo::prediction::FrameEnv* ListFrameEnv::add_frame_env() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListFrameEnv.frame_env)
  return frame_env_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::FrameEnv >&
ListFrameEnv::frame_env() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListFrameEnv.frame_env)
  return frame_env_;
}

// -------------------------------------------------------------------

// DataForTuning

// optional string category = 1;
inline bool DataForTuning::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataForTuning::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataForTuning::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataForTuning::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category();
}
inline const ::std::string& DataForTuning::category() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.category)
  return category_.GetNoArena();
}
inline void DataForTuning::set_category(const ::std::string& value) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.category)
}
#if LANG_CXX11
inline void DataForTuning::set_category(::std::string&& value) {
  set_has_category();
  category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.DataForTuning.category)
}
#endif
inline void DataForTuning::set_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DataForTuning.category)
}
inline void DataForTuning::set_category(const char* value, size_t size) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DataForTuning.category)
}
inline ::std::string* DataForTuning::mutable_category() {
  set_has_category();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForTuning.category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataForTuning::release_category() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DataForTuning.category)
  if (!has_category()) {
    return NULL;
  }
  clear_has_category();
  return category_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataForTuning::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    set_has_category();
  } else {
    clear_has_category();
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DataForTuning.category)
}

// optional int32 id = 2;
inline bool DataForTuning::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataForTuning::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataForTuning::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataForTuning::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DataForTuning::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.id)
  return id_;
}
inline void DataForTuning::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.id)
}

// optional double timestamp = 3;
inline bool DataForTuning::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataForTuning::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataForTuning::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataForTuning::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double DataForTuning::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.timestamp)
  return timestamp_;
}
inline void DataForTuning::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.timestamp)
}

// repeated double values_for_tuning = 4;
inline int DataForTuning::values_for_tuning_size() const {
  return values_for_tuning_.size();
}
inline void DataForTuning::clear_values_for_tuning() {
  values_for_tuning_.Clear();
}
inline double DataForTuning::values_for_tuning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.values_for_tuning)
  return values_for_tuning_.Get(index);
}
inline void DataForTuning::set_values_for_tuning(int index, double value) {
  values_for_tuning_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.values_for_tuning)
}
inline void DataForTuning::add_values_for_tuning(double value) {
  values_for_tuning_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForTuning.values_for_tuning)
}
inline const ::google::protobuf::RepeatedField< double >&
DataForTuning::values_for_tuning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForTuning.values_for_tuning)
  return values_for_tuning_;
}
inline ::google::protobuf::RepeatedField< double >*
DataForTuning::mutable_values_for_tuning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForTuning.values_for_tuning)
  return &values_for_tuning_;
}

// repeated double real_cost_value = 5;
inline int DataForTuning::real_cost_value_size() const {
  return real_cost_value_.size();
}
inline void DataForTuning::clear_real_cost_value() {
  real_cost_value_.Clear();
}
inline double DataForTuning::real_cost_value(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.real_cost_value)
  return real_cost_value_.Get(index);
}
inline void DataForTuning::set_real_cost_value(int index, double value) {
  real_cost_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.real_cost_value)
}
inline void DataForTuning::add_real_cost_value(double value) {
  real_cost_value_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForTuning.real_cost_value)
}
inline const ::google::protobuf::RepeatedField< double >&
DataForTuning::real_cost_value() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForTuning.real_cost_value)
  return real_cost_value_;
}
inline ::google::protobuf::RepeatedField< double >*
DataForTuning::mutable_real_cost_value() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForTuning.real_cost_value)
  return &real_cost_value_;
}

// optional int32 lane_sequence_id = 6;
inline bool DataForTuning::has_lane_sequence_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataForTuning::set_has_lane_sequence_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataForTuning::clear_has_lane_sequence_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataForTuning::clear_lane_sequence_id() {
  lane_sequence_id_ = 0;
  clear_has_lane_sequence_id();
}
inline ::google::protobuf::int32 DataForTuning::lane_sequence_id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.lane_sequence_id)
  return lane_sequence_id_;
}
inline void DataForTuning::set_lane_sequence_id(::google::protobuf::int32 value) {
  set_has_lane_sequence_id();
  lane_sequence_id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.lane_sequence_id)
}

// repeated .apollo.common.TrajectoryPoint adc_trajectory_point = 7;
inline int DataForTuning::adc_trajectory_point_size() const {
  return adc_trajectory_point_.size();
}
inline ::apollo::common::TrajectoryPoint* DataForTuning::mutable_adc_trajectory_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForTuning.adc_trajectory_point)
  return adc_trajectory_point_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::common::TrajectoryPoint >*
DataForTuning::mutable_adc_trajectory_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForTuning.adc_trajectory_point)
  return &adc_trajectory_point_;
}
inline const ::apollo::common::TrajectoryPoint& DataForTuning::adc_trajectory_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.adc_trajectory_point)
  return adc_trajectory_point_.Get(index);
}
inline ::apollo::common::TrajectoryPoint* DataForTuning::add_adc_trajectory_point() {
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForTuning.adc_trajectory_point)
  return adc_trajectory_point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::common::TrajectoryPoint >&
DataForTuning::adc_trajectory_point() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForTuning.adc_trajectory_point)
  return adc_trajectory_point_;
}

// -------------------------------------------------------------------

// ListDataForTuning

// repeated .apollo.prediction.DataForTuning data_for_tuning = 1;
inline int ListDataForTuning::data_for_tuning_size() const {
  return data_for_tuning_.size();
}
inline void ListDataForTuning::clear_data_for_tuning() {
  data_for_tuning_.Clear();
}
inline ::apollo::prediction::DataForTuning* ListDataForTuning::mutable_data_for_tuning(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListDataForTuning.data_for_tuning)
  return data_for_tuning_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForTuning >*
ListDataForTuning::mutable_data_for_tuning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListDataForTuning.data_for_tuning)
  return &data_for_tuning_;
}
inline const ::apollo::prediction::DataForTuning& ListDataForTuning::data_for_tuning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListDataForTuning.data_for_tuning)
  return data_for_tuning_.Get(index);
}
inline ::apollo::prediction::DataForTuning* ListDataForTuning::add_data_for_tuning() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListDataForTuning.data_for_tuning)
  return data_for_tuning_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::DataForTuning >&
ListDataForTuning::data_for_tuning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListDataForTuning.data_for_tuning)
  return data_for_tuning_;
}

// -------------------------------------------------------------------

// Features

// repeated .apollo.prediction.Feature feature = 1;
inline int Features::feature_size() const {
  return feature_.size();
}
inline ::apollo::prediction::Feature* Features::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Features.feature)
  return feature_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature >*
Features::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Features.feature)
  return &feature_;
}
inline const ::apollo::prediction::Feature& Features::feature(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Features.feature)
  return feature_.Get(index);
}
inline ::apollo::prediction::Feature* Features::add_feature() {
  // @@protoc_insertion_point(field_add:apollo.prediction.Features.feature)
  return feature_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature >&
Features::feature() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Features.feature)
  return feature_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_conf.proto

#include "modules/prediction/proto/prediction_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObstacleConf;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopicConf;
}  // namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto
namespace apollo {
namespace prediction {
class ObstacleConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObstacleConf>
      _instance;
} _ObstacleConf_default_instance_;
class TopicConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicConf>
      _instance;
} _TopicConf_default_instance_;
class PredictionConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionConf>
      _instance;
} _PredictionConf_default_instance_;
}  // namespace prediction
}  // namespace apollo
namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto {
static void InitDefaultsObstacleConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_ObstacleConf_default_instance_;
    new (ptr) ::apollo::prediction::ObstacleConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::ObstacleConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObstacleConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObstacleConf}, {}};

static void InitDefaultsTopicConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_TopicConf_default_instance_;
    new (ptr) ::apollo::prediction::TopicConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::TopicConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopicConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopicConf}, {}};

static void InitDefaultsPredictionConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_PredictionConf_default_instance_;
    new (ptr) ::apollo::prediction::PredictionConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::PredictionConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PredictionConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPredictionConf}, {
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_TopicConf.base,
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_ObstacleConf.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ObstacleConf.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicConf.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PredictionConf.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, obstacle_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, obstacle_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, priority_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, interactive_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, evaluator_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::ObstacleConf, predictor_type_),
  0,
  4,
  5,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, adccontainer_topic_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, container_topic_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, evaluator_topic_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, localization_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, perception_obstacle_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, perception_obstacles_topic_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, planning_trajectory_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, prediction_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::TopicConf, storytelling_topic_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionConf, topic_conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::prediction::PredictionConf, obstacle_conf_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::apollo::prediction::ObstacleConf)},
  { 17, 31, sizeof(::apollo::prediction::TopicConf)},
  { 40, 47, sizeof(::apollo::prediction::PredictionConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_ObstacleConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_TopicConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::prediction::_PredictionConf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/prediction/proto/prediction_conf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.modules/prediction/proto/prediction_co"
      "nf.proto\022\021apollo.prediction\0322modules/per"
      "ception/proto/perception_obstacle.proto\032"
      "&modules/prediction/proto/feature.proto\""
      "\256\t\n\014ObstacleConf\022A\n\robstacle_type\030\001 \001(\0162"
      "*.apollo.perception.PerceptionObstacle.T"
      "ype\022S\n\017obstacle_status\030\002 \001(\0162..apollo.pr"
      "ediction.ObstacleConf.ObstacleStatus:\nST"
      "ATIONARY\022C\n\rpriority_type\030\005 \001(\0162,.apollo"
      ".prediction.ObstaclePriority.Priority\022Q\n"
      "\017interactive_tag\030\006 \001(\01628.apollo.predicti"
      "on.ObstacleInteractiveTag.InteractiveTag"
      "\022E\n\016evaluator_type\030\003 \001(\0162-.apollo.predic"
      "tion.ObstacleConf.EvaluatorType\022E\n\016predi"
      "ctor_type\030\004 \001(\0162-.apollo.prediction.Obst"
      "acleConf.PredictorType\"X\n\016ObstacleStatus"
      "\022\013\n\007ON_LANE\020\000\022\014\n\010OFF_LANE\020\001\022\016\n\nSTATIONAR"
      "Y\020\003\022\n\n\006MOVING\020\004\022\017\n\013IN_JUNCTION\020\005\"\204\003\n\rEva"
      "luatorType\022\021\n\rMLP_EVALUATOR\020\000\022\025\n\rRNN_EVA"
      "LUATOR\020\001\032\002\010\001\022\022\n\016COST_EVALUATOR\020\002\022\030\n\024CRUI"
      "SE_MLP_EVALUATOR\020\003\022\032\n\026JUNCTION_MLP_EVALU"
      "ATOR\020\004\022\037\n\033CYCLIST_KEEP_LANE_EVALUATOR\020\005\022"
      "\033\n\027LANE_SCANNING_EVALUATOR\020\006\022$\n PEDESTRI"
      "AN_INTERACTION_EVALUATOR\020\007\022\032\n\026JUNCTION_M"
      "AP_EVALUATOR\020\010\022\036\n\032LANE_AGGREGATING_EVALU"
      "ATOR\020\t\022\033\n\027SEMANTIC_LSTM_EVALUATOR\020\n\022)\n%J"
      "OINTLY_PREDICTION_PLANNING_EVALUATOR\020\013\022\027"
      "\n\023VECTORNET_EVALUATOR\020\014\"\376\001\n\rPredictorTyp"
      "e\022\033\n\027LANE_SEQUENCE_PREDICTOR\020\000\022\027\n\023FREE_M"
      "OVE_PREDICTOR\020\001\022\032\n\022REGIONAL_PREDICTOR\020\002\032"
      "\002\010\001\022\033\n\027MOVE_SEQUENCE_PREDICTOR\020\003\022\023\n\017EMPT"
      "Y_PREDICTOR\020\004\022\031\n\025SINGLE_LANE_PREDICTOR\020\005"
      "\022\026\n\022JUNCTION_PREDICTOR\020\006\022\033\n\027EXTRAPOLATIO"
      "N_PREDICTOR\020\007\022\031\n\025INTERACTION_PREDICTOR\020\010"
      "\"\251\002\n\tTopicConf\022\037\n\027adccontainer_topic_nam"
      "e\030\001 \001(\t\022\034\n\024container_topic_name\030\002 \001(\t\022\034\n"
      "\024evaluator_topic_name\030\003 \001(\t\022\032\n\022localizat"
      "ion_topic\030\004 \001(\t\022!\n\031perception_obstacle_t"
      "opic\030\005 \001(\t\022\'\n\037perception_obstacles_topic"
      "_name\030\006 \001(\t\022!\n\031planning_trajectory_topic"
      "\030\007 \001(\t\022\030\n\020prediction_topic\030\010 \001(\t\022\032\n\022stor"
      "ytelling_topic\030\t \001(\t\"z\n\016PredictionConf\0220"
      "\n\ntopic_conf\030\001 \001(\0132\034.apollo.prediction.T"
      "opicConf\0226\n\robstacle_conf\030\002 \003(\0132\037.apollo"
      ".prediction.ObstacleConf"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1784);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/prediction/proto/prediction_conf.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto::AddDescriptors();
  ::protobuf_modules_2fprediction_2fproto_2ffeature_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto
namespace apollo {
namespace prediction {
const ::google::protobuf::EnumDescriptor* ObstacleConf_ObstacleStatus_descriptor() {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_enum_descriptors[0];
}
bool ObstacleConf_ObstacleStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObstacleConf_ObstacleStatus ObstacleConf::ON_LANE;
const ObstacleConf_ObstacleStatus ObstacleConf::OFF_LANE;
const ObstacleConf_ObstacleStatus ObstacleConf::STATIONARY;
const ObstacleConf_ObstacleStatus ObstacleConf::MOVING;
const ObstacleConf_ObstacleStatus ObstacleConf::IN_JUNCTION;
const ObstacleConf_ObstacleStatus ObstacleConf::ObstacleStatus_MIN;
const ObstacleConf_ObstacleStatus ObstacleConf::ObstacleStatus_MAX;
const int ObstacleConf::ObstacleStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ObstacleConf_EvaluatorType_descriptor() {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_enum_descriptors[1];
}
bool ObstacleConf_EvaluatorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObstacleConf_EvaluatorType ObstacleConf::MLP_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::RNN_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::COST_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::CRUISE_MLP_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::JUNCTION_MLP_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::CYCLIST_KEEP_LANE_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::LANE_SCANNING_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::PEDESTRIAN_INTERACTION_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::JUNCTION_MAP_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::LANE_AGGREGATING_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::SEMANTIC_LSTM_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::JOINTLY_PREDICTION_PLANNING_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::VECTORNET_EVALUATOR;
const ObstacleConf_EvaluatorType ObstacleConf::EvaluatorType_MIN;
const ObstacleConf_EvaluatorType ObstacleConf::EvaluatorType_MAX;
const int ObstacleConf::EvaluatorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ObstacleConf_PredictorType_descriptor() {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_enum_descriptors[2];
}
bool ObstacleConf_PredictorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObstacleConf_PredictorType ObstacleConf::LANE_SEQUENCE_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::FREE_MOVE_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::REGIONAL_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::MOVE_SEQUENCE_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::EMPTY_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::SINGLE_LANE_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::JUNCTION_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::EXTRAPOLATION_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::INTERACTION_PREDICTOR;
const ObstacleConf_PredictorType ObstacleConf::PredictorType_MIN;
const ObstacleConf_PredictorType ObstacleConf::PredictorType_MAX;
const int ObstacleConf::PredictorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ObstacleConf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObstacleConf::kObstacleTypeFieldNumber;
const int ObstacleConf::kObstacleStatusFieldNumber;
const int ObstacleConf::kPriorityTypeFieldNumber;
const int ObstacleConf::kInteractiveTagFieldNumber;
const int ObstacleConf::kEvaluatorTypeFieldNumber;
const int ObstacleConf::kPredictorTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObstacleConf::ObstacleConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_ObstacleConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.ObstacleConf)
}
ObstacleConf::ObstacleConf(const ObstacleConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obstacle_type_, &from.obstacle_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_type_) -
    reinterpret_cast<char*>(&obstacle_type_)) + sizeof(priority_type_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ObstacleConf)
}

void ObstacleConf::SharedCtor() {
  ::memset(&obstacle_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&predictor_type_) -
      reinterpret_cast<char*>(&obstacle_type_)) + sizeof(predictor_type_));
  interactive_tag_ = 1;
  obstacle_status_ = 3;
  priority_type_ = 1;
}

ObstacleConf::~ObstacleConf() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ObstacleConf)
  SharedDtor();
}

void ObstacleConf::SharedDtor() {
}

void ObstacleConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObstacleConf::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObstacleConf& ObstacleConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_ObstacleConf.base);
  return *internal_default_instance();
}


void ObstacleConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ObstacleConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&obstacle_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&predictor_type_) -
        reinterpret_cast<char*>(&obstacle_type_)) + sizeof(predictor_type_));
    interactive_tag_ = 1;
    obstacle_status_ = 3;
    priority_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObstacleConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.ObstacleConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::perception::PerceptionObstacle_Type_IsValid(value)) {
            set_obstacle_type(static_cast< ::apollo::perception::PerceptionObstacle_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::ObstacleConf_ObstacleStatus_IsValid(value)) {
            set_obstacle_status(static_cast< ::apollo::prediction::ObstacleConf_ObstacleStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::ObstacleConf_EvaluatorType_IsValid(value)) {
            set_evaluator_type(static_cast< ::apollo::prediction::ObstacleConf_EvaluatorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::ObstacleConf_PredictorType_IsValid(value)) {
            set_predictor_type(static_cast< ::apollo::prediction::ObstacleConf_PredictorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::ObstaclePriority_Priority_IsValid(value)) {
            set_priority_type(static_cast< ::apollo::prediction::ObstaclePriority_Priority >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::ObstacleInteractiveTag_InteractiveTag_IsValid(value)) {
            set_interactive_tag(static_cast< ::apollo::prediction::ObstacleInteractiveTag_InteractiveTag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.ObstacleConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.ObstacleConf)
  return false;
#undef DO_
}

void ObstacleConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.ObstacleConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->obstacle_type(), output);
  }

  // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->obstacle_status(), output);
  }

  // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->evaluator_type(), output);
  }

  // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->predictor_type(), output);
  }

  // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->priority_type(), output);
  }

  // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->interactive_tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.ObstacleConf)
}

::google::protobuf::uint8* ObstacleConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ObstacleConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->obstacle_type(), target);
  }

  // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->obstacle_status(), target);
  }

  // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->evaluator_type(), target);
  }

  // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->predictor_type(), target);
  }

  // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->priority_type(), target);
  }

  // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->interactive_tag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ObstacleConf)
  return target;
}

size_t ObstacleConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ObstacleConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
    if (has_obstacle_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->obstacle_type());
    }

    // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
    if (has_evaluator_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->evaluator_type());
    }

    // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
    if (has_predictor_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->predictor_type());
    }

    // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
    if (has_interactive_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->interactive_tag());
    }

    // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
    if (has_obstacle_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->obstacle_status());
    }

    // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
    if (has_priority_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->priority_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObstacleConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.ObstacleConf)
  GOOGLE_DCHECK_NE(&from, this);
  const ObstacleConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObstacleConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.ObstacleConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.ObstacleConf)
    MergeFrom(*source);
  }
}

void ObstacleConf::MergeFrom(const ObstacleConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ObstacleConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      obstacle_type_ = from.obstacle_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      evaluator_type_ = from.evaluator_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      predictor_type_ = from.predictor_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      interactive_tag_ = from.interactive_tag_;
    }
    if (cached_has_bits & 0x00000010u) {
      obstacle_status_ = from.obstacle_status_;
    }
    if (cached_has_bits & 0x00000020u) {
      priority_type_ = from.priority_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObstacleConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.ObstacleConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObstacleConf::CopyFrom(const ObstacleConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ObstacleConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleConf::IsInitialized() const {
  return true;
}

void ObstacleConf::Swap(ObstacleConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObstacleConf::InternalSwap(ObstacleConf* other) {
  using std::swap;
  swap(obstacle_type_, other->obstacle_type_);
  swap(evaluator_type_, other->evaluator_type_);
  swap(predictor_type_, other->predictor_type_);
  swap(interactive_tag_, other->interactive_tag_);
  swap(obstacle_status_, other->obstacle_status_);
  swap(priority_type_, other->priority_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObstacleConf::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicConf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicConf::kAdccontainerTopicNameFieldNumber;
const int TopicConf::kContainerTopicNameFieldNumber;
const int TopicConf::kEvaluatorTopicNameFieldNumber;
const int TopicConf::kLocalizationTopicFieldNumber;
const int TopicConf::kPerceptionObstacleTopicFieldNumber;
const int TopicConf::kPerceptionObstaclesTopicNameFieldNumber;
const int TopicConf::kPlanningTrajectoryTopicFieldNumber;
const int TopicConf::kPredictionTopicFieldNumber;
const int TopicConf::kStorytellingTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicConf::TopicConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_TopicConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.TopicConf)
}
TopicConf::TopicConf(const TopicConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  adccontainer_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_adccontainer_topic_name()) {
    adccontainer_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adccontainer_topic_name_);
  }
  container_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_container_topic_name()) {
    container_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_topic_name_);
  }
  evaluator_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_evaluator_topic_name()) {
    evaluator_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.evaluator_topic_name_);
  }
  localization_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localization_topic()) {
    localization_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_topic_);
  }
  perception_obstacle_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_perception_obstacle_topic()) {
    perception_obstacle_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perception_obstacle_topic_);
  }
  perception_obstacles_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_perception_obstacles_topic_name()) {
    perception_obstacles_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perception_obstacles_topic_name_);
  }
  planning_trajectory_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_planning_trajectory_topic()) {
    planning_trajectory_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.planning_trajectory_topic_);
  }
  prediction_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prediction_topic()) {
    prediction_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prediction_topic_);
  }
  storytelling_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_storytelling_topic()) {
    storytelling_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storytelling_topic_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TopicConf)
}

void TopicConf::SharedCtor() {
  adccontainer_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  container_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  evaluator_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localization_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perception_obstacle_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perception_obstacles_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  planning_trajectory_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prediction_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storytelling_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TopicConf::~TopicConf() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TopicConf)
  SharedDtor();
}

void TopicConf::SharedDtor() {
  adccontainer_topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  container_topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  evaluator_topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localization_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perception_obstacle_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perception_obstacles_topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  planning_trajectory_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prediction_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storytelling_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopicConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicConf::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicConf& TopicConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_TopicConf.base);
  return *internal_default_instance();
}


void TopicConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TopicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      adccontainer_topic_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      container_topic_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      evaluator_topic_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      localization_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      perception_obstacle_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      perception_obstacles_topic_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      planning_trajectory_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      prediction_topic_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    storytelling_topic_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopicConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.TopicConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string adccontainer_topic_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adccontainer_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->adccontainer_topic_name().data(), static_cast<int>(this->adccontainer_topic_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.adccontainer_topic_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string container_topic_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->container_topic_name().data(), static_cast<int>(this->container_topic_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.container_topic_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string evaluator_topic_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_evaluator_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->evaluator_topic_name().data(), static_cast<int>(this->evaluator_topic_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.evaluator_topic_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localization_topic = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localization_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localization_topic().data(), static_cast<int>(this->localization_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.localization_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string perception_obstacle_topic = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perception_obstacle_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->perception_obstacle_topic().data(), static_cast<int>(this->perception_obstacle_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.perception_obstacle_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string perception_obstacles_topic_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perception_obstacles_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->perception_obstacles_topic_name().data(), static_cast<int>(this->perception_obstacles_topic_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.perception_obstacles_topic_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string planning_trajectory_topic = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_planning_trajectory_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->planning_trajectory_topic().data(), static_cast<int>(this->planning_trajectory_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.planning_trajectory_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string prediction_topic = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prediction_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prediction_topic().data(), static_cast<int>(this->prediction_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.prediction_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string storytelling_topic = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storytelling_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->storytelling_topic().data(), static_cast<int>(this->storytelling_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.TopicConf.storytelling_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.TopicConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.TopicConf)
  return false;
#undef DO_
}

void TopicConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.TopicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string adccontainer_topic_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->adccontainer_topic_name().data(), static_cast<int>(this->adccontainer_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.adccontainer_topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->adccontainer_topic_name(), output);
  }

  // optional string container_topic_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->container_topic_name().data(), static_cast<int>(this->container_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.container_topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->container_topic_name(), output);
  }

  // optional string evaluator_topic_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->evaluator_topic_name().data(), static_cast<int>(this->evaluator_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.evaluator_topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->evaluator_topic_name(), output);
  }

  // optional string localization_topic = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_topic().data(), static_cast<int>(this->localization_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.localization_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->localization_topic(), output);
  }

  // optional string perception_obstacle_topic = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->perception_obstacle_topic().data(), static_cast<int>(this->perception_obstacle_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.perception_obstacle_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->perception_obstacle_topic(), output);
  }

  // optional string perception_obstacles_topic_name = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->perception_obstacles_topic_name().data(), static_cast<int>(this->perception_obstacles_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.perception_obstacles_topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->perception_obstacles_topic_name(), output);
  }

  // optional string planning_trajectory_topic = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->planning_trajectory_topic().data(), static_cast<int>(this->planning_trajectory_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.planning_trajectory_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->planning_trajectory_topic(), output);
  }

  // optional string prediction_topic = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prediction_topic().data(), static_cast<int>(this->prediction_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.prediction_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->prediction_topic(), output);
  }

  // optional string storytelling_topic = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storytelling_topic().data(), static_cast<int>(this->storytelling_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.storytelling_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->storytelling_topic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.TopicConf)
}

::google::protobuf::uint8* TopicConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TopicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string adccontainer_topic_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->adccontainer_topic_name().data(), static_cast<int>(this->adccontainer_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.adccontainer_topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->adccontainer_topic_name(), target);
  }

  // optional string container_topic_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->container_topic_name().data(), static_cast<int>(this->container_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.container_topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->container_topic_name(), target);
  }

  // optional string evaluator_topic_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->evaluator_topic_name().data(), static_cast<int>(this->evaluator_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.evaluator_topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->evaluator_topic_name(), target);
  }

  // optional string localization_topic = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_topic().data(), static_cast<int>(this->localization_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.localization_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->localization_topic(), target);
  }

  // optional string perception_obstacle_topic = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->perception_obstacle_topic().data(), static_cast<int>(this->perception_obstacle_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.perception_obstacle_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->perception_obstacle_topic(), target);
  }

  // optional string perception_obstacles_topic_name = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->perception_obstacles_topic_name().data(), static_cast<int>(this->perception_obstacles_topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.perception_obstacles_topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->perception_obstacles_topic_name(), target);
  }

  // optional string planning_trajectory_topic = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->planning_trajectory_topic().data(), static_cast<int>(this->planning_trajectory_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.planning_trajectory_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->planning_trajectory_topic(), target);
  }

  // optional string prediction_topic = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prediction_topic().data(), static_cast<int>(this->prediction_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.prediction_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->prediction_topic(), target);
  }

  // optional string storytelling_topic = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storytelling_topic().data(), static_cast<int>(this->storytelling_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.storytelling_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->storytelling_topic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TopicConf)
  return target;
}

size_t TopicConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TopicConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string adccontainer_topic_name = 1;
    if (has_adccontainer_topic_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adccontainer_topic_name());
    }

    // optional string container_topic_name = 2;
    if (has_container_topic_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->container_topic_name());
    }

    // optional string evaluator_topic_name = 3;
    if (has_evaluator_topic_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->evaluator_topic_name());
    }

    // optional string localization_topic = 4;
    if (has_localization_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localization_topic());
    }

    // optional string perception_obstacle_topic = 5;
    if (has_perception_obstacle_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->perception_obstacle_topic());
    }

    // optional string perception_obstacles_topic_name = 6;
    if (has_perception_obstacles_topic_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->perception_obstacles_topic_name());
    }

    // optional string planning_trajectory_topic = 7;
    if (has_planning_trajectory_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->planning_trajectory_topic());
    }

    // optional string prediction_topic = 8;
    if (has_prediction_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prediction_topic());
    }

  }
  // optional string storytelling_topic = 9;
  if (has_storytelling_topic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storytelling_topic());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.TopicConf)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.TopicConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.TopicConf)
    MergeFrom(*source);
  }
}

void TopicConf::MergeFrom(const TopicConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TopicConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_adccontainer_topic_name();
      adccontainer_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adccontainer_topic_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_container_topic_name();
      container_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_topic_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_evaluator_topic_name();
      evaluator_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.evaluator_topic_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_localization_topic();
      localization_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_topic_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_perception_obstacle_topic();
      perception_obstacle_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perception_obstacle_topic_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_perception_obstacles_topic_name();
      perception_obstacles_topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perception_obstacles_topic_name_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_planning_trajectory_topic();
      planning_trajectory_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.planning_trajectory_topic_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_prediction_topic();
      prediction_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prediction_topic_);
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_has_storytelling_topic();
    storytelling_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storytelling_topic_);
  }
}

void TopicConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.TopicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicConf::CopyFrom(const TopicConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TopicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicConf::IsInitialized() const {
  return true;
}

void TopicConf::Swap(TopicConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicConf::InternalSwap(TopicConf* other) {
  using std::swap;
  adccontainer_topic_name_.Swap(&other->adccontainer_topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  container_topic_name_.Swap(&other->container_topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  evaluator_topic_name_.Swap(&other->evaluator_topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localization_topic_.Swap(&other->localization_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  perception_obstacle_topic_.Swap(&other->perception_obstacle_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  perception_obstacles_topic_name_.Swap(&other->perception_obstacles_topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  planning_trajectory_topic_.Swap(&other->planning_trajectory_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prediction_topic_.Swap(&other->prediction_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  storytelling_topic_.Swap(&other->storytelling_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicConf::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionConf::InitAsDefaultInstance() {
  ::apollo::prediction::_PredictionConf_default_instance_._instance.get_mutable()->topic_conf_ = const_cast< ::apollo::prediction::TopicConf*>(
      ::apollo::prediction::TopicConf::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionConf::kTopicConfFieldNumber;
const int PredictionConf::kObstacleConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionConf::PredictionConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_PredictionConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionConf)
}
PredictionConf::PredictionConf(const PredictionConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      obstacle_conf_(from.obstacle_conf_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_topic_conf()) {
    topic_conf_ = new ::apollo::prediction::TopicConf(*from.topic_conf_);
  } else {
    topic_conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionConf)
}

void PredictionConf::SharedCtor() {
  topic_conf_ = NULL;
}

PredictionConf::~PredictionConf() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionConf)
  SharedDtor();
}

void PredictionConf::SharedDtor() {
  if (this != internal_default_instance()) delete topic_conf_;
}

void PredictionConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PredictionConf::descriptor() {
  ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionConf& PredictionConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::scc_info_PredictionConf.base);
  return *internal_default_instance();
}


void PredictionConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obstacle_conf_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(topic_conf_ != NULL);
    topic_conf_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PredictionConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.PredictionConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.prediction.TopicConf topic_conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topic_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_obstacle_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.PredictionConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.PredictionConf)
  return false;
#undef DO_
}

void PredictionConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.PredictionConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.TopicConf topic_conf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_topic_conf(), output);
  }

  // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacle_conf_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->obstacle_conf(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.PredictionConf)
}

::google::protobuf::uint8* PredictionConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.TopicConf topic_conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_topic_conf(), deterministic, target);
  }

  // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacle_conf_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->obstacle_conf(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionConf)
  return target;
}

size_t PredictionConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->obstacle_conf_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->obstacle_conf(static_cast<int>(i)));
    }
  }

  // optional .apollo.prediction.TopicConf topic_conf = 1;
  if (has_topic_conf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *topic_conf_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionConf)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionConf)
    MergeFrom(*source);
  }
}

void PredictionConf::MergeFrom(const PredictionConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obstacle_conf_.MergeFrom(from.obstacle_conf_);
  if (from.has_topic_conf()) {
    mutable_topic_conf()->::apollo::prediction::TopicConf::MergeFrom(from.topic_conf());
  }
}

void PredictionConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionConf::CopyFrom(const PredictionConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionConf::IsInitialized() const {
  return true;
}

void PredictionConf::Swap(PredictionConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionConf::InternalSwap(PredictionConf* other) {
  using std::swap;
  CastToBase(&obstacle_conf_)->InternalSwap(CastToBase(&other->obstacle_conf_));
  swap(topic_conf_, other->topic_conf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PredictionConf::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::ObstacleConf* Arena::CreateMaybeMessage< ::apollo::prediction::ObstacleConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::ObstacleConf >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::TopicConf* Arena::CreateMaybeMessage< ::apollo::prediction::TopicConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::TopicConf >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::prediction::PredictionConf* Arena::CreateMaybeMessage< ::apollo::prediction::PredictionConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::PredictionConf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

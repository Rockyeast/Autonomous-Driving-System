// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/scenario.proto

#ifndef PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fscenario_2eproto
#define PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fscenario_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fprediction_2fproto_2fscenario_2eproto 

namespace protobuf_modules_2fprediction_2fproto_2fscenario_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fprediction_2fproto_2fscenario_2eproto
namespace apollo {
namespace prediction {
class Scenario;
class ScenarioDefaultTypeInternal;
extern ScenarioDefaultTypeInternal _Scenario_default_instance_;
}  // namespace prediction
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::prediction::Scenario* Arena::CreateMaybeMessage<::apollo::prediction::Scenario>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace prediction {

enum Scenario_Type {
  Scenario_Type_UNKNOWN = 0,
  Scenario_Type_CRUISE = 1000,
  Scenario_Type_CRUISE_URBAN = 1001,
  Scenario_Type_CRUISE_HIGHWAY = 1002,
  Scenario_Type_JUNCTION = 2000,
  Scenario_Type_JUNCTION_TRAFFIC_LIGHT = 2001,
  Scenario_Type_JUNCTION_STOP_SIGN = 2002
};
bool Scenario_Type_IsValid(int value);
const Scenario_Type Scenario_Type_Type_MIN = Scenario_Type_UNKNOWN;
const Scenario_Type Scenario_Type_Type_MAX = Scenario_Type_JUNCTION_STOP_SIGN;
const int Scenario_Type_Type_ARRAYSIZE = Scenario_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Scenario_Type_descriptor();
inline const ::std::string& Scenario_Type_Name(Scenario_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Scenario_Type_descriptor(), value);
}
inline bool Scenario_Type_Parse(
    const ::std::string& name, Scenario_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Scenario_Type>(
    Scenario_Type_descriptor(), name, value);
}
// ===================================================================

class Scenario : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.Scenario) */ {
 public:
  Scenario();
  virtual ~Scenario();

  Scenario(const Scenario& from);

  inline Scenario& operator=(const Scenario& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scenario(Scenario&& from) noexcept
    : Scenario() {
    *this = ::std::move(from);
  }

  inline Scenario& operator=(Scenario&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Scenario& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scenario* internal_default_instance() {
    return reinterpret_cast<const Scenario*>(
               &_Scenario_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Scenario* other);
  friend void swap(Scenario& a, Scenario& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scenario* New() const final {
    return CreateMaybeMessage<Scenario>(NULL);
  }

  Scenario* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Scenario>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Scenario& from);
  void MergeFrom(const Scenario& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Scenario* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Scenario_Type Type;
  static const Type UNKNOWN =
    Scenario_Type_UNKNOWN;
  static const Type CRUISE =
    Scenario_Type_CRUISE;
  static const Type CRUISE_URBAN =
    Scenario_Type_CRUISE_URBAN;
  static const Type CRUISE_HIGHWAY =
    Scenario_Type_CRUISE_HIGHWAY;
  static const Type JUNCTION =
    Scenario_Type_JUNCTION;
  static const Type JUNCTION_TRAFFIC_LIGHT =
    Scenario_Type_JUNCTION_TRAFFIC_LIGHT;
  static const Type JUNCTION_STOP_SIGN =
    Scenario_Type_JUNCTION_STOP_SIGN;
  static inline bool Type_IsValid(int value) {
    return Scenario_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Scenario_Type_Type_MIN;
  static const Type Type_MAX =
    Scenario_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Scenario_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Scenario_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Scenario_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Scenario_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string junction_id = 2;
  bool has_junction_id() const;
  void clear_junction_id();
  static const int kJunctionIdFieldNumber = 2;
  const ::std::string& junction_id() const;
  void set_junction_id(const ::std::string& value);
  #if LANG_CXX11
  void set_junction_id(::std::string&& value);
  #endif
  void set_junction_id(const char* value);
  void set_junction_id(const char* value, size_t size);
  ::std::string* mutable_junction_id();
  ::std::string* release_junction_id();
  void set_allocated_junction_id(::std::string* junction_id);

  // optional .apollo.prediction.Scenario.Type type = 1 [default = UNKNOWN];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::apollo::prediction::Scenario_Type type() const;
  void set_type(::apollo::prediction::Scenario_Type value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.Scenario)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_junction_id();
  void clear_has_junction_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr junction_id_;
  int type_;
  friend struct ::protobuf_modules_2fprediction_2fproto_2fscenario_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Scenario

// optional .apollo.prediction.Scenario.Type type = 1 [default = UNKNOWN];
inline bool Scenario::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Scenario::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Scenario::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Scenario::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::apollo::prediction::Scenario_Type Scenario::type() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Scenario.type)
  return static_cast< ::apollo::prediction::Scenario_Type >(type_);
}
inline void Scenario::set_type(::apollo::prediction::Scenario_Type value) {
  assert(::apollo::prediction::Scenario_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.Scenario.type)
}

// optional string junction_id = 2;
inline bool Scenario::has_junction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Scenario::set_has_junction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Scenario::clear_has_junction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Scenario::clear_junction_id() {
  junction_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_junction_id();
}
inline const ::std::string& Scenario::junction_id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Scenario.junction_id)
  return junction_id_.GetNoArena();
}
inline void Scenario::set_junction_id(const ::std::string& value) {
  set_has_junction_id();
  junction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Scenario.junction_id)
}
#if LANG_CXX11
inline void Scenario::set_junction_id(::std::string&& value) {
  set_has_junction_id();
  junction_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.Scenario.junction_id)
}
#endif
inline void Scenario::set_junction_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_junction_id();
  junction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.Scenario.junction_id)
}
inline void Scenario::set_junction_id(const char* value, size_t size) {
  set_has_junction_id();
  junction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.Scenario.junction_id)
}
inline ::std::string* Scenario::mutable_junction_id() {
  set_has_junction_id();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Scenario.junction_id)
  return junction_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scenario::release_junction_id() {
  // @@protoc_insertion_point(field_release:apollo.prediction.Scenario.junction_id)
  if (!has_junction_id()) {
    return NULL;
  }
  clear_has_junction_id();
  return junction_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scenario::set_allocated_junction_id(::std::string* junction_id) {
  if (junction_id != NULL) {
    set_has_junction_id();
  } else {
    clear_has_junction_id();
  }
  junction_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), junction_id);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.Scenario.junction_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::prediction::Scenario_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::prediction::Scenario_Type>() {
  return ::apollo::prediction::Scenario_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fscenario_2eproto

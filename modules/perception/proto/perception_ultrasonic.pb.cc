// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_ultrasonic.proto

#include "modules/perception/proto/perception_ultrasonic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3D;
}  // namespace protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto
namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpendingCollisionEdge;
}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto
namespace apollo {
namespace perception {
class ImpendingCollisionEdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpendingCollisionEdge>
      _instance;
} _ImpendingCollisionEdge_default_instance_;
class ImpendingCollisionEdgesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpendingCollisionEdges>
      _instance;
} _ImpendingCollisionEdges_default_instance_;
}  // namespace perception
}  // namespace apollo
namespace protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto {
static void InitDefaultsImpendingCollisionEdge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::_ImpendingCollisionEdge_default_instance_;
    new (ptr) ::apollo::perception::ImpendingCollisionEdge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::ImpendingCollisionEdge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpendingCollisionEdge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpendingCollisionEdge}, {
      &protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::scc_info_Point3D.base,}};

static void InitDefaultsImpendingCollisionEdges() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::_ImpendingCollisionEdges_default_instance_;
    new (ptr) ::apollo::perception::ImpendingCollisionEdges();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::ImpendingCollisionEdges::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ImpendingCollisionEdges =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsImpendingCollisionEdges}, {
      &protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::scc_info_ImpendingCollisionEdge.base,
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ImpendingCollisionEdge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpendingCollisionEdges.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, cone_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, tracking_time_),
  1,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, impending_collision_edge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, header_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::perception::ImpendingCollisionEdge)},
  { 13, 20, sizeof(::apollo::perception::ImpendingCollisionEdges)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::_ImpendingCollisionEdge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::_ImpendingCollisionEdges_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/perception/proto/perception_ultrasonic.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4modules/perception/proto/perception_ul"
      "trasonic.proto\022\021apollo.perception\032!modul"
      "es/common/proto/header.proto\032#modules/co"
      "mmon/proto/geometry.proto\"|\n\026ImpendingCo"
      "llisionEdge\022\n\n\002id\030\001 \001(\005\022\030\n\014cone_id_list\030"
      "\002 \003(\005B\002\030\001\022%\n\005point\030\003 \003(\0132\026.apollo.common"
      ".Point3D\022\025\n\rtracking_time\030\004 \001(\001\"\215\001\n\027Impe"
      "ndingCollisionEdges\022K\n\030impending_collisi"
      "on_edge\030\001 \003(\0132).apollo.perception.Impend"
      "ingCollisionEdge\022%\n\006header\030\002 \001(\0132\025.apoll"
      "o.common.Header"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 415);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/proto/perception_ultrasonic.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
  ::protobuf_modules_2fcommon_2fproto_2fgeometry_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto
namespace apollo {
namespace perception {

// ===================================================================

void ImpendingCollisionEdge::InitAsDefaultInstance() {
}
void ImpendingCollisionEdge::clear_point() {
  point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpendingCollisionEdge::kIdFieldNumber;
const int ImpendingCollisionEdge::kConeIdListFieldNumber;
const int ImpendingCollisionEdge::kPointFieldNumber;
const int ImpendingCollisionEdge::kTrackingTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpendingCollisionEdge::ImpendingCollisionEdge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::scc_info_ImpendingCollisionEdge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.ImpendingCollisionEdge)
}
ImpendingCollisionEdge::ImpendingCollisionEdge(const ImpendingCollisionEdge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cone_id_list_(from.cone_id_list_),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tracking_time_, &from.tracking_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&tracking_time_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.ImpendingCollisionEdge)
}

void ImpendingCollisionEdge::SharedCtor() {
  ::memset(&tracking_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&tracking_time_)) + sizeof(id_));
}

ImpendingCollisionEdge::~ImpendingCollisionEdge() {
  // @@protoc_insertion_point(destructor:apollo.perception.ImpendingCollisionEdge)
  SharedDtor();
}

void ImpendingCollisionEdge::SharedDtor() {
}

void ImpendingCollisionEdge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpendingCollisionEdge::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpendingCollisionEdge& ImpendingCollisionEdge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::scc_info_ImpendingCollisionEdge.base);
  return *internal_default_instance();
}


void ImpendingCollisionEdge::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.ImpendingCollisionEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cone_id_list_.Clear();
  point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tracking_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&tracking_time_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImpendingCollisionEdge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.ImpendingCollisionEdge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 cone_id_list = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_cone_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cone_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.Point3D point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double tracking_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_tracking_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tracking_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.ImpendingCollisionEdge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.ImpendingCollisionEdge)
  return false;
#undef DO_
}

void ImpendingCollisionEdge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.ImpendingCollisionEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated int32 cone_id_list = 2 [deprecated = true];
  for (int i = 0, n = this->cone_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->cone_id_list(i), output);
  }

  // repeated .apollo.common.Point3D point = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->point(static_cast<int>(i)),
      output);
  }

  // optional double tracking_time = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->tracking_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.ImpendingCollisionEdge)
}

::google::protobuf::uint8* ImpendingCollisionEdge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.ImpendingCollisionEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated int32 cone_id_list = 2 [deprecated = true];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->cone_id_list_, target);

  // repeated .apollo.common.Point3D point = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->point(static_cast<int>(i)), deterministic, target);
  }

  // optional double tracking_time = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->tracking_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.ImpendingCollisionEdge)
  return target;
}

size_t ImpendingCollisionEdge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.ImpendingCollisionEdge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 cone_id_list = 2 [deprecated = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cone_id_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cone_id_list_size());
    total_size += data_size;
  }

  // repeated .apollo.common.Point3D point = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional double tracking_time = 4;
    if (has_tracking_time()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpendingCollisionEdge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.ImpendingCollisionEdge)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpendingCollisionEdge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpendingCollisionEdge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.ImpendingCollisionEdge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.ImpendingCollisionEdge)
    MergeFrom(*source);
  }
}

void ImpendingCollisionEdge::MergeFrom(const ImpendingCollisionEdge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.ImpendingCollisionEdge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cone_id_list_.MergeFrom(from.cone_id_list_);
  point_.MergeFrom(from.point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tracking_time_ = from.tracking_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImpendingCollisionEdge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.ImpendingCollisionEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpendingCollisionEdge::CopyFrom(const ImpendingCollisionEdge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.ImpendingCollisionEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpendingCollisionEdge::IsInitialized() const {
  return true;
}

void ImpendingCollisionEdge::Swap(ImpendingCollisionEdge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpendingCollisionEdge::InternalSwap(ImpendingCollisionEdge* other) {
  using std::swap;
  cone_id_list_.InternalSwap(&other->cone_id_list_);
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  swap(tracking_time_, other->tracking_time_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpendingCollisionEdge::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpendingCollisionEdges::InitAsDefaultInstance() {
  ::apollo::perception::_ImpendingCollisionEdges_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
}
void ImpendingCollisionEdges::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpendingCollisionEdges::kImpendingCollisionEdgeFieldNumber;
const int ImpendingCollisionEdges::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpendingCollisionEdges::ImpendingCollisionEdges()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::scc_info_ImpendingCollisionEdges.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.ImpendingCollisionEdges)
}
ImpendingCollisionEdges::ImpendingCollisionEdges(const ImpendingCollisionEdges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      impending_collision_edge_(from.impending_collision_edge_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.ImpendingCollisionEdges)
}

void ImpendingCollisionEdges::SharedCtor() {
  header_ = NULL;
}

ImpendingCollisionEdges::~ImpendingCollisionEdges() {
  // @@protoc_insertion_point(destructor:apollo.perception.ImpendingCollisionEdges)
  SharedDtor();
}

void ImpendingCollisionEdges::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void ImpendingCollisionEdges::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpendingCollisionEdges::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpendingCollisionEdges& ImpendingCollisionEdges::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::scc_info_ImpendingCollisionEdges.base);
  return *internal_default_instance();
}


void ImpendingCollisionEdges::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.ImpendingCollisionEdges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  impending_collision_edge_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImpendingCollisionEdges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.ImpendingCollisionEdges)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_impending_collision_edge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.Header header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.ImpendingCollisionEdges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.ImpendingCollisionEdges)
  return false;
#undef DO_
}

void ImpendingCollisionEdges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.ImpendingCollisionEdges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->impending_collision_edge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->impending_collision_edge(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_header(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.ImpendingCollisionEdges)
}

::google::protobuf::uint8* ImpendingCollisionEdges::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.ImpendingCollisionEdges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->impending_collision_edge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->impending_collision_edge(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_header(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.ImpendingCollisionEdges)
  return target;
}

size_t ImpendingCollisionEdges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.ImpendingCollisionEdges)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->impending_collision_edge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->impending_collision_edge(static_cast<int>(i)));
    }
  }

  // optional .apollo.common.Header header = 2;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpendingCollisionEdges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.ImpendingCollisionEdges)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpendingCollisionEdges* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpendingCollisionEdges>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.ImpendingCollisionEdges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.ImpendingCollisionEdges)
    MergeFrom(*source);
  }
}

void ImpendingCollisionEdges::MergeFrom(const ImpendingCollisionEdges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.ImpendingCollisionEdges)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  impending_collision_edge_.MergeFrom(from.impending_collision_edge_);
  if (from.has_header()) {
    mutable_header()->::apollo::common::Header::MergeFrom(from.header());
  }
}

void ImpendingCollisionEdges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.ImpendingCollisionEdges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpendingCollisionEdges::CopyFrom(const ImpendingCollisionEdges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.ImpendingCollisionEdges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpendingCollisionEdges::IsInitialized() const {
  return true;
}

void ImpendingCollisionEdges::Swap(ImpendingCollisionEdges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpendingCollisionEdges::InternalSwap(ImpendingCollisionEdges* other) {
  using std::swap;
  CastToBase(&impending_collision_edge_)->InternalSwap(CastToBase(&other->impending_collision_edge_));
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpendingCollisionEdges::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::ImpendingCollisionEdge* Arena::CreateMaybeMessage< ::apollo::perception::ImpendingCollisionEdge >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::ImpendingCollisionEdge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::ImpendingCollisionEdges* Arena::CreateMaybeMessage< ::apollo::perception::ImpendingCollisionEdges >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::ImpendingCollisionEdges >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

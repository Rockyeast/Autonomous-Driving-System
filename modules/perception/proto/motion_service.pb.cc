// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/motion_service.proto

#include "modules/perception/proto/motion_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MotionType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VehicleStatus;
}  // namespace protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto
namespace apollo {
namespace perception {
class MotionTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotionType>
      _instance;
} _MotionType_default_instance_;
class VehicleStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleStatus>
      _instance;
} _VehicleStatus_default_instance_;
class Motion_ServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Motion_Service>
      _instance;
} _Motion_Service_default_instance_;
}  // namespace perception
}  // namespace apollo
namespace protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto {
static void InitDefaultsMotionType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::_MotionType_default_instance_;
    new (ptr) ::apollo::perception::MotionType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::MotionType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MotionType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMotionType}, {}};

static void InitDefaultsVehicleStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::_VehicleStatus_default_instance_;
    new (ptr) ::apollo::perception::VehicleStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::VehicleStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleStatus}, {
      &protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_MotionType.base,}};

static void InitDefaultsMotion_Service() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::_Motion_Service_default_instance_;
    new (ptr) ::apollo::perception::Motion_Service();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::Motion_Service::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Motion_Service =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMotion_Service}, {
      &protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_VehicleStatus.base,
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MotionType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Motion_Service.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m00_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m01_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m02_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m03_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m13_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m20_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m21_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m22_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m23_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m30_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m31_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::MotionType, m33_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, roll_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, pitch_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, yaw_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, velocity_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, velocity_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, velocity_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, time_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, time_d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::VehicleStatus, motion_),
  1,
  2,
  3,
  4,
  5,
  6,
  9,
  7,
  8,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::Motion_Service, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::Motion_Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::Motion_Service, vehicle_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::Motion_Service, header_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 21, sizeof(::apollo::perception::MotionType)},
  { 37, 52, sizeof(::apollo::perception::VehicleStatus)},
  { 62, 69, sizeof(::apollo::perception::Motion_Service)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::_MotionType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::_VehicleStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::_Motion_Service_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/perception/proto/motion_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-modules/perception/proto/motion_servic"
      "e.proto\022\021apollo.perception\032!modules/comm"
      "on/proto/header.proto\"\334\001\n\nMotionType\022\013\n\003"
      "m00\030\001 \001(\002\022\013\n\003m01\030\002 \001(\002\022\013\n\003m02\030\003 \001(\002\022\013\n\003m"
      "03\030\004 \001(\002\022\013\n\003m10\030\005 \001(\002\022\013\n\003m11\030\006 \001(\002\022\013\n\003m1"
      "2\030\007 \001(\002\022\013\n\003m13\030\010 \001(\002\022\013\n\003m20\030\t \001(\002\022\013\n\003m21"
      "\030\n \001(\002\022\013\n\003m22\030\013 \001(\002\022\013\n\003m23\030\014 \001(\002\022\013\n\003m30\030"
      "\r \001(\002\022\013\n\003m31\030\016 \001(\002\022\013\n\003m32\030\017 \001(\002\022\013\n\003m33\030\020"
      " \001(\002\"\346\001\n\rVehicleStatus\022\021\n\troll_rate\030\001 \001("
      "\002\022\022\n\npitch_rate\030\002 \001(\002\022\020\n\010yaw_rate\030\003 \001(\002\022"
      "\020\n\010velocity\030\004 \001(\002\022\022\n\nvelocity_x\030\005 \001(\002\022\022\n"
      "\nvelocity_y\030\006 \001(\002\022\022\n\nvelocity_z\030\007 \001(\002\022\017\n"
      "\007time_ts\030\010 \001(\001\022\016\n\006time_d\030\t \001(\001\022-\n\006motion"
      "\030\n \001(\0132\035.apollo.perception.MotionType\"q\n"
      "\016Motion_Service\0228\n\016vehicle_status\030\001 \003(\0132"
      " .apollo.perception.VehicleStatus\022%\n\006hea"
      "der\030\002 \001(\0132\025.apollo.common.Header"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 672);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/proto/motion_service.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto
namespace apollo {
namespace perception {

// ===================================================================

void MotionType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionType::kM00FieldNumber;
const int MotionType::kM01FieldNumber;
const int MotionType::kM02FieldNumber;
const int MotionType::kM03FieldNumber;
const int MotionType::kM10FieldNumber;
const int MotionType::kM11FieldNumber;
const int MotionType::kM12FieldNumber;
const int MotionType::kM13FieldNumber;
const int MotionType::kM20FieldNumber;
const int MotionType::kM21FieldNumber;
const int MotionType::kM22FieldNumber;
const int MotionType::kM23FieldNumber;
const int MotionType::kM30FieldNumber;
const int MotionType::kM31FieldNumber;
const int MotionType::kM32FieldNumber;
const int MotionType::kM33FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionType::MotionType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_MotionType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.MotionType)
}
MotionType::MotionType(const MotionType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&m00_, &from.m00_,
    static_cast<size_t>(reinterpret_cast<char*>(&m33_) -
    reinterpret_cast<char*>(&m00_)) + sizeof(m33_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.MotionType)
}

void MotionType::SharedCtor() {
  ::memset(&m00_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m33_) -
      reinterpret_cast<char*>(&m00_)) + sizeof(m33_));
}

MotionType::~MotionType() {
  // @@protoc_insertion_point(destructor:apollo.perception.MotionType)
  SharedDtor();
}

void MotionType::SharedDtor() {
}

void MotionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MotionType::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MotionType& MotionType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_MotionType.base);
  return *internal_default_instance();
}


void MotionType::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.MotionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&m00_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&m13_) -
        reinterpret_cast<char*>(&m00_)) + sizeof(m13_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&m20_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&m33_) -
        reinterpret_cast<char*>(&m20_)) + sizeof(m33_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MotionType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.MotionType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float m00 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_m00();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m00_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m01 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_m01();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m01_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m02 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_m02();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m02_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m03 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_m03();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m03_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m10 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_m10();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m11 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_m11();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m12 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_m12();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m13 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_m13();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m13_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m20 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_m20();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m20_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m21 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_m21();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m21_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m22 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_m22();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m22_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m23 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_m23();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m23_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m30 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {
          set_has_m30();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m30_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m31 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {
          set_has_m31();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m31_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m32 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          set_has_m32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float m33 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {
          set_has_m33();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m33_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.MotionType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.MotionType)
  return false;
#undef DO_
}

void MotionType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.MotionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float m00 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->m00(), output);
  }

  // optional float m01 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->m01(), output);
  }

  // optional float m02 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m02(), output);
  }

  // optional float m03 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m03(), output);
  }

  // optional float m10 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m10(), output);
  }

  // optional float m11 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m11(), output);
  }

  // optional float m12 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m12(), output);
  }

  // optional float m13 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m13(), output);
  }

  // optional float m20 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->m20(), output);
  }

  // optional float m21 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->m21(), output);
  }

  // optional float m22 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->m22(), output);
  }

  // optional float m23 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->m23(), output);
  }

  // optional float m30 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->m30(), output);
  }

  // optional float m31 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->m31(), output);
  }

  // optional float m32 = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->m32(), output);
  }

  // optional float m33 = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->m33(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.MotionType)
}

::google::protobuf::uint8* MotionType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.MotionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float m00 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->m00(), target);
  }

  // optional float m01 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->m01(), target);
  }

  // optional float m02 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m02(), target);
  }

  // optional float m03 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m03(), target);
  }

  // optional float m10 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m10(), target);
  }

  // optional float m11 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m11(), target);
  }

  // optional float m12 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m12(), target);
  }

  // optional float m13 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m13(), target);
  }

  // optional float m20 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->m20(), target);
  }

  // optional float m21 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->m21(), target);
  }

  // optional float m22 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->m22(), target);
  }

  // optional float m23 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->m23(), target);
  }

  // optional float m30 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->m30(), target);
  }

  // optional float m31 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->m31(), target);
  }

  // optional float m32 = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->m32(), target);
  }

  // optional float m33 = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->m33(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.MotionType)
  return target;
}

size_t MotionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.MotionType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional float m00 = 1;
    if (has_m00()) {
      total_size += 1 + 4;
    }

    // optional float m01 = 2;
    if (has_m01()) {
      total_size += 1 + 4;
    }

    // optional float m02 = 3;
    if (has_m02()) {
      total_size += 1 + 4;
    }

    // optional float m03 = 4;
    if (has_m03()) {
      total_size += 1 + 4;
    }

    // optional float m10 = 5;
    if (has_m10()) {
      total_size += 1 + 4;
    }

    // optional float m11 = 6;
    if (has_m11()) {
      total_size += 1 + 4;
    }

    // optional float m12 = 7;
    if (has_m12()) {
      total_size += 1 + 4;
    }

    // optional float m13 = 8;
    if (has_m13()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional float m20 = 9;
    if (has_m20()) {
      total_size += 1 + 4;
    }

    // optional float m21 = 10;
    if (has_m21()) {
      total_size += 1 + 4;
    }

    // optional float m22 = 11;
    if (has_m22()) {
      total_size += 1 + 4;
    }

    // optional float m23 = 12;
    if (has_m23()) {
      total_size += 1 + 4;
    }

    // optional float m30 = 13;
    if (has_m30()) {
      total_size += 1 + 4;
    }

    // optional float m31 = 14;
    if (has_m31()) {
      total_size += 1 + 4;
    }

    // optional float m32 = 15;
    if (has_m32()) {
      total_size += 1 + 4;
    }

    // optional float m33 = 16;
    if (has_m33()) {
      total_size += 2 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MotionType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.MotionType)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MotionType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.MotionType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.MotionType)
    MergeFrom(*source);
  }
}

void MotionType::MergeFrom(const MotionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.MotionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      m00_ = from.m00_;
    }
    if (cached_has_bits & 0x00000002u) {
      m01_ = from.m01_;
    }
    if (cached_has_bits & 0x00000004u) {
      m02_ = from.m02_;
    }
    if (cached_has_bits & 0x00000008u) {
      m03_ = from.m03_;
    }
    if (cached_has_bits & 0x00000010u) {
      m10_ = from.m10_;
    }
    if (cached_has_bits & 0x00000020u) {
      m11_ = from.m11_;
    }
    if (cached_has_bits & 0x00000040u) {
      m12_ = from.m12_;
    }
    if (cached_has_bits & 0x00000080u) {
      m13_ = from.m13_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      m20_ = from.m20_;
    }
    if (cached_has_bits & 0x00000200u) {
      m21_ = from.m21_;
    }
    if (cached_has_bits & 0x00000400u) {
      m22_ = from.m22_;
    }
    if (cached_has_bits & 0x00000800u) {
      m23_ = from.m23_;
    }
    if (cached_has_bits & 0x00001000u) {
      m30_ = from.m30_;
    }
    if (cached_has_bits & 0x00002000u) {
      m31_ = from.m31_;
    }
    if (cached_has_bits & 0x00004000u) {
      m32_ = from.m32_;
    }
    if (cached_has_bits & 0x00008000u) {
      m33_ = from.m33_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MotionType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.MotionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionType::CopyFrom(const MotionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.MotionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionType::IsInitialized() const {
  return true;
}

void MotionType::Swap(MotionType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionType::InternalSwap(MotionType* other) {
  using std::swap;
  swap(m00_, other->m00_);
  swap(m01_, other->m01_);
  swap(m02_, other->m02_);
  swap(m03_, other->m03_);
  swap(m10_, other->m10_);
  swap(m11_, other->m11_);
  swap(m12_, other->m12_);
  swap(m13_, other->m13_);
  swap(m20_, other->m20_);
  swap(m21_, other->m21_);
  swap(m22_, other->m22_);
  swap(m23_, other->m23_);
  swap(m30_, other->m30_);
  swap(m31_, other->m31_);
  swap(m32_, other->m32_);
  swap(m33_, other->m33_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MotionType::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleStatus::InitAsDefaultInstance() {
  ::apollo::perception::_VehicleStatus_default_instance_._instance.get_mutable()->motion_ = const_cast< ::apollo::perception::MotionType*>(
      ::apollo::perception::MotionType::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleStatus::kRollRateFieldNumber;
const int VehicleStatus::kPitchRateFieldNumber;
const int VehicleStatus::kYawRateFieldNumber;
const int VehicleStatus::kVelocityFieldNumber;
const int VehicleStatus::kVelocityXFieldNumber;
const int VehicleStatus::kVelocityYFieldNumber;
const int VehicleStatus::kVelocityZFieldNumber;
const int VehicleStatus::kTimeTsFieldNumber;
const int VehicleStatus::kTimeDFieldNumber;
const int VehicleStatus::kMotionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleStatus::VehicleStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_VehicleStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.VehicleStatus)
}
VehicleStatus::VehicleStatus(const VehicleStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motion()) {
    motion_ = new ::apollo::perception::MotionType(*from.motion_);
  } else {
    motion_ = NULL;
  }
  ::memcpy(&roll_rate_, &from.roll_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&velocity_z_) -
    reinterpret_cast<char*>(&roll_rate_)) + sizeof(velocity_z_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.VehicleStatus)
}

void VehicleStatus::SharedCtor() {
  ::memset(&motion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&velocity_z_) -
      reinterpret_cast<char*>(&motion_)) + sizeof(velocity_z_));
}

VehicleStatus::~VehicleStatus() {
  // @@protoc_insertion_point(destructor:apollo.perception.VehicleStatus)
  SharedDtor();
}

void VehicleStatus::SharedDtor() {
  if (this != internal_default_instance()) delete motion_;
}

void VehicleStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleStatus::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleStatus& VehicleStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_VehicleStatus.base);
  return *internal_default_instance();
}


void VehicleStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.VehicleStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(motion_ != NULL);
    motion_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&roll_rate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_ts_) -
        reinterpret_cast<char*>(&roll_rate_)) + sizeof(time_ts_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&time_d_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&velocity_z_) -
        reinterpret_cast<char*>(&time_d_)) + sizeof(velocity_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.VehicleStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float roll_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_roll_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pitch_rate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_pitch_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float yaw_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_yaw_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float velocity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_velocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float velocity_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_velocity_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocity_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float velocity_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_velocity_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocity_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float velocity_z = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_velocity_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocity_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double time_ts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_time_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double time_d = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_time_d();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.perception.MotionType motion = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.VehicleStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.VehicleStatus)
  return false;
#undef DO_
}

void VehicleStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.VehicleStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float roll_rate = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->roll_rate(), output);
  }

  // optional float pitch_rate = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pitch_rate(), output);
  }

  // optional float yaw_rate = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->yaw_rate(), output);
  }

  // optional float velocity = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->velocity(), output);
  }

  // optional float velocity_x = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->velocity_x(), output);
  }

  // optional float velocity_y = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->velocity_y(), output);
  }

  // optional float velocity_z = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->velocity_z(), output);
  }

  // optional double time_ts = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->time_ts(), output);
  }

  // optional double time_d = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->time_d(), output);
  }

  // optional .apollo.perception.MotionType motion = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_motion(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.VehicleStatus)
}

::google::protobuf::uint8* VehicleStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.VehicleStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float roll_rate = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->roll_rate(), target);
  }

  // optional float pitch_rate = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pitch_rate(), target);
  }

  // optional float yaw_rate = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->yaw_rate(), target);
  }

  // optional float velocity = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->velocity(), target);
  }

  // optional float velocity_x = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->velocity_x(), target);
  }

  // optional float velocity_y = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->velocity_y(), target);
  }

  // optional float velocity_z = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->velocity_z(), target);
  }

  // optional double time_ts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->time_ts(), target);
  }

  // optional double time_d = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->time_d(), target);
  }

  // optional .apollo.perception.MotionType motion = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_motion(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.VehicleStatus)
  return target;
}

size_t VehicleStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.VehicleStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.perception.MotionType motion = 10;
    if (has_motion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *motion_);
    }

    // optional float roll_rate = 1;
    if (has_roll_rate()) {
      total_size += 1 + 4;
    }

    // optional float pitch_rate = 2;
    if (has_pitch_rate()) {
      total_size += 1 + 4;
    }

    // optional float yaw_rate = 3;
    if (has_yaw_rate()) {
      total_size += 1 + 4;
    }

    // optional float velocity = 4;
    if (has_velocity()) {
      total_size += 1 + 4;
    }

    // optional float velocity_x = 5;
    if (has_velocity_x()) {
      total_size += 1 + 4;
    }

    // optional float velocity_y = 6;
    if (has_velocity_y()) {
      total_size += 1 + 4;
    }

    // optional double time_ts = 8;
    if (has_time_ts()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional double time_d = 9;
    if (has_time_d()) {
      total_size += 1 + 8;
    }

    // optional float velocity_z = 7;
    if (has_velocity_z()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.VehicleStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.VehicleStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.VehicleStatus)
    MergeFrom(*source);
  }
}

void VehicleStatus::MergeFrom(const VehicleStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.VehicleStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_motion()->::apollo::perception::MotionType::MergeFrom(from.motion());
    }
    if (cached_has_bits & 0x00000002u) {
      roll_rate_ = from.roll_rate_;
    }
    if (cached_has_bits & 0x00000004u) {
      pitch_rate_ = from.pitch_rate_;
    }
    if (cached_has_bits & 0x00000008u) {
      yaw_rate_ = from.yaw_rate_;
    }
    if (cached_has_bits & 0x00000010u) {
      velocity_ = from.velocity_;
    }
    if (cached_has_bits & 0x00000020u) {
      velocity_x_ = from.velocity_x_;
    }
    if (cached_has_bits & 0x00000040u) {
      velocity_y_ = from.velocity_y_;
    }
    if (cached_has_bits & 0x00000080u) {
      time_ts_ = from.time_ts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      time_d_ = from.time_d_;
    }
    if (cached_has_bits & 0x00000200u) {
      velocity_z_ = from.velocity_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.VehicleStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleStatus::CopyFrom(const VehicleStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.VehicleStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleStatus::IsInitialized() const {
  return true;
}

void VehicleStatus::Swap(VehicleStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleStatus::InternalSwap(VehicleStatus* other) {
  using std::swap;
  swap(motion_, other->motion_);
  swap(roll_rate_, other->roll_rate_);
  swap(pitch_rate_, other->pitch_rate_);
  swap(yaw_rate_, other->yaw_rate_);
  swap(velocity_, other->velocity_);
  swap(velocity_x_, other->velocity_x_);
  swap(velocity_y_, other->velocity_y_);
  swap(time_ts_, other->time_ts_);
  swap(time_d_, other->time_d_);
  swap(velocity_z_, other->velocity_z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleStatus::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Motion_Service::InitAsDefaultInstance() {
  ::apollo::perception::_Motion_Service_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
}
void Motion_Service::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Motion_Service::kVehicleStatusFieldNumber;
const int Motion_Service::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Motion_Service::Motion_Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_Motion_Service.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.Motion_Service)
}
Motion_Service::Motion_Service(const Motion_Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      vehicle_status_(from.vehicle_status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.Motion_Service)
}

void Motion_Service::SharedCtor() {
  header_ = NULL;
}

Motion_Service::~Motion_Service() {
  // @@protoc_insertion_point(destructor:apollo.perception.Motion_Service)
  SharedDtor();
}

void Motion_Service::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void Motion_Service::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Motion_Service::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Motion_Service& Motion_Service::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::scc_info_Motion_Service.base);
  return *internal_default_instance();
}


void Motion_Service::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.Motion_Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vehicle_status_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Motion_Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.Motion_Service)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.perception.VehicleStatus vehicle_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicle_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.Header header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.Motion_Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.Motion_Service)
  return false;
#undef DO_
}

void Motion_Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.Motion_Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.VehicleStatus vehicle_status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicle_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vehicle_status(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_header(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.Motion_Service)
}

::google::protobuf::uint8* Motion_Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.Motion_Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.VehicleStatus vehicle_status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicle_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vehicle_status(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_header(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.Motion_Service)
  return target;
}

size_t Motion_Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.Motion_Service)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.perception.VehicleStatus vehicle_status = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicle_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicle_status(static_cast<int>(i)));
    }
  }

  // optional .apollo.common.Header header = 2;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Motion_Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.Motion_Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Motion_Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Motion_Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.Motion_Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.Motion_Service)
    MergeFrom(*source);
  }
}

void Motion_Service::MergeFrom(const Motion_Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.Motion_Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vehicle_status_.MergeFrom(from.vehicle_status_);
  if (from.has_header()) {
    mutable_header()->::apollo::common::Header::MergeFrom(from.header());
  }
}

void Motion_Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.Motion_Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motion_Service::CopyFrom(const Motion_Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.Motion_Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motion_Service::IsInitialized() const {
  return true;
}

void Motion_Service::Swap(Motion_Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Motion_Service::InternalSwap(Motion_Service* other) {
  using std::swap;
  CastToBase(&vehicle_status_)->InternalSwap(CastToBase(&other->vehicle_status_));
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Motion_Service::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fmotion_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::MotionType* Arena::CreateMaybeMessage< ::apollo::perception::MotionType >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::MotionType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::VehicleStatus* Arena::CreateMaybeMessage< ::apollo::perception::VehicleStatus >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::VehicleStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::Motion_Service* Arena::CreateMaybeMessage< ::apollo::perception::Motion_Service >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::Motion_Service >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

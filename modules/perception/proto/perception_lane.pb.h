// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_lane.proto

#ifndef PROTOBUF_INCLUDED_modules_2fperception_2fproto_2fperception_5flane_2eproto
#define PROTOBUF_INCLUDED_modules_2fperception_2fproto_2fperception_5flane_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/header.pb.h"
#include "modules/perception/proto/perception_camera.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto 

namespace protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto
namespace apollo {
namespace perception {
class PerceptionLanes;
class PerceptionLanesDefaultTypeInternal;
extern PerceptionLanesDefaultTypeInternal _PerceptionLanes_default_instance_;
}  // namespace perception
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::perception::PerceptionLanes* Arena::CreateMaybeMessage<::apollo::perception::PerceptionLanes>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace perception {

// ===================================================================

class PerceptionLanes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.PerceptionLanes) */ {
 public:
  PerceptionLanes();
  virtual ~PerceptionLanes();

  PerceptionLanes(const PerceptionLanes& from);

  inline PerceptionLanes& operator=(const PerceptionLanes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerceptionLanes(PerceptionLanes&& from) noexcept
    : PerceptionLanes() {
    *this = ::std::move(from);
  }

  inline PerceptionLanes& operator=(PerceptionLanes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PerceptionLanes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerceptionLanes* internal_default_instance() {
    return reinterpret_cast<const PerceptionLanes*>(
               &_PerceptionLanes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PerceptionLanes* other);
  friend void swap(PerceptionLanes& a, PerceptionLanes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerceptionLanes* New() const final {
    return CreateMaybeMessage<PerceptionLanes>(NULL);
  }

  PerceptionLanes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerceptionLanes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PerceptionLanes& from);
  void MergeFrom(const PerceptionLanes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerceptionLanes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.perception.camera.CameraLaneLine camera_laneline = 5;
  int camera_laneline_size() const;
  void clear_camera_laneline();
  static const int kCameraLanelineFieldNumber = 5;
  ::apollo::perception::camera::CameraLaneLine* mutable_camera_laneline(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::CameraLaneLine >*
      mutable_camera_laneline();
  const ::apollo::perception::camera::CameraLaneLine& camera_laneline(int index) const;
  ::apollo::perception::camera::CameraLaneLine* add_camera_laneline();
  const ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::CameraLaneLine >&
      camera_laneline() const;

  // optional string source_topic = 2;
  bool has_source_topic() const;
  void clear_source_topic();
  static const int kSourceTopicFieldNumber = 2;
  const ::std::string& source_topic() const;
  void set_source_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_source_topic(::std::string&& value);
  #endif
  void set_source_topic(const char* value);
  void set_source_topic(const char* value, size_t size);
  ::std::string* mutable_source_topic();
  ::std::string* release_source_topic();
  void set_allocated_source_topic(::std::string* source_topic);

  // optional .apollo.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::apollo::common::Header& _internal_header() const;
  public:
  const ::apollo::common::Header& header() const;
  ::apollo::common::Header* release_header();
  ::apollo::common::Header* mutable_header();
  void set_allocated_header(::apollo::common::Header* header);

  // optional .apollo.perception.camera.CameraCalibrator camera_calibrator = 4;
  bool has_camera_calibrator() const;
  void clear_camera_calibrator();
  static const int kCameraCalibratorFieldNumber = 4;
  private:
  const ::apollo::perception::camera::CameraCalibrator& _internal_camera_calibrator() const;
  public:
  const ::apollo::perception::camera::CameraCalibrator& camera_calibrator() const;
  ::apollo::perception::camera::CameraCalibrator* release_camera_calibrator();
  ::apollo::perception::camera::CameraCalibrator* mutable_camera_calibrator();
  void set_allocated_camera_calibrator(::apollo::perception::camera::CameraCalibrator* camera_calibrator);

  // optional .apollo.perception.camera.CameraErrorCode error_code = 3 [default = ERROR_NONE];
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  ::apollo::perception::camera::CameraErrorCode error_code() const;
  void set_error_code(::apollo::perception::camera::CameraErrorCode value);

  // @@protoc_insertion_point(class_scope:apollo.perception.PerceptionLanes)
 private:
  void set_has_header();
  void clear_has_header();
  void set_has_source_topic();
  void clear_has_source_topic();
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_camera_calibrator();
  void clear_has_camera_calibrator();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::CameraLaneLine > camera_laneline_;
  ::google::protobuf::internal::ArenaStringPtr source_topic_;
  ::apollo::common::Header* header_;
  ::apollo::perception::camera::CameraCalibrator* camera_calibrator_;
  int error_code_;
  friend struct ::protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PerceptionLanes

// optional .apollo.common.Header header = 1;
inline bool PerceptionLanes::has_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PerceptionLanes::set_has_header() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PerceptionLanes::clear_has_header() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::apollo::common::Header& PerceptionLanes::_internal_header() const {
  return *header_;
}
inline const ::apollo::common::Header& PerceptionLanes::header() const {
  const ::apollo::common::Header* p = header_;
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionLanes.header)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::common::Header*>(
      &::apollo::common::_Header_default_instance_);
}
inline ::apollo::common::Header* PerceptionLanes::release_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionLanes.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::apollo::common::Header* PerceptionLanes::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::common::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionLanes.header)
  return header_;
}
inline void PerceptionLanes::set_allocated_header(::apollo::common::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    set_has_header();
  } else {
    clear_has_header();
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionLanes.header)
}

// optional string source_topic = 2;
inline bool PerceptionLanes::has_source_topic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerceptionLanes::set_has_source_topic() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PerceptionLanes::clear_has_source_topic() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PerceptionLanes::clear_source_topic() {
  source_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source_topic();
}
inline const ::std::string& PerceptionLanes::source_topic() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionLanes.source_topic)
  return source_topic_.GetNoArena();
}
inline void PerceptionLanes::set_source_topic(const ::std::string& value) {
  set_has_source_topic();
  source_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionLanes.source_topic)
}
#if LANG_CXX11
inline void PerceptionLanes::set_source_topic(::std::string&& value) {
  set_has_source_topic();
  source_topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.PerceptionLanes.source_topic)
}
#endif
inline void PerceptionLanes::set_source_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source_topic();
  source_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.PerceptionLanes.source_topic)
}
inline void PerceptionLanes::set_source_topic(const char* value, size_t size) {
  set_has_source_topic();
  source_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.PerceptionLanes.source_topic)
}
inline ::std::string* PerceptionLanes::mutable_source_topic() {
  set_has_source_topic();
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionLanes.source_topic)
  return source_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerceptionLanes::release_source_topic() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionLanes.source_topic)
  if (!has_source_topic()) {
    return NULL;
  }
  clear_has_source_topic();
  return source_topic_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerceptionLanes::set_allocated_source_topic(::std::string* source_topic) {
  if (source_topic != NULL) {
    set_has_source_topic();
  } else {
    clear_has_source_topic();
  }
  source_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_topic);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionLanes.source_topic)
}

// optional .apollo.perception.camera.CameraErrorCode error_code = 3 [default = ERROR_NONE];
inline bool PerceptionLanes::has_error_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PerceptionLanes::set_has_error_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PerceptionLanes::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PerceptionLanes::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::apollo::perception::camera::CameraErrorCode PerceptionLanes::error_code() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionLanes.error_code)
  return static_cast< ::apollo::perception::camera::CameraErrorCode >(error_code_);
}
inline void PerceptionLanes::set_error_code(::apollo::perception::camera::CameraErrorCode value) {
  assert(::apollo::perception::camera::CameraErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionLanes.error_code)
}

// optional .apollo.perception.camera.CameraCalibrator camera_calibrator = 4;
inline bool PerceptionLanes::has_camera_calibrator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PerceptionLanes::set_has_camera_calibrator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PerceptionLanes::clear_has_camera_calibrator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::apollo::perception::camera::CameraCalibrator& PerceptionLanes::_internal_camera_calibrator() const {
  return *camera_calibrator_;
}
inline const ::apollo::perception::camera::CameraCalibrator& PerceptionLanes::camera_calibrator() const {
  const ::apollo::perception::camera::CameraCalibrator* p = camera_calibrator_;
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionLanes.camera_calibrator)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::perception::camera::CameraCalibrator*>(
      &::apollo::perception::camera::_CameraCalibrator_default_instance_);
}
inline ::apollo::perception::camera::CameraCalibrator* PerceptionLanes::release_camera_calibrator() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionLanes.camera_calibrator)
  clear_has_camera_calibrator();
  ::apollo::perception::camera::CameraCalibrator* temp = camera_calibrator_;
  camera_calibrator_ = NULL;
  return temp;
}
inline ::apollo::perception::camera::CameraCalibrator* PerceptionLanes::mutable_camera_calibrator() {
  set_has_camera_calibrator();
  if (camera_calibrator_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::CameraCalibrator>(GetArenaNoVirtual());
    camera_calibrator_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionLanes.camera_calibrator)
  return camera_calibrator_;
}
inline void PerceptionLanes::set_allocated_camera_calibrator(::apollo::perception::camera::CameraCalibrator* camera_calibrator) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(camera_calibrator_);
  }
  if (camera_calibrator) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      camera_calibrator = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, camera_calibrator, submessage_arena);
    }
    set_has_camera_calibrator();
  } else {
    clear_has_camera_calibrator();
  }
  camera_calibrator_ = camera_calibrator;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionLanes.camera_calibrator)
}

// repeated .apollo.perception.camera.CameraLaneLine camera_laneline = 5;
inline int PerceptionLanes::camera_laneline_size() const {
  return camera_laneline_.size();
}
inline ::apollo::perception::camera::CameraLaneLine* PerceptionLanes::mutable_camera_laneline(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionLanes.camera_laneline)
  return camera_laneline_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::CameraLaneLine >*
PerceptionLanes::mutable_camera_laneline() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.PerceptionLanes.camera_laneline)
  return &camera_laneline_;
}
inline const ::apollo::perception::camera::CameraLaneLine& PerceptionLanes::camera_laneline(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionLanes.camera_laneline)
  return camera_laneline_.Get(index);
}
inline ::apollo::perception::camera::CameraLaneLine* PerceptionLanes::add_camera_laneline() {
  // @@protoc_insertion_point(field_add:apollo.perception.PerceptionLanes.camera_laneline)
  return camera_laneline_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::CameraLaneLine >&
PerceptionLanes::camera_laneline() const {
  // @@protoc_insertion_point(field_list:apollo.perception.PerceptionLanes.camera_laneline)
  return camera_laneline_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_modules_2fperception_2fproto_2fperception_5flane_2eproto

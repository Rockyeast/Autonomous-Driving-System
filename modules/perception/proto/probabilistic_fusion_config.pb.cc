// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/probabilistic_fusion_config.proto

#include "modules/perception/proto/probabilistic_fusion_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
namespace fusion {
class ProbabilisticFusionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProbabilisticFusionConfig>
      _instance;
} _ProbabilisticFusionConfig_default_instance_;
}  // namespace fusion
}  // namespace perception
}  // namespace apollo
namespace protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto {
static void InitDefaultsProbabilisticFusionConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.DefaultConstruct();
  *::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get_mutable() = ::std::string("PbfTracker", 10);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get_mutable());
  ::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.DefaultConstruct();
  *::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get_mutable() = ::std::string("HMAssociation", 13);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get_mutable());
  ::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.DefaultConstruct();
  *::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get_mutable() = ::std::string("PbfGatekeeper", 13);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get_mutable());
  {
    void* ptr = &::apollo::perception::fusion::_ProbabilisticFusionConfig_default_instance_;
    new (ptr) ::apollo::perception::fusion::ProbabilisticFusionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::fusion::ProbabilisticFusionConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProbabilisticFusionConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProbabilisticFusionConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProbabilisticFusionConfig.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, use_lidar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, use_radar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, use_camera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, tracker_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, data_association_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, gate_keeper_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, prohibition_sensors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, max_lidar_invisible_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, max_radar_invisible_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, max_camera_invisible_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::fusion::ProbabilisticFusionConfig, max_cached_frame_num_),
  3,
  4,
  5,
  0,
  1,
  2,
  ~0u,
  6,
  7,
  8,
  9,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::apollo::perception::fusion::ProbabilisticFusionConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::fusion::_ProbabilisticFusionConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/perception/proto/probabilistic_fusion_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n:modules/perception/proto/probabilistic"
      "_fusion_config.proto\022\030apollo.perception."
      "fusion\"\243\003\n\031ProbabilisticFusionConfig\022\027\n\t"
      "use_lidar\030\001 \001(\010:\004true\022\027\n\tuse_radar\030\002 \001(\010"
      ":\004true\022\030\n\nuse_camera\030\003 \001(\010:\004true\022\"\n\016trac"
      "ker_method\030\004 \001(\t:\nPbfTracker\022.\n\027data_ass"
      "ociation_method\030\005 \001(\t:\rHMAssociation\022)\n\022"
      "gate_keeper_method\030\006 \001(\t:\rPbfGatekeeper\022"
      "\033\n\023prohibition_sensors\030\007 \003(\t\022(\n\032max_lida"
      "r_invisible_period\030\010 \001(\001:\0040.25\022\'\n\032max_ra"
      "dar_invisible_period\030\t \001(\001:\0030.5\022)\n\033max_c"
      "amera_invisible_period\030\n \001(\001:\0040.75\022 \n\024ma"
      "x_cached_frame_num\030\013 \001(\003:\00250"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 508);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/proto/probabilistic_fusion_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto
namespace apollo {
namespace perception {
namespace fusion {

// ===================================================================

void ProbabilisticFusionConfig::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed<::std::string> ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_;
::google::protobuf::internal::ExplicitlyConstructed<::std::string> ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProbabilisticFusionConfig::kUseLidarFieldNumber;
const int ProbabilisticFusionConfig::kUseRadarFieldNumber;
const int ProbabilisticFusionConfig::kUseCameraFieldNumber;
const int ProbabilisticFusionConfig::kTrackerMethodFieldNumber;
const int ProbabilisticFusionConfig::kDataAssociationMethodFieldNumber;
const int ProbabilisticFusionConfig::kGateKeeperMethodFieldNumber;
const int ProbabilisticFusionConfig::kProhibitionSensorsFieldNumber;
const int ProbabilisticFusionConfig::kMaxLidarInvisiblePeriodFieldNumber;
const int ProbabilisticFusionConfig::kMaxRadarInvisiblePeriodFieldNumber;
const int ProbabilisticFusionConfig::kMaxCameraInvisiblePeriodFieldNumber;
const int ProbabilisticFusionConfig::kMaxCachedFrameNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProbabilisticFusionConfig::ProbabilisticFusionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto::scc_info_ProbabilisticFusionConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.fusion.ProbabilisticFusionConfig)
}
ProbabilisticFusionConfig::ProbabilisticFusionConfig(const ProbabilisticFusionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      prohibition_sensors_(from.prohibition_sensors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tracker_method_.UnsafeSetDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get());
  if (from.has_tracker_method()) {
    tracker_method_.AssignWithDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get(), from.tracker_method_);
  }
  data_association_method_.UnsafeSetDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get());
  if (from.has_data_association_method()) {
    data_association_method_.AssignWithDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get(), from.data_association_method_);
  }
  gate_keeper_method_.UnsafeSetDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get());
  if (from.has_gate_keeper_method()) {
    gate_keeper_method_.AssignWithDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get(), from.gate_keeper_method_);
  }
  ::memcpy(&use_lidar_, &from.use_lidar_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_cached_frame_num_) -
    reinterpret_cast<char*>(&use_lidar_)) + sizeof(max_cached_frame_num_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.fusion.ProbabilisticFusionConfig)
}

void ProbabilisticFusionConfig::SharedCtor() {
  tracker_method_.UnsafeSetDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get());
  data_association_method_.UnsafeSetDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get());
  gate_keeper_method_.UnsafeSetDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get());
  use_lidar_ = true;
  use_radar_ = true;
  use_camera_ = true;
  max_lidar_invisible_period_ = 0.25;
  max_radar_invisible_period_ = 0.5;
  max_camera_invisible_period_ = 0.75;
  max_cached_frame_num_ = GOOGLE_LONGLONG(50);
}

ProbabilisticFusionConfig::~ProbabilisticFusionConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.fusion.ProbabilisticFusionConfig)
  SharedDtor();
}

void ProbabilisticFusionConfig::SharedDtor() {
  tracker_method_.DestroyNoArena(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get());
  data_association_method_.DestroyNoArena(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get());
  gate_keeper_method_.DestroyNoArena(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get());
}

void ProbabilisticFusionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProbabilisticFusionConfig::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProbabilisticFusionConfig& ProbabilisticFusionConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto::scc_info_ProbabilisticFusionConfig.base);
  return *internal_default_instance();
}


void ProbabilisticFusionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prohibition_sensors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      tracker_method_.UnsafeMutablePointer()->assign(*&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      data_association_method_.UnsafeMutablePointer()->assign(*&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      gate_keeper_method_.UnsafeMutablePointer()->assign(*&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get());
    }
    use_lidar_ = true;
    use_radar_ = true;
    use_camera_ = true;
    max_lidar_invisible_period_ = 0.25;
    max_radar_invisible_period_ = 0.5;
  }
  if (cached_has_bits & 768u) {
    max_camera_invisible_period_ = 0.75;
    max_cached_frame_num_ = GOOGLE_LONGLONG(50);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProbabilisticFusionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_lidar = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_use_lidar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_lidar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_radar = 2 [default = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_use_radar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_radar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_camera = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_use_camera();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_camera_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tracker_method = 4 [default = "PbfTracker"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracker_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tracker_method().data(), static_cast<int>(this->tracker_method().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.fusion.ProbabilisticFusionConfig.tracker_method");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data_association_method = 5 [default = "HMAssociation"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_association_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_association_method().data(), static_cast<int>(this->data_association_method().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.fusion.ProbabilisticFusionConfig.data_association_method");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gate_keeper_method = 6 [default = "PbfGatekeeper"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gate_keeper_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gate_keeper_method().data(), static_cast<int>(this->gate_keeper_method().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.fusion.ProbabilisticFusionConfig.gate_keeper_method");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prohibition_sensors = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prohibition_sensors()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prohibition_sensors(this->prohibition_sensors_size() - 1).data(),
            static_cast<int>(this->prohibition_sensors(this->prohibition_sensors_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.fusion.ProbabilisticFusionConfig.prohibition_sensors");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_lidar_invisible_period = 8 [default = 0.25];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_max_lidar_invisible_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_lidar_invisible_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_radar_invisible_period = 9 [default = 0.5];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_max_radar_invisible_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_radar_invisible_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_camera_invisible_period = 10 [default = 0.75];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_max_camera_invisible_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_camera_invisible_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 max_cached_frame_num = 11 [default = 50];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_max_cached_frame_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_cached_frame_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.fusion.ProbabilisticFusionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.fusion.ProbabilisticFusionConfig)
  return false;
#undef DO_
}

void ProbabilisticFusionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_lidar = 1 [default = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_lidar(), output);
  }

  // optional bool use_radar = 2 [default = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_radar(), output);
  }

  // optional bool use_camera = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_camera(), output);
  }

  // optional string tracker_method = 4 [default = "PbfTracker"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tracker_method().data(), static_cast<int>(this->tracker_method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.tracker_method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tracker_method(), output);
  }

  // optional string data_association_method = 5 [default = "HMAssociation"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_association_method().data(), static_cast<int>(this->data_association_method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.data_association_method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data_association_method(), output);
  }

  // optional string gate_keeper_method = 6 [default = "PbfGatekeeper"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gate_keeper_method().data(), static_cast<int>(this->gate_keeper_method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.gate_keeper_method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->gate_keeper_method(), output);
  }

  // repeated string prohibition_sensors = 7;
  for (int i = 0, n = this->prohibition_sensors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prohibition_sensors(i).data(), static_cast<int>(this->prohibition_sensors(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.prohibition_sensors");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->prohibition_sensors(i), output);
  }

  // optional double max_lidar_invisible_period = 8 [default = 0.25];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->max_lidar_invisible_period(), output);
  }

  // optional double max_radar_invisible_period = 9 [default = 0.5];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->max_radar_invisible_period(), output);
  }

  // optional double max_camera_invisible_period = 10 [default = 0.75];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->max_camera_invisible_period(), output);
  }

  // optional int64 max_cached_frame_num = 11 [default = 50];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->max_cached_frame_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.fusion.ProbabilisticFusionConfig)
}

::google::protobuf::uint8* ProbabilisticFusionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_lidar = 1 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_lidar(), target);
  }

  // optional bool use_radar = 2 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_radar(), target);
  }

  // optional bool use_camera = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_camera(), target);
  }

  // optional string tracker_method = 4 [default = "PbfTracker"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tracker_method().data(), static_cast<int>(this->tracker_method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.tracker_method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tracker_method(), target);
  }

  // optional string data_association_method = 5 [default = "HMAssociation"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_association_method().data(), static_cast<int>(this->data_association_method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.data_association_method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data_association_method(), target);
  }

  // optional string gate_keeper_method = 6 [default = "PbfGatekeeper"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gate_keeper_method().data(), static_cast<int>(this->gate_keeper_method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.gate_keeper_method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->gate_keeper_method(), target);
  }

  // repeated string prohibition_sensors = 7;
  for (int i = 0, n = this->prohibition_sensors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prohibition_sensors(i).data(), static_cast<int>(this->prohibition_sensors(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.ProbabilisticFusionConfig.prohibition_sensors");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->prohibition_sensors(i), target);
  }

  // optional double max_lidar_invisible_period = 8 [default = 0.25];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->max_lidar_invisible_period(), target);
  }

  // optional double max_radar_invisible_period = 9 [default = 0.5];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->max_radar_invisible_period(), target);
  }

  // optional double max_camera_invisible_period = 10 [default = 0.75];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->max_camera_invisible_period(), target);
  }

  // optional int64 max_cached_frame_num = 11 [default = 50];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->max_cached_frame_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.fusion.ProbabilisticFusionConfig)
  return target;
}

size_t ProbabilisticFusionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string prohibition_sensors = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prohibition_sensors_size());
  for (int i = 0, n = this->prohibition_sensors_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prohibition_sensors(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string tracker_method = 4 [default = "PbfTracker"];
    if (has_tracker_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracker_method());
    }

    // optional string data_association_method = 5 [default = "HMAssociation"];
    if (has_data_association_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data_association_method());
    }

    // optional string gate_keeper_method = 6 [default = "PbfGatekeeper"];
    if (has_gate_keeper_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gate_keeper_method());
    }

    // optional bool use_lidar = 1 [default = true];
    if (has_use_lidar()) {
      total_size += 1 + 1;
    }

    // optional bool use_radar = 2 [default = true];
    if (has_use_radar()) {
      total_size += 1 + 1;
    }

    // optional bool use_camera = 3 [default = true];
    if (has_use_camera()) {
      total_size += 1 + 1;
    }

    // optional double max_lidar_invisible_period = 8 [default = 0.25];
    if (has_max_lidar_invisible_period()) {
      total_size += 1 + 8;
    }

    // optional double max_radar_invisible_period = 9 [default = 0.5];
    if (has_max_radar_invisible_period()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional double max_camera_invisible_period = 10 [default = 0.75];
    if (has_max_camera_invisible_period()) {
      total_size += 1 + 8;
    }

    // optional int64 max_cached_frame_num = 11 [default = 50];
    if (has_max_cached_frame_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->max_cached_frame_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProbabilisticFusionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ProbabilisticFusionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProbabilisticFusionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.fusion.ProbabilisticFusionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.fusion.ProbabilisticFusionConfig)
    MergeFrom(*source);
  }
}

void ProbabilisticFusionConfig::MergeFrom(const ProbabilisticFusionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prohibition_sensors_.MergeFrom(from.prohibition_sensors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tracker_method();
      tracker_method_.AssignWithDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get(), from.tracker_method_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_data_association_method();
      data_association_method_.AssignWithDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get(), from.data_association_method_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_gate_keeper_method();
      gate_keeper_method_.AssignWithDefault(&::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get(), from.gate_keeper_method_);
    }
    if (cached_has_bits & 0x00000008u) {
      use_lidar_ = from.use_lidar_;
    }
    if (cached_has_bits & 0x00000010u) {
      use_radar_ = from.use_radar_;
    }
    if (cached_has_bits & 0x00000020u) {
      use_camera_ = from.use_camera_;
    }
    if (cached_has_bits & 0x00000040u) {
      max_lidar_invisible_period_ = from.max_lidar_invisible_period_;
    }
    if (cached_has_bits & 0x00000080u) {
      max_radar_invisible_period_ = from.max_radar_invisible_period_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      max_camera_invisible_period_ = from.max_camera_invisible_period_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_cached_frame_num_ = from.max_cached_frame_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProbabilisticFusionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProbabilisticFusionConfig::CopyFrom(const ProbabilisticFusionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.fusion.ProbabilisticFusionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProbabilisticFusionConfig::IsInitialized() const {
  return true;
}

void ProbabilisticFusionConfig::Swap(ProbabilisticFusionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProbabilisticFusionConfig::InternalSwap(ProbabilisticFusionConfig* other) {
  using std::swap;
  prohibition_sensors_.InternalSwap(CastToBase(&other->prohibition_sensors_));
  tracker_method_.Swap(&other->tracker_method_, &::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_tracker_method_.get(),
    GetArenaNoVirtual());
  data_association_method_.Swap(&other->data_association_method_, &::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_data_association_method_.get(),
    GetArenaNoVirtual());
  gate_keeper_method_.Swap(&other->gate_keeper_method_, &::apollo::perception::fusion::ProbabilisticFusionConfig::_i_give_permission_to_break_this_code_default_gate_keeper_method_.get(),
    GetArenaNoVirtual());
  swap(use_lidar_, other->use_lidar_);
  swap(use_radar_, other->use_radar_);
  swap(use_camera_, other->use_camera_);
  swap(max_lidar_invisible_period_, other->max_lidar_invisible_period_);
  swap(max_radar_invisible_period_, other->max_radar_invisible_period_);
  swap(max_camera_invisible_period_, other->max_camera_invisible_period_);
  swap(max_cached_frame_num_, other->max_cached_frame_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProbabilisticFusionConfig::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fprobabilistic_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fusion
}  // namespace perception
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::fusion::ProbabilisticFusionConfig* Arena::CreateMaybeMessage< ::apollo::perception::fusion::ProbabilisticFusionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::fusion::ProbabilisticFusionConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

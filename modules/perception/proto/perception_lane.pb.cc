// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_lane.proto

#include "modules/perception/proto/perception_lane.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fcommon_2fproto_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_modules_2fcommon_2fproto_2fheader_2eproto
namespace protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CameraCalibrator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CameraLaneLine;
}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto
namespace apollo {
namespace perception {
class PerceptionLanesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerceptionLanes>
      _instance;
} _PerceptionLanes_default_instance_;
}  // namespace perception
}  // namespace apollo
namespace protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto {
static void InitDefaultsPerceptionLanes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::_PerceptionLanes_default_instance_;
    new (ptr) ::apollo::perception::PerceptionLanes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::PerceptionLanes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PerceptionLanes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPerceptionLanes}, {
      &protobuf_modules_2fcommon_2fproto_2fheader_2eproto::scc_info_Header.base,
      &protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto::scc_info_CameraCalibrator.base,
      &protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto::scc_info_CameraLaneLine.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PerceptionLanes.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, source_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, camera_calibrator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::perception::PerceptionLanes, camera_laneline_),
  1,
  0,
  3,
  2,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::apollo::perception::PerceptionLanes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::perception::_PerceptionLanes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "modules/perception/proto/perception_lane.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.modules/perception/proto/perception_la"
      "ne.proto\022\021apollo.perception\032!modules/com"
      "mon/proto/header.proto\0320modules/percepti"
      "on/proto/perception_camera.proto\"\243\002\n\017Per"
      "ceptionLanes\022%\n\006header\030\001 \001(\0132\025.apollo.co"
      "mmon.Header\022\024\n\014source_topic\030\002 \001(\t\022I\n\nerr"
      "or_code\030\003 \001(\0162).apollo.perception.camera"
      ".CameraErrorCode:\nERROR_NONE\022E\n\021camera_c"
      "alibrator\030\004 \001(\0132*.apollo.perception.came"
      "ra.CameraCalibrator\022A\n\017camera_laneline\030\005"
      " \003(\0132(.apollo.perception.camera.CameraLa"
      "neLine"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 446);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/proto/perception_lane.proto", &protobuf_RegisterTypes);
  ::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
  ::protobuf_modules_2fperception_2fproto_2fperception_5fcamera_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto
namespace apollo {
namespace perception {

// ===================================================================

void PerceptionLanes::InitAsDefaultInstance() {
  ::apollo::perception::_PerceptionLanes_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  ::apollo::perception::_PerceptionLanes_default_instance_._instance.get_mutable()->camera_calibrator_ = const_cast< ::apollo::perception::camera::CameraCalibrator*>(
      ::apollo::perception::camera::CameraCalibrator::internal_default_instance());
}
void PerceptionLanes::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
void PerceptionLanes::clear_camera_calibrator() {
  if (camera_calibrator_ != NULL) camera_calibrator_->Clear();
  clear_has_camera_calibrator();
}
void PerceptionLanes::clear_camera_laneline() {
  camera_laneline_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionLanes::kHeaderFieldNumber;
const int PerceptionLanes::kSourceTopicFieldNumber;
const int PerceptionLanes::kErrorCodeFieldNumber;
const int PerceptionLanes::kCameraCalibratorFieldNumber;
const int PerceptionLanes::kCameraLanelineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionLanes::PerceptionLanes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::scc_info_PerceptionLanes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.PerceptionLanes)
}
PerceptionLanes::PerceptionLanes(const PerceptionLanes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      camera_laneline_(from.camera_laneline_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_topic()) {
    source_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_topic_);
  }
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_camera_calibrator()) {
    camera_calibrator_ = new ::apollo::perception::camera::CameraCalibrator(*from.camera_calibrator_);
  } else {
    camera_calibrator_ = NULL;
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.PerceptionLanes)
}

void PerceptionLanes::SharedCtor() {
  source_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&header_)) + sizeof(error_code_));
}

PerceptionLanes::~PerceptionLanes() {
  // @@protoc_insertion_point(destructor:apollo.perception.PerceptionLanes)
  SharedDtor();
}

void PerceptionLanes::SharedDtor() {
  source_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete camera_calibrator_;
}

void PerceptionLanes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerceptionLanes::descriptor() {
  ::protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerceptionLanes& PerceptionLanes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::scc_info_PerceptionLanes.base);
  return *internal_default_instance();
}


void PerceptionLanes::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.PerceptionLanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  camera_laneline_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      source_topic_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(camera_calibrator_ != NULL);
      camera_calibrator_->Clear();
    }
  }
  error_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PerceptionLanes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.PerceptionLanes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_topic().data(), static_cast<int>(this->source_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.PerceptionLanes.source_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.perception.camera.CameraErrorCode error_code = 3 [default = ERROR_NONE];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::perception::camera::CameraErrorCode_IsValid(value)) {
            set_error_code(static_cast< ::apollo::perception::camera::CameraErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.perception.camera.CameraCalibrator camera_calibrator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_camera_calibrator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.perception.camera.CameraLaneLine camera_laneline = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_camera_laneline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.PerceptionLanes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.PerceptionLanes)
  return false;
#undef DO_
}

void PerceptionLanes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.PerceptionLanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // optional string source_topic = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_topic().data(), static_cast<int>(this->source_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.PerceptionLanes.source_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_topic(), output);
  }

  // optional .apollo.perception.camera.CameraErrorCode error_code = 3 [default = ERROR_NONE];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error_code(), output);
  }

  // optional .apollo.perception.camera.CameraCalibrator camera_calibrator = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_camera_calibrator(), output);
  }

  // repeated .apollo.perception.camera.CameraLaneLine camera_laneline = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camera_laneline_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->camera_laneline(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.PerceptionLanes)
}

::google::protobuf::uint8* PerceptionLanes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.PerceptionLanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // optional string source_topic = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_topic().data(), static_cast<int>(this->source_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.PerceptionLanes.source_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_topic(), target);
  }

  // optional .apollo.perception.camera.CameraErrorCode error_code = 3 [default = ERROR_NONE];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->error_code(), target);
  }

  // optional .apollo.perception.camera.CameraCalibrator camera_calibrator = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_camera_calibrator(), deterministic, target);
  }

  // repeated .apollo.perception.camera.CameraLaneLine camera_laneline = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camera_laneline_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->camera_laneline(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.PerceptionLanes)
  return target;
}

size_t PerceptionLanes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.PerceptionLanes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.perception.camera.CameraLaneLine camera_laneline = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->camera_laneline_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->camera_laneline(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string source_topic = 2;
    if (has_source_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_topic());
    }

    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional .apollo.perception.camera.CameraCalibrator camera_calibrator = 4;
    if (has_camera_calibrator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *camera_calibrator_);
    }

    // optional .apollo.perception.camera.CameraErrorCode error_code = 3 [default = ERROR_NONE];
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerceptionLanes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.PerceptionLanes)
  GOOGLE_DCHECK_NE(&from, this);
  const PerceptionLanes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionLanes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.PerceptionLanes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.PerceptionLanes)
    MergeFrom(*source);
  }
}

void PerceptionLanes::MergeFrom(const PerceptionLanes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.PerceptionLanes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  camera_laneline_.MergeFrom(from.camera_laneline_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_source_topic();
      source_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_topic_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_camera_calibrator()->::apollo::perception::camera::CameraCalibrator::MergeFrom(from.camera_calibrator());
    }
    if (cached_has_bits & 0x00000008u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PerceptionLanes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.PerceptionLanes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionLanes::CopyFrom(const PerceptionLanes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.PerceptionLanes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionLanes::IsInitialized() const {
  return true;
}

void PerceptionLanes::Swap(PerceptionLanes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionLanes::InternalSwap(PerceptionLanes* other) {
  using std::swap;
  CastToBase(&camera_laneline_)->InternalSwap(CastToBase(&other->camera_laneline_));
  source_topic_.Swap(&other->source_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(camera_calibrator_, other->camera_calibrator_);
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerceptionLanes::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_modules_2fperception_2fproto_2fperception_5flane_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::perception::PerceptionLanes* Arena::CreateMaybeMessage< ::apollo::perception::PerceptionLanes >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::PerceptionLanes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
